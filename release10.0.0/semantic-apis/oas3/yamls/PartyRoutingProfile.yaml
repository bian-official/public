openapi: 3.0.1
info:
  title: Party Routing Profile
  description: This service domain maintains a small profile of key indicators for a customer that is referenced during customer interactions to facilitate routing, servicing and product/service fulfillment decisions. This can include status (such as account in arrears), ratings (such as high value customer) and alerts (such possible fraud activity detected)
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/BIAN-3/PartyRoutingProfile/10.0.0
paths:
  /PartyRoutingProfile/Initiate:
    post:
      tags:
      - CR - PartyState
      summary: InCR Initiate profile state monitoring for a party
      description: InCR Initiate profile state monitoring for a party
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Update:
    put:
      tags:
      - CR - PartyState
      summary: UpCR Update monitoring for a party
      description: UpCR Update monitoring for a party
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyState'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Execute:
    put:
      tags:
      - CR - PartyState
      summary: ExCR Execute an automated action for a monitored party (e.g. refresh)
      description: ExCR Execute an automated action for a monitored party (e.g. refresh)
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Request:
    put:
      tags:
      - CR - PartyState
      summary: RqCR Request manual intervention for a monitored party (e.g. review settings)
      description: RqCR Request manual intervention for a monitored party (e.g. review settings)
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                example: true
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Retrieve:
    get:
      tags:
      - CR - PartyState
      summary: ReCR Retrieve details about the monitored party state
      description: ReCR Retrieve details about the monitored party state
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyState'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Status/{statusId}/Update:
    put:
      tags:
      - BQ - Status
      summary: UpBQ Update status measures for a monitored party
      description: UpBQ Update status measures for a monitored party
      operationId: UpdateStatus
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/StatusID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateStatusRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStatusResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Status/{statusId}/Capture:
    put:
      tags:
      - BQ - Status
      summary: CaBQ Capture status measures for a monitored party
      description: CaBQ Capture status measures for a monitored party
      operationId: CaptureStatus
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/StatusID'
      requestBody:
        $ref: '#/components/requestBodies/CaptureStatusRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureStatusResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Status/{statusId}/Retrieve:
    get:
      tags:
      - BQ - Status
      summary: ReBQ Retrieve details about status measures for a party
      description: ReBQ Retrieve details about status measures for a party
      operationId: RetrieveStatus
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/StatusID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveStatusResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Rating/{ratingId}/Update:
    put:
      tags:
      - BQ - Rating
      summary: UpBQ Update rating measures for a monitored party
      description: UpBQ Update rating measures for a monitored party
      operationId: UpdateRating
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/RatingID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRatingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRatingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Rating/{ratingId}/Capture:
    put:
      tags:
      - BQ - Rating
      summary: CaBQ Capture rating measures for a monitored party
      description: CaBQ Capture rating measures for a monitored party
      operationId: CaptureRating
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/RatingID'
      requestBody:
        $ref: '#/components/requestBodies/CaptureRatingRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureRatingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Rating/{ratingId}/Retrieve:
    get:
      tags:
      - BQ - Rating
      summary: ReBQ Retrieve details about rating measures for a party
      description: ReBQ Retrieve details about rating measures for a party
      operationId: RetrieveRating
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/RatingID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveRatingResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Alert/{alertId}/Update:
    put:
      tags:
      - BQ - Alert
      summary: UpBQ Update alerts for a monitored party
      description: UpBQ Update alerts for a monitored party
      operationId: UpdateAlert
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/AlertID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAlertRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAlertResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Alert/{alertId}/Capture:
    put:
      tags:
      - BQ - Alert
      summary: CaBQ Capture alerts for a monitored party
      description: CaBQ Capture alerts for a monitored party
      operationId: CaptureAlert
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/AlertID'
      requestBody:
        $ref: '#/components/requestBodies/CaptureAlertRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureAlertResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /PartyRoutingProfile/{partyroutingprofileId}/Alert/{alertId}/Retrieve:
    get:
      tags:
      - BQ - Alert
      summary: ReBQ Retrieve details about alerts for a party
      description: ReBQ Retrieve details about alerts for a party
      operationId: RetrieveAlert
      parameters:
      - $ref: '#/components/parameters/PartyRoutingProfileID'
      - $ref: '#/components/parameters/AlertID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveAlertResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    PartyState:
      type: object
      properties:
        CustomerReference:
          type: object
    Status:
      type: object
      properties:
        CustomerRelationshipStatusType:
          type: string
        CustomerRelationshipStatus:
          type: string
        CustomerRelationshipStatusNarrative:
          type: string
        CustomerRelationshipStatusValidFrom/ToDate:
          type: string
    Rating:
      type: object
      properties:
        CustomerRelationshipRatingType:
          type: string
        CustomerRelationshipRating:
          type: string
        CustomerRelationshipRatingNarrative:
          type: string
        CustomerRelationshipRatingValidFrom/ToDate:
          type: string
    Alert:
      type: object
      properties:
        CustomerRelationshipAlertType:
          type: string
        CustomerRelationshipAlert:
          type: string
        CustomerRelationshipAlertNarrative:
          type: string
        CustomerRelationshipAlertValidFrom/ToDate:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
    UpdateStatusRequest:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    UpdateStatusResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    CaptureStatusRequest:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    CaptureStatusResponse:
      type: object
      properties:
        Status:
          type: object
          properties:
            CustomerRelationshipStatusValidFromOrToDate:
              type: string
    RetrieveStatusResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
    UpdateRatingRequest:
      type: object
      properties:
        Rating:
          $ref: '#/components/schemas/Rating'
    UpdateRatingResponse:
      type: object
      properties:
        Rating:
          $ref: '#/components/schemas/Rating'
    CaptureRatingRequest:
      type: object
      properties:
        Rating:
          $ref: '#/components/schemas/Rating'
    CaptureRatingResponse:
      type: object
      properties:
        Rating:
          type: object
          properties:
            CustomerRelationshipRatingValidFromOrToDate:
              type: string
    RetrieveRatingResponse:
      type: object
      properties:
        Rating:
          $ref: '#/components/schemas/Rating'
    UpdateAlertRequest:
      type: object
      properties:
        Alert:
          $ref: '#/components/schemas/Alert'
    UpdateAlertResponse:
      type: object
      properties:
        Alert:
          $ref: '#/components/schemas/Alert'
    CaptureAlertRequest:
      type: object
      properties:
        Alert:
          $ref: '#/components/schemas/Alert'
    CaptureAlertResponse:
      type: object
      properties:
        Alert:
          type: object
          properties:
            CustomerRelationshipAlertValidFromOrToDate:
              type: string
    RetrieveAlertResponse:
      type: object
      properties:
        Alert:
          $ref: '#/components/schemas/Alert'
  parameters:
    PartyRoutingProfileID:
      name: partyroutingprofileId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    StatusID:
      name: statusId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RatingID:
      name: ratingId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AlertID:
      name: alertId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    PartyState:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyState'
    UpdateStatusRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateStatusRequest'
    CaptureStatusRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureStatusRequest'
    UpdateRatingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRatingRequest'
    CaptureRatingRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureRatingRequest'
    UpdateAlertRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAlertRequest'
    CaptureAlertRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureAlertRequest'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
