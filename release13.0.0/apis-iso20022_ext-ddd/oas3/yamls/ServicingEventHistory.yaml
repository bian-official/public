openapi: 3.0.1
info:
  title: Servicing Event History
  description: >-
    BIAN Service Domain (expanded with ISO200022) | Packaged Business Capability
    (PBC) | DDD Bounded Context | This service domain captures, classifies and
    stores servicing activity and events to support root cause analysis
  version: 13.0.0
servers:
  - url: ' https://virtserver.swaggerhub.com/BIAN-3/ServicingEventHistory/12.0.1'
paths:
  '/ServicingEventHistory/Initiate':
      post:
        tags:
          - CR (DDD Aggregate) - ServicingEventLog
        summary: >-
          (DDD  Service) InCR Initiate servicing event history tracking for a servicing
          resource
        description: >-
          (DDD  Service) InCR Initiate servicing event history tracking for a servicing
          resource
        operationId: ServicingEventLog/Initiate
        requestBody:
          $ref: '#/components/requestBodies/InitiateServicingEventLogRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Update':
      put:
        tags:
          - CR (DDD Aggregate) - ServicingEventLog
        summary: (DDD  Service) UpCR Update details about the log
        description: (DDD  Service) UpCR Update details about the log
        operationId: ServicingEventLog/Update
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateServicingEventLogRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Control':
      put:
        tags:
          - CR (DDD Aggregate) - ServicingEventLog
        summary: >-
          (DDD  Service) CoCR Control event tracking for the servicing resource (e.g.
          suspend)
        description: >-
          (DDD  Service) CoCR Control event tracking for the servicing resource (e.g.
          suspend)
        operationId: ServicingEventLog/Control
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
        requestBody:
          $ref: '#/components/requestBodies/ControlServicingEventLogRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Retrieve':
      get:
        tags:
          - CR (DDD Aggregate) - ServicingEventLog
        summary: (DDD  Service) ReCR Retrieve details about the servicing event log
        description: (DDD  Service) ReCR Retrieve details about the servicing event log
        operationId: ServicingEventLog/Retrieve
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveServicingEventLogResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Assignment/{assignmentid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Assignment
        summary: (DDD  Service) UpBQ Update captured assignment event details
        description: (DDD  Service) UpBQ Update captured assignment event details
        operationId: Assignment/Update
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/assignmentid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Assignment/{assignmentid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Assignment
        summary: (DDD  Service) CaBQ Capture servicing position assignment event details
        description: (DDD  Service) CaBQ Capture servicing position assignment event details
        operationId: Assignment/Capture
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/assignmentid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Assignment/{assignmentid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Assignment
        summary: (DDD  Service) ReBQ Retrieve servicing position assignment event details
        description: (DDD  Service) ReBQ Retrieve servicing position assignment event details
        operationId: Assignment/Retrieve
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/assignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Session/{sessionid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Session
        summary: (DDD  Service) UpBQ Update captured customer servicing session event details
        description: (DDD  Service) UpBQ Update captured customer servicing session event details
        operationId: Session/Update
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/sessionid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSessionRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateSessionResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Session/{sessionid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Session
        summary: (DDD  Service) CaBQ Capture customer servicing session event details
        description: (DDD  Service) CaBQ Capture customer servicing session event details
        operationId: Session/Capture
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/sessionid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureSessionRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureSessionResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Session/{sessionid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Session
        summary: (DDD  Service) ReBQ Retrieve customer servicing event details
        description: (DDD  Service) ReBQ Retrieve customer servicing event details
        operationId: Session/Retrieve
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/sessionid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveSessionResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Issue/{issueid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Issue
        summary: (DDD  Service) UpBQ Update captured servicing issue event details
        description: (DDD  Service) UpBQ Update captured servicing issue event details
        operationId: Issue/Update
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/issueid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateIssueRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateIssueResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Issue/{issueid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Issue
        summary: (DDD  Service) CaBQ Capture servicing issue event details
        description: (DDD  Service) CaBQ Capture servicing issue event details
        operationId: Issue/Capture
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/issueid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureIssueRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureIssueResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/Issue/{issueid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Issue
        summary: (DDD  Service) ReBQ Retrieve servicing issue event details
        description: (DDD  Service) ReBQ Retrieve servicing issue event details
        operationId: Issue/Retrieve
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/issueid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveIssueResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/ServicingFacility/{servicingfacilityid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - ServicingFacility
        summary: (DDD  Service) UpBQ Update captured facility utilization event details
        description: (DDD  Service) UpBQ Update captured facility utilization event details
        operationId: ServicingFacility/Update
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/servicingfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateServicingFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateServicingFacilityResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/ServicingFacility/{servicingfacilityid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - ServicingFacility
        summary: (DDD  Service) CaBQ Capture  facility utilization event details
        description: (DDD  Service) CaBQ Capture  facility utilization event details
        operationId: ServicingFacility/Capture
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/servicingfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureServicingFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureServicingFacilityResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/ServicingEventHistory/{servicingeventhistoryid}/ServicingFacility/{servicingfacilityid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - ServicingFacility
        summary: (DDD  Service) ReBQ Retrieve  facility utilization event details
        description: (DDD  Service) ReBQ Retrieve  facility utilization event details
        operationId: ServicingFacility/Retrieve
        parameters:
          - $ref: '#/components/parameters/servicingeventhistoryid'
          - $ref: '#/components/parameters/servicingfacilityid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveServicingFacilityResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    InitiateServicingEventLogRequest:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employee/unit assigned to the servicing position (if the log is organized to track specific servicing reps that might work at different positions) ||\r\n|"
    Involvedparty:
        type: object
        description: (DDD Entity) - Reference to the account primary party/owner
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: (DDD Entity) - Reference to the account primary party/owner
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              format: Partyrole
              description: (DDD Entity) - Reference to the account primary party/owner
    Party:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          PartyName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: >-
                (DDD Entity) - Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
                 
          PartyType:
              $ref: '#/components/schemas/Partytypevalues'
              format: Partytypevalues
              description: ''
          PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              format: Partyidentification
              description: '(DDD Entity) -  '
          PartyLegalStructureType:
              $ref: '#/components/schemas/Partylegalstructuretypevalues'
              format: Partylegalstructuretypevalues
              description: ''
    Name:
        type: object
        description: >-
          (DDD Entity) - Name by which a party is known and which is usually used to
          identify that party. (ISO20022)
           Name 
        properties:
          Name:
              type: string
              description: ''
              format: DataType
    Partytypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partytypevalues:
              enum:
                  -  Person
                  -  Organisation
              format: Partytypevalues
              type: string
              description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022"
    Datetime:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          DateTimeContent:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The particular date and time point in the progression of
                time 
          TimeZoneCode:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - The time zone to which the date time refers. '
          DaylightSavingIndicator:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          DateTimeType:
              $ref: '#/components/schemas/Datetimetypevalues'
              format: Datetimetypevalues
              description: ''
          Datetime:
              type: string
              description: ''
              format: DataType
    Text:
        type: object
        description: >-
          (DDD Entity) - The particular date and time point in the progression of time
          Text 
        properties:
          Text:
              type: string
              description: ''
              format: DataType
    Datetimetypevalues:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          Datetimetypevalues:
              enum:
                  -  MaturityDate
                  -  InitiatedDate
                  -  RequestedDate
                  -  ExecutedDate
                  -  OpenDate
                  -  CloseDate
                  -  ExpiryDate
                  -  EffectiveDate
                  -  CreatingDate
                  -  ActivationDate
                  -  DeactivationDate
                  -  BlockingDate
                  -  SendingDate
                  -  ValidFromDate
                  -  ValidToDate
                  -  ReceivingDate
                  -  SigningDate
                  -  DueDate
                  -  ValueDate
                  -  FulfillmentDate
              format: Datetimetypevalues
              type: string
              description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - "
    Partyidentification:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          PartyIdentificationType:
              $ref: '#/components/schemas/Partyidentificationtypevalues'
              format: Partyidentificationtypevalues
              description: ''
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Partyidentificationtypevalues:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          Partyidentificationtypevalues:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEI(LegalEntityIdentifier)
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              format: Partyidentificationtypevalues
              type: string
              description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC."
    Identifier:
        type: object
        description: '(DDD Entity) -  Identifier '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: '(DDD Entity) -  '
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: '(DDD Entity) - Entity that assigns and manages the identification. '
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
    Value:
        type: object
        description: '(DDD Entity) -  Value '
        properties:
          Value:
              type: string
              description: ''
              format: DataType
    Partylegalstructuretypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partylegalstructuretypevalues:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  Sole(SoleTrader)
              format: Partylegalstructuretypevalues
              type: string
              description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - "
    Partyrole:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          PartyRoleName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          PartyInvolvementType:
              $ref: '#/components/schemas/Partyinvolvementtypevalues'
              format: Partyinvolvementtypevalues
              description: ''
    Datetimeperiod:
        type: object
        description: '(DDD Entity) -  Datetimeperiod '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range starts. (ISO20022) '
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range ends. (ISO20022) '
    Partyinvolvementtypevalues:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          Partyinvolvementtypevalues:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              format: Partyinvolvementtypevalues
              type: string
              description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - "
    InitiateServicingEventLogResponse:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    InitiateServicingEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    UpdateServicingEventLogRequest:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employee/unit assigned to the servicing position (if the log is organized to track specific servicing reps that might work at different positions) ||\r\n|"
    UpdateServicingEventLogResponse:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    UpdateServicingEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    ControlServicingEventLogRequest:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employee/unit assigned to the servicing position (if the log is organized to track specific servicing reps that might work at different positions) ||\r\n|"
    ControlServicingEventLogResponse:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    ControlServicingEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    RetrieveServicingEventLogRequest:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employee/unit assigned to the servicing position (if the log is organized to track specific servicing reps that might work at different positions) ||\r\n|"
    RetrieveServicingEventLogResponse:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    RetrieveServicingEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    UpdateAssignmentRequest:
        type: object
        description: ''
        properties:
          DateTimeLocation:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time) ||\r\n|"
          ServicingPositionActivityReport:
              $ref: '#/components/schemas/Report'
              format: Report
              description: "(DDD Entity) - Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks) ||\r\n|"
          ServicingPositionActivityStatistics:
              type: string
              description: "||\r\n|"
              format: Object
    Report:
        type: object
        description: "(DDD Entity) - Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks) Report ||\r\n|"
        properties:
          ReportType:
              $ref: '#/components/schemas/Reporttypevalues'
              format: Reporttypevalues
              description: ''
          ReportValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          ReportVersion:
              type: string
              description: ''
              format: Number
          ReportDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          ReportFormat:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Reporttypevalues:
        type: object
        description: "(DDD Entity) - Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks) Report ||\r\n|"
        properties:
          Reporttypevalues:
              enum:
                  -  FinancialReport
                  -  BusinessReport
                  -  ManagementReport
                  -  Statement
                  -  MaintenanceReport
                  -  RegulatoryReport
                  -  TaxReport
                  -  AnalysisReport
              format: Reporttypevalues
              type: string
              description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - "
    UpdateAssignmentResponse:
        type: object
        description: ''
        properties:
          DateTimeLocation:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ServicingPositionActivityReport:
              $ref: '#/components/schemas/Report'
              format: Report
              description: "||\r\n|"
          ServicingPositionActivityStatistics:
              type: string
              description: "||\r\n|"
              format: Object
    UpdateAssignment:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    CaptureAssignmentRequest:
        type: object
        description: ''
        properties:
          DateTimeLocation:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time) ||\r\n|"
          ServicingPositionActivityReport:
              $ref: '#/components/schemas/Report'
              format: Report
              description: "(DDD Entity) - Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks) ||\r\n|"
          ServicingPositionActivityStatistics:
              type: string
              description: "||\r\n|"
              format: Object
    CaptureAssignmentResponse:
        type: object
        description: ''
        properties:
          DateTimeLocation:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ServicingPositionActivityReport:
              $ref: '#/components/schemas/Report'
              format: Report
              description: "||\r\n|"
          ServicingPositionActivityStatistics:
              type: string
              description: "||\r\n|"
              format: Object
    CaptureAssignment:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    RetrieveAssignmentRequest:
        type: object
        description: ''
        properties:
          DateTimeLocation:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Key dates and times associated with the assignment (e.g. start, end, break duration, available/idle time) ||\r\n|"
          ServicingPositionActivityReport:
              $ref: '#/components/schemas/Report'
              format: Report
              description: "(DDD Entity) - Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks) ||\r\n|"
          ServicingPositionActivityStatistics:
              type: string
              description: "||\r\n|"
              format: Object
    RetrieveAssignmentResponse:
        type: object
        description: ''
        properties:
          DateTimeLocation:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ServicingPositionActivityReport:
              $ref: '#/components/schemas/Report'
              format: Report
              description: "||\r\n|"
          ServicingPositionActivityStatistics:
              type: string
              description: "||\r\n|"
              format: Object
    RetrieveAssignment:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    UpdateSessionRequest:
        type: object
        description: ''
        properties:
          SessionStartEndTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          CustomerContactReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to the complete contact record for the customer contact ||\r\n|"
          SessionMechanism:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch note there can be concurrent sessions within a single customer contact) ||\r\n|"
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Lists if a specific servicing facility is used during the session) ||\r\n|"
          SessionDialogueRecord:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record ||\r\n|"
          SessionDialogueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The general type of customer exchange (e.g. verified customer, anonymous contact, topic used to structure/script dialogue) ||\r\n|"
          SessionDialogueScript:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions ||\r\n|"
          SessionDialogueLogReference:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "(DDD Entity) - Reference to a dialogue log that is built up ||\r\n|"
          SessionDialogueLog:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "(DDD Entity) - The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording) ||\r\n|"
          SessionDialogueResult:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up) ||\r\n|"
    CustomerContact:
        type: object
        description: "(DDD Entity) - Reference to the complete contact record for the customer contact CustomerContact ||\r\n|"
        properties:
          ContactType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          ContactDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - The start and end date times for the contact '
          ContactLocation:
              $ref: '#/components/schemas/Location'
              format: Location
              description: '(DDD Entity) -  '
          ContactSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: '(DDD Entity) - The schedule of past and planned customer contacts '
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The interpreted result of the contact (e.g. completed,
                customer terminated, timed-out) 
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The reason and or purpose for the contact (e.g. review,
                issue, product sales, advice, customer enquiry) 
          ContactDevice:
              $ref: '#/components/schemas/Device'
              format: Device
              description: '(DDD Entity) -  '
          ContactIndicator:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - Indicates whether this is an inbound or outbound contact
                (inbound is customer initiated, outbound is servicing resource
                initiated). 
          ContactContent:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Location:
        type: object
        description: '(DDD Entity) -  Location '
        properties:
          LocationDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - A description of the property, particularly if it has
                landmark characteristics. 
          LocationDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: >-
                (DDD Entity) - Key dates associated with the directory entry (e.g. open
                date, refresh date). 
          LocationStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                (DDD Entity) - The tracked status (e.g. under construction or repair,
                inhabited, vacant). 
          LocationType:
              $ref: '#/components/schemas/Geographicalareatypevalues'
              format: Geographicalareatypevalues
              description: ''
          LocationZoningType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The planning or zoning status (e.g. residential, commercial,
                industrial). 
          LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The general purpose and neighborhood of the property  (e.g.
                residential, industrial, commercial). 
          LocationConstructionType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The construction approach for a property at the location
                (e.g. era and architecture as might be used in valuation). 
          LocationOccupancyType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The type of occupancy (e.g. residency, business, retail,
                entertainment). 
          LocationValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: >-
                (DDD Entity) - The estimated (book) value of the property at the location -
                rental and purchase as appropriate. 
          LocationCapacity:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - An indication of the size or scale of the property where
                appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover
                restaurant). 
          LocationIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
          LocationAddress:
              $ref: '#/components/schemas/Address'
              format: Address
              description: '(DDD Entity) -  '
          Location:
              type: string
              description: ''
              format: Class
          LocationName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) - Name (label) of the location. (ISO20022) '
          LocationTimeZone:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Local time zone. '
    Status:
        type: object
        description: >-
          (DDD Entity) - The tracked status (e.g. under construction or repair, inhabited,
          vacant). Status 
        properties:
          StatusReason:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Specifies the reasons for the status. '
          StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the status was assigned. '
          StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) - Period of time during which the status is valid. '
          StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: >-
                (DDD Entity) - Party who plays a  specific role in the context of assigning
                a status. 
          Status:
              type: string
              description: ''
              format: DataType
    Geographicalareatypevalues:
        type: object
        description: '(DDD Entity) -  Location '
        properties:
          Geographicalareatypevalues:
              enum:
                  -  Continent
                  -  Country
                  -  State
                  -  District
                  -  Province
                  -  Town
                  -  City
                  -  Region
              format: Geographicalareatypevalues
              type: string
              description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - "
    Address:
        type: object
        description: '(DDD Entity) -  Address '
        properties:
          AddressType:
              $ref: '#/components/schemas/Addresstypevalues'
              format: Addresstypevalues
              description: ''
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: '(DDD Entity) -  '
          Address:
              type: string
              description: ''
              format: Class
    Addresstypevalues:
        type: object
        description: '(DDD Entity) -  Address '
        properties:
          Addresstypevalues:
              enum:
                  -  PostalAddress
                  -  GeolocationAddress
                  -  LatitudeAddress
                  -  LongitudeAddress
                  -  ElectronicAddress
              format: Addresstypevalues
              type: string
              description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - "
    Schedule:
        type: object
        description: '(DDD Entity) - The schedule of past and planned customer contacts Schedule '
        properties:
          ScheduleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Device:
        type: object
        description: '(DDD Entity) -  Device '
        properties:
          DeviceIdentification:
              $ref: '#/components/schemas/Deviceidentification'
              format: Deviceidentification
              description: '(DDD Entity) -  '
          DeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: ''
          DeviceProperty:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - Property of a device relevant for its use.


                A device has the characteristics of the device type it belongs
                to,possibly specified

                e.g. . a device of the type "cheque book" will have cheques. The
                device specifies how many and what the number range is.

                e.g. an electronic banking app consists of software modules, the
                device specifies what version 
                 
          DeviceElement:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - An element of the device that can be used independently and
                is individually identified


                e.g. a cheque in a chequebook 
          DeviceStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: |-
                (DDD Entity) - The life cycle stage of a device

                e.g. active, defect 
          DeviceVersion:
              type: string
              description: ''
              format: Number
          DeviceDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          DeviceDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          DeviceName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          DeviceLanguage:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Preferred language set on the device '
          DevicePhoneNumber:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Phone number associated with the device. '
          DeviceLocation:
              $ref: '#/components/schemas/Location'
              format: Location
              description: '(DDD Entity) - Geographical location of the device. '
          DeviceManufacturer:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Manufacturer of the device. '
          DeviceCountry:
              $ref: '#/components/schemas/Country'
              format: Country
              description: '(DDD Entity) - Country of the location. '
          DeviceAddress:
              $ref: '#/components/schemas/Address'
              format: Address
              description: >-
                (DDD Entity) - The address associated with the device like Internet
                Protocol address, email Address 
          DeviceAddressType:
              $ref: '#/components/schemas/Addresstypevalues'
              format: Addresstypevalues
              description: ''
          DeviceOperatingSystem:
              $ref: '#/components/schemas/Deviceoperatingsystemtypevalues'
              format: Deviceoperatingsystemtypevalues
              description: ''
    Deviceidentification:
        type: object
        description: '(DDD Entity) -  Deviceidentification '
        properties:
          DeviceIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
          DeviceIdentificationType:
              $ref: '#/components/schemas/Deviceidentificationtypevalues'
              format: Deviceidentificationtypevalues
              description: ''
    Deviceidentificationtypevalues:
        type: object
        description: '(DDD Entity) -  Deviceidentification '
        properties:
          Deviceidentificationtypevalues:
              enum:
                  -  IMEI
                  -  Serialnumber
                  -  Secureelementidentification
                  -  Othernational
                  -  Otherprivate
              format: Deviceidentificationtypevalues
              type: string
              description: ">\r\n* `IMEI` - International Mobile Equipment Identity.\r\n* `Serialnumber` - Device serial number.\r\n* `Secureelementidentification` - Secure element ID.\r\n* `Othernational` - Other nationally assigned code.\r\n* `Otherprivate` - Other privately assigned code."
    Devicetypevalues:
        type: object
        description: '(DDD Entity) -  Device '
        properties:
          Devicetypevalues:
              enum:
                  -  Securecardreader
                  -  Nonsecurecardreader
                  -  Mobile
                  -  Tablet
                  -  Personalcomputer
                  -  Othernational
                  -  Otherprivate
                  -  Wearable
                  -  Vehicle
                  -  Embedded
                  -  Keyfob
                  -  Jewellery
                  -  Sticker
                  -  Gamingdevice
                  -  Watch
                  -  Unknown
                  -  BiometricDevice
              format: Devicetypevalues
              type: string
              description: ">\r\n* `Securecardreader` - Secure card reader attached to the customer device\r\n* `Nonsecurecardreader` - Non-secure card reader attached to the customer device.\r\n* `Mobile` - Mobile phone\r\n* `Tablet` - Tablet\r\n* `Personalcomputer` - Personal computer\r\n* `Othernational` - Other device defined at national level\r\n* `Otherprivate` - Other device defined in a private way.\r\n* `Wearable` - Wearable device.\r\n* `Vehicle` - Vehicle.\r\n* `Embedded` - Embedded in a device.\r\n* `Keyfob` - Key Fob\r\n* `Jewellery` - Jewellery\r\n* `Sticker` - Sticker\r\n* `Gamingdevice` - Gaming Device\r\n* `Watch` - Watch\r\n* `Unknown` - Device type unknown\r\n* `BiometricDevice` - A biometric device is a security identification and authentication device. Such devices use automated methods of verifying or recognising the identity of a living person based on a physiological or behavioral characteristic.\nhttps://en.wikipedia.org/wiki/Biometric_device\n"
    Country:
        type: object
        description: '(DDD Entity) - Country of the location. Country '
        properties:
          NationalRegulatoryAuthority:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: '(DDD Entity) - Regulatory authority of the country. (ISO20022) '
    Deviceoperatingsystemtypevalues:
        type: object
        description: '(DDD Entity) -  Device '
        properties:
          Deviceoperatingsystemtypevalues:
              enum:
                  -  Android
                  -  Ios
                  -  Windows
                  -  Blackberry
                  -  Tizen
                  -  Othernational
                  -  Otherprivate
              format: Deviceoperatingsystemtypevalues
              type: string
              description: ">\r\n* `Android` - Android operating system.\r\n* `Ios` - iOS operating system.\r\n* `Windows` - Windows operating system.\r\n* `Blackberry` - Blackberry operating system.\r\n* `Tizen` - Tizen operating system.\r\n* `Othernational` - Other nationally defined code.\r\n* `Otherprivate` - Other privately defined code."
    Session:
        type: object
        description: "(DDD Entity) - The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch note there can be concurrent sessions within a single customer contact) Session ||\r\n|"
        properties:
          SessionDuration:
              $ref: '#/components/schemas/Duration'
              format: Duration
              description: '(DDD Entity) - The time the session was active '
          SessionDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Key dates and times for the session '
          SessionStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: '(DDD Entity) -  '
          SessionType:
              $ref: '#/components/schemas/Sessiontype'
              format: Sessiontype
              description: >-
                (DDD Entity) - Specifies the classification of session like Customer
                Contact Session, Channel Operating Session, Device Operating
                Session, etc. 
          SessionScheduel:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: '(DDD Entity) -  '
    Duration:
        type: object
        description: '(DDD Entity) - The time the session was active Duration '
        properties:
          Duration:
              type: string
              description: ''
              format: DataType
    Sessiontype:
        type: object
        description: >-
          (DDD Entity) - Specifies the classification of session like Customer Contact
          Session, Channel Operating Session, Device Operating Session, etc.
          Sessiontype 
        properties:
          SessionTypeName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          SessionType:
              $ref: '#/components/schemas/Sessiontypevalues'
              format: Sessiontypevalues
              description: ''
    Sessiontypevalues:
        type: object
        description: >-
          (DDD Entity) - Specifies the classification of session like Customer Contact
          Session, Channel Operating Session, Device Operating Session, etc.
          Sessiontype 
        properties:
          Sessiontypevalues:
              enum:
                  -  ContactHandlingSession
                  -  CustomerDialogueSession
                  -  ChannelOperatingSession
                  -  GatewayOperatingSession
                  -  SwitchOperatingSession
                  -  DeviceOperatingSession
                  -  ACHOperatingSession
              format: Sessiontypevalues
              type: string
              description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - "
    SessionDialogueLog:
        type: object
        description: "(DDD Entity) - Reference to a dialogue log that is built up SessionDialogueLog ||\r\n|"
        properties:
          SessionDialogueLog:
              type: string
              description: ''
              format: Class
    UpdateSessionResponse:
        type: object
        description: ''
        properties:
          SessionStartEndTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          CustomerContactReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          SessionMechanism:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SessionDialogueRecord:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          SessionDialogueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SessionDialogueScript:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          SessionDialogueLogReference:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "||\r\n|"
          SessionDialogueLog:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "||\r\n|"
          SessionDialogueResult:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
    UpdateSession:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    CaptureSessionRequest:
        type: object
        description: ''
        properties:
          SessionStartEndTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          CustomerContactReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to the complete contact record for the customer contact ||\r\n|"
          SessionMechanism:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch note there can be concurrent sessions within a single customer contact) ||\r\n|"
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Lists if a specific servicing facility is used during the session) ||\r\n|"
          SessionDialogueRecord:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record ||\r\n|"
          SessionDialogueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The general type of customer exchange (e.g. verified customer, anonymous contact, topic used to structure/script dialogue) ||\r\n|"
          SessionDialogueScript:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions ||\r\n|"
          SessionDialogueLogReference:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "(DDD Entity) - Reference to a dialogue log that is built up ||\r\n|"
          SessionDialogueLog:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "(DDD Entity) - The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording) ||\r\n|"
          SessionDialogueResult:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up) ||\r\n|"
    CaptureSessionResponse:
        type: object
        description: ''
        properties:
          SessionStartEndTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          CustomerContactReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          SessionMechanism:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SessionDialogueRecord:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          SessionDialogueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SessionDialogueScript:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          SessionDialogueLogReference:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "||\r\n|"
          SessionDialogueLog:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "||\r\n|"
          SessionDialogueResult:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
    CaptureSession:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    RetrieveSessionRequest:
        type: object
        description: ''
        properties:
          SessionStartEndTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          CustomerContactReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to the complete contact record for the customer contact ||\r\n|"
          SessionMechanism:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The type of channel device involved in the session exchange (e.g. web, phone, chat, video, VOIP, face to face at a branch note there can be concurrent sessions within a single customer contact) ||\r\n|"
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Lists if a specific servicing facility is used during the session) ||\r\n|"
          SessionDialogueRecord:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The session dialogue log of actions is returned to SD-Contact Handler and added to the contact record ||\r\n|"
          SessionDialogueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The general type of customer exchange (e.g. verified customer, anonymous contact, topic used to structure/script dialogue) ||\r\n|"
          SessionDialogueScript:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions ||\r\n|"
          SessionDialogueLogReference:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "(DDD Entity) - Reference to a dialogue log that is built up ||\r\n|"
          SessionDialogueLog:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "(DDD Entity) - The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording) ||\r\n|"
          SessionDialogueResult:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up) ||\r\n|"
    RetrieveSessionResponse:
        type: object
        description: ''
        properties:
          SessionStartEndTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          CustomerContactReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          SessionMechanism:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SessionDialogueRecord:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          SessionDialogueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SessionDialogueScript:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          SessionDialogueLogReference:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "||\r\n|"
          SessionDialogueLog:
              $ref: '#/components/schemas/SessionDialogueLog'
              format: SessionDialogueLog
              description: "||\r\n|"
          SessionDialogueResult:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
    RetrieveSession:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    UpdateIssueRequest:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          ServicingPositionSessionReference:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - Reference to the servicing session ||\r\n|"
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the employee or unit raising the issue ||\r\n|"
          ProductionIssueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Defines the type of event/error being recorded (e.g. support facility failure) ||\r\n|"
          ProductionIssueDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Description of the issue and involved functions, parties ||\r\n|"
          ProductionIssueDiagnosis:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
          ProductionIssueResolutionTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Description of corrective actions and assigned parties ||\r\n|"
    Task:
        type: object
        description: "(DDD Entity) - Description of corrective actions and assigned parties Task ||\r\n|"
        properties:
          Task:
              type: string
              description: ''
              format: DataType
    UpdateIssueResponse:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          ServicingPositionSessionReference:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          ProductionIssueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductionIssueDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductionIssueDiagnosis:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
          ProductionIssueResolutionTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
    UpdateIssue:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    CaptureIssueRequest:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          ServicingPositionSessionReference:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - Reference to the servicing session ||\r\n|"
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the employee or unit raising the issue ||\r\n|"
          ProductionIssueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Defines the type of event/error being recorded (e.g. support facility failure) ||\r\n|"
          ProductionIssueDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Description of the issue and involved functions, parties ||\r\n|"
          ProductionIssueDiagnosis:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
          ProductionIssueResolutionTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Description of corrective actions and assigned parties ||\r\n|"
    CaptureIssueResponse:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          ServicingPositionSessionReference:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          ProductionIssueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductionIssueDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductionIssueDiagnosis:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
          ProductionIssueResolutionTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
    CaptureIssue:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    RetrieveIssueRequest:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          ServicingPositionSessionReference:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "(DDD Entity) - Reference to the servicing session ||\r\n|"
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the employee or unit raising the issue ||\r\n|"
          ProductionIssueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Defines the type of event/error being recorded (e.g. support facility failure) ||\r\n|"
          ProductionIssueDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Description of the issue and involved functions, parties ||\r\n|"
          ProductionIssueDiagnosis:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
          ProductionIssueResolutionTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Description of corrective actions and assigned parties ||\r\n|"
    RetrieveIssueResponse:
        type: object
        description: ''
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          ServicingPositionSessionReference:
              $ref: '#/components/schemas/Session'
              format: Session
              description: "||\r\n|"
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          ProductionIssueType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductionIssueDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductionIssueDiagnosis:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
          ProductionIssueResolutionTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
    RetrieveIssue:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    UpdateServicingFacilityRequest:
        type: object
        description: ''
        properties:
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of service support facility engaged (e.g. commission tracking, on-line help, action logging) ||\r\n|"
          ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    UpdateServicingFacilityResponse:
        type: object
        description: ''
        properties:
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    UpdateServicingFacility:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    CaptureServicingFacilityRequest:
        type: object
        description: ''
        properties:
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of service support facility engaged (e.g. commission tracking, on-line help, action logging) ||\r\n|"
          ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    CaptureServicingFacilityResponse:
        type: object
        description: ''
        properties:
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    CaptureServicingFacility:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    RetrieveServicingFacilityRequest:
        type: object
        description: ''
        properties:
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of service support facility engaged (e.g. commission tracking, on-line help, action logging) ||\r\n|"
          ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    RetrieveServicingFacilityResponse:
        type: object
        description: ''
        properties:
          ServicingFacilityType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ServicingFacilityInstanceReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    RetrieveServicingFacility:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Servicing Event History. 
        properties:
          ServicingPositionReference:
              $ref: '#/components/schemas/Position'
              format: Position
              description: >-
                Position |Position 
                (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
                BM ()
          EmployeeorBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
    HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
    Position:
        type: object
        description: >-
          (DDD Entity) - The servicing position for the log (if the log is organized to
          track specific positions) Position |Position 
          (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
          BM ()
        properties:
          NetQuantity:
              type: string
              format: SecuritiesQuantity
              description: >-
                (DDD Entity) - Specifies the net quantity position of the trade legs of one
                member within the system. 
          NetPositionAmount:
              type: string
              format: CurrencyAndAmount
              description: >-
                (DDD Entity) - Specifies the net position amount of the trade legs of one
                member within the system. 
          System:
              type: string
              format: System
              description: '(DDD Entity) - System for which trades position is specified. '
          Price:
              type: string
              format: SecuritiesPricing
              description: '(DDD Entity) - Price applied to the position. '
          SecuritiesSettlement:
              type: string
              format: SecuritiesSettlement
              description: '(DDD Entity) - Information related to the settlement of the position. '
          InitialPositionAmount:
              type: string
              format: CurrencyAndAmount
              description: >-
                (DDD Entity) - Specifies the position at the beginning of a reporting
                period. 
    ISODateTime:
        type: string
        format: ''
        description: >-
          (DDD Entity) - A particular point in the progression of time defined by a
          mandatory date and a mandatory time component, expressed in either UTC
          time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset
          format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
          (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
          Schema Part 2: Datatypes Second Edition W3C Recommendation 28
          October 2004" which is aligned with ISO 8601.

          Note on the time format:

          1) beginning / end of calendar day

          00:00:00  -  the beginning of a calendar day

          24:00:00  -  the end of a calendar day

          2) fractions of second in time format

          Decimal fractions of seconds may be included. In this case, the
          involved parties shall agree on the maximum number of digits that are
          allowed.
    Assessment:
        type: object
        description: >-
          (DDD Entity) - An evaluation of the event cause and impact Assessment|Assessment
          (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
          BM ()
        properties:
          AssessmentType:
              type: string
              format: POIComponentAssessmentCode
              description: '(DDD Entity) - Type of assessment. '
          System:
              type: string
              format: System
              description: '(DDD Entity) - System for which an assessment is produced. '
          ExpiryDate:
              type: string
              format: ISODateTime
              description: '(DDD Entity) - Date when the assessment expires. '
          DeliveryDate:
              type: string
              format: ISODateTime
              description: '(DDD Entity) - Date when the assessment document was delivered. '
    GenericIdentification:
        type: object
        description: >-
          (DDD Entity) - Reference to any record generated from he use of the facility
          GenericIdentification|GenericIdentification
          (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
          BM ()
        properties:
          Identification:
              type: string
              format: Max35Text
              description: >-
                (DDD Entity) - Name or number assigned by an entity to enable recognition
                of that entity, for example account identifier, identification
                assigned by a provider to identify its customers. 
          IdentificationForContactPoint:
              type: string
              format: ContactPoint
              description: >-
                (DDD Entity) - Contact point which uses a generic identification as
                identification. 
          IdentificationForAccount:
              type: string
              format: AccountIdentification
              description: >-
                (DDD Entity) - Account Identification which uses a generic identification
                as proprietary identification. 
          RelatedPartyIdentification:
              type: string
              format: PartyIdentificationInformation
              description: '(DDD Entity) - Party identified with a scheme. '
          IssueDate:
              type: string
              format: ISODate
              description: '(DDD Entity) - Date at which the identification was issued. '
          ExpiryDate:
              type: string
              format: ISODate
              description: '(DDD Entity) - Date at which the identification expires. '
          Scheme:
              type: string
              format: Scheme
              description: >-
                (DDD Entity) - Information regarding an enumerated code list and its
                owner. 
          IdentificationForSecuritiesCertificate:
              type: string
              format: SecuritiesCertificate
              description: >-
                (DDD Entity) - Securities certificate which uses a generic identification
                as certificate number. 
          IdentificationForLot:
              type: string
              format: LotBreakdown
              description: >-
                (DDD Entity) - Lot breakdown which uses a generic identification as lot
                number. 
          PartyRole:
              type: string
              format: InformationPartyRole
              description: '(DDD Entity) - Entity that assigns the identification. '
          IdentificationForCashProceedsIncome:
              type: string
              format: CashProceedsDefinition
              description: >-
                (DDD Entity) - Cash proceeds definition which uses a generic identification
                as type of income. 
          RelatedStatusReason:
              type: string
              format: StatusReason
              description: >-
                (DDD Entity) - Specifies the status reason for which a data source scheme
                is specified. 
          IdentificationForBankTransaction:
              type: string
              format: BankTransaction
              description: >-
                (DDD Entity) - Bank transaction which uses a generic identification as
                proprietary identification. 
          IdentificationForAccountCostReferencePattern:
              type: string
              format: AccountIdentification
              description: >-
                (DDD Entity) - Account identification for which a cost reference pattern is
                provided. 
          Account:
              type: string
              format: Account
              description: '(DDD Entity) - Account for which a type is specified '
          RelatedSystemIdentification:
              type: string
              format: SystemIdentification
              description: '(DDD Entity) - System identification which uses a generic identification. '
          IdentificationForInterestName:
              type: string
              format: Interest
              description: '(DDD Entity) - Interest which uses a generic identification as name. '
          RelatedCashAccountService:
              type: string
              format: CashAccountService
              description: '(DDD Entity) - Cash account service identified in a generic way. '
          IdentificationForInvestmentFundClass:
              type: string
              format: InvestmentFundClass
              description: >-
                (DDD Entity) - Investment fund class which uses a generic identification as
                fund classification. 
          IdentifiedLocation:
              type: string
              format: Location
              description: '(DDD Entity) - Location for which an identification is provided. '
          RelatedSecuritiesIdentification:
              type: string
              format: SecuritiesIdentification
              description: >-
                (DDD Entity) - Securities identification for which generic identification
                elements and scheme are provided. 
          IdentifiedDocument:
              type: string
              format: Document
              description: '(DDD Entity) - Document for which an identification is provided. '
          RelatedPurchaseOrder:
              type: string
              format: PurchaseOrder
              description: '(DDD Entity) - Purchase order for which an identification is provided. '
          RelatedCertificate:
              type: string
              format: RegisteredContract
              description: >-
                (DDD Entity) - Related certificate against which all transactions in the
                scope of the regulatory requirements are registered. 
  responses:
    InitiateServicingEventLogResponse:
        description: ServicingEventLogInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateServicingEventLogResponse'
    UpdateServicingEventLogResponse:
        description: ServicingEventLogUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingEventLogResponse'
    ControlServicingEventLogResponse:
        description: ServicingEventLogControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlServicingEventLogResponse'
    RetrieveServicingEventLogResponse:
        description: ServicingEventLogRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingEventLogResponse'
    UpdateAssignmentResponse:
        description: AssignmentUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateAssignmentResponse'
    CaptureAssignmentResponse:
        description: AssignmentCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureAssignmentResponse'
    RetrieveAssignmentResponse:
        description: AssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveAssignmentResponse'
    UpdateSessionResponse:
        description: SessionUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSessionResponse'
    CaptureSessionResponse:
        description: SessionCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureSessionResponse'
    RetrieveSessionResponse:
        description: SessionRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSessionResponse'
    UpdateIssueResponse:
        description: IssueUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateIssueResponse'
    CaptureIssueResponse:
        description: IssueCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureIssueResponse'
    RetrieveIssueResponse:
        description: IssueRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveIssueResponse'
    UpdateServicingFacilityResponse:
        description: ServicingFacilityUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingFacilityResponse'
    CaptureServicingFacilityResponse:
        description: ServicingFacilityCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureServicingFacilityResponse'
    RetrieveServicingFacilityResponse:
        description: ServicingFacilityRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingFacilityResponse'
    BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
  parameters:
    servicingeventhistoryid:
        name: servicingeventhistoryid
        in: path
        required: true
        style: simple
        schema:
          type: string
    assignmentid:
        name: assignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
    sessionid:
        name: sessionid
        in: path
        required: true
        style: simple
        schema:
          type: string
    issueid:
        name: issueid
        in: path
        required: true
        style: simple
        schema:
          type: string
    servicingfacilityid:
        name: servicingfacilityid
        in: path
        required: true
        style: simple
        schema:
          type: string
  requestBodies:
    InitiateServicingEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateServicingEventLogRequest'
        required: true
    UpdateServicingEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingEventLogRequest'
        required: true
    ControlServicingEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlServicingEventLogRequest'
        required: true
    RetrieveServicingEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingEventLogRequest'
        required: true
    UpdateAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateAssignmentRequest'
        required: true
    CaptureAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureAssignmentRequest'
        required: true
    RetrieveAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveAssignmentRequest'
        required: true
    UpdateSessionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSessionRequest'
        required: true
    CaptureSessionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureSessionRequest'
        required: true
    RetrieveSessionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSessionRequest'
        required: true
    UpdateIssueRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateIssueRequest'
        required: true
    CaptureIssueRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureIssueRequest'
        required: true
    RetrieveIssueRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveIssueRequest'
        required: true
    UpdateServicingFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingFacilityRequest'
        required: true
    CaptureServicingFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureServicingFacilityRequest'
        required: true
    RetrieveServicingFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingFacilityRequest'
        required: true
