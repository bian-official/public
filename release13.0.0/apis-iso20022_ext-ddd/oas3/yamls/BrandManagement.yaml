openapi: 3.0.1
info:
  title: Brand Management
  description: >-
    BIAN Service Domain (expanded with ISO200022) | Packaged Business Capability
    (PBC) | DDD Bounded Context | Respond to events that potentially damage the
    brand or provide an opportunity to strengthen/leverage brand awareness
  version: 13.0.0
servers:
  - url: ' https://virtserver.swaggerhub.com/BIAN-3/BrandManagement/12.0.1'
paths:
  '/BrandManagement/{brandmanagementid}/Update':
      put:
        tags:
          - CR (DDD Aggregate) - BrandManagementPlan
        summary: (DDD  Service) UpCR Update aspects of eth brand management plan
        description: (DDD  Service) UpCR Update aspects of eth brand management plan
        operationId: BrandManagementPlan/Update
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateBrandManagementPlanRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Request':
      put:
        tags:
          - CR (DDD Aggregate) - BrandManagementPlan
        summary: >-
          (DDD  Service) RqCR Request manual intervention with the brand management plan
          (e.g. reassess brand value/significance)
        description: >-
          (DDD  Service) RqCR Request manual intervention with the brand management plan
          (e.g. reassess brand value/significance)
        operationId: BrandManagementPlan/Request
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
        requestBody:
          $ref: '#/components/requestBodies/RequestBrandManagementPlanRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Grant':
      put:
        tags:
          - CR (DDD Aggregate) - BrandManagementPlan
        summary: >-
          (DDD  Service) GrCR Provide a permission grant to reference the brand (e.g.
          authorize logo use in marketing)
        description: >-
          (DDD  Service) GrCR Provide a permission grant to reference the brand (e.g.
          authorize logo use in marketing)
        operationId: BrandManagementPlan/Grant
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
        requestBody:
          $ref: '#/components/requestBodies/GrantBrandManagementPlanRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Retrieve':
      get:
        tags:
          - CR (DDD Aggregate) - BrandManagementPlan
        summary: (DDD  Service) ReCR Retrieve details about brand management activity
        description: (DDD  Service) ReCR Retrieve details about brand management activity
        operationId: BrandManagementPlan/Retrieve
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveBrandManagementPlanResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/Create':
      post:
        tags:
          - BQ (DDD Aggregate) - BrandAdvice
        summary: (DDD  Service) CrBQ Create a brand advice task
        description: (DDD  Service) CrBQ Create a brand advice task
        operationId: BrandAdvice/Create
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
        requestBody:
          $ref: '#/components/requestBodies/CreateBrandAdviceRequest'
        responses:
          '200':
            $ref: '#/components/responses/CreateBrandAdviceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - BrandAdvice
        summary: (DDD  Service) UpBQ Update details of provided brand related advice
        description: (DDD  Service) UpBQ Update details of provided brand related advice
        operationId: BrandAdvice/Update
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
          - $ref: '#/components/parameters/brandadviceid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateBrandAdviceRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateBrandAdviceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Exchange':
      put:
        tags:
          - BQ (DDD Aggregate) - BrandAdvice
        summary: (DDD  Service) EcBQ Accept, reject proposed brand usage in an initiative
        description: (DDD  Service) EcBQ Accept, reject proposed brand usage in an initiative
        operationId: BrandAdvice/Exchange
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
          - $ref: '#/components/parameters/brandadviceid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeBrandAdviceRequest'
        responses:
          '200':
            $ref: '#/components/responses/ExchangeBrandAdviceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Request':
      put:
        tags:
          - BQ (DDD Aggregate) - BrandAdvice
        summary: >-
          (DDD  Service) RqBQ Request manual intervention for brand advice (e.g. request
          specialist support)
        description: >-
          (DDD  Service) RqBQ Request manual intervention for brand advice (e.g. request
          specialist support)
        operationId: BrandAdvice/Request
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
          - $ref: '#/components/parameters/brandadviceid'
        requestBody:
          $ref: '#/components/requestBodies/RequestBrandAdviceRequest'
        responses:
          '200':
            $ref: '#/components/responses/RequestBrandAdviceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - BrandAdvice
        summary: (DDD  Service) ReBQ Retrieve details about brand advice activity
        description: (DDD  Service) ReBQ Retrieve details about brand advice activity
        operationId: BrandAdvice/Retrieve
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
          - $ref: '#/components/parameters/brandadviceid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveBrandAdviceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/Create':
      post:
        tags:
          - BQ (DDD Aggregate) - Troubleshooting
        summary: (DDD  Service) CrBQ Create a brand troubleshooting action
        description: (DDD  Service) CrBQ Create a brand troubleshooting action
        operationId: Troubleshooting/Create
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
        requestBody:
          $ref: '#/components/requestBodies/CreateTroubleshootingRequest'
        responses:
          '200':
            $ref: '#/components/responses/CreateTroubleshootingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/{troubleshootingid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Troubleshooting
        summary: (DDD  Service) UpBQ Update details relating to brand troubleshooting activity
        description: (DDD  Service) UpBQ Update details relating to brand troubleshooting activity
        operationId: Troubleshooting/Update
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
          - $ref: '#/components/parameters/troubleshootingid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateTroubleshootingRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateTroubleshootingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/{troubleshootingid}/Request':
      put:
        tags:
          - BQ (DDD Aggregate) - Troubleshooting
        summary: (DDD  Service) RqBQ Request manual intervention in a troubleshooting action
        description: (DDD  Service) RqBQ Request manual intervention in a troubleshooting action
        operationId: Troubleshooting/Request
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
          - $ref: '#/components/parameters/troubleshootingid'
        requestBody:
          $ref: '#/components/requestBodies/RequestTroubleshootingRequest'
        responses:
          '200':
            $ref: '#/components/responses/RequestTroubleshootingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/{troubleshootingid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Troubleshooting
        summary: (DDD  Service) ReBQ Retrieve details about brand troubleshooting activity
        description: (DDD  Service) ReBQ Retrieve details about brand troubleshooting activity
        operationId: Troubleshooting/Retrieve
        parameters:
          - $ref: '#/components/parameters/brandmanagementid'
          - $ref: '#/components/parameters/troubleshootingid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveTroubleshootingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    UpdateBrandManagementPlanRequest:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Definition of the brand, including how it is to be represented in different media and contexts ||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "(DDD Entity) - An analysis of the brand value based on comparative market research ||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of any brand development related activities, includes usage and exposure tracking and impact analysis activities ||\r\n|"
    Text:
        type: object
        description: "(DDD Entity) - Definition of the brand, including how it is to be represented in different media and contexts Text ||\r\n|"
        properties:
          Text:
              type: string
              description: ''
              format: DataType
    BrandValueAssessment:
        type: object
        description: "(DDD Entity) - An analysis of the brand value based on comparative market research BrandValueAssessment ||\r\n|"
        properties:
          BrandValueAssessment:
              type: string
              description: ''
              format: Class
    Schedule:
        type: object
        description: "(DDD Entity) - Schedule of any brand development related activities, includes usage and exposure tracking and impact analysis activities Schedule ||\r\n|"
        properties:
          ScheduleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    UpdateBrandManagementPlanResponse:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    UpdateBrandManagementPlan:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RequestBrandManagementPlanRequest:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Definition of the brand, including how it is to be represented in different media and contexts ||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "(DDD Entity) - An analysis of the brand value based on comparative market research ||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of any brand development related activities, includes usage and exposure tracking and impact analysis activities ||\r\n|"
    RequestBrandManagementPlanResponse:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RequestBrandManagementPlan:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    GrantBrandManagementPlanRequest:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Definition of the brand, including how it is to be represented in different media and contexts ||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "(DDD Entity) - An analysis of the brand value based on comparative market research ||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of any brand development related activities, includes usage and exposure tracking and impact analysis activities ||\r\n|"
    GrantBrandManagementPlanResponse:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    GrantBrandManagementPlan:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RetrieveBrandManagementPlanRequest:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Definition of the brand, including how it is to be represented in different media and contexts ||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "(DDD Entity) - An analysis of the brand value based on comparative market research ||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of any brand development related activities, includes usage and exposure tracking and impact analysis activities ||\r\n|"
    RetrieveBrandManagementPlanResponse:
        type: object
        description: ''
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RetrieveBrandManagementPlan:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    CreateBrandAdviceRequest:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of work task (e.g. assess brand exposure, incorporate brand in design) ||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The make-up of the advice task performed, includes schedule of meetings/working sessions and provision of guidance materials ||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, evaluations and recommendations for the work task ||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task capturing any use of brand that might requires tracking ||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - The date-time associated with the delivery of brand advice task ||\r\n|"
    Task:
        type: object
        description: "(DDD Entity) - The make-up of the advice task performed, includes schedule of meetings/working sessions and provision of guidance materials Task ||\r\n|"
        properties:
          Task:
              type: string
              description: ''
              format: DataType
    Workproduct:
        type: object
        description: "(DDD Entity) - File of consolidated notes, evaluations and recommendations for the work task Workproduct ||\r\n|"
        properties:
          WorkProductType:
              $ref: '#/components/schemas/Workproducttypevalues'
              format: Workproducttypevalues
              description: ''
          WorkProductIdentifoication:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Workproducttypevalues:
        type: object
        description: "(DDD Entity) - File of consolidated notes, evaluations and recommendations for the work task Workproduct ||\r\n|"
        properties:
          Workproducttypevalues:
              enum:
                  -  Document
                  -  WorkingPaper
                  -  ActivityLog
                  -  Form
                  -  File
                  -  MeetingSchedule
                  -  MeetingMinute
              format: Workproducttypevalues
              type: string
              description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - "
    Identifier:
        type: object
        description: '(DDD Entity) -  Identifier '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: '(DDD Entity) -  '
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: '(DDD Entity) - Entity that assigns and manages the identification. '
          Identifier:
              type: string
              description: ''
              format: DataType
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
    Value:
        type: object
        description: '(DDD Entity) -  Value '
        properties:
          Value:
              type: string
              description: ''
              format: DataType
    Involvedparty:
        type: object
        description: (DDD Entity) - Reference to the account primary party/owner
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: (DDD Entity) - Reference to the account primary party/owner
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              format: Partyrole
              description: (DDD Entity) - Reference to the account primary party/owner
    Party:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          PartyName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: >-
                (DDD Entity) - Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
                 
          PartyType:
              $ref: '#/components/schemas/Partytypevalues'
              format: Partytypevalues
              description: ''
          PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              format: Partyidentification
              description: '(DDD Entity) -  '
          PartyLegalStructureType:
              $ref: '#/components/schemas/Partylegalstructuretypevalues'
              format: Partylegalstructuretypevalues
              description: ''
    Name:
        type: object
        description: >-
          (DDD Entity) - Name by which a party is known and which is usually used to
          identify that party. (ISO20022)
           Name 
        properties:
          Name:
              type: string
              description: ''
              format: DataType
    Partytypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partytypevalues:
              enum:
                  -  Person
                  -  Organisation
              format: Partytypevalues
              type: string
              description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022"
    Datetime:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          DateTimeContent:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The particular date and time point in the progression of
                time 
          TimeZoneCode:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - The time zone to which the date time refers. '
          DaylightSavingIndicator:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          DateTimeType:
              $ref: '#/components/schemas/Datetimetypevalues'
              format: Datetimetypevalues
              description: ''
          Datetime:
              type: string
              description: ''
              format: DataType
    Datetimetypevalues:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          Datetimetypevalues:
              enum:
                  -  MaturityDate
                  -  InitiatedDate
                  -  RequestedDate
                  -  ExecutedDate
                  -  OpenDate
                  -  CloseDate
                  -  ExpiryDate
                  -  EffectiveDate
                  -  CreatingDate
                  -  ActivationDate
                  -  DeactivationDate
                  -  BlockingDate
                  -  SendingDate
                  -  ValidFromDate
                  -  ValidToDate
                  -  ReceivingDate
                  -  SigningDate
                  -  DueDate
                  -  ValueDate
                  -  FulfillmentDate
              format: Datetimetypevalues
              type: string
              description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - "
    Partyidentification:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          PartyIdentificationType:
              $ref: '#/components/schemas/Partyidentificationtypevalues'
              format: Partyidentificationtypevalues
              description: ''
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Partyidentificationtypevalues:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          Partyidentificationtypevalues:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEI(LegalEntityIdentifier)
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              format: Partyidentificationtypevalues
              type: string
              description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC."
    Partylegalstructuretypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partylegalstructuretypevalues:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  Sole(SoleTrader)
              format: Partylegalstructuretypevalues
              type: string
              description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - "
    Partyrole:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          PartyRoleName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          PartyInvolvementType:
              $ref: '#/components/schemas/Partyinvolvementtypevalues'
              format: Partyinvolvementtypevalues
              description: ''
    Datetimeperiod:
        type: object
        description: '(DDD Entity) -  Datetimeperiod '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range starts. (ISO20022) '
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range ends. (ISO20022) '
    Partyinvolvementtypevalues:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          Partyinvolvementtypevalues:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              format: Partyinvolvementtypevalues
              type: string
              description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - "
    DateTime:
        type: object
        description: "(DDD Entity) - The date-time associated with the delivery of brand advice task DateTime ||\r\n|"
        properties:
          TimeIndication:
              type: string
              description: ''
              format: String
          TimeIndicationType:
              type: string
              description: ''
              format: String
    CreateBrandAdviceResponse:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    CreateBrandAdvice:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    UpdateBrandAdviceRequest:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of work task (e.g. assess brand exposure, incorporate brand in design) ||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The make-up of the advice task performed, includes schedule of meetings/working sessions and provision of guidance materials ||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, evaluations and recommendations for the work task ||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task capturing any use of brand that might requires tracking ||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - The date-time associated with the delivery of brand advice task ||\r\n|"
    UpdateBrandAdviceResponse:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    UpdateBrandAdvice:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    ExchangeBrandAdviceRequest:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of work task (e.g. assess brand exposure, incorporate brand in design) ||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The make-up of the advice task performed, includes schedule of meetings/working sessions and provision of guidance materials ||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, evaluations and recommendations for the work task ||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task capturing any use of brand that might requires tracking ||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - The date-time associated with the delivery of brand advice task ||\r\n|"
    ExchangeBrandAdviceResponse:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    ExchangeBrandAdvice:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RequestBrandAdviceRequest:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of work task (e.g. assess brand exposure, incorporate brand in design) ||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The make-up of the advice task performed, includes schedule of meetings/working sessions and provision of guidance materials ||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, evaluations and recommendations for the work task ||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task capturing any use of brand that might requires tracking ||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - The date-time associated with the delivery of brand advice task ||\r\n|"
    RequestBrandAdviceResponse:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    RequestBrandAdvice:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RetrieveBrandAdviceRequest:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of work task (e.g. assess brand exposure, incorporate brand in design) ||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The make-up of the advice task performed, includes schedule of meetings/working sessions and provision of guidance materials ||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, evaluations and recommendations for the work task ||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task capturing any use of brand that might requires tracking ||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - The date-time associated with the delivery of brand advice task ||\r\n|"
    RetrieveBrandAdviceResponse:
        type: object
        description: ''
        properties:
          BrandAdviceWorkTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandAdviceWorkTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandAdviceWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandAdviceWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    RetrieveBrandAdvice:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    CreateTroubleshootingRequest:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event that threatens the brand (e.g. production issue, legal issue, employee action, marketing conflict) ||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The structured task/work plan followed to address the issue ||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Detailed description of the event and situation leading to the brand exposure ||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of actions taken to mitigate the event (plan and actual) ||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "(DDD Entity) - Actions taken to mitigate the event (e.g. press release, other communications, corrective/compensatory actions ||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, assessments, interview notes etc. and recommendations arising from the work ||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task assessing any lasting impact and evaluating the effectiveness of any mitigating actions ||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - Key dates associated with the troubleshooting activity ||\r\n|"
    Action:
        type: object
        description: "(DDD Entity) - Actions taken to mitigate the event (e.g. press release, other communications, corrective/compensatory actions Action ||\r\n|"
        properties:
          ActionType:
              $ref: '#/components/schemas/Actiontypevalues'
              format: Actiontypevalues
              description: ''
    Actiontypevalues:
        type: object
        description: "(DDD Entity) - Actions taken to mitigate the event (e.g. press release, other communications, corrective/compensatory actions Action ||\r\n|"
        properties:
          Actiontypevalues:
              enum:
                  -  Initiate
                  -  Execute
                  -  Create
                  -  Transfer
                  -  Pay
                  -  Deliver
                  -  Apply
                  -  Calculate
              format: Actiontypevalues
              type: string
              description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - "
    CreateTroubleshootingResponse:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    CreateTroubleshooting:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    UpdateTroubleshootingRequest:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event that threatens the brand (e.g. production issue, legal issue, employee action, marketing conflict) ||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The structured task/work plan followed to address the issue ||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Detailed description of the event and situation leading to the brand exposure ||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of actions taken to mitigate the event (plan and actual) ||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "(DDD Entity) - Actions taken to mitigate the event (e.g. press release, other communications, corrective/compensatory actions ||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, assessments, interview notes etc. and recommendations arising from the work ||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task assessing any lasting impact and evaluating the effectiveness of any mitigating actions ||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - Key dates associated with the troubleshooting activity ||\r\n|"
    UpdateTroubleshootingResponse:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    UpdateTroubleshooting:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RequestTroubleshootingRequest:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event that threatens the brand (e.g. production issue, legal issue, employee action, marketing conflict) ||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The structured task/work plan followed to address the issue ||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Detailed description of the event and situation leading to the brand exposure ||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of actions taken to mitigate the event (plan and actual) ||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "(DDD Entity) - Actions taken to mitigate the event (e.g. press release, other communications, corrective/compensatory actions ||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, assessments, interview notes etc. and recommendations arising from the work ||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task assessing any lasting impact and evaluating the effectiveness of any mitigating actions ||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - Key dates associated with the troubleshooting activity ||\r\n|"
    RequestTroubleshootingResponse:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    RequestTroubleshooting:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    RetrieveTroubleshootingRequest:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event that threatens the brand (e.g. production issue, legal issue, employee action, marketing conflict) ||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The structured task/work plan followed to address the issue ||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Detailed description of the event and situation leading to the brand exposure ||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Schedule of actions taken to mitigate the event (plan and actual) ||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "(DDD Entity) - Actions taken to mitigate the event (e.g. press release, other communications, corrective/compensatory actions ||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - File of consolidated notes, assessments, interview notes etc. and recommendations arising from the work ||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Details of the outcome or result of the work task assessing any lasting impact and evaluating the effectiveness of any mitigating actions ||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "(DDD Entity) - Key dates associated with the troubleshooting activity ||\r\n|"
    RetrieveTroubleshootingResponse:
        type: object
        description: ''
        properties:
          BrandImpactEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactTroubleshootingTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandImpactEventResponseSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          BrandImpactEventResponseAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "||\r\n|"
          BrandImpactEventWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          BrandImpactEventWorkTaskResult:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          BrandImpactEventWorkTaskDateandTime:
              $ref: '#/components/schemas/DateTime'
              format: DateTime
              description: "||\r\n|"
    RetrieveTroubleshooting:
        type: object
        description: >-
          (DDD Entity) - Oversee the working of a business unit, assign work, manage
          against a plan and troubleshoot issues within Brand Management.
        properties:
          BrandDefinition:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          BrandValueAssessment:
              $ref: '#/components/schemas/BrandValueAssessment'
              format: BrandValueAssessment
              description: "||\r\n|"
          BrandUsage:
              type: string
              description: "||\r\n|"
              format: Object
          BrandDevelopmentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
    HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  responses:
    UpdateBrandManagementPlanResponse:
        description: BrandManagementPlanUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBrandManagementPlanResponse'
    RequestBrandManagementPlanResponse:
        description: BrandManagementPlanRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestBrandManagementPlanResponse'
    GrantBrandManagementPlanResponse:
        description: BrandManagementPlanGrant
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/GrantBrandManagementPlanResponse'
    RetrieveBrandManagementPlanResponse:
        description: BrandManagementPlanRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBrandManagementPlanResponse'
    CreateBrandAdviceResponse:
        description: BrandAdviceCreate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CreateBrandAdviceResponse'
    UpdateBrandAdviceResponse:
        description: BrandAdviceUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBrandAdviceResponse'
    ExchangeBrandAdviceResponse:
        description: BrandAdviceExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeBrandAdviceResponse'
    RequestBrandAdviceResponse:
        description: BrandAdviceRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestBrandAdviceResponse'
    RetrieveBrandAdviceResponse:
        description: BrandAdviceRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBrandAdviceResponse'
    CreateTroubleshootingResponse:
        description: TroubleshootingCreate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CreateTroubleshootingResponse'
    UpdateTroubleshootingResponse:
        description: TroubleshootingUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateTroubleshootingResponse'
    RequestTroubleshootingResponse:
        description: TroubleshootingRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestTroubleshootingResponse'
    RetrieveTroubleshootingResponse:
        description: TroubleshootingRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveTroubleshootingResponse'
    BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
  parameters:
    brandmanagementid:
        name: brandmanagementid
        in: path
        required: true
        style: simple
        schema:
          type: string
    brandadviceid:
        name: brandadviceid
        in: path
        required: true
        style: simple
        schema:
          type: string
    troubleshootingid:
        name: troubleshootingid
        in: path
        required: true
        style: simple
        schema:
          type: string
  requestBodies:
    UpdateBrandManagementPlanRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBrandManagementPlanRequest'
        required: true
    RequestBrandManagementPlanRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestBrandManagementPlanRequest'
        required: true
    GrantBrandManagementPlanRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/GrantBrandManagementPlanRequest'
        required: true
    RetrieveBrandManagementPlanRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBrandManagementPlanRequest'
        required: true
    CreateBrandAdviceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CreateBrandAdviceRequest'
        required: true
    UpdateBrandAdviceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBrandAdviceRequest'
        required: true
    ExchangeBrandAdviceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeBrandAdviceRequest'
        required: true
    RequestBrandAdviceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestBrandAdviceRequest'
        required: true
    RetrieveBrandAdviceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBrandAdviceRequest'
        required: true
    CreateTroubleshootingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CreateTroubleshootingRequest'
        required: true
    UpdateTroubleshootingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateTroubleshootingRequest'
        required: true
    RequestTroubleshootingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestTroubleshootingRequest'
        required: true
    RetrieveTroubleshootingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveTroubleshootingRequest'
        required: true
