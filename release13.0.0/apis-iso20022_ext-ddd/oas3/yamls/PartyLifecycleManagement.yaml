openapi: 3.0.1
info:
  title: Party Lifecycle Management
  description: >-
    BIAN Service Domain (expanded with ISO200022) | Packaged Business Capability
    (PBC) | DDD Bounded Context | This service domain tracks the state of a
    party relationship with the bank from the initial checks made during the
    establishment of a new party connection and subsequently maintained as
    necessary over the duration of the relationship. The checks and the
    maintenance requirements will vary by party type and jurisdiction. The
    checks cover bank specific and legal and regulatory considerations and may
    be updated based on a standard schedule or by request in specific
    circumstances.
  version: 13.0.0
servers:
  - url: ' https://virtserver.swaggerhub.com/BIAN-3/PartyLifecycleManagement/12.0.1'
paths:
  '/PartyLifecycleManagement/Initiate':
      post:
        tags:
          - CR (DDD Aggregate) - PartyRelationshipAdministrativePlan
        summary: (DDD  Service) InCR Initiate party life-cycle administrative plan
        description: (DDD  Service) InCR Initiate party life-cycle administrative plan
        operationId: PartyRelationshipAdministrativePlan/Initiate
        requestBody:
          $ref: >-
            #/components/requestBodies/InitiatePartyRelationshipAdministrativePlanRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Update':
      put:
        tags:
          - CR (DDD Aggregate) - PartyRelationshipAdministrativePlan
        summary: (DDD  Service) UpCR Update details about a party life-cycle administrative plan
        description: (DDD  Service) UpCR Update details about a party life-cycle administrative plan
        operationId: PartyRelationshipAdministrativePlan/Update
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
        requestBody:
          $ref: >-
            #/components/requestBodies/UpdatePartyRelationshipAdministrativePlanRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Control':
      put:
        tags:
          - CR (DDD Aggregate) - PartyRelationshipAdministrativePlan
        summary: >-
          (DDD  Service) CoCR Control the processing of a party-life-cycle administrative
          plan (e.g. terminate)
        description: >-
          (DDD  Service) CoCR Control the processing of a party-life-cycle administrative
          plan (e.g. terminate)
        operationId: PartyRelationshipAdministrativePlan/Control
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ControlPartyRelationshipAdministrativePlanRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Exchange':
      put:
        tags:
          - CR (DDD Aggregate) - PartyRelationshipAdministrativePlan
        summary: >-
          (DDD  Service) EcCR Accept, verify, etc. of the party life-cycle administrative
          plan
        description: >-
          (DDD  Service) EcCR Accept, verify, etc. of the party life-cycle administrative
          plan
        operationId: PartyRelationshipAdministrativePlan/Exchange
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExchangePartyRelationshipAdministrativePlanRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Execute':
      put:
        tags:
          - CR (DDD Aggregate) - PartyRelationshipAdministrativePlan
        summary: (DDD  Service) ExCR Execute an automated action (e.g. input data)
        description: (DDD  Service) ExCR Execute an automated action (e.g. input data)
        operationId: PartyRelationshipAdministrativePlan/Execute
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExecutePartyRelationshipAdministrativePlanRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Request':
      put:
        tags:
          - CR (DDD Aggregate) - PartyRelationshipAdministrativePlan
        summary: (DDD  Service) RqCR Request manual intervention (e.g. negotiate resolution)
        description: (DDD  Service) RqCR Request manual intervention (e.g. negotiate resolution)
        operationId: PartyRelationshipAdministrativePlan/Request
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
        requestBody:
          $ref: >-
            #/components/requestBodies/RequestPartyRelationshipAdministrativePlanRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Retrieve':
      get:
        tags:
          - CR (DDD Aggregate) - PartyRelationshipAdministrativePlan
        summary: (DDD  Service) ReCR Retrieve details about a party life-cycle administrative plan
        description: (DDD  Service) ReCR Retrieve details about a party life-cycle administrative plan
        operationId: PartyRelationshipAdministrativePlan/Retrieve
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
        responses:
          '200':
            $ref: >-
              #/components/responses/RetrievePartyRelationshipAdministrativePlanResponse
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Qualification/{qualificationid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Qualification
        summary: (DDD  Service) ReBQ Retrieve details about a party qualification routine
        description: (DDD  Service) ReBQ Retrieve details about a party qualification routine
        operationId: Qualification/Retrieve
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/qualificationid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveQualificationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Documentation/{documentationid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Documentation
        summary: (DDD  Service) UpBQ Update details about document handling
        description: (DDD  Service) UpBQ Update details about document handling
        operationId: Documentation/Update
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/documentationid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateDocumentationRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateDocumentationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Documentation/{documentationid}/Execute':
      put:
        tags:
          - BQ (DDD Aggregate) - Documentation
        summary: >-
          (DDD  Service) ExBQ Execute an automated action (e.g. input data about a
          document)
        description: >-
          (DDD  Service) ExBQ Execute an automated action (e.g. input data about a
          document)
        operationId: Documentation/Execute
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/documentationid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteDocumentationRequest'
        responses:
          '200':
            $ref: '#/components/responses/ExecuteDocumentationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Documentation/{documentationid}/Request':
      put:
        tags:
          - BQ (DDD Aggregate) - Documentation
        summary: (DDD  Service) RqBQ Request manual intervention (e.g. handle a document exchange)
        description: (DDD  Service) RqBQ Request manual intervention (e.g. handle a document exchange)
        operationId: Documentation/Request
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/documentationid'
        requestBody:
          $ref: '#/components/requestBodies/RequestDocumentationRequest'
        responses:
          '200':
            $ref: '#/components/responses/RequestDocumentationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Documentation/{documentationid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Documentation
        summary: >-
          (DDD  Service) ReBQ Retrieve details about document processing for a party
          life-cycle administration
        description: >-
          (DDD  Service) ReBQ Retrieve details about document processing for a party
          life-cycle administration
        operationId: Documentation/Retrieve
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/documentationid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveDocumentationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Precedents/{precedentsid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Precedents
        summary: (DDD  Service) UpBQ Update details about customer precedents
        description: (DDD  Service) UpBQ Update details about customer precedents
        operationId: Precedents/Update
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/precedentsid'
        requestBody:
          $ref: '#/components/requestBodies/UpdatePrecedentsRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdatePrecedentsResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/Precedents/{precedentsid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Precedents
        summary: (DDD  Service) ReBQ Retrieve details about customer precedent maintenance
        description: (DDD  Service) ReBQ Retrieve details about customer precedent maintenance
        operationId: Precedents/Retrieve
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/precedentsid'
        responses:
          '200':
            $ref: '#/components/responses/RetrievePrecedentsResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/PartyLifecycleManagement/{partylifecyclemanagementid}/IdentityProofing/{identityproofingid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - IdentityProofing
        summary: (DDD  Service) ReBQ Retrieve details about a party identity proofing routine
        description: (DDD  Service) ReBQ Retrieve details about a party identity proofing routine
        operationId: IdentityProofing/Retrieve
        parameters:
          - $ref: '#/components/parameters/partylifecyclemanagementid'
          - $ref: '#/components/parameters/identityproofingid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveIdentityProofingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    InitiatePartyRelationshipAdministrativePlanRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties ||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status ||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of task performed (e.g. on-boarding check, periodic refresh) ||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The outcome of the task  (will be used to update the Status and Status Record) ||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
    Involvedparty:
        type: object
        description: (DDD Entity) - Reference to the account primary party/owner
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: (DDD Entity) - Reference to the account primary party/owner
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              format: Partyrole
              description: (DDD Entity) - Reference to the account primary party/owner
    Name:
        type: object
        description: >-
          (DDD Entity) - Name by which a party is known and which is usually used to
          identify that party. (ISO20022)
           Name 
        properties:
          Name:
              type: string
              description: ''
              format: DataType
    Partytypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partytypevalues:
              enum:
                  -  Person
                  -  Organisation
              format: Partytypevalues
              type: string
              description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022"
    Datetime:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          DateTimeContent:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The particular date and time point in the progression of
                time 
          TimeZoneCode:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - The time zone to which the date time refers. '
          DaylightSavingIndicator:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          DateTimeType:
              $ref: '#/components/schemas/Datetimetypevalues'
              format: Datetimetypevalues
              description: ''
          Datetime:
              type: string
              description: ''
              format: DataType
    Text:
        type: object
        description: >-
          (DDD Entity) - The particular date and time point in the progression of time
          Text 
        properties:
          Text:
              type: string
              description: ''
              format: DataType
    Datetimetypevalues:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          Datetimetypevalues:
              enum:
                  -  MaturityDate
                  -  InitiatedDate
                  -  RequestedDate
                  -  ExecutedDate
                  -  OpenDate
                  -  CloseDate
                  -  ExpiryDate
                  -  EffectiveDate
                  -  CreatingDate
                  -  ActivationDate
                  -  DeactivationDate
                  -  BlockingDate
                  -  SendingDate
                  -  ValidFromDate
                  -  ValidToDate
                  -  ReceivingDate
                  -  SigningDate
                  -  DueDate
                  -  ValueDate
                  -  FulfillmentDate
              format: Datetimetypevalues
              type: string
              description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - "
    Partyidentification:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          PartyIdentificationType:
              $ref: '#/components/schemas/Partyidentificationtypevalues'
              format: Partyidentificationtypevalues
              description: ''
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Partyidentificationtypevalues:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          Partyidentificationtypevalues:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEI(LegalEntityIdentifier)
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              format: Partyidentificationtypevalues
              type: string
              description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC."
    Identifier:
        type: object
        description: '(DDD Entity) -  Identifier '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: '(DDD Entity) -  '
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: '(DDD Entity) - Entity that assigns and manages the identification. '
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          Identifier:
              type: string
              description: ''
              format: DataType
    Value:
        type: object
        description: '(DDD Entity) -  Value '
        properties:
          Value:
              type: string
              description: ''
              format: DataType
    Partylegalstructuretypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partylegalstructuretypevalues:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  Sole(SoleTrader)
              format: Partylegalstructuretypevalues
              type: string
              description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - "
    Partyrole:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          PartyRoleName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          PartyInvolvementType:
              $ref: '#/components/schemas/Partyinvolvementtypevalues'
              format: Partyinvolvementtypevalues
              description: ''
    Datetimeperiod:
        type: object
        description: '(DDD Entity) -  Datetimeperiod '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range starts. (ISO20022) '
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range ends. (ISO20022) '
          Datetimeperiod:
              type: string
              description: ''
              format: DataType
    Partyinvolvementtypevalues:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          Partyinvolvementtypevalues:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              format: Partyinvolvementtypevalues
              type: string
              description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - "
    Party_Partyrelationshiptypevalues:
        type: object
        description: ''
        properties:
          Party_Partyrelationshiptypevalues:
              enum:
                  -  PartyIsParentOfParty
                  -  PartyIsSubsidiaryOfParty
                  -  PartyIsCertifiedByParty
                  -  PartyIsMarriedToParty
                  -  PartyActsOnBehalfOfParty
                  -  PartyIsContactPointForParty
                  -  PartyIsTrustedByParty
              format: Party_Partyrelationshiptypevalues
              type: string
              description: ">\r\n* `PartyIsParentOfParty` - \r\n* `PartyIsSubsidiaryOfParty` - \r\n* `PartyIsCertifiedByParty` - \r\n* `PartyIsMarriedToParty` - \r\n* `PartyActsOnBehalfOfParty` - \r\n* `PartyIsContactPointForParty` - \r\n* `PartyIsTrustedByParty` - \r\n* `PartyIsThePowerOfAttorneyForParty` - \r\n* `PartyReceivesBenefitsFromAParty` - "
    Schedule:
        type: object
        description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties Schedule ||\r\n|"
        properties:
          ScheduleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Task:
        type: object
        description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status Task ||\r\n|"
        properties:
          Task:
              type: string
              description: ''
              format: DataType
    Workproduct:
        type: object
        description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis Workproduct ||\r\n|"
        properties:
          WorkProductType:
              $ref: '#/components/schemas/Workproducttypevalues'
              format: Workproducttypevalues
              description: ''
          WorkProductIdentifoication:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Workproducttypevalues:
        type: object
        description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis Workproduct ||\r\n|"
        properties:
          Workproducttypevalues:
              enum:
                  -  Document
                  -  WorkingPaper
                  -  ActivityLog
                  -  Form
                  -  File
                  -  MeetingSchedule
                  -  MeetingMinute
              format: Workproducttypevalues
              type: string
              description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - "
    Log:
        type: object
        description: "(DDD Entity) - \r\n Log "
        properties:
          LogType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          LogPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          LogDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Key dates associated with the log (e.g. start time). '
          LogIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    PartyRelationshipLifecyclePhase:
        type: object
        description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n PartyRelationshipLifecyclePhase ||\r\n|"
        properties:
          Description:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          IsCurrentPhase:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - Specifies whether the phase is the current phase of the
                party relationship. 
          PhaseName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: >-
                (DDD Entity) - The name of the phase of the relationship, such as prospect,
                contracted, on-board, etc. 
          PhaseStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: '(DDD Entity) -  '
          PhasePeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: >-
                (DDD Entity) - The period of time during which the phase was the current
                phase of the party relationship. 
    InitiatePartyRelationshipAdministrativePlanResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    InitiatePartyRelationshipAdministrativePlan:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    UpdatePartyRelationshipAdministrativePlanRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties ||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status ||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of task performed (e.g. on-boarding check, periodic refresh) ||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The outcome of the task  (will be used to update the Status and Status Record) ||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
    UpdatePartyRelationshipAdministrativePlanResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    UpdatePartyRelationshipAdministrativePlan:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    ControlPartyRelationshipAdministrativePlanRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties ||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status ||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of task performed (e.g. on-boarding check, periodic refresh) ||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The outcome of the task  (will be used to update the Status and Status Record) ||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
    ControlPartyRelationshipAdministrativePlanResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    ControlPartyRelationshipAdministrativePlan:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    ExchangePartyRelationshipAdministrativePlanRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties ||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status ||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of task performed (e.g. on-boarding check, periodic refresh) ||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The outcome of the task  (will be used to update the Status and Status Record) ||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
    ExchangePartyRelationshipAdministrativePlanResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    ExchangePartyRelationshipAdministrativePlan:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    ExecutePartyRelationshipAdministrativePlanRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties ||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status ||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of task performed (e.g. on-boarding check, periodic refresh) ||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The outcome of the task  (will be used to update the Status and Status Record) ||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
    ExecutePartyRelationshipAdministrativePlanResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    ExecutePartyRelationshipAdministrativePlan:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RequestPartyRelationshipAdministrativePlanRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties ||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status ||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of task performed (e.g. on-boarding check, periodic refresh) ||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The outcome of the task  (will be used to update the Status and Status Record) ||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
    RequestPartyRelationshipAdministrativePlanResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RequestPartyRelationshipAdministrativePlan:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RetrievePartyRelationshipAdministrativePlanRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Defines scheduled update/review tasks covering all tracked properties ||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - Tasks performed to maintain/verify the life-cycle status ||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of task performed (e.g. on-boarding check, periodic refresh) ||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The outcome of the task  (will be used to update the Status and Status Record) ||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "(DDD Entity) - Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
    RetrievePartyRelationshipAdministrativePlanResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RetrievePartyRelationshipAdministrativePlan:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RetrieveQualificationRequest:
        type: object
        description: ''
        properties:
          QualificationType:
              $ref: '#/components/schemas/Assessmenttypevalues'
              format: Assessmenttypevalues
              description: "||\r\n|"
          PublicDirectoryReference:
              $ref: '#/components/schemas/Directory'
              format: Directory
              description: "(DDD Entity) - Reference to an external verification source (e.g. for registered address/location verification) ||\r\n|"
          SpecialistAgencyServiceReference:
              $ref: '#/components/schemas/Service'
              format: Service
              description: "(DDD Entity) - Reference to an external verification service (e.g. to perform background verification checks) ||\r\n|"
          QualificationTaskRecord:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The record of a specific qualification task ||\r\n|"
          QualificationTaskDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Description of the approach taken ||\r\n|"
          SpecialistAgencyRegulatorServiceRequestResult:
              $ref: '#/components/schemas/Instruction'
              format: Instruction
              description: "(DDD Entity) - Result from the qualification service request ||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Reference to documents used for authentication ||\r\n|"
          QualificationTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          QualificationTaskResult:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
    Assessmenttypevalues:
        type: object
        description: ''
        properties:
          Assessmenttypevalues:
              enum:
                  -  AssetValuation
                  -  ProductMatching
                  -  Authorization
                  -  Authentication
                  -  QualityAssurance
                  -  Audit
                  -  ComplianceCheck
                  -  FundingCheck
                  -  SuitabilityCheck
                  -  PerformanceCheck
                  -  ImpactAssessment
                  -  RiskAssessment
                  -  Rating
                  -  UnderwritingAssessment
                  -  Qualification
                  -  Verification
                  -  KYCAssessment
                  -  PEPAssessment
                  -  AMLAssessment
              format: Assessmenttypevalues
              type: string
              description: ">\r\n* `AssetValuation` - \r\n* `ProductMatching` - \r\n* `Authorization` - An evaluation whether a party or system is allowed to do something.\n\nThe consent given by a participant (or a third party acting on behalf of that participant) in order to transfer funds or securities. (ECB)\n\nAuthorization is a mechanism by which a computer system determines whether to allow or deny specific action to a user. Authorization is often controlled by rather complex rules and algorithms, usually specified as part of an access control model. Authorization often follows (and required) authentication, however, authentication and authorization are two separate mechanisms. In rare cases, \"authorization\" is understood as a process of allowing access, granting permissions or giving approval. Such as \"authorization\" of a request to join a group. (ISO/IEC 24760-1:2019 IT Security and Privacy)\r\n* `Authentication` - An evaluation whether a party or system is what it claims to be.\n\nA security mechanism for verifying: 1) the identity of an individual or other entity (including verification by means of a computer or computer application); and 2) the level of authority of that person or entity (i.e. the ability of that person or entity to perform specific tasks or activities). (ECB)\n\nAuthentication is a mechanism by which a computer system checks that the user is really the one she or he claims to be. Authentication can be implemented by a broad variety of mechanisms broadly divided into three categories: something you know, something you have, something you are. Traditionally, authentication is done by the means of by username and password. Authentication is often followed by authorization, however, authentication and authorization are two separate mechanisms. (ISO/IEC 24760-1:2019 IT Security and Privacy)\r\n* `QualityAssurance` - \r\n* `Audit` - \r\n* `ComplianceCheck` - \r\n* `FundingCheck` - \r\n* `SuitabilityCheck` - \r\n* `PerformanceCheck` - \r\n* `ImpactAssessment` - \r\n* `RiskAssessment` - \r\n* `Rating` - \r\n* `UnderwritingAssessment` - \r\n* `Qualification` - \r\n* `Verification` - A process establishing that a particular information is correct, while the meaning of \"information\" and \"correct\" varies from context to context. When dealing with identity information, this usually means formal verification of identity attributes, checking the schema, identifier uniqueness and referential integrity. However, verification may mean deeper verification, such as checking that the information is true and up-to-date.  (ISO/IEC 24760-1:2019 IT Security and Privacy)\n\r\n* `KYCAssessment` - An assessment conducted by businesses and financial institutions to verify and confirm the identity of their customers or clients. The primary purpose of a KYC check is to prevent illegal activities, such as money laundering, terrorist financing, and fraud, by ensuring that customers are who they claim to be.\r\n* `PEPAssessment` - A PEP check, or \"Politically Exposed Person\" check, is an assessment conducted by used by businesses, financial institutions, and government agencies to identify individuals who hold prominent public positions or have significant political influence. The purpose of a PEP check is to assess and manage the potential risks associated with doing business with these individuals, as they may be more susceptible to corruption, money laundering, or other illicit activities.\r\n* `AMLAssessment` - An AML (Anti-Money Laundering) check is an assessment conducted by businesses, financial institutions, and other organizations to prevent and detect money laundering and the financing of criminal activities. The main purpose of an AML check is to ensure that financial transactions and business relationships are not being used to disguise the illegal origins of funds."
    Directory:
        type: object
        description: "(DDD Entity) - Reference to an external verification source (e.g. for registered address/location verification) Directory ||\r\n|"
        properties:
          DirectoryVersion:
              type: string
              description: ''
              format: Number
          DirectoryConfiguration:
              type: string
              description: ''
              format: String
          DirectoryValidPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          DirectoryStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: '(DDD Entity) -  '
    Service:
        type: object
        description: "(DDD Entity) - Reference to an external verification service (e.g. to perform background verification checks) Service ||\r\n|"
        properties:
          ServiceName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) - The name of service.  '
          ServiceDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - A detailed explanation or commentary of service '
          ServiceType:
              $ref: '#/components/schemas/Servicetypevalues'
              format: Servicetypevalues
              description: ''
          ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) - The identifier of service. '
          ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                (DDD Entity) - A characteristic of service which refers to the lifecycle of
                service (e.g., initiated, active, de-active, etc.)  
          ServiceFeature:
              $ref: '#/components/schemas/Feature'
              format: Feature
              description: >-
                (DDD Entity) - A characteristic of service which refers 1) mainly to the
                function or condition of service. 2) to non-functional features
                like quality and security 
    Servicetypevalues:
        type: object
        description: "(DDD Entity) - Reference to an external verification service (e.g. to perform background verification checks) Service ||\r\n|"
        properties:
          Servicetypevalues:
              enum:
                  -  ITService
                  -  AdministrativeService
                  -  SystemService
                  -  FinancialService
                  -  InformationService
                  -  BusinessService
              format: Servicetypevalues
              type: string
              description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - "
    Feature:
        type: object
        description: >-
          (DDD Entity) - A characteristic of service which refers 1) mainly to the function
          or condition of service. 2) to non-functional features like quality
          and security Feature 
        properties:
          FeatureType:
              $ref: '#/components/schemas/Featuretypevalues'
              format: Featuretypevalues
              description: ''
          FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
          FeatureName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: '(DDD Entity) -  '
          FeatureDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Featuretypevalues:
        type: object
        description: >-
          (DDD Entity) - A characteristic of service which refers 1) mainly to the function
          or condition of service. 2) to non-functional features like quality
          and security Feature 
        properties:
          Featuretypevalues:
              enum:
                  -  FeeFeature
                  -  InterestFeature
                  -  WithdrawalFeature
                  -  DepositFeature
                  -  SweepFeature
                  -  LienFeature
                  -  PaymentFeature
                  -  RepaymentFeature
                  -  LimitFeature
                  -  OverdraftFeature
                  -  StatementFeature
                  -  CurrencyExchangeFeature
                  -  PriceFeature
              format: Featuretypevalues
              type: string
              description: ">\r\n* `FeeFeature` - This refers to the functionality in a system or platform that manages, calculates, or displays fees associated with specific transactions or services.\r\n* `InterestFeature` - This feature calculates and tracks interest earnings or charges on accounts, loans, or investments over time.\r\n* `WithdrawalFeature` - The withdraw feature typically refers to an option or functionality that allows users to retrieve or remove something from a system or platform.\r\n* `DepositFeature` - This refers to a functionality that allows users to add funds to an account or system, often by transferring money from another source.\r\n* `SweepFeature` - \r\n* `LienFeature` - \r\n* `PaymentFeature` - This refers to the functionality that facilitates or tracks the transfer of funds for a purchase or settlement of dues.\r\n* `RepaymentFeature` - This feature facilitates or manages the process of paying back borrowed funds, such as loans, credit card balances, or advances.\r\n* `LimitFeature` - This feature sets, monitors, or enforces restrictions on the maximum amount that can be accessed, spent, or transacted within a system.\r\n* `OverdraftFeature` - This functionality allows users to withdraw more money than what is available in their account balance, often up to a predefined limit.\r\n* `StatementFeature` - The statement feature refers to a functionality in banking, finance, or digital platforms that provides users with a detailed record of their transactions or activities over a specific period.\r\n* `CurrencyExchangeFeature` - This feature enables users to convert funds from one currency to another at prevailing exchange rates, often within financial or payment platforms.\r\n* `PriceFeature` - This feature involves displaying or managing the price of goods, services, or financial instruments within a platform."
    Instruction:
        type: object
        description: "(DDD Entity) - Result from the qualification service request Instruction ||\r\n|"
        properties:
          InstructionDate:
              $ref: '#/components/schemas/Instructiondatetime'
              format: Instructiondatetime
              description: '(DDD Entity) -  '
          InstructionStatus:
              $ref: '#/components/schemas/Instructionstatus'
              format: Instructionstatus
              description: >-
                (DDD Entity) - A characteristic of instruction which refers to the
                LifecycleStatus of instruction (e.g., requested, executed,
                fulfilled, etc.);  
          InstructionIdentifier:
              $ref: '#/components/schemas/Instructionidentification'
              format: Instructionidentification
              description: >-
                (DDD Entity) - An identifier that allows to uniquely refer to an instance
                of an Instruction.
                 
          InstructionType:
              $ref: '#/components/schemas/Instructiontypevalues'
              format: Instructiontypevalues
              description: ''
          InstructionResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          InstructionDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          InstructionLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: '(DDD Entity) -  '
          InstructionPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Instructiondatetime:
        type: object
        description: '(DDD Entity) -  Instructiondatetime '
        properties:
          InstructionDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          InstructionDateType:
              $ref: '#/components/schemas/Instructiondatetimetypevalues'
              format: Instructiondatetimetypevalues
              description: ''
    Instructiondatetimetypevalues:
        type: object
        description: '(DDD Entity) -  Instructiondatetime '
        properties:
          Instructiondatetimetypevalues:
              enum:
                  -  DueDate
                  -  ExecutionDate
                  -  FulfillmentDate
              format: Instructiondatetimetypevalues
              type: string
              description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - "
    Instructionstatus:
        type: object
        description: >-
          (DDD Entity) - A characteristic of instruction which refers to the
          LifecycleStatus of instruction (e.g., requested, executed, fulfilled,
          etc.);  Instructionstatus 
        properties:
          InstructionStatusType:
              $ref: '#/components/schemas/Instructionstatustypevalues'
              format: Instructionstatustypevalues
              description: ''
          InstructionStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: '(DDD Entity) -  '
    Instructionstatustypevalues:
        type: object
        description: >-
          (DDD Entity) - A characteristic of instruction which refers to the
          LifecycleStatus of instruction (e.g., requested, executed, fulfilled,
          etc.);  Instructionstatus 
        properties:
          Instructionstatustypevalues:
              enum:
                  -  Pendingprocessing
                  -  Acknowledgedaccepted
                  -  Rejected
                  -  Accepted
                  -  Completed
                  -  Notreceived
                  -  Cancelled
                  -  Beingcancelled
                  -  Receivedbyissuerorregistrar
                  -  Pending
                  -  Standinginstruction
                  -  Queued
                  -  Cancelledbysubcustodian
                  -  Forwarded
              format: Instructionstatustypevalues
              type: string
              description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain."
    Instructionidentification:
        type: object
        description: >-
          (DDD Entity) - An identifier that allows to uniquely refer to an instance of an
          Instruction.
           Instructionidentification 
        properties:
          InstructionIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
          InstructionIdentificationType:
              $ref: '#/components/schemas/Instructionidentificationtypevalues'
              format: Instructionidentificationtypevalues
              description: ''
    Instructionidentificationtypevalues:
        type: object
        description: >-
          (DDD Entity) - An identifier that allows to uniquely refer to an instance of an
          Instruction.
           Instructionidentification 
        properties:
          Instructionidentificationtypevalues:
              enum:
                  -  OrderNumber
                  -  InstructionNumber
              format: Instructionidentificationtypevalues
              type: string
              description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - "
    Instructiontypevalues:
        type: object
        description: "(DDD Entity) - Result from the qualification service request Instruction ||\r\n|"
        properties:
          Instructiontypevalues:
              enum:
                  -  PaymentInstruction
                  -  DeliveryOrder
                  -  InformationRequest
                  -  ExchangeInstruction
                  -  AllocationInstruction
                  -  MaintenanceInstruction
              format: Instructiontypevalues
              type: string
              description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - "
    DocumentDirectoryEntry:
        type: object
        description: "(DDD Entity) - Reference to documents used for authentication DocumentDirectoryEntry ||\r\n|"
        properties:
          DocumentDirectoryEntryIdentification:
              type: string
              description: ''
              format: String
    RetrieveQualificationResponse:
        type: object
        description: ''
        properties:
          QualificationType:
              $ref: '#/components/schemas/Assessmenttypevalues'
              format: Assessmenttypevalues
              description: "||\r\n|"
          PublicDirectoryReference:
              $ref: '#/components/schemas/Directory'
              format: Directory
              description: "||\r\n|"
          SpecialistAgencyServiceReference:
              $ref: '#/components/schemas/Service'
              format: Service
              description: "||\r\n|"
          QualificationTaskRecord:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          QualificationTaskDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SpecialistAgencyRegulatorServiceRequestResult:
              $ref: '#/components/schemas/Instruction'
              format: Instruction
              description: "||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
          QualificationTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          QualificationTaskResult:
              $ref: '#/components/schemas/Assessment'
              format: Assessment
              description: >-
                Assessment|Assessment
                (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
                BM ()
    RetrieveQualification:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    UpdateDocumentationRequest:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Describes documents that need to be available and evaluated ||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Describes and records timing required and actual for obtaining and evaluating documents ||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Reference to specific documents used in the life-cycle check ||\r\n|"
    UpdateDocumentationResponse:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
    UpdateDocumentation:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    ExecuteDocumentationRequest:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Describes documents that need to be available and evaluated ||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Describes and records timing required and actual for obtaining and evaluating documents ||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Reference to specific documents used in the life-cycle check ||\r\n|"
    ExecuteDocumentationResponse:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
    ExecuteDocumentation:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RequestDocumentationRequest:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Describes documents that need to be available and evaluated ||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Describes and records timing required and actual for obtaining and evaluating documents ||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Reference to specific documents used in the life-cycle check ||\r\n|"
    RequestDocumentationResponse:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
    RequestDocumentation:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RetrieveDocumentationRequest:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Describes documents that need to be available and evaluated ||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "(DDD Entity) - Describes and records timing required and actual for obtaining and evaluating documents ||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Reference to specific documents used in the life-cycle check ||\r\n|"
    RetrieveDocumentationResponse:
        type: object
        description: ''
        properties:
          PartyLife-cycleRequiredDocumentation:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
          PartyLife-cycleDocumentSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
    RetrieveDocumentation:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    UpdatePrecedentsRequest:
        type: object
        description: ''
        properties:
          PrecedentType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of party property tracked (e.g. residential status, marital status, military, in a disaster location, etc.) ||\r\n|"
          CustomerPrecedentReference:
              $ref: '#/components/schemas/PartyPrecedent'
              format: PartyPrecedent
              description: "(DDD Entity) - Reference to the tracked value ||\r\n|"
          CustomerPrecedentValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: "(DDD Entity) - Current (and historical) value of the precedent ||\r\n|"
          CustomerPrecedentValueDate:
              $ref: '#/components/schemas/ISODate'
              format: ISODate
              description: >-
                ISODate|ISODate
                (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
                BM ()
    PartyPrecedent:
        type: object
        description: "(DDD Entity) - Reference to the tracked value PartyPrecedent ||\r\n|"
        properties:
          PrecedentType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - e.g. residential status, marital status, military, in a
                disaster location, etc. 
          PrecedentValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: '(DDD Entity) -  '
          PrecedentValueDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
    UpdatePrecedentsResponse:
        type: object
        description: ''
        properties:
          PrecedentType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentReference:
              $ref: '#/components/schemas/PartyPrecedent'
              format: PartyPrecedent
              description: "||\r\n|"
          CustomerPrecedentValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: "||\r\n|"
          CustomerPrecedentValueDate:
              $ref: '#/components/schemas/ISODate'
              format: ISODate
              description: >-
                ISODate|ISODate
                (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
                BM ()
    UpdatePrecedents:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RetrievePrecedentsRequest:
        type: object
        description: ''
        properties:
          PrecedentType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of party property tracked (e.g. residential status, marital status, military, in a disaster location, etc.) ||\r\n|"
          CustomerPrecedentReference:
              $ref: '#/components/schemas/PartyPrecedent'
              format: PartyPrecedent
              description: "(DDD Entity) - Reference to the tracked value ||\r\n|"
          CustomerPrecedentValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: "(DDD Entity) - Current (and historical) value of the precedent ||\r\n|"
          CustomerPrecedentValueDate:
              $ref: '#/components/schemas/ISODate'
              format: ISODate
              description: >-
                ISODate|ISODate
                (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
                BM ()
    RetrievePrecedentsResponse:
        type: object
        description: ''
        properties:
          PrecedentType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentReference:
              $ref: '#/components/schemas/PartyPrecedent'
              format: PartyPrecedent
              description: "||\r\n|"
          CustomerPrecedentValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: "||\r\n|"
          CustomerPrecedentValueDate:
              $ref: '#/components/schemas/ISODate'
              format: ISODate
              description: >-
                ISODate|ISODate
                (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
                BM ()
    RetrievePrecedents:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    RetrieveIdentityProofingRequest:
        type: object
        description: ''
        properties:
          IdentityProofingType:
              $ref: '#/components/schemas/Verificationtypevalues'
              format: Verificationtypevalues
              description: "||\r\n|"
          PublicDirectoryReference:
              $ref: '#/components/schemas/Directory'
              format: Directory
              description: "(DDD Entity) - Reference to an external verification source (e.g. for registered address/location verification) ||\r\n|"
          SpecialistAgencyServiceReference:
              $ref: '#/components/schemas/Service'
              format: Service
              description: "(DDD Entity) - Reference to an external verification service (e.g. to perform background verification checks) ||\r\n|"
          IdentityProofingTaskRecord:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "(DDD Entity) - The record of a specific verification task ||\r\n|"
          IdentityProofingTaskDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Description of the verification routine ||\r\n|"
          SpecialistAgencyServiceRequestResult:
              $ref: '#/components/schemas/Instruction'
              format: Instruction
              description: "(DDD Entity) - Result from the verification service request ||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "(DDD Entity) - Reference to documents used for verification ||\r\n|"
          IdentityProofingTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "(DDD Entity) - Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
          IdentityProofingTaskResult:
              $ref: '#/components/schemas/Verification'
              format: Verification
              description: "(DDD Entity) - The outcome of the verification routine ||\r\n|"
          IdentityProofingReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    Verificationtypevalues:
        type: object
        description: "(DDD Entity) - The outcome of the verification routine Verification ||\r\n|"
        properties:
          Verificationtypevalues:
              enum:
                  -  DocumentVerification
              format: Verificationtypevalues
              type: string
              description: ">\r\n* `IdentityVerification/Proofing` - Identity proofing, also known as identity verification or identity authentication, is the process of confirming that an individual's claimed identity is accurate and valid.\r\n* `DocumentVerification` - Document verification is a process of verifying the authenticity and validity of documents presented by individuals or entities."
    Verification:
        type: object
        description: "(DDD Entity) - The outcome of the verification routine Verification ||\r\n|"
        properties:
          VerificationType:
              $ref: '#/components/schemas/Verificationtypevalues'
              format: Verificationtypevalues
              description: ''
          VerificationEtity:
              $ref: '#/components/schemas/Verificationentitytypevalues'
              format: Verificationentitytypevalues
              description: ''
          VerificationResult:
              $ref: '#/components/schemas/Verificationresulttypevalues'
              format: Verificationresulttypevalues
              description: ''
          VerificationDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: >-
                (DDD Entity) - Date and time when the verification was performed.
                (ISO20022) 
          VerificationReason:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Reason to perform the verification. (ISO20022) '
          VerificationValidityEndDate:
              $ref: '#/components/schemas/Date'
              format: Date
              description: >-
                (DDD Entity) - Contains end date of the verification that has been
                performed. (ISO20022) 
          VerificationValidityEndTime:
              $ref: '#/components/schemas/Time'
              format: Time
              description: >-
                (DDD Entity) - Contains end time of the verification that has been
                performed.  
    Verificationentitytypevalues:
        type: object
        description: "(DDD Entity) - The outcome of the verification routine Verification ||\r\n|"
        properties:
          Verificationentitytypevalues:
              enum:
                  -  Acquirer
                  -  Agent
                  -  Issuer
                  -  Acceptor
                  -  Othernational
                  -  Otherprivate
                  -  Terminal
                  -  Cardapplication
                  -  Acceptancedevice
              format: Verificationentitytypevalues
              type: string
              description: ">\r\n* `Acquirer` - Acquirer of the transaction.\r\n* `Agent` - Entity providing card payment processing services acting as an intermediary between (or on behalf of) an acquirer and an issuer.\r\n* `Issuer` - Card issuer.\r\n* `Acceptor` - Acceptor (for example signature verification by the attendant).\r\n* `Othernational` - Other type of authentication entity defined at national level.\r\n* `Otherprivate` - Other type of authentication entity defined at private level.\r\n* `Terminal` - Secure application in the terminal.\r\n* `Cardapplication` - Application in the smart card.\r\n* `Acceptancedevice` - Type of Device to accept payment"
    Verificationresulttypevalues:
        type: object
        description: "(DDD Entity) - The outcome of the verification routine Verification ||\r\n|"
        properties:
          Verificationresulttypevalues:
              enum:
                  -  Technicalerror
                  -  Successful
                  -  Partialmatch
                  -  Notperformed
                  -  Missing
                  -  Failed
                  -  Furtheraction
                  -  Othernational
                  -  Otherprivate
                  -  Notsupported
              format: Verificationresulttypevalues
              type: string
              description: ">\r\n* `Technicalerror` - Device or entity to perform the verification was unavailable.\r\n* `Successful` - Verification was successful.\r\n* `Partialmatch` - Verification was partially successful.\r\n* `Notperformed` - Verification has not been performed.\r\n* `Missing` - Information required to perform the verification was missing.\r\n* `Failed` - Verification failed.\r\n* `Furtheraction` - Further action required.\r\n* `Othernational` - Other result of verification defined at national level.\r\n* `Otherprivate` - Other result of verification defined at private level.\r\n* `Notsupported` - Not support the verification type"
    Date:
        type: object
        description: >-
          (DDD Entity) - Contains end date of the verification that has been performed.
          (ISO20022) Date 
        properties:
          DateContent:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Time:
        type: object
        description: >-
          (DDD Entity) - Contains end time of the verification that has been performed. 
          Time 
        properties:
          Time:
              type: string
              description: ''
              format: DataType
    RetrieveIdentityProofingResponse:
        type: object
        description: ''
        properties:
          IdentityProofingType:
              $ref: '#/components/schemas/Verificationtypevalues'
              format: Verificationtypevalues
              description: "||\r\n|"
          PublicDirectoryReference:
              $ref: '#/components/schemas/Directory'
              format: Directory
              description: "||\r\n|"
          SpecialistAgencyServiceReference:
              $ref: '#/components/schemas/Service'
              format: Service
              description: "||\r\n|"
          IdentityProofingTaskRecord:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          IdentityProofingTaskDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          SpecialistAgencyServiceRequestResult:
              $ref: '#/components/schemas/Instruction'
              format: Instruction
              description: "||\r\n|"
          DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              format: DocumentDirectoryEntry
              description: "||\r\n|"
          IdentityProofingTaskWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          IdentityProofingTaskResult:
              $ref: '#/components/schemas/Verification'
              format: Verification
              description: "||\r\n|"
          IdentityProofingReference:
              $ref: '#/components/schemas/GenericIdentification'
              format: GenericIdentification
              description: >-
                GenericIdentification|GenericIdentification
                (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
                BM ()
    RetrieveIdentityProofing:
        type: object
        description: '(DDD Entity) - '
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: >-
                Party|Party
                (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
                ()
          PartyRelationshipType:
              $ref: '#/components/schemas/Party_Partyrelationshiptypevalues'
              format: Party_Partyrelationshiptypevalues
              description: "||\r\n|"
          PartyLife-cycleMaintenanceSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTask:
              $ref: '#/components/schemas/Task'
              format: Task
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          PartyLife-cycleMaintenanceWorkProducts:
              $ref: '#/components/schemas/Workproduct'
              format: Workproduct
              description: "||\r\n|"
          PartyLife-cycleMaintenanceTaskResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerPrecedentProfileUpdateLog:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          PartyRelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: >-
                Status |Status 
                (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
                BM ()
          PartyRelationshipLifecyclePhase:
              $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
              format: PartyRelationshipLifecyclePhase
              description: "||\r\n|"
    HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
    Party:
        type: object
        description: >-
          (DDD Entity) - Reference to the legal entity (typically the customer) Party|Party
          (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM
          ()
        properties:
          ContactPoint:
              type: string
              format: ContactPoint
              description: >-
                (DDD Entity) - Number, physical or virtual address, used for
                communication. 
          Identification:
              type: string
              format: PartyIdentificationInformation
              description: '(DDD Entity) - Specific identification assigned to a party. '
          MoneyLaunderingCheck:
              type: string
              format: MoneyLaunderingCheckCode
              description: >-
                (DDD Entity) - Status of an identity check to prevent money laundering.
                This includes the counter-terrorism check. 
          TaxationConditions:
              type: string
              format: Tax
              description: >-
                (DDD Entity) - Taxation parameters which apply to an individual person or
                to an organisation. 
          Domicile:
              type: string
              format: Location
              description: >-
                (DDD Entity) - Location in which a person is permanently domiciled (the
                place of a person's permanent home). 
          Residence:
              type: string
              format: Location
              description: >-
                (DDD Entity) - Location from which the affairs of a company are directed or
                location in which a person resides (the place of a person's
                home). 
          PowerOfAttorney:
              type: string
              format: PowerOfAttorney
              description: '(DDD Entity) - Power of attorney which is held by the party. '
          Location:
              type: string
              format: Location
              description: '(DDD Entity) - Location of the taxable party. '
          CloseLinkSecurity:
              type: string
              format: Security
              description: '(DDD Entity) - Security for which a close link with a party is identified. '
          CreditQuality:
              type: string
              format: CreditQualityCode
              description: '(DDD Entity) - Credit quality for the clearing member. '
          ShareholdingType:
              type: string
              format: ShareholdingTypeCode
              description: '(DDD Entity) - Specifies the type of shareholding. '
    Status:
        type: object
        description: >-
          (DDD Entity) - The state of relationship Status |Status 
          (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022
          BM ()
        properties:
          StatusReason:
              type: string
              format: StatusReason
              description: '(DDD Entity) - Specifies the reasons for the status. '
          StatusDateTime:
              type: string
              format: ISODateTime
              description: '(DDD Entity) - Date and time at which the status was assigned. '
          ValidityTime:
              type: string
              format: DateTimePeriod
              description: '(DDD Entity) - Period of time during which the status is valid. '
          StatusDescription:
              type: string
              format: Max350Text
              description: '(DDD Entity) - Specifies the state or the condition. '
          InstructionProcessingStatus:
              type: string
              format: StatusCode
              description: '(DDD Entity) - Status of the processing of an instruction. '
          PartyRole:
              type: string
              format: InvestigationPartyRole
              description: >-
                (DDD Entity) - Role played by a party in the context of assigning a
                status. 
          SettlementStatus:
              type: string
              format: SecuritiesSettlementStatusCode
              description: '(DDD Entity) - Status of settlement of a transaction. '
          CancellationProcessingStatus:
              type: string
              format: CancellationProcessingStatusCode
              description: '(DDD Entity) - Specifies the status of a cancellation request. '
          TransactionProcessingStatus:
              type: string
              format: InstructionProcessingStatusCode
              description: >-
                (DDD Entity) - Status of processing of a transaction at account servicer
                level. 
          ModificationProcessingStatus:
              type: string
              format: ModificationProcessingStatusCode
              description: '(DDD Entity) - Provides the status of a modification request. '
    Assessment:
        type: object
        description: >-
          (DDD Entity) - The outcome of the qualification workstep Assessment|Assessment
          (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
          BM ()
        properties:
          AssessmentType:
              type: string
              format: POIComponentAssessmentCode
              description: '(DDD Entity) - Type of assessment. '
          System:
              type: string
              format: System
              description: '(DDD Entity) - System for which an assessment is produced. '
          ExpiryDate:
              type: string
              format: ISODateTime
              description: '(DDD Entity) - Date when the assessment expires. '
          DeliveryDate:
              type: string
              format: ISODateTime
              description: '(DDD Entity) - Date when the assessment document was delivered. '
    ISODate:
        type: string
        format: ''
        description: >-
          (DDD Entity) - A particular point in the progression of time in a calendar year
          expressed in the YYYY-MM-DD format. This representation is defined in
          "XML Schema Part 2: Datatypes Second Edition W3C Recommendation 28
          October 2004" which is aligned with ISO 8601.
    GenericIdentification:
        type: object
        description: >-
          (DDD Entity) - A unique reference refers to an instance of BQ
          GenericIdentification|GenericIdentification
          (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
          BM ()
        properties:
          Identification:
              type: string
              format: Max35Text
              description: >-
                (DDD Entity) - Name or number assigned by an entity to enable recognition
                of that entity, for example account identifier, identification
                assigned by a provider to identify its customers. 
          IdentificationForContactPoint:
              type: string
              format: ContactPoint
              description: >-
                (DDD Entity) - Contact point which uses a generic identification as
                identification. 
          IdentificationForAccount:
              type: string
              format: AccountIdentification
              description: >-
                (DDD Entity) - Account Identification which uses a generic identification
                as proprietary identification. 
          RelatedPartyIdentification:
              type: string
              format: PartyIdentificationInformation
              description: '(DDD Entity) - Party identified with a scheme. '
          IssueDate:
              type: string
              format: ISODate
              description: '(DDD Entity) - Date at which the identification was issued. '
          ExpiryDate:
              type: string
              format: ISODate
              description: '(DDD Entity) - Date at which the identification expires. '
          Scheme:
              type: string
              format: Scheme
              description: >-
                (DDD Entity) - Information regarding an enumerated code list and its
                owner. 
          IdentificationForSecuritiesCertificate:
              type: string
              format: SecuritiesCertificate
              description: >-
                (DDD Entity) - Securities certificate which uses a generic identification
                as certificate number. 
          IdentificationForLot:
              type: string
              format: LotBreakdown
              description: >-
                (DDD Entity) - Lot breakdown which uses a generic identification as lot
                number. 
          PartyRole:
              type: string
              format: InformationPartyRole
              description: '(DDD Entity) - Entity that assigns the identification. '
          IdentificationForCashProceedsIncome:
              type: string
              format: CashProceedsDefinition
              description: >-
                (DDD Entity) - Cash proceeds definition which uses a generic identification
                as type of income. 
          RelatedStatusReason:
              type: string
              format: StatusReason
              description: >-
                (DDD Entity) - Specifies the status reason for which a data source scheme
                is specified. 
          IdentificationForBankTransaction:
              type: string
              format: BankTransaction
              description: >-
                (DDD Entity) - Bank transaction which uses a generic identification as
                proprietary identification. 
          IdentificationForAccountCostReferencePattern:
              type: string
              format: AccountIdentification
              description: >-
                (DDD Entity) - Account identification for which a cost reference pattern is
                provided. 
          Account:
              type: string
              format: Account
              description: '(DDD Entity) - Account for which a type is specified '
          RelatedSystemIdentification:
              type: string
              format: SystemIdentification
              description: '(DDD Entity) - System identification which uses a generic identification. '
          IdentificationForInterestName:
              type: string
              format: Interest
              description: '(DDD Entity) - Interest which uses a generic identification as name. '
          RelatedCashAccountService:
              type: string
              format: CashAccountService
              description: '(DDD Entity) - Cash account service identified in a generic way. '
          IdentificationForInvestmentFundClass:
              type: string
              format: InvestmentFundClass
              description: >-
                (DDD Entity) - Investment fund class which uses a generic identification as
                fund classification. 
          IdentifiedLocation:
              type: string
              format: Location
              description: '(DDD Entity) - Location for which an identification is provided. '
          RelatedSecuritiesIdentification:
              type: string
              format: SecuritiesIdentification
              description: >-
                (DDD Entity) - Securities identification for which generic identification
                elements and scheme are provided. 
          IdentifiedDocument:
              type: string
              format: Document
              description: '(DDD Entity) - Document for which an identification is provided. '
          RelatedPurchaseOrder:
              type: string
              format: PurchaseOrder
              description: '(DDD Entity) - Purchase order for which an identification is provided. '
          RelatedCertificate:
              type: string
              format: RegisteredContract
              description: >-
                (DDD Entity) - Related certificate against which all transactions in the
                scope of the regulatory requirements are registered. 
  responses:
    InitiatePartyRelationshipAdministrativePlanResponse:
        description: PartyRelationshipAdministrativePlanInitiate
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/InitiatePartyRelationshipAdministrativePlanResponse
    UpdatePartyRelationshipAdministrativePlanResponse:
        description: PartyRelationshipAdministrativePlanUpdate
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdatePartyRelationshipAdministrativePlanResponse
    ControlPartyRelationshipAdministrativePlanResponse:
        description: PartyRelationshipAdministrativePlanControl
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ControlPartyRelationshipAdministrativePlanResponse
    ExchangePartyRelationshipAdministrativePlanResponse:
        description: PartyRelationshipAdministrativePlanExchange
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExchangePartyRelationshipAdministrativePlanResponse
    ExecutePartyRelationshipAdministrativePlanResponse:
        description: PartyRelationshipAdministrativePlanExecute
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecutePartyRelationshipAdministrativePlanResponse
    RequestPartyRelationshipAdministrativePlanResponse:
        description: PartyRelationshipAdministrativePlanRequest
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestPartyRelationshipAdministrativePlanResponse
    RetrievePartyRelationshipAdministrativePlanResponse:
        description: PartyRelationshipAdministrativePlanRetrieve
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RetrievePartyRelationshipAdministrativePlanResponse
    RetrieveQualificationResponse:
        description: QualificationRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveQualificationResponse'
    UpdateDocumentationResponse:
        description: DocumentationUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDocumentationResponse'
    ExecuteDocumentationResponse:
        description: DocumentationExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteDocumentationResponse'
    RequestDocumentationResponse:
        description: DocumentationRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestDocumentationResponse'
    RetrieveDocumentationResponse:
        description: DocumentationRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDocumentationResponse'
    UpdatePrecedentsResponse:
        description: PrecedentsUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdatePrecedentsResponse'
    RetrievePrecedentsResponse:
        description: PrecedentsRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrievePrecedentsResponse'
    RetrieveIdentityProofingResponse:
        description: IdentityProofingRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveIdentityProofingResponse'
    BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
  parameters:
    partylifecyclemanagementid:
        name: partylifecyclemanagementid
        in: path
        required: true
        style: simple
        schema:
          type: string
    qualificationid:
        name: qualificationid
        in: path
        required: true
        style: simple
        schema:
          type: string
    documentationid:
        name: documentationid
        in: path
        required: true
        style: simple
        schema:
          type: string
    precedentsid:
        name: precedentsid
        in: path
        required: true
        style: simple
        schema:
          type: string
    identityproofingid:
        name: identityproofingid
        in: path
        required: true
        style: simple
        schema:
          type: string
  requestBodies:
    InitiatePartyRelationshipAdministrativePlanRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/InitiatePartyRelationshipAdministrativePlanRequest
        required: true
    UpdatePartyRelationshipAdministrativePlanRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdatePartyRelationshipAdministrativePlanRequest
        required: true
    ControlPartyRelationshipAdministrativePlanRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ControlPartyRelationshipAdministrativePlanRequest
        required: true
    ExchangePartyRelationshipAdministrativePlanRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExchangePartyRelationshipAdministrativePlanRequest
        required: true
    ExecutePartyRelationshipAdministrativePlanRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecutePartyRelationshipAdministrativePlanRequest
        required: true
    RequestPartyRelationshipAdministrativePlanRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestPartyRelationshipAdministrativePlanRequest
        required: true
    RetrievePartyRelationshipAdministrativePlanRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RetrievePartyRelationshipAdministrativePlanRequest
        required: true
    RetrieveQualificationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveQualificationRequest'
        required: true
    UpdateDocumentationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDocumentationRequest'
        required: true
    ExecuteDocumentationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteDocumentationRequest'
        required: true
    RequestDocumentationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestDocumentationRequest'
        required: true
    RetrieveDocumentationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDocumentationRequest'
        required: true
    UpdatePrecedentsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdatePrecedentsRequest'
        required: true
    RetrievePrecedentsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrievePrecedentsRequest'
        required: true
    RetrieveIdentityProofingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveIdentityProofingRequest'
        required: true
