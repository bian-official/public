openapi: 3.0.1
info:
  title: Customer Event History
  description: >-
    BIAN Service Domain (expanded with ISO200022) | Packaged Business Capability
    (PBC) | DDD Bounded Context | This service domain captures, classifies and
    stores relationship, servicing and product fulfillment related customer
    events. In addition to servicing and product transaction details, the log
    can capture life/relationship events that are revealed during customer
    exchanges
  version: 13.0.0
servers:
  - url: ' https://virtserver.swaggerhub.com/BIAN-3/CustomerEventHistory/12.0.1'
paths:
  '/CustomerEventHistory/Initiate':
      post:
        tags:
          - CR (DDD Aggregate) - CustomerEventLog
        summary: (DDD  Service) InCR Initiate customer event history tracking for a customer
        description: (DDD  Service) InCR Initiate customer event history tracking for a customer
        operationId: CustomerEventLog/Initiate
        requestBody:
          $ref: '#/components/requestBodies/InitiateCustomerEventLogRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Update':
      put:
        tags:
          - CR (DDD Aggregate) - CustomerEventLog
        summary: (DDD  Service) UpCR Update details about the log
        description: (DDD  Service) UpCR Update details about the log
        operationId: CustomerEventLog/Update
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateCustomerEventLogRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Control':
      put:
        tags:
          - CR (DDD Aggregate) - CustomerEventLog
        summary: (DDD  Service) CoCR Control event tracking for the customer (e.g. suspend)
        description: (DDD  Service) CoCR Control event tracking for the customer (e.g. suspend)
        operationId: CustomerEventLog/Control
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
        requestBody:
          $ref: '#/components/requestBodies/ControlCustomerEventLogRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Retrieve':
      get:
        tags:
          - CR (DDD Aggregate) - CustomerEventLog
        summary: (DDD  Service) ReCR Retrieve details about the customer event log
        description: (DDD  Service) ReCR Retrieve details about the customer event log
        operationId: CustomerEventLog/Retrieve
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveCustomerEventLogResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Relationship/{relationshipid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Relationship
        summary: (DDD  Service) UpBQ Update captured relationship management event details
        description: (DDD  Service) UpBQ Update captured relationship management event details
        operationId: Relationship/Update
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/relationshipid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateRelationshipRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateRelationshipResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Relationship/{relationshipid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Relationship
        summary: (DDD  Service) CaBQ Capture relationship management event details
        description: (DDD  Service) CaBQ Capture relationship management event details
        operationId: Relationship/Capture
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/relationshipid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureRelationshipRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureRelationshipResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Relationship/{relationshipid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Relationship
        summary: (DDD  Service) ReBQ Retrieve relationship management event details
        description: (DDD  Service) ReBQ Retrieve relationship management event details
        operationId: Relationship/Retrieve
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/relationshipid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveRelationshipResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Sales/{salesid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Sales
        summary: (DDD  Service) UpBQ Update captured sales event details
        description: (DDD  Service) UpBQ Update captured sales event details
        operationId: Sales/Update
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/salesid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSalesRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateSalesResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Sales/{salesid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Sales
        summary: (DDD  Service) CaBQ Capture sales event details
        description: (DDD  Service) CaBQ Capture sales event details
        operationId: Sales/Capture
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/salesid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureSalesRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureSalesResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Sales/{salesid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Sales
        summary: (DDD  Service) ReBQ Retrieve sales event details
        description: (DDD  Service) ReBQ Retrieve sales event details
        operationId: Sales/Retrieve
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/salesid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveSalesResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Servicing/{servicingid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Servicing
        summary: (DDD  Service) UpBQ Update captured servicing event details
        description: (DDD  Service) UpBQ Update captured servicing event details
        operationId: Servicing/Update
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/servicingid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateServicingRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateServicingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Servicing/{servicingid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Servicing
        summary: (DDD  Service) CaBQ Capture servicing event details
        description: (DDD  Service) CaBQ Capture servicing event details
        operationId: Servicing/Capture
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/servicingid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureServicingRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureServicingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Servicing/{servicingid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Servicing
        summary: (DDD  Service) ReBQ Retrieve servicing event details
        description: (DDD  Service) ReBQ Retrieve servicing event details
        operationId: Servicing/Retrieve
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/servicingid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveServicingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/ProductProcessing/{productprocessingid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - ProductProcessing
        summary: (DDD  Service) UpBQ Update captured product processing event details
        description: (DDD  Service) UpBQ Update captured product processing event details
        operationId: ProductProcessing/Update
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/productprocessingid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateProductProcessingRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateProductProcessingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/ProductProcessing/{productprocessingid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - ProductProcessing
        summary: (DDD  Service) CaBQ Capture product processing event details
        description: (DDD  Service) CaBQ Capture product processing event details
        operationId: ProductProcessing/Capture
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/productprocessingid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureProductProcessingRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureProductProcessingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/ProductProcessing/{productprocessingid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - ProductProcessing
        summary: (DDD  Service) ReBQ Retrieve product processing event details
        description: (DDD  Service) ReBQ Retrieve product processing event details
        operationId: ProductProcessing/Retrieve
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/productprocessingid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveProductProcessingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Fraud/{fraudid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Fraud
        summary: (DDD  Service) UpBQ Update captured fraud event details
        description: (DDD  Service) UpBQ Update captured fraud event details
        operationId: Fraud/Update
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/fraudid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateFraudRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateFraudResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Fraud/{fraudid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Fraud
        summary: (DDD  Service) CaBQ Capture fraud event details
        description: (DDD  Service) CaBQ Capture fraud event details
        operationId: Fraud/Capture
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/fraudid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureFraudRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureFraudResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Fraud/{fraudid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Fraud
        summary: (DDD  Service) ReBQ Retrieve fraud event details
        description: (DDD  Service) ReBQ Retrieve fraud event details
        operationId: Fraud/Retrieve
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/fraudid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveFraudResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Life/{lifeid}/Update':
      put:
        tags:
          - BQ (DDD Aggregate) - Life
        summary: (DDD  Service) UpBQ Update captured customer life event details
        description: (DDD  Service) UpBQ Update captured customer life event details
        operationId: Life/Update
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/lifeid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateLifeRequest'
        responses:
          '200':
            $ref: '#/components/responses/UpdateLifeResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Life/{lifeid}/Capture':
      put:
        tags:
          - BQ (DDD Aggregate) - Life
        summary: (DDD  Service) CaBQ Capture customer life event details
        description: (DDD  Service) CaBQ Capture customer life event details
        operationId: Life/Capture
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/lifeid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureLifeRequest'
        responses:
          '200':
            $ref: '#/components/responses/CaptureLifeResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
  '/CustomerEventHistory/{customereventhistoryid}/Life/{lifeid}/Retrieve':
      get:
        tags:
          - BQ (DDD Aggregate) - Life
        summary: (DDD  Service) ReBQ Retrieve customer life event details
        description: (DDD  Service) ReBQ Retrieve customer life event details
        operationId: Life/Retrieve
        parameters:
          - $ref: '#/components/parameters/customereventhistoryid'
          - $ref: '#/components/parameters/lifeid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveLifeResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    InitiateCustomerEventLogRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - \r\n "
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    Involvedparty:
        type: object
        description: (DDD Entity) - Reference to the account primary party/owner
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
              format: Party
              description: (DDD Entity) - Reference to the account primary party/owner
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              format: Partyrole
              description: (DDD Entity) - Reference to the account primary party/owner
    Party:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          PartyName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: >-
                (DDD Entity) - Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
                 
          PartyType:
              $ref: '#/components/schemas/Partytypevalues'
              format: Partytypevalues
              description: ''
          PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              format: Partyidentification
              description: '(DDD Entity) -  '
          PartyLegalStructureType:
              $ref: '#/components/schemas/Partylegalstructuretypevalues'
              format: Partylegalstructuretypevalues
              description: ''
    Name:
        type: object
        description: >-
          (DDD Entity) - Name by which a party is known and which is usually used to
          identify that party. (ISO20022)
           Name 
        properties:
          Name:
              type: string
              description: ''
              format: DataType
    Partytypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partytypevalues:
              enum:
                  -  Person
                  -  Organisation
              format: Partytypevalues
              type: string
              description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022"
    Datetime:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          DateTimeContent:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The particular date and time point in the progression of
                time 
          TimeZoneCode:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - The time zone to which the date time refers. '
          DaylightSavingIndicator:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          DateTimeType:
              $ref: '#/components/schemas/Datetimetypevalues'
              format: Datetimetypevalues
              description: ''
          Datetime:
              type: string
              description: ''
              format: DataType
    Text:
        type: object
        description: >-
          (DDD Entity) - The particular date and time point in the progression of time
          Text 
        properties:
          Text:
              type: string
              description: ''
              format: DataType
    Datetimetypevalues:
        type: object
        description: '(DDD Entity) -  Datetime '
        properties:
          Datetimetypevalues:
              enum:
                  -  MaturityDate
                  -  InitiatedDate
                  -  RequestedDate
                  -  ExecutedDate
                  -  OpenDate
                  -  CloseDate
                  -  ExpiryDate
                  -  EffectiveDate
                  -  CreatingDate
                  -  ActivationDate
                  -  DeactivationDate
                  -  BlockingDate
                  -  SendingDate
                  -  ValidFromDate
                  -  ValidToDate
                  -  ReceivingDate
                  -  SigningDate
                  -  DueDate
                  -  ValueDate
                  -  FulfillmentDate
              format: Datetimetypevalues
              type: string
              description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - "
    Partyidentification:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          PartyIdentificationType:
              $ref: '#/components/schemas/Partyidentificationtypevalues'
              format: Partyidentificationtypevalues
              description: ''
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Partyidentificationtypevalues:
        type: object
        description: '(DDD Entity) -  Partyidentification '
        properties:
          Partyidentificationtypevalues:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEI(LegalEntityIdentifier)
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              format: Partyidentificationtypevalues
              type: string
              description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC."
    Identifier:
        type: object
        description: '(DDD Entity) -  Identifier '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: '(DDD Entity) -  '
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: '(DDD Entity) - Entity that assigns and manages the identification. '
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          Identifier:
              type: string
              description: ''
              format: DataType
    Value:
        type: object
        description: '(DDD Entity) -  Value '
        properties:
          Value:
              type: string
              description: ''
              format: DataType
    Partylegalstructuretypevalues:
        type: object
        description: '(DDD Entity) -  Party '
        properties:
          Partylegalstructuretypevalues:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  Sole(SoleTrader)
              format: Partylegalstructuretypevalues
              type: string
              description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - "
    Partyrole:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          PartyRoleName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          PartyInvolvementType:
              $ref: '#/components/schemas/Partyinvolvementtypevalues'
              format: Partyinvolvementtypevalues
              description: ''
    Datetimeperiod:
        type: object
        description: '(DDD Entity) -  Datetimeperiod '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range starts. (ISO20022) '
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the range ends. (ISO20022) '
          Datetimeperiod:
              type: string
              description: ''
              format: DataType
    Partyinvolvementtypevalues:
        type: object
        description: '(DDD Entity) -  Partyrole '
        properties:
          Partyinvolvementtypevalues:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              format: Partyinvolvementtypevalues
              type: string
              description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - "
    Event:
        type: object
        description: "(DDD Entity) - \r\n Event "
        properties:
          EventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          EventDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          EventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          EventSource:
              type: string
              description: ''
              format: Object
          EventLocation:
              $ref: '#/components/schemas/Location'
              format: Location
              description: '(DDD Entity) -  '
          EventAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: '(DDD Entity) -  '
          EventStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: '(DDD Entity) -  '
          EventValue:
              $ref: '#/components/schemas/Value'
              format: Value
              description: '(DDD Entity) -  '
          EventValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          EventIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Status:
        type: object
        description: >-
          (DDD Entity) - The tracked status (e.g. under construction or repair, inhabited,
          vacant). Status 
        properties:
          StatusReason:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Specifies the reasons for the status. '
          StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Date and time at which the status was assigned. '
          StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) - Period of time during which the status is valid. '
          StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: >-
                (DDD Entity) - Party who plays a  specific role in the context of assigning
                a status. 
          Status:
              type: string
              description: ''
              format: DataType
    Geographicalareatypevalues:
        type: object
        description: '(DDD Entity) -  Location '
        properties:
          Geographicalareatypevalues:
              enum:
                  -  Continent
                  -  Country
                  -  State
                  -  District
                  -  Province
                  -  Town
                  -  City
                  -  Region
              format: Geographicalareatypevalues
              type: string
              description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - "
    Address:
        type: object
        description: '(DDD Entity) -  Address '
        properties:
          AddressType:
              $ref: '#/components/schemas/Addresstypevalues'
              format: Addresstypevalues
              description: ''
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: '(DDD Entity) -  '
    Addresstypevalues:
        type: object
        description: '(DDD Entity) -  Address '
        properties:
          Addresstypevalues:
              enum:
                  -  PostalAddress
                  -  GeolocationAddress
                  -  LatitudeAddress
                  -  LongitudeAddress
                  -  ElectronicAddress
              format: Addresstypevalues
              type: string
              description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - "
    Action:
        type: object
        description: '(DDD Entity) -  Action '
        properties:
          ActionType:
              $ref: '#/components/schemas/Actiontypevalues'
              format: Actiontypevalues
              description: ''
    Actiontypevalues:
        type: object
        description: '(DDD Entity) -  Action '
        properties:
          Actiontypevalues:
              enum:
                  -  Initiate
                  -  Execute
                  -  Create
                  -  Transfer
                  -  Pay
                  -  Deliver
                  -  Apply
                  -  Calculate
              format: Actiontypevalues
              type: string
              description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - "
    Log:
        type: object
        description: "(DDD Entity) - \r\n Log "
        properties:
          LogType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          LogPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              format: Datetimeperiod
              description: '(DDD Entity) -  '
          LogDate:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - Key dates associated with the log (e.g. start time). '
          LogIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
    Customereventtypevalues:
        type: object
        description: ''
        properties:
          Customereventtypevalues:
              enum:
                  -  CustomerRelationshipEvent
                  -  CustomerSaleEvent
                  -  CustomerProductEvent
                  -  CustomerFraudEvent
                  -  CustomerLifeEvent
              format: Customereventtypevalues
              type: string
              description: ">\r\n* `CustomerRelationshipEvent` - A Value of Customer Event Type in which events related to the customer relationship are specified. \r\n* `CustomerSaleEvent` - A Value of Customer Event Type in which events related to the customer sale are specified. \n\r\n* `CustomerProductEvent` - A Value of Customer Event Type in which events related to the customer product are specified. \n\r\n* `CustomerFraudEvent` - A Value of Customer Event Type in which events related to the customer fraud are specified. \n\r\n* `CustomerLifeEvent` - A Value of Customer Event Type in which events related to the customer life are specified. \n"
    InitiateCustomerEventLogResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: ''
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    InitiateCustomerEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    UpdateCustomerEventLogRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - \r\n "
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    UpdateCustomerEventLogResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: ''
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    UpdateCustomerEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    ControlCustomerEventLogRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - \r\n "
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    ControlCustomerEventLogResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: ''
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    ControlCustomerEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    RetrieveCustomerEventLogRequest:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Reference to the associated customer (can currently be a person or a company) ||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - \r\n "
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "(DDD Entity) - \r\n "
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    RetrieveCustomerEventLogResponse:
        type: object
        description: ''
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: ''
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: ''
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: ''
    RetrieveCustomerEventLog:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    UpdateRelationshipRequest:
        type: object
        description: ''
        properties:
          CustomerRelationshipEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - \r\n "
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - \r\n "
          CustomerRelationshipEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - \r\n "
          CustomerRelationshipEventAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "(DDD Entity) - \r\n "
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateRelationshipResponse:
        type: object
        description: ''
        properties:
          CustomerRelationshipEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: ''
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: ''
          CustomerRelationshipEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: ''
          CustomerRelationshipEventAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: ''
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateRelationship:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    CaptureRelationshipRequest:
        type: object
        description: ''
        properties:
          CustomerRelationshipEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - \r\n "
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - \r\n "
          CustomerRelationshipEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - \r\n "
          CustomerRelationshipEventAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "(DDD Entity) - \r\n "
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureRelationshipResponse:
        type: object
        description: ''
        properties:
          CustomerRelationshipEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: ''
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: ''
          CustomerRelationshipEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: ''
          CustomerRelationshipEventAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: ''
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureRelationship:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    RetrieveRelationshipRequest:
        type: object
        description: ''
        properties:
          CustomerRelationshipEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - \r\n "
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - \r\n "
          CustomerRelationshipEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - \r\n "
          CustomerRelationshipEventAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: "(DDD Entity) - \r\n "
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveRelationshipResponse:
        type: object
        description: ''
        properties:
          CustomerRelationshipEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: ''
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: ''
          CustomerRelationshipEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: ''
          CustomerRelationshipEventAction:
              $ref: '#/components/schemas/Action'
              format: Action
              description: ''
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveRelationship:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    UpdateSalesRequest:
        type: object
        description: ''
        properties:
          CustomerSalesEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. campaign, unsolicited, solicited, development) ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          ProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttypevalues'
              format: Bankingproducttypevalues
              description: OBExternalProductType1Code| ()|Standard|UK Open Banking ()
          LeadandOpportunityReference:
              $ref: '#/components/schemas/SalesLead'
              format: SalesLead
              description: "(DDD Entity) - Reference to the recorded lead/opportunity if sale progresses ||\r\n|"
          CustomerSalesEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          CommissionAgreementReference:
              $ref: '#/components/schemas/Agreement'
              format: Agreement
              description: >-
                Agreement_x000D_

                |Agreement
                (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    Bankingproducttypevalues:
        type: object
        description: ''
        properties:
          Bankingproducttypevalues:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
              format: Bankingproducttypevalues
              type: string
              description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - "
    SalesLead:
        type: object
        description: "(DDD Entity) - Reference to the recorded lead/opportunity if sale progresses SalesLead ||\r\n|"
        properties:
          LeadOrigin:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The origin of the lead, such as walk-in, solicitation,
                referral etc. 
          LeadDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - A description of lead/opportunity generated by the customer
                campaign 
    UpdateSalesResponse:
        type: object
        description: ''
        properties:
          CustomerSalesEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          ProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttypevalues'
              format: Bankingproducttypevalues
              description: OBExternalProductType1Code| ()|Standard|UK Open Banking ()
          LeadandOpportunityReference:
              $ref: '#/components/schemas/SalesLead'
              format: SalesLead
              description: "||\r\n|"
          CustomerSalesEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CommissionAgreementReference:
              $ref: '#/components/schemas/Agreement'
              format: Agreement
              description: >-
                Agreement_x000D_

                |Agreement
                (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateSales:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    CaptureSalesRequest:
        type: object
        description: ''
        properties:
          CustomerSalesEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. campaign, unsolicited, solicited, development) ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          ProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttypevalues'
              format: Bankingproducttypevalues
              description: OBExternalProductType1Code| ()|Standard|UK Open Banking ()
          LeadandOpportunityReference:
              $ref: '#/components/schemas/SalesLead'
              format: SalesLead
              description: "(DDD Entity) - Reference to the recorded lead/opportunity if sale progresses ||\r\n|"
          CustomerSalesEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          CommissionAgreementReference:
              $ref: '#/components/schemas/Agreement'
              format: Agreement
              description: >-
                Agreement_x000D_

                |Agreement
                (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureSalesResponse:
        type: object
        description: ''
        properties:
          CustomerSalesEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          ProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttypevalues'
              format: Bankingproducttypevalues
              description: OBExternalProductType1Code| ()|Standard|UK Open Banking ()
          LeadandOpportunityReference:
              $ref: '#/components/schemas/SalesLead'
              format: SalesLead
              description: "||\r\n|"
          CustomerSalesEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CommissionAgreementReference:
              $ref: '#/components/schemas/Agreement'
              format: Agreement
              description: >-
                Agreement_x000D_

                |Agreement
                (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureSales:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    RetrieveSalesRequest:
        type: object
        description: ''
        properties:
          CustomerSalesEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. campaign, unsolicited, solicited, development) ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          ProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttypevalues'
              format: Bankingproducttypevalues
              description: OBExternalProductType1Code| ()|Standard|UK Open Banking ()
          LeadandOpportunityReference:
              $ref: '#/components/schemas/SalesLead'
              format: SalesLead
              description: "(DDD Entity) - Reference to the recorded lead/opportunity if sale progresses ||\r\n|"
          CustomerSalesEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          CommissionAgreementReference:
              $ref: '#/components/schemas/Agreement'
              format: Agreement
              description: >-
                Agreement_x000D_

                |Agreement
                (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveSalesResponse:
        type: object
        description: ''
        properties:
          CustomerSalesEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          ProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttypevalues'
              format: Bankingproducttypevalues
              description: OBExternalProductType1Code| ()|Standard|UK Open Banking ()
          LeadandOpportunityReference:
              $ref: '#/components/schemas/SalesLead'
              format: SalesLead
              description: "||\r\n|"
          CustomerSalesEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CommissionAgreementReference:
              $ref: '#/components/schemas/Agreement'
              format: Agreement
              description: >-
                Agreement_x000D_

                |Agreement
                (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveSales:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    UpdateServicingRequest:
        type: object
        description: ''
        properties:
          CustomerServicingEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. self-service, assisted) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          ChannelandDeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: >-
                CustomerDeviceTypeCode|CustomerDeviceTypeCode
                (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022
                BM ()
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The given purpose for the customer servicing action ||\r\n|"
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The captured result of the servicing event ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          CustomerServicingEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CustomerContact:
        type: object
        description: "(DDD Entity) - Reference to a contact event log CustomerContact ||\r\n|"
        properties:
          ContactType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          ContactDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) - The start and end date times for the contact '
          ContactLocation:
              $ref: '#/components/schemas/Location'
              format: Location
              description: '(DDD Entity) -  '
          ContactSchedule:
              $ref: '#/components/schemas/Schedule'
              format: Schedule
              description: '(DDD Entity) - The schedule of past and planned customer contacts '
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The interpreted result of the contact (e.g. completed,
                customer terminated, timed-out) 
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - The reason and or purpose for the contact (e.g. review,
                issue, product sales, advice, customer enquiry) 
          ContactDevice:
              $ref: '#/components/schemas/Device'
              format: Device
              description: '(DDD Entity) -  '
          ContactIndicator:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - Indicates whether this is an inbound or outbound contact
                (inbound is customer initiated, outbound is servicing resource
                initiated). 
          ContactContent:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Schedule:
        type: object
        description: '(DDD Entity) - The schedule of past and planned customer contacts Schedule '
        properties:
          ScheduleType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
    Device:
        type: object
        description: '(DDD Entity) -  Device '
        properties:
          DeviceIdentification:
              $ref: '#/components/schemas/Deviceidentification'
              format: Deviceidentification
              description: '(DDD Entity) -  '
          DeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: ''
          DeviceProperty:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - Property of a device relevant for its use.


                A device has the characteristics of the device type it belongs
                to,possibly specified

                e.g. . a device of the type "cheque book" will have cheques. The
                device specifies how many and what the number range is.

                e.g. an electronic banking app consists of software modules, the
                device specifies what version 
                 
          DeviceElement:
              $ref: '#/components/schemas/Text'
              format: Text
              description: >-
                (DDD Entity) - An element of the device that can be used independently and
                is individually identified


                e.g. a cheque in a chequebook 
          DeviceStatus:
              $ref: '#/components/schemas/Status'
              format: Status
              description: |-
                (DDD Entity) - The life cycle stage of a device

                e.g. active, defect 
          DeviceVersion:
              type: string
              description: ''
              format: Number
          DeviceDateTime:
              $ref: '#/components/schemas/Datetime'
              format: Datetime
              description: '(DDD Entity) -  '
          DeviceDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) -  '
          DeviceName:
              $ref: '#/components/schemas/Name'
              format: Name
              description: '(DDD Entity) -  '
          DeviceLanguage:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Preferred language set on the device '
          DevicePhoneNumber:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Phone number associated with the device. '
          DeviceLocation:
              $ref: '#/components/schemas/Location'
              format: Location
              description: '(DDD Entity) - Geographical location of the device. '
          DeviceManufacturer:
              $ref: '#/components/schemas/Text'
              format: Text
              description: '(DDD Entity) - Manufacturer of the device. '
          DeviceCountry:
              $ref: '#/components/schemas/Country'
              format: Country
              description: '(DDD Entity) - Country of the location. '
          DeviceAddress:
              $ref: '#/components/schemas/Address'
              format: Address
              description: >-
                (DDD Entity) - The address associated with the device like Internet
                Protocol address, email Address 
          DeviceAddressType:
              $ref: '#/components/schemas/Addresstypevalues'
              format: Addresstypevalues
              description: ''
          DeviceOperatingSystem:
              $ref: '#/components/schemas/Deviceoperatingsystemtypevalues'
              format: Deviceoperatingsystemtypevalues
              description: ''
    Deviceidentification:
        type: object
        description: '(DDD Entity) -  Deviceidentification '
        properties:
          DeviceIdentification:
              $ref: '#/components/schemas/Identifier'
              format: Identifier
              description: '(DDD Entity) -  '
          DeviceIdentificationType:
              $ref: '#/components/schemas/Deviceidentificationtypevalues'
              format: Deviceidentificationtypevalues
              description: ''
    Deviceidentificationtypevalues:
        type: object
        description: '(DDD Entity) -  Deviceidentification '
        properties:
          Deviceidentificationtypevalues:
              enum:
                  -  IMEI
                  -  Serialnumber
                  -  Secureelementidentification
                  -  Othernational
                  -  Otherprivate
              format: Deviceidentificationtypevalues
              type: string
              description: ">\r\n* `IMEI` - International Mobile Equipment Identity.\r\n* `Serialnumber` - Device serial number.\r\n* `Secureelementidentification` - Secure element ID.\r\n* `Othernational` - Other nationally assigned code.\r\n* `Otherprivate` - Other privately assigned code."
    Devicetypevalues:
        type: object
        description: '(DDD Entity) -  Device '
        properties:
          Devicetypevalues:
              enum:
                  -  Securecardreader
                  -  Nonsecurecardreader
                  -  Mobile
                  -  Tablet
                  -  Personalcomputer
                  -  Othernational
                  -  Otherprivate
                  -  Wearable
                  -  Vehicle
                  -  Embedded
                  -  Keyfob
                  -  Jewellery
                  -  Sticker
                  -  Gamingdevice
                  -  Watch
                  -  Unknown
                  -  BiometricDevice
              format: Devicetypevalues
              type: string
              description: ">\r\n* `Securecardreader` - Secure card reader attached to the customer device\r\n* `Nonsecurecardreader` - Non-secure card reader attached to the customer device.\r\n* `Mobile` - Mobile phone\r\n* `Tablet` - Tablet\r\n* `Personalcomputer` - Personal computer\r\n* `Othernational` - Other device defined at national level\r\n* `Otherprivate` - Other device defined in a private way.\r\n* `Wearable` - Wearable device.\r\n* `Vehicle` - Vehicle.\r\n* `Embedded` - Embedded in a device.\r\n* `Keyfob` - Key Fob\r\n* `Jewellery` - Jewellery\r\n* `Sticker` - Sticker\r\n* `Gamingdevice` - Gaming Device\r\n* `Watch` - Watch\r\n* `Unknown` - Device type unknown\r\n* `BiometricDevice` - A biometric device is a security identification and authentication device. Such devices use automated methods of verifying or recognising the identity of a living person based on a physiological or behavioral characteristic.\nhttps://en.wikipedia.org/wiki/Biometric_device\n"
    Country:
        type: object
        description: '(DDD Entity) - Country of the location. Country '
        properties:
          NationalRegulatoryAuthority:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: '(DDD Entity) - Regulatory authority of the country. (ISO20022) '
    Deviceoperatingsystemtypevalues:
        type: object
        description: '(DDD Entity) -  Device '
        properties:
          Deviceoperatingsystemtypevalues:
              enum:
                  -  Android
                  -  Ios
                  -  Windows
                  -  Blackberry
                  -  Tizen
                  -  Othernational
                  -  Otherprivate
              format: Deviceoperatingsystemtypevalues
              type: string
              description: ">\r\n* `Android` - Android operating system.\r\n* `Ios` - iOS operating system.\r\n* `Windows` - Windows operating system.\r\n* `Blackberry` - Blackberry operating system.\r\n* `Tizen` - Tizen operating system.\r\n* `Othernational` - Other nationally defined code.\r\n* `Otherprivate` - Other privately defined code."
    UpdateServicingResponse:
        type: object
        description: ''
        properties:
          CustomerServicingEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          ChannelandDeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: >-
                CustomerDeviceTypeCode|CustomerDeviceTypeCode
                (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022
                BM ()
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerServicingEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateServicing:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    CaptureServicingRequest:
        type: object
        description: ''
        properties:
          CustomerServicingEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. self-service, assisted) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          ChannelandDeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: >-
                CustomerDeviceTypeCode|CustomerDeviceTypeCode
                (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022
                BM ()
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The given purpose for the customer servicing action ||\r\n|"
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The captured result of the servicing event ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          CustomerServicingEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureServicingResponse:
        type: object
        description: ''
        properties:
          CustomerServicingEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          ChannelandDeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: >-
                CustomerDeviceTypeCode|CustomerDeviceTypeCode
                (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022
                BM ()
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerServicingEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureServicing:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    RetrieveServicingRequest:
        type: object
        description: ''
        properties:
          CustomerServicingEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. self-service, assisted) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          ChannelandDeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: >-
                CustomerDeviceTypeCode|CustomerDeviceTypeCode
                (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022
                BM ()
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The given purpose for the customer servicing action ||\r\n|"
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The captured result of the servicing event ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          CustomerServicingEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveServicingResponse:
        type: object
        description: ''
        properties:
          CustomerServicingEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          ChannelandDeviceType:
              $ref: '#/components/schemas/Devicetypevalues'
              format: Devicetypevalues
              description: >-
                CustomerDeviceTypeCode|CustomerDeviceTypeCode
                (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022
                BM ()
          ContactPurpose:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ContactResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerServicingEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveServicing:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    UpdateProductProcessingRequest:
        type: object
        description: ''
        properties:
          ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              format: ProductAgreement
              description: "(DDD Entity) - Reference to the specific product instance being processed ||\r\n|"
          ProductEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. payment initiation, statement request) ||\r\n|"
          ProductEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Details of the processing activity if available ||\r\n|"
          ProductEventResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Outcome of the processing action if available ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          CustomerProductandServiceEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    ProductAgreement:
        type: object
        description: "(DDD Entity) - Reference to the specific product instance being processed ProductAgreement ||\r\n|"
        properties:
          ProductAgreementType:
              $ref: '#/components/schemas/Productagreementtypevalues'
              format: Productagreementtypevalues
              description: ''
    Productagreementtypevalues:
        type: object
        description: "(DDD Entity) - Reference to the specific product instance being processed ProductAgreement ||\r\n|"
        properties:
          Productagreementtypevalues:
              enum:
                  -  CurrentAccountAgreement
                  -  SavingsAccountAgreement
                  -  BrokeredProductAgreement
                  -  ConsumerLoanAgreement
                  -  MortgageLoanAgreement
                  -  DirectDebitServiceAgreement
                  -  TermDepositAgreement
              format: Productagreementtypevalues
              type: string
              description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - "
    UpdateProductProcessingResponse:
        type: object
        description: ''
        properties:
          ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              format: ProductAgreement
              description: "||\r\n|"
          ProductEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductEventResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerProductandServiceEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateProductProcessing:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    CaptureProductProcessingRequest:
        type: object
        description: ''
        properties:
          ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              format: ProductAgreement
              description: "(DDD Entity) - Reference to the specific product instance being processed ||\r\n|"
          ProductEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. payment initiation, statement request) ||\r\n|"
          ProductEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Details of the processing activity if available ||\r\n|"
          ProductEventResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Outcome of the processing action if available ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          CustomerProductandServiceEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureProductProcessingResponse:
        type: object
        description: ''
        properties:
          ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              format: ProductAgreement
              description: "||\r\n|"
          ProductEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductEventResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerProductandServiceEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureProductProcessing:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    RetrieveProductProcessingRequest:
        type: object
        description: ''
        properties:
          ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              format: ProductAgreement
              description: "(DDD Entity) - Reference to the specific product instance being processed ||\r\n|"
          ProductEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event (e.g. payment initiation, statement request) ||\r\n|"
          ProductEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Details of the processing activity if available ||\r\n|"
          ProductEventResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - Outcome of the processing action if available ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the event ||\r\n|"
          CustomerProductandServiceEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveProductProcessingResponse:
        type: object
        description: ''
        properties:
          ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              format: ProductAgreement
              description: "||\r\n|"
          ProductEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductEventDescription:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          ProductEventResult:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerProductandServiceEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveProductProcessing:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    UpdateFraudRequest:
        type: object
        description: ''
        properties:
          CustomerFraudCaseEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event  (e.g. stolen card, disputed transaction) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the fraud case ||\r\n|"
          FraudCaseReference:
              $ref: '#/components/schemas/InvestigationCase'
              format: InvestigationCase
              description: >-
                InvestigationCase |InvestigationCase 
                (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateFraudResponse:
        type: object
        description: ''
        properties:
          CustomerFraudCaseEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          FraudCaseReference:
              $ref: '#/components/schemas/InvestigationCase'
              format: InvestigationCase
              description: >-
                InvestigationCase |InvestigationCase 
                (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateFraud:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    CaptureFraudRequest:
        type: object
        description: ''
        properties:
          CustomerFraudCaseEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event  (e.g. stolen card, disputed transaction) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the fraud case ||\r\n|"
          FraudCaseReference:
              $ref: '#/components/schemas/InvestigationCase'
              format: InvestigationCase
              description: >-
                InvestigationCase |InvestigationCase 
                (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureFraudResponse:
        type: object
        description: ''
        properties:
          CustomerFraudCaseEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          FraudCaseReference:
              $ref: '#/components/schemas/InvestigationCase'
              format: InvestigationCase
              description: >-
                InvestigationCase |InvestigationCase 
                (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureFraud:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    RetrieveFraudRequest:
        type: object
        description: ''
        properties:
          CustomerFraudCaseEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event  (e.g. stolen card, disputed transaction) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in recording the fraud case ||\r\n|"
          FraudCaseReference:
              $ref: '#/components/schemas/InvestigationCase'
              format: InvestigationCase
              description: >-
                InvestigationCase |InvestigationCase 
                (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveFraudResponse:
        type: object
        description: ''
        properties:
          CustomerFraudCaseEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          AccessedProductandService:
              $ref: '#/components/schemas/Product'
              format: Product
              description: >-
                Product_x000D_

                |Product
                (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
                BM ()
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          FraudCaseReference:
              $ref: '#/components/schemas/InvestigationCase'
              format: InvestigationCase
              description: >-
                InvestigationCase |InvestigationCase 
                (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
                BM ()
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveFraud:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    UpdateLifeRequest:
        type: object
        description: ''
        properties:
          CustomerLifeEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event  (e.g. marriage/divorce, relocation, birth, graduation) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in capturing the event ||\r\n|"
          CustomerLifeEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateLifeResponse:
        type: object
        description: ''
        properties:
          CustomerLifeEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerLifeEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    UpdateLife:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    CaptureLifeRequest:
        type: object
        description: ''
        properties:
          CustomerLifeEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event  (e.g. marriage/divorce, relocation, birth, graduation) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in capturing the event ||\r\n|"
          CustomerLifeEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureLifeResponse:
        type: object
        description: ''
        properties:
          CustomerLifeEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerLifeEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    CaptureLife:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    RetrieveLifeRequest:
        type: object
        description: ''
        properties:
          CustomerLifeEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "(DDD Entity) - The type of event  (e.g. marriage/divorce, relocation, birth, graduation) ||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "(DDD Entity) - Reference to a contact event log ||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "(DDD Entity) - Employees involved in capturing the event ||\r\n|"
          CustomerLifeEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "(DDD Entity) - The details of the event (in a suitable format) ||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveLifeResponse:
        type: object
        description: ''
        properties:
          CustomerLifeEventType:
              $ref: '#/components/schemas/Text'
              format: Text
              description: "||\r\n|"
          CustomerContactRecordReference:
              $ref: '#/components/schemas/CustomerContact'
              format: CustomerContact
              description: "||\r\n|"
          EmployeeUnitReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerLifeEventRecord:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          DateandTime:
              $ref: '#/components/schemas/ISODateTime'
              format: ISODateTime
              description: >-
                ISODateTime|ISODateTime
                (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
                BM ()
          LocationReference:
              $ref: '#/components/schemas/Location'
              format: Location
              description: >-
                Location|Location
                (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
                BM  ()
    RetrieveLife:
        type: object
        description: >-
          (DDD Entity) - Maintain a log of transactions or activity, typically a financial
          account/journal or a log of activity to support behavioral analysis
          within Customer Event History. 
        properties:
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              format: Involvedparty
              description: "||\r\n|"
          CustomerEventReference:
              $ref: '#/components/schemas/Event'
              format: Event
              description: "||\r\n|"
          CustomerEventLogReference:
              $ref: '#/components/schemas/Log'
              format: Log
              description: "||\r\n|"
          CustomerEventType:
              $ref: '#/components/schemas/Customereventtypevalues'
              format: Customereventtypevalues
              description: "||\r\n|"
    HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
    ISODateTime:
        type: string
        format: ''
        description: >-
          (DDD Entity) - A particular point in the progression of time defined by a
          mandatory date and a mandatory time component, expressed in either UTC
          time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset
          format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
          (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
          Schema Part 2: Datatypes Second Edition W3C Recommendation 28
          October 2004" which is aligned with ISO 8601.

          Note on the time format:

          1) beginning / end of calendar day

          00:00:00  -  the beginning of a calendar day

          24:00:00  -  the end of a calendar day

          2) fractions of second in time format

          Decimal fractions of seconds may be included. In this case, the
          involved parties shall agree on the maximum number of digits that are
          allowed.
    Location:
        type: object
        description: >-
          (DDD Entity) - Location where event was captured Location|Location
          (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
          BM  ()
        properties:
          NativePerson:
              type: string
              format: Person
              description: '(DDD Entity) - Person for which a birth place is specified. '
          System:
              type: string
              format: System
              description: '(DDD Entity) - System for which a location is specified. '
          DomiciledParty:
              type: string
              format: Party
              description: '(DDD Entity) - Party which is domiciled in a specific location. '
          OperatingOrganisation:
              type: string
              format: Organisation
              description: >-
                (DDD Entity) - Organisation which has its operations in a specific
                location. 
          Address:
              type: string
              format: PostalAddress
              description: '(DDD Entity) - Information that locates and identifies a specific address. '
          IssuedDocument:
              type: string
              format: Document
              description: '(DDD Entity) - Document which was issued at a specific location. '
          Incoterms:
              type: string
              format: Incoterms
              description: '(DDD Entity) - Incoterms associated with a location. '
          DepartureTransportParameters:
              type: string
              format: Transport
              description: '(DDD Entity) - Transport parameters linked to a place of departure. '
          DestinationTransportParameters:
              type: string
              format: Transport
              description: '(DDD Entity) - Transport parameters linked to a place of destination. '
          InsuranceCertificate:
              type: string
              format: InsuranceCertificate
              description: >-
                (DDD Entity) - Insurance for which the claims are payable at a specific
                location. 
          Party:
              type: string
              format: Party
              description: '(DDD Entity) - Party which resides in a specific location. '
          RelatedExpiry:
              type: string
              format: Expiry
              description: '(DDD Entity) - Expiry information which contains an expiry location. '
          RelatedJurisdiction:
              type: string
              format: Jurisdiction
              description: '(DDD Entity) - Jurisdiction of the location. '
          Identification:
              type: string
              format: GenericIdentification
              description: >-
                (DDD Entity) - Identifies the location, for instance, the name of an
                airport, a county, a state, a province or a city by a code or a
                text. eg LHR for London Heathrow airport. 
          TaxableParty:
              type: string
              format: Party
              description: '(DDD Entity) - Party which is taxable at a specific location '
          RegisteredOrganisation:
              type: string
              format: Organisation
              description: '(DDD Entity) - Organisation which is registered at that location. '
          RelatedTransport:
              type: string
              format: Transport
              description: >-
                (DDD Entity) - Transport process for which a transit location is
                specified. 
          TimeZone:
              type: string
              format: UTCOffset
              description: '(DDD Entity) - Offset of the time before or after 00:00 hour UTC. '
    Agreement:
        type: object
        description: >-
          (DDD Entity) - Reference to any commission agreement if appropriate
          Agreement_x000D_

          |Agreement
          (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
          BM ()
        properties:
          DateSigned:
              type: string
              format: ISODate
              description: '(DDD Entity) - Date on which the agreement was signed by all parties. '
          Description:
              type: string
              format: Max350Text
              description: >-
                (DDD Entity) - Full name of an agreement, annexes and amendments in place
                between the principals. 
          Version:
              type: string
              format: Max35Text
              description: '(DDD Entity) - Version number of a contract or of a  legal agreement. '
          ValidityPeriod:
              type: string
              format: DateTimePeriod
              description: '(DDD Entity) - Period during which the agreement is valid '
          Document:
              type: string
              format: Document
              description: '(DDD Entity) - Document which materialises the agreement. '
          Trade:
              type: string
              format: CommercialTrade
              description: >-
                (DDD Entity) - Specifies the type of trade that is the subject of an
                agreement. The agreement contains the clauses that will govern
                each trade between the signing parties. 
          Jurisdiction:
              type: string
              format: Jurisdiction
              description: '(DDD Entity) - Jurisdiction where an agreement applies. '
    Product:
        type: object
        description: >-
          (DDD Entity) - Reference to the types or instances of products/services being
          serviced if provided Product_x000D_

          |Product
          (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
          BM ()
        properties:
          CardPayment:
              type: string
              format: CardPayment
              description: '(DDD Entity) - Card payment for which a product was specified. '
          UnitPrice:
              type: string
              format: Price
              description: '(DDD Entity) - Price per unit of product. '
          ProductCategory:
              type: string
              format: ProductCategory
              description: '(DDD Entity) - Category of the product. '
          LineItem:
              type: string
              format: LineItem
              description: '(DDD Entity) - Specifies the line item in which the product is specified. '
          ProductIdentification:
              type: string
              format: ProductIdentification
              description: '(DDD Entity) - Identification of the product. '
          Name:
              type: string
              format: Max35Text
              description: '(DDD Entity) - Name of a product. '
          Description:
              type: string
              format: Max140Text
              description: >-
                (DDD Entity) - Information about the goods and/or services of a trade
                transaction. 
          Origin:
              type: string
              format: Country
              description: '(DDD Entity) - Country from which the product originates. '
          Characteristics:
              type: string
              format: ProductCharacteristics
              description: '(DDD Entity) - Characteristics of the product. '
          NetPrice:
              type: string
              format: Price
              description: '(DDD Entity) - Net price of the goods and/or service. '
          Quantity:
              type: string
              format: ProductQuantity
              description: '(DDD Entity) - Specifies the quantity of the product. '
          GrossPrice:
              type: string
              format: Price
              description: '(DDD Entity) - Gross price of the goods and/or service. '
          Quality:
              type: string
              format: Max70Text
              description: '(DDD Entity) - Quality of the product. '
          Delivery:
              type: string
              format: ProductDelivery
              description: '(DDD Entity) - Delivery process of a product '
          PurchaseOrder:
              type: string
              format: PurchaseOrder
              description: >-
                (DDD Entity) - Specifies the purchase order in which a specific product is
                ordered. 
          Tax:
              type: string
              format: Tax
              description: >-
                (DDD Entity) - Amount of money due to the government or tax authority,
                according to various pre-defined parameters linked to the value
                of the goods and services in a trade transaction. 
    InvestigationCase:
        type: object
        description: >-
          (DDD Entity) - Reference to the fraud case processing the analysis and response
          InvestigationCase |InvestigationCase 
          (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
          BM ()
        properties:
          AssignmentIdentification:
              type: string
              format: Max35Text
              description: '(DDD Entity) - Uniquely identifies the case assignment. '
          CreationDateTime:
              type: string
              format: ISODateTime
              description: '(DDD Entity) - Creation date and time of the case. '
          Identification:
              type: string
              format: Max35Text
              description: '(DDD Entity) - Uniquely identifies the case. '
          Status:
              type: string
              format: InvestigationCaseStatus
              description: >-
                (DDD Entity) - Specifies the status of the case together with the reason
                and the date and time. 
          InvestigationPartyRole:
              type: string
              format: InvestigationPartyRole
              description: >-
                (DDD Entity) - Role played by a party in the context of an investigation
                process. 
          DuplicateCaseResolution:
              type: string
              format: DuplicateCase
              description: >-
                (DDD Entity) - Solution which consists in closing the case as it is a
                duplicate of an original one. 
          InvestigationResolution:
              type: string
              format: InvestigationResolution
              description: >-
                (DDD Entity) - Specifies the actions taken as a result of an
                investigation. 
          OriginalInvestigationCase:
              type: string
              format: InvestigationCase
              description: '(DDD Entity) - Original case to which another one is linked. '
          LinkedCase:
              type: string
              format: InvestigationCase
              description: >-
                (DDD Entity) - Step in the resolution process of an investigation case. The
                assigned case is linked to the investigation case in the
                previous step. 
          Reassignment:
              type: string
              format: Reassignment
              description: '(DDD Entity) - Action which is taken to forward the case to another party. '
  responses:
    InitiateCustomerEventLogResponse:
        description: CustomerEventLogInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateCustomerEventLogResponse'
    UpdateCustomerEventLogResponse:
        description: CustomerEventLogUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateCustomerEventLogResponse'
    ControlCustomerEventLogResponse:
        description: CustomerEventLogControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlCustomerEventLogResponse'
    RetrieveCustomerEventLogResponse:
        description: CustomerEventLogRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveCustomerEventLogResponse'
    UpdateRelationshipResponse:
        description: RelationshipUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRelationshipResponse'
    CaptureRelationshipResponse:
        description: RelationshipCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureRelationshipResponse'
    RetrieveRelationshipResponse:
        description: RelationshipRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRelationshipResponse'
    UpdateSalesResponse:
        description: SalesUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSalesResponse'
    CaptureSalesResponse:
        description: SalesCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureSalesResponse'
    RetrieveSalesResponse:
        description: SalesRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSalesResponse'
    UpdateServicingResponse:
        description: ServicingUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingResponse'
    CaptureServicingResponse:
        description: ServicingCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureServicingResponse'
    RetrieveServicingResponse:
        description: ServicingRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingResponse'
    UpdateProductProcessingResponse:
        description: ProductProcessingUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductProcessingResponse'
    CaptureProductProcessingResponse:
        description: ProductProcessingCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureProductProcessingResponse'
    RetrieveProductProcessingResponse:
        description: ProductProcessingRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductProcessingResponse'
    UpdateFraudResponse:
        description: FraudUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateFraudResponse'
    CaptureFraudResponse:
        description: FraudCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureFraudResponse'
    RetrieveFraudResponse:
        description: FraudRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveFraudResponse'
    UpdateLifeResponse:
        description: LifeUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateLifeResponse'
    CaptureLifeResponse:
        description: LifeCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureLifeResponse'
    RetrieveLifeResponse:
        description: LifeRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveLifeResponse'
    BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
    InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
  parameters:
    customereventhistoryid:
        name: customereventhistoryid
        in: path
        required: true
        style: simple
        schema:
          type: string
    relationshipid:
        name: relationshipid
        in: path
        required: true
        style: simple
        schema:
          type: string
    salesid:
        name: salesid
        in: path
        required: true
        style: simple
        schema:
          type: string
    servicingid:
        name: servicingid
        in: path
        required: true
        style: simple
        schema:
          type: string
    productprocessingid:
        name: productprocessingid
        in: path
        required: true
        style: simple
        schema:
          type: string
    fraudid:
        name: fraudid
        in: path
        required: true
        style: simple
        schema:
          type: string
    lifeid:
        name: lifeid
        in: path
        required: true
        style: simple
        schema:
          type: string
  requestBodies:
    InitiateCustomerEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateCustomerEventLogRequest'
        required: true
    UpdateCustomerEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateCustomerEventLogRequest'
        required: true
    ControlCustomerEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlCustomerEventLogRequest'
        required: true
    RetrieveCustomerEventLogRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveCustomerEventLogRequest'
        required: true
    UpdateRelationshipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRelationshipRequest'
        required: true
    CaptureRelationshipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureRelationshipRequest'
        required: true
    RetrieveRelationshipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRelationshipRequest'
        required: true
    UpdateSalesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSalesRequest'
        required: true
    CaptureSalesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureSalesRequest'
        required: true
    RetrieveSalesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSalesRequest'
        required: true
    UpdateServicingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingRequest'
        required: true
    CaptureServicingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureServicingRequest'
        required: true
    RetrieveServicingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingRequest'
        required: true
    UpdateProductProcessingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductProcessingRequest'
        required: true
    CaptureProductProcessingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureProductProcessingRequest'
        required: true
    RetrieveProductProcessingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductProcessingRequest'
        required: true
    UpdateFraudRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateFraudRequest'
        required: true
    CaptureFraudRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureFraudRequest'
        required: true
    RetrieveFraudRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveFraudRequest'
        required: true
    UpdateLifeRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateLifeRequest'
        required: true
    CaptureLifeRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureLifeRequest'
        required: true
    RetrieveLifeRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveLifeRequest'
        required: true
