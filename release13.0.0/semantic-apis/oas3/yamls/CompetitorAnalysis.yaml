openapi: 3.0.1
info:
  title: Competitor Analysis
  description: 'Solicit, consolidate and analyze competitor specific public domain data to develop competitor insights and comparisons'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CompetitorAnalysis/13.0.0
paths:
  /CompetitorAnalysis/Evaluate:
    post:
      tags:
        - CR - CompetitorAnalysis
      summary: EvCR Initialize competitor analysis
      description: EvCR Initialize competitor analysis
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/CompetitorAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/CompetitorAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CompetitorAnalysis/{competitoranalysisid}/Execute':
    put:
      tags:
        - CR - CompetitorAnalysis
      summary: ExCR Obtain an automated refresh of maintained competitor analysis
      description: ExCR Obtain an automated refresh of maintained competitor analysis
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/competitoranalysisid'
      requestBody:
        $ref: '#/components/requestBodies/CompetitorAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/CompetitorAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CompetitorAnalysis/{competitoranalysisid}/Request':
    put:
      tags:
        - CR - CompetitorAnalysis
      summary: RqCR Request a manual intervention in the development of competitor analysis
      description: RqCR Request a manual intervention in the development of competitor analysis
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/competitoranalysisid'
      requestBody:
        $ref: '#/components/requestBodies/CompetitorAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/CompetitorAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CompetitorAnalysis/{competitoranalysisid}/Retrieve':
    get:
      tags:
        - CR - CompetitorAnalysis
      summary: ReCR Retrieve details about competitor analysis activity
      description: ReCR Retrieve details about competitor analysis activity
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/competitoranalysisid'
      responses:
        '200':
          $ref: '#/components/responses/CompetitorAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CompetitorAnalysis/{competitoranalysisid}/ProductCompetitiveAnalysis/Evaluate':
    post:
      tags:
        - BQ - ProductCompetitiveAnalysis
      summary: Evaluate Product Competitive Analysis
      description: Evaluate Product Competitive Analysis
      operationId: EvaluateProductCompetitiveAnalysis
      parameters:
        - $ref: '#/components/parameters/competitoranalysisid'
      requestBody:
        $ref: '#/components/requestBodies/ProductCompetitiveAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ProductCompetitiveAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CompetitorAnalysis/{competitoranalysisid}/ProductCompetitiveAnalysis/{productcompetitiveanalysisid}/Retrieve':
    get:
      tags:
        - BQ - ProductCompetitiveAnalysis
      summary: Retrieve Product Competitive Analysis
      description: Retrieve Product Competitive Analysis
      operationId: RetrieveProductCompetitiveAnalysis
      parameters:
        - $ref: '#/components/parameters/competitoranalysisid'
        - $ref: '#/components/parameters/productcompetitiveanalysisid'
      responses:
        '200':
          $ref: '#/components/responses/ProductCompetitiveAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Refers to a task for doing the analysis
    analysismodel:
      type: object
      properties:
        AnalysisModel:
          type: string
          description: 'Model used in the analysis of something. '
          format: class
      description: Refers to a model used in the analysis Like Customer Behavior Model
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A record of reported impact/accuracy of the competitor analysis ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "The employee/business unit requesting the analysis ||\r\n|"
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n* `RevenueAnalysis` - \r\n* `CostAnalysis` - \r\n* `PredictiveAnalysis` - \r\n* `BehavioralAnalysis` - \r\n* `ProfitabilityAnalysis` - \r\n* `CompetitiveAnalysis` - \r\n* `CohortAnalysis` - \r\n* `SegmentAnalysis` - \r\n* `SWOTAnalysis` - \r\n* `Benchmarking` - \r\n* `PositioningAnalysis` - \r\n* `ScenarioAnalysis` - \r\n* `IntelligenceGathering` - \r\n* `Profiling` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: Refers to a log used in the  analysis like Event Log
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: "Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
    analysisreport:
      type: object
      properties:
        AnalysisReportDatetime:
          $ref: '#/components/schemas/datetime'
      description: Refers to a report used in the analysis like Market Research Report
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022'
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: Refers to a document used in the analysis
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Guidance on usage and interpretation of the competitor analysis (e.g. qualifying the accuracy/confidence of any findings) GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The schedule and timing of the analysis performed using the algorithm
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
        AnalysisSchedule:
          $ref: '#/components/schemas/schedule'
      description: "Reference to the competitor analysis ||\r\n|"
    ProductCompetitiveAnalysis:
      type: object
      properties:
        AnalysisTask:
          $ref: '#/components/schemas/task'
        AnalysisModelReference:
          $ref: '#/components/schemas/analysismodel'
        AnalysisInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisLogReference:
          $ref: '#/components/schemas/log'
        AnalysisWorkProduct:
          $ref: '#/components/schemas/workproduct'
        AnalysisReportReference:
          $ref: '#/components/schemas/analysisreport'
        AnalysisDocumentReference:
          $ref: '#/components/schemas/document'
        AnalysisCriteriaReference:
          $ref: '#/components/schemas/ruleset'
        AnalysisReference:
          $ref: '#/components/schemas/analysis'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\n-  The process of evaluating and comparing a company's product or service against similar offerings from competitors"
    CompetitorClusteringorGrouping:
      type: object
      properties:
        AnalysisTask:
          $ref: '#/components/schemas/task'
        AnalysisModelReference:
          $ref: '#/components/schemas/analysismodel'
        AnalysisInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisLogReference:
          $ref: '#/components/schemas/log'
        AnalysisWorkProduct:
          $ref: '#/components/schemas/workproduct'
        AnalysisReportReference:
          $ref: '#/components/schemas/analysisreport'
        AnalysisDocumentReference:
          $ref: '#/components/schemas/document'
        AnalysisCriteriaReference:
          $ref: '#/components/schemas/ruleset'
        AnalysisReference:
          $ref: '#/components/schemas/analysis'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\n-  The process of evaluating and comparing a company's product or service against similar offerings from competitors"
    PeerCompetitorAnalysis:
      type: object
      properties:
        AnalysisTask:
          $ref: '#/components/schemas/task'
        AnalysisModelReference:
          $ref: '#/components/schemas/analysismodel'
        AnalysisInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisLogReference:
          $ref: '#/components/schemas/log'
        AnalysisWorkProduct:
          $ref: '#/components/schemas/workproduct'
        AnalysisReportReference:
          $ref: '#/components/schemas/analysisreport'
        AnalysisDocumentReference:
          $ref: '#/components/schemas/document'
        AnalysisCriteriaReference:
          $ref: '#/components/schemas/ruleset'
        AnalysisReference:
          $ref: '#/components/schemas/analysis'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\n-  The process of evaluating and comparing a company's product or service against similar offerings from competitors"
    CompetitiveBenchmarking:
      type: object
      properties:
        AnalysisTask:
          $ref: '#/components/schemas/task'
        AnalysisModelReference:
          $ref: '#/components/schemas/analysismodel'
        AnalysisInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisLogReference:
          $ref: '#/components/schemas/log'
        AnalysisWorkProduct:
          $ref: '#/components/schemas/workproduct'
        AnalysisReportReference:
          $ref: '#/components/schemas/analysisreport'
        AnalysisDocumentReference:
          $ref: '#/components/schemas/document'
        AnalysisCriteriaReference:
          $ref: '#/components/schemas/ruleset'
        AnalysisReference:
          $ref: '#/components/schemas/analysis'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\n-  The process of evaluating and comparing a company's product or service against similar offerings from competitors"
    CompetitorSWOTAnalysis:
      type: object
      properties:
        AnalysisTask:
          $ref: '#/components/schemas/task'
        AnalysisModelReference:
          $ref: '#/components/schemas/analysismodel'
        AnalysisInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisLogReference:
          $ref: '#/components/schemas/log'
        AnalysisWorkProduct:
          $ref: '#/components/schemas/workproduct'
        AnalysisReportReference:
          $ref: '#/components/schemas/analysisreport'
        AnalysisDocumentReference:
          $ref: '#/components/schemas/document'
        AnalysisCriteriaReference:
          $ref: '#/components/schemas/ruleset'
        AnalysisReference:
          $ref: '#/components/schemas/analysis'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\n-  The process of evaluating and comparing a company's product or service against similar offerings from competitors"
    CompetitorAnalysisOutcome:
      type: object
      properties:
        CompetitorAnalysisWorkProduct:
          type: string
          description: ''
          format: string
        CompetitorAnalysisAnalysisType:
          type: string
          description: ''
          format: string
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\n-  The process of evaluating and comparing a company's product or service against similar offerings from competitors"
    competitoranalysistypevalues:
      enum:
        - PeerCompetitorAnalysis
        - ProductCompetitiveAnalysis
        - CompetitorClusteringOrGrouping
        - CompetitorSWOTAnalysis
        - CompetitiveBenchmarking
      type: string
      description: "The type of research view provided by the research (e.g. pricing comparison) ||\r\n|"
    algorithm:
      type: object
      properties:
        AlgorithmType:
          type: string
          description: ''
          format: string
        AlgorithmUsage:
          type: string
          description: ''
          format: string
        AlgorithmImpact:
          type: string
          description: ''
          format: string
        AlgorithmFeedback:
          type: string
          description: ''
          format: string
        AlgorithmSpecification:
          type: string
          description: ''
          format: string
        AlgorithmUsageGuideline:
          type: string
          description: ''
          format: string
      description: "Reference to the algorithm/approach used to generate the analysis ||\r\n|"
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: "The specific details of the request ||\r\n|"
    CompetitorAnalysis:
      type: object
      properties:
        CompetitorAnalysisType:
          $ref: '#/components/schemas/competitoranalysistypevalues'
        CompetitorAnalysisSpecification:
          $ref: '#/components/schemas/text'
        CompetitorAnalysisGuidance:
          $ref: '#/components/schemas/ruleset'
        CompetitorAnalysisAlgorithmReference:
          $ref: '#/components/schemas/algorithm'
        CompetitorAnalysisRequestRecord:
          $ref: '#/components/schemas/text'
        CompetitorAnalysisRequest:
          $ref: '#/components/schemas/instruction'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        CompetitorAnalysisRequestWorkProducts:
          $ref: '#/components/schemas/workproduct'
        CompetitorAnalysisRequestResult:
          $ref: '#/components/schemas/text'
        CompetitorAnalysisUsageRecord:
          $ref: '#/components/schemas/text'
        CompetitorAnalysisUsage:
          $ref: '#/components/schemas/text'
        CompetitorAnalysisImpact:
          $ref: '#/components/schemas/text'
        CompetitorAnalysisReference:
          $ref: '#/components/schemas/analysis'
      description: "Analyze the performance or behavior of some on-going activity or entity  within Competitor Analysis. \nExamples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks.\n\nAnalyze the performance or behavior of some on-going activity or entity. Examples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CompetitorAnalysis:
      description: CompetitorAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompetitorAnalysis'
    ProductCompetitiveAnalysis:
      description: ProductCompetitiveAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductCompetitiveAnalysis'
  parameters:
    competitoranalysisid:
      name: competitoranalysisid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productcompetitiveanalysisid:
      name: productcompetitiveanalysisid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CompetitorAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompetitorAnalysis'
      required: true
    ProductCompetitiveAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductCompetitiveAnalysis'
      required: true