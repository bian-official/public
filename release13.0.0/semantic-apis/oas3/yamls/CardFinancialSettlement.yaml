openapi: 3.0.1
info:
  title: Card Financial Settlement
  description: This service domain orchestrates the settlement of the transactions between the Issuers and the Acquirers through the Card Networks.
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CardFinancialSettlement/13.0.0
paths:
  /CardFinancialSettlement/Initiate:
    post:
      tags:
        - CR - CardFinancialSettlementProcedure
      summary: InCR Initiate card financial settlement processing
      description: InCR Initiate card financial settlement processing
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CardFinancialSettlementProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CardFinancialSettlementProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Update':
    put:
      tags:
        - CR - CardFinancialSettlementProcedure
      summary: UpCR Update the card financial settlement processing
      description: UpCR Update the card financial settlement processing
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
      requestBody:
        $ref: '#/components/requestBodies/CardFinancialSettlementProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CardFinancialSettlementProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Retrieve':
    get:
      tags:
        - CR - CardFinancialSettlementProcedure
      summary: ReCR Retrieve details and reports about the card settlement processing
      description: ReCR Retrieve details and reports about the card settlement processing
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
      responses:
        '200':
          $ref: '#/components/responses/CardFinancialSettlementProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Control':
    put:
      tags:
        - CR - CardFinancialSettlementProcedure
      summary: Control the processing of a card financial settlement
      description: Control the processing of a card financial settlement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
      requestBody:
        $ref: '#/components/requestBodies/CardFinancialSettlementProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CardFinancialSettlementProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Consolidation/{consolidationid}/Update':
    put:
      tags:
        - BQ - Consolidation
      summary: UpBQ Update consolidated transaction details for a settlement procedure
      description: UpBQ Update consolidated transaction details for a settlement procedure
      operationId: UpdateConsolidation
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/consolidationid'
      requestBody:
        $ref: '#/components/requestBodies/Consolidation'
      responses:
        '200':
          $ref: '#/components/responses/Consolidation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Consolidation/{consolidationid}/Retrieve':
    get:
      tags:
        - BQ - Consolidation
      summary: ReBQ Retrieve consolidated transaction details for a settlement procedure
      description: ReBQ Retrieve consolidated transaction details for a settlement procedure
      operationId: RetrieveConsolidation
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/consolidationid'
      responses:
        '200':
          $ref: '#/components/responses/Consolidation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Processing/{processingid}/Update':
    put:
      tags:
        - BQ - Processing
      summary: UpBQ Update processing transaction details for a settlement procedure
      description: UpBQ Update processing transaction details for a settlement procedure
      operationId: UpdateProcessing
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/processingid'
      requestBody:
        $ref: '#/components/requestBodies/Processing'
      responses:
        '200':
          $ref: '#/components/responses/Processing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Processing/{processingid}/Retrieve':
    get:
      tags:
        - BQ - Processing
      summary: ReBQ Retrieve processing transaction details for a settlement procedure
      description: ReBQ Retrieve processing transaction details for a settlement procedure
      operationId: RetrieveProcessing
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/processingid'
      responses:
        '200':
          $ref: '#/components/responses/Processing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Instruction/{instructionid}/Update':
    put:
      tags:
        - BQ - Instruction
      summary: UpBQ Update payment instruction details for a settlement procedure
      description: UpBQ Update payment instruction details for a settlement procedure
      operationId: UpdateInstruction
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/instructionid'
      requestBody:
        $ref: '#/components/requestBodies/Instruction'
      responses:
        '200':
          $ref: '#/components/responses/Instruction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Instruction/{instructionid}/Retrieve':
    get:
      tags:
        - BQ - Instruction
      summary: ReBQ Retrieve payment instruction details for a settlement procedure
      description: ReBQ Retrieve payment instruction details for a settlement procedure
      operationId: RetrieveInstruction
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/instructionid'
      responses:
        '200':
          $ref: '#/components/responses/Instruction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Payment/{paymentid}/Update':
    put:
      tags:
        - BQ - Payment
      summary: UpBQ Update payment processing details for a settlement procedure
      description: UpBQ Update payment processing details for a settlement procedure
      operationId: UpdatePayment
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/paymentid'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          $ref: '#/components/responses/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CardFinancialSettlement/{cardfinancialsettlementid}/Payment/{paymentid}/Retrieve':
    get:
      tags:
        - BQ - Payment
      summary: ReBQ Retrieve payment processing details for a settlement procedure
      description: ReBQ Retrieve payment processing details for a settlement procedure
      operationId: RetrievePayment
      parameters:
        - $ref: '#/components/parameters/cardfinancialsettlementid'
        - $ref: '#/components/parameters/paymentid'
      responses:
        '200':
          $ref: '#/components/responses/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    Payment:
      type: object
      properties:
        ParticipantPaymentTransaction:
          type: string
          description: Transaction details
          format: string
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    cardclearingarrangement:
      type: object
      properties:
        CardClearingArrangement:
          type: string
          description: "An arrangement (obligation and right) defined for doing the clearing of a card based transaction or a batch of card based transactions.\n"
          format: class
      description: Defines the card settlement fees/terms in force
    Processing:
      type: object
      properties:
        ParticipantAcquirerBankSettlementTerms:
          $ref: '#/components/schemas/cardclearingarrangement'
        ParticipantIssuerBankSettlementTerms:
          $ref: '#/components/schemas/cardclearingarrangement'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    balancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - CurrentBalance
        - AvailableBalance
        - LedgerBalance
        - ReserveBalance
        - FreeBalance
        - PrincipalBalance
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - PreviouslyClosedBooked
        - Expected
      type: string
      description: ">\r\n* `OpeningBalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `ClosingBalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `CurrentBalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `AvailableBalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `LedgerBalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `ReserveBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n* `ClosingAvailable` - Closing balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `ClosingBooked` - Balance of the account at the end of the pre-agreed account reporting period. It is the sum of the opening booked balance at the beginning of the period and all entries booked to the account during the pre-agreed account reporting period.\r\n* `ForwardAvailable` - Forward available balance of money that is at the disposal of the account owner on the date specified.\r\n* `Information` - Balance for informational purposes.\r\n* `InterimAvailable` - Available balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `InterimBooked` - Balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `OpeningAvailable` - Opening balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `OpeningBooked` - Book balance of the account at the beginning of the account reporting period. It always equals the closing book balance from the previous report.\r\n* `PreviouslyClosedBooked` - Balance of the account at the previously closed account reporting period. The opening booked balance for the new period has to be equal to this balance.\nUsage: the previously booked closing balance should equal (inclusive date) the booked closing balance of the date it references and equal the actual booked opening balance of the current date.\r\n* `Expected` - Balance, composed of booked entries and pending items known at the time of calculation, which projects the end of day balance if everything is booked on the account and no other entry is posted.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Decimal point position starts calulating from the right\n"
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: "The scheduled time for the process - likely initiation time ||\r\n|"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    balancecounterpartytypevalues:
      enum:
        - Bilateral
        - Multilateral
      type: string
      description: ">\r\n* `Bilateral` - Balance calculated regarding one member in the system. (ISO20022)\r\n* `Multilateral` - Balance calculated regarding all members in the system. (ISO20022)\r\n"
    balancesubtypevalues:
      enum:
        - Adjustment
        - Basecurrency
        - Blocked
        - Blockedfunds
        - Daylightoverdraft
        - Eligibleassets
        - Firmcollateralization
        - Amountsthathavebeenusedtoserveasfirmcollateral
        - Securitiesforecast
        - Netfunding
        - Intermediate
        - Localcurrency
        - Limitrelated
        - Reservedliquidity
        - Securitiespending
        - Payinpayout
        - Progressiveaverage
        - Reserve
        - Selfcollateralization
        - Amountsthathavebeenusedtoserveasselfcollateral
        - Threshold
      type: string
      description: ">\r\n* `Adjustment` - Balance to be held in the settlement account in order to comply with the average reserve due, in the event that the bank's balance is equal to the reserve due during the remaining days of the maintenance period.\r\n* `Basecurrency` - Balance representing the amount in the domestic or base accounting currency.\r\n* `Blocked` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes. In some countries, a blocked balance is known as a 'reserve' balance.\r\n* `Blockedfunds` - Balance representing funds that cannot be touched by the account owner.\r\n* `Daylightoverdraft` - Balance representing the intra day overdraft granted by the Central Bank to financial institutions participating in a RTGS system. This balance may vary over time and shall be offset at the end of the day.\r\n* `Eligibleassets` - Balance representing the potential loan a Central Bank would make in cash if the collateral is pledged, eg, securities available and eligible as collateral with the Central Bank.\r\n* `Firmcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral.\r\n* `Amountsthathavebeenusedtoserveasfirmcollateral` - Balance representing the cash equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral and have been used as collateral.\r\n* `Securitiesforecast` - Balance representing the total of all balance types representing the forecast of transactions to settle, blocked items, custody transactions and corporate actions cash disbursements.\r\n* `Netfunding` - Balance representing the net amount to be funded resulting from the difference between the total of all transactions with a cash impact and the existing cash coverage.\r\n* `Intermediate` - Balance representing an intermediate amount such as the opening or closing balance incrementally carried forward from one page to the next in a multi-page statement or report.\r\n* `Localcurrency` - Balance representing the amount in the local market currency for which the asset is held.\r\n* `Limitrelated` - Balance of a specific limit value, eg, a bilateral balance is calculated in relation to a given bilateral limit.\r\n* `Reservedliquidity` - Balance representing the amount that a financial institution has set aside for a specific reason and which is therefore not available. In the context of CSDs, reservation of liquidity made to meet settlement obligations.\r\n* `Securitiespending` - Balance of securities pending delivery, such as orders to sell securities have been executed but settlement of the open transactions has not been confirmed.\r\n* `Payinpayout` - Balance representing the fictive amount of automated direct debits or payment based on standing arrangements between the CSD and the user. Usage: Pay-Ins and Pay-Outs can be different based on individual payment instructions or available funds.\r\n* `Progressiveaverage` - Average of the daily balances on the account used to fulfil the reserve requirements calculated from the beginning of the maintenance period.\r\n* `Reserve` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes.\r\n* `Selfcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of the net incoming balance of securities qualified to serve as collateral for which settlement instructions are held at.\r\n* `Amountsthathavebeenusedtoserveasselfcollateral` - Balance representing the cash-equivalent resulting from evaluation of incoming securities, qualified to serve as collateral and actually used as collateral, which have been settled during the settlement process.\r\n* `Threshold` - Balance representing the amount that will be destined for investment. Difference between available balance and threshold for investment limit.\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceValueDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        BalanceCounterpartyType:
          $ref: '#/components/schemas/balancecounterpartytypevalues'
        BalanceCalculationDate:
          $ref: '#/components/schemas/datetime'
        BalanceSubType:
          $ref: '#/components/schemas/balancesubtypevalues'
      description: "The balance (of balance type) that is shown on an account statement.\n\nSet of elements used to define the balance as a numerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Refers to the Issuing bank for which the Network orchestrates settlement processing ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: 'Unique identification, as assigned by the account servicer, to unambiguously identify the account statement. (ISO20022)'
    accountstatementtypevalues:
      enum:
        - AccountClosure
        - AccountOpening
        - Annual
        - Interim
        - RegularPeriodic
      type: string
      description: ">\r\n* `AccountClosure` - \r\n* `AccountOpening` - \r\n* `Annual` - \r\n* `Interim` - \r\n* `RegularPeriodic` - \r\n"
    accountstatement:
      type: object
      properties:
        AccountStatementBalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        AccountStatementBalance:
          $ref: '#/components/schemas/accountbalance'
        'AccountStatementIdentification,':
          $ref: '#/components/schemas/identifier'
        AccountStatementType:
          $ref: '#/components/schemas/accountstatementtypevalues'
        AccountStatementContentType:
          $ref: '#/components/schemas/text'
        AccountStatementPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AccountStatementContent:
          $ref: '#/components/schemas/text'
        AccountStatementCreationDate:
          $ref: '#/components/schemas/datetime'
      description: Settlement account statement for processing window - used to confirm payments
    Instruction:
      type: object
      properties:
        ParticipantAcquirerBankSettlementAccountStatement:
          $ref: '#/components/schemas/accountstatement'
        ParticipantIssuerBankSettlementAccountStatement:
          $ref: '#/components/schemas/accountstatement'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'The tracked status (e.g. under construction or repair, inhabited, vacant).'
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: Place where the merchant actually performed the transaction. (ISO20022)
    transactionchanneltypevalues:
      enum:
        - Mailorder
        - Telephoneorder
        - Electroniccommerce
        - Televisionpayment
        - Officeorbranch
        - Homebanking
        - Financialadvisor
        - Mobilepayment
        - Securedelectroniccommerce
        - Mobilepos
      type: string
      description: ">\r\n* `Mailorder` - Mail order.\r\n* `Telephoneorder` - Telephone order.\r\n* `Electroniccommerce` - Electronic commerce.\r\n* `Televisionpayment` - Payment on television.\r\n* `Officeorbranch` - Office or branch.\r\n* `Homebanking` - Home banking.\r\n* `Financialadvisor` - Financial advisor.\r\n* `Mobilepayment` - Payment performed through a cardholder mobile device.\r\n* `Securedelectroniccommerce` - Electronic commerce with cardholder authentication.\r\n* `Mobilepos` - Payment performed through a merchant mobile device.\r\n"
    pointofservice:
      type: object
      properties:
        PointOfService:
          type: string
          description: "Point at which a service is offered and/or fulfilled. \n"
          format: class
      description: Describes the Point of Interaction through which the payment by card was initiated. (ISO20022)
    transactionenvironmenttypevalues:
      enum:
        - Merchant
        - Private
        - Public
        - Branch
        - Other
      type: string
      description: ">\r\n* `Merchant` - Merchant environment.\r\n* `Private` - Private environment.\r\n* `Public` - Public environment.\r\n* `Branch` - Bank environment.\r\n* `Other` - Other environments, for instance a mall or an airport.\r\n"
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: Country of the merchant where the transaction took place. (ISO20022)
    cardnetwork:
      type: object
      properties:
        CardNetwork:
          type: string
          description: "Network for handling the card based transaction (e.g. Visa, MC, AMEX, Diners, etc.)\n\nA card network are networks of issuing and acquiring banks through which payment cards of some certain brand are processed. two types of card networks can be pointed out, namely, credit card associations (Visa, MasterCard, Discover, Amex, etc.) and PINless debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).\n\nCard networks are financial services companies that enables, processes and settles payments between card issuing banks and merchant banks worldwide. Examples are Visa, MasterCard, Discover, RuPay etc.\n\nA card network is a system of connecting merchants and card issuers.  A middle person that collects funds from card issuer and pays it to the merchant.  Visa and MasterCard are examples of card networks."
          format: class
      description: "Refers to the card network ||\r\n|"
    amountqualifiertypevalues:
      enum:
        - Cashback
        - Gratuity
        - Fees
        - Rebates
        - Valueaddedtax
        - Actual
        - Replacement
        - Maximum
        - Default
        - Estimated
        - Original
        - Surcharge
        - Servicefee
        - Interchangefee
        - Discount
        - Atmcommissionfee
        - Authorisedamount
        - Cardremainingbalance
        - Maximumallowedamount
        - Minimumallowedamount
        - Requestedamount
        - Issuerfees
        - Issuercommission
        - Interchangefees
        - Processingfees
        - Currencyconversionfees
        - Internationalserviceassessmentfees
        - Commission
        - Donation
        - Tax
        - Incremental
        - Decremental
        - Reserved
        - Confirmedamount
        - Instructedamount
        - Atmaccessfee
        - Cardholderbillingfee
        - Clearingfee
        - Credittransactionfee
        - Cumulative
        - Debittransactionfee
        - Extra
        - Foreignexchangefee
        - Fundstransfer
        - Instantpaymentfee
        - Instanttransferfee
        - Issuercardholderfee
        - Limit
        - Othernational
        - Otherprivate
        - Reconciliationfee
        - Settlementfee
        - Transactionfee
        - Anticipated
        - Baggage
        - Chargedtocard
        - Clearingpriorityfee
        - Dental
        - Deposit
        - Fundstransferfee
        - Otherqualifiedmedical
        - Prescription
        - Proxy
        - Requestedcashback
        - Settlementpriorityfee
        - Totalhealthcare
        - Transit
        - Vision
        - Connect
        - Data
        - Exchangeticket
        - Exchangeticketfee
        - Fare
        - Foodbeverage
        - Insurance
        - Longdistance
        - Miscellaneous
        - Phone
        - Prepayment
        - Total
        - Usage
        - Predcc
        - Upgrade
        - Clubfee
        - Cargo
        - Dutyfree
        - Ticketdelivery
        - Petcarrier
        - Tourorder
        - Minimuminterchangefee
        - Maximuminterchangefee
        - Cashbackinterchangefee
      type: string
      description: ">\r\n* `Cashback` - Cash-back amount.\r\n* `Gratuity` - Gratuity amount.\r\n* `Fees` - Fees.\r\n* `Rebates` - Global rebate of the transaction. This amount is counted as a negative amount.\r\n* `Valueaddedtax` - Value added tax amount.\r\n* `Actual` - Actual amount.\r\n* `Replacement` - Replacement amount.\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Original` - Original amount authorised during the real-time authorisation process.\r\n* `Surcharge` - Extra fee for a purchase or a withdrawal.\r\n* `Servicefee` - Service fee.\r\n* `Interchangefee` - Interchange fee.\r\n* `Discount` - Discount, rebate or voucher, related to loyalty programs. This amount is counted as a negative amount.\r\n* `Atmcommissionfee` - Commission that the issuer will charge to the cardholder, which should be shown and accepted by the cardholder before the money is disbursed.\r\n* `Authorisedamount` - Transaction amount that has been authorised.\r\n* `Cardremainingbalance` - Remaining allowed amount for this type of transaction with this card, after the transaction, until the end of the card limit period.\r\n* `Maximumallowedamount` - Maximum amount allowed for the transaction in the transaction amount currency if the transaction amount of the request was declined.\r\n* `Minimumallowedamount` - Minimum amount allowed in the TransactionAmount currency if the transaction amount of the request was declined.\r\n* `Requestedamount` - Transaction amount that has been requested to be authorised.\r\n* `Issuerfees` - Fees amount from the card issuer.\r\n* `Issuercommission` - Commission from the card issuer.\r\n* `Interchangefees` - Interchange fees.\r\n* `Processingfees` - Processing fees.\r\n* `Currencyconversionfees` - Currency conversion fees.\r\n* `Internationalserviceassessmentfees` - International service assessment fees.\r\n* `Commission` - Commission, for example for DCC (Dynamic Currency Conversion) transactions.\r\n* `Donation` - Donation amount.\r\n* `Tax` - Taxes applicable to the transaction.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Confirmedamount` - Actual amount that has been paid to the ultimate beneficiary, after all charges etc... have been deducted.\r\n* `Instructedamount` - Amount of money to be moved between the debtor (ordering customer) and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\r\n* `Atmaccessfee` - Fee for giving access to an ATM.\r\n* `Cardholderbillingfee` - Fee related to a cardholder billing.\r\n* `Clearingfee` - Fee related to a clearing transaction.\r\n* `Credittransactionfee` - Fee related to a credit transaction.\r\n* `Cumulative` - Contains the total amount of all authorisations related to the same cardholder purchase activities. Example: total of all incremental or splitted shipment authorisations for the same purchase.\r\n* `Debittransactionfee` - Fee related to a debit transaction.\r\n* `Extra` - Extra charges (for example,  minibar, etc.)\r\n* `Foreignexchangefee` - Fee related to a foreign exchange transaction.\r\n* `Fundstransfer` - Fee related to a funds transfer transaction\r\n* `Instantpaymentfee` - Fee related to an instant payment.\r\n* `Instanttransferfee` - Fee related to an instant transfer transaction.\r\n* `Issuercardholderfee` - Fee applied by the card issuer to the cardholder.\r\n* `Limit` - Limit of amounts for the transaction.\r\n* `Othernational` - Other type of amount defined at national level.\r\n* `Otherprivate` - Other type of amount defined at private level.\r\n* `Reconciliationfee` - Fee related to a reconciliation transaction.\r\n* `Settlementfee` - Fee related to a settlement transaction.\r\n* `Transactionfee` - Fee related to a transaction.\r\n* `Anticipated` - Amount anticipated for the transaction\r\n* `Baggage` - Baggage related fees\r\n* `Chargedtocard` - Amount that has been charged to card account\r\n* `Clearingpriorityfee` - Fee related to a clearing transaction for a given priority.\r\n* `Dental` - Amount qualified for dental prescriptions\r\n* `Deposit` - Deposit amount.\r\n* `Fundstransferfee` - Fee related to a funds transfer.\r\n* `Otherqualifiedmedical` - Amount qualified for other medical expenses\r\n* `Prescription` - Amount for medical prescription\r\n* `Proxy` - Substitute for an amount to be authorised.\r\n* `Requestedcashback` - Requested cashback amount\r\n* `Settlementpriorityfee` - Fee related to a settlement transaction for a given priority.\r\n* `Totalhealthcare` - Total healthcare amount\r\n* `Transit` - Amount in transit\r\n* `Vision` - Amount qualified for medical vision expenses\r\n* `Connect` - Telephone connection-related charge\r\n* `Data` - Data communication related charges\r\n* `Exchangeticket` - Fee for exchanging a ticket (modifying an itinerary)\r\n* `Exchangeticketfee` - Fee for exchanging a ticket (modifying an itinerary)\r\n* `Fare` - Amount of fare\r\n* `Foodbeverage` - Amount of food and beverages\r\n* `Insurance` - Insurance charges\r\n* `Longdistance` - Charges related to a long distance call.\r\n* `Miscellaneous` - Miscellaneous charges not elsewhere defined\r\n* `Phone` - Phone charges\r\n* `Prepayment` - Amount of prepayment\r\n* `Total` - Total amount of charges\r\n* `Usage` - Telephone usage-related charge\r\n* `Predcc` - Local amount before DCC (Dynamic Currency Conversion) was applied.\r\n* `Upgrade` - Amount for an upgrade.\r\n* `Clubfee` - Amount for club fee.\r\n* `Cargo` - Cargo Amount.\r\n* `Dutyfree` - Duty free amount\r\n* `Ticketdelivery` - Ticket delivery amount.\r\n* `Petcarrier` - Pet carrier.\r\n* `Tourorder` - Tour order amount.\r\n* `Minimuminterchangefee` - Minimum interchange fee applicable.\r\n* `Maximuminterchangefee` - Maximum applicable interchange fee.\r\n* `Cashbackinterchangefee` - Interchange fee applicable to cash back amount.\r\n"
    cardtransactioncategorytypevalues:
      type: object
      properties:
        Cardtransactioncategorytypevalues:
          type: string
          description: ''
          format: enumeration
      description: Specifies the category to which the card transaction belongs. (ISO20022)
    cardpaymenttransactionidentificationtypevalues:
      enum:
        - Issuercitidentification
        - Merchantcitidentification
      type: string
      description: ">\r\n* `Issuercitidentification` - Identification, given by the Issuer, of the transaction processed with the cardholder that legitimates this merchant initiated transaction. (ISO20022)\r\n* `Merchantcitidentification` - Identification, given by the merchant, of the transaction processed with the cardholder that legitimates this merchant initiated transaction. (ISO20022)\r\n"
    cardpaymenttransactionidentification:
      type: object
      properties:
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/identifier'
        CardPaymentTransactionIdentificationType:
          $ref: '#/components/schemas/cardpaymenttransactionidentificationtypevalues'
      description: Identification of the transaction assigned by the initiator of the request. For instance refers to POITransactionIdentification if used inside an authorisation request or to SaleTransactionIdentification if the message is a payment request initiated by a sale system. (ISO20022)
    cardpaymenttransactionservicetypevalues:
      enum:
        - Cardsfundtransfer
        - Originalcredit
        - Cardpayment
        - Cashback
        - Cashadvance
        - Cashdeposit
        - Deferredpayment
        - Reservation
        - Loading
        - Refund
        - Quasicash
        - Balance
        - Cardactivation
        - Cardverification
        - Pinchange
        - Validitycheck
        - Aggregation
        - DCC
        - Gratuity
        - Instalment
        - Loyalty
        - Noshow
        - Purchasecorporate
        - Recurringpayment
        - Solicitedavailablefunds
        - Unsolicitedavailablefunds
        - Voiceauthorisation
        - Initialreservation
        - Updatereservation
        - Paymentreservation
        - Additionalpayment
        - Firstrecurring
        - Followingrecurring
        - Persontobusiness
        - Persontoperson
        - Acceptorinstalment
        - Issuerinstalment
        - Unloading
        - Cardsfundtransferpush
        - Cardsfundtransferpull
        - Cashwithdrawal
        - Pinunblock
        - Chosenwithdrawal
        - Preauthorisedwithdrawal
        - Profilewithdrawal
        - Standardwithdrawal
        - Transfercardbillpayment
        - Transferfromcash
        - Transferfromcheque
        - Transferfundsdisbursementgeneral
        - Transfergovernmentdisbursement
        - Transfermerchantdisbursement
        - Transferpayrollpensiondisbursement
        - Nonrefundable
        - Instant
        - Creditadjustement
        - Debitadjustement
        - Createcertificate
        - Renewcerificate
        - Revokecertificate
        - Addwhitelist
        - Removewhitelist
        - Cardinitiatingdirectdebit
        - Guaranteeofpayment
      type: string
      description: ">\r\n* `Cardsfundtransfer` - Transfer of funds to and/or from a card account.\r\n* `Originalcredit` - Original credit.\r\n* `Cardpayment` - Card payment.\r\n* `Cashback` - Card payment with cash-back.\r\n* `Cashadvance` - Cash advance or withdrawals on a POI (Point Of Interaction), or at a bank counter.\r\n* `Cashdeposit` - Cash deposit.\r\n* `Deferredpayment` - Deferred payment.\r\n* `Reservation` - Reservation (pre-authorisation).\r\n* `Loading` - Loading or reloading non-financial account.\r\n* `Refund` - Refund transaction.\r\n* `Quasicash` - Quasi-cash.\r\n* `Balance` - Balance enquiry.\r\n* `Cardactivation` - Card activation.\r\n* `Cardverification` - Card verification.\r\n* `Pinchange` - PIN (Personal Identification Number) change.\r\n* `Validitycheck` - Card validity check.\r\n* `Aggregation` - Aggregation of low payments.\r\n* `DCC` - Dynamic currency conversion (DCC).\r\n* `Gratuity` - Card payment with gratuity.\r\n* `Instalment` - Instalment payment.\r\n* `Loyalty` - Loyalty services.\r\n* `Noshow` - No show after reservation.\r\n* `Purchasecorporate` - Purchase and corporate data.\r\n* `Recurringpayment` - Recurring payment.\r\n* `Solicitedavailablefunds` - Solicited available funds.\r\n* `Unsolicitedavailablefunds` - Unsolicited available funds.\r\n* `Voiceauthorisation` - Voice authorisation.\r\n* `Initialreservation` - Initial reservation.\r\n* `Updatereservation` - Update reservation.\r\n* `Paymentreservation` - Payment after reservation.\r\n* `Additionalpayment` - Additional payment after reservation.\r\n* `Firstrecurring` - Initial recurring payment.\r\n* `Followingrecurring` - Repeat recurring payment.\r\n* `Persontobusiness` - Card payment transaction transfer from person to business.\r\n* `Persontoperson` - Card payment transaction transfer from person to person.\r\n* `Acceptorinstalment` - Instalment payment transaction performed by the acceptor or the acquirer.\r\n* `Issuerinstalment` - Instalment payment transaction performed by the card issuer.\r\n* `Unloading` - Unloading non-financial account.\r\n* `Cardsfundtransferpush` - Transfer of funds to a card or an account.\r\n* `Cardsfundtransferpull` - Transfer of funds from a card or an account.\r\n* `Cashwithdrawal` - Withdrawal of cash on an ATM.\r\n* `Pinunblock` - Unblock the cardholder PIN.\r\n* `Chosenwithdrawal` - Amount and notes values are chosen by the customer.\r\n* `Preauthorisedwithdrawal` - Withdrawal transaction was pre-authorised by another channel (amount could be absent).\r\n* `Profilewithdrawal` - Amount and Notes Values are pre-defined by the customer profile.\r\n* `Standardwithdrawal` - Customer pressed a button associated with a withdrawal of unique amount and notes mix.\r\n* `Transfercardbillpayment` - Transfer for payment of bills.\r\n* `Transferfromcash` - Transfer from cash deposit.\r\n* `Transferfromcheque` - Transfer from cheque deposit.\r\n* `Transferfundsdisbursementgeneral` - Transfer for general disbursement.\r\n* `Transfergovernmentdisbursement` - Transfer for government disbursement.\r\n* `Transfermerchantdisbursement` - Transfer for merchant disbursement.\r\n* `Transferpayrollpensiondisbursement` - Transfer for payroll pension disbursement.\r\n* `Nonrefundable` - Payment of goods or services which are not refundable, for instance low cost airline tickets.\r\n* `Instant` - Instant transaction.\r\n* `Creditadjustement` - Credit adjustment to a previous transaction.\r\n* `Debitadjustement` - Debit adjustment to a previous transaction.\r\n* `Createcertificate` - Creation of an X.509 certificate with the public key and the information of the owner of the asymmetric key provided by the requestor.\r\n* `Renewcerificate` - Renewal of an X.509 certificate, protected by the certificate to renew.\r\n* `Revokecertificate` - Revocation of an active X.509 certificate.\r\n* `Addwhitelist` - Add a POI in the white list of the terminal manager.\r\n* `Removewhitelist` - Remove a POI from the white list of the terminal manager.\r\n* `Cardinitiatingdirectdebit` - Direct Debit initiated by Card.\r\n* `Guaranteeofpayment` - Acceptor claims for guarantee of payment.\r\n"
    cardpaymenttransaction:
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/amount'
        MerchantLocation:
          $ref: '#/components/schemas/location'
        DebitCreditDirection:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        CardTransactionChannel:
          $ref: '#/components/schemas/transactionchanneltypevalues'
        PointOfInteraction:
          $ref: '#/components/schemas/pointofservice'
        CardTransactionDateTime:
          $ref: '#/components/schemas/datetime'
        CardTransactionEnvironmentType:
          $ref: '#/components/schemas/transactionenvironmenttypevalues'
        MerchantCountry:
          $ref: '#/components/schemas/country'
        CardNetwork:
          $ref: '#/components/schemas/cardnetwork'
        AmountQualifier:
          $ref: '#/components/schemas/amountqualifiertypevalues'
        CardPaymentStatus:
          $ref: '#/components/schemas/status'
        CardTransactionCategory:
          $ref: '#/components/schemas/cardtransactioncategorytypevalues'
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/cardpaymenttransactionidentification'
        CardPaymentTransactionServiceType:
          $ref: '#/components/schemas/cardpaymenttransactionservicetypevalues'
      description: Refers to the card transaction as recorded by issuer and/or acquirer - these are consolidated for the settlement period/window
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productstatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productstatus:
      type: object
      properties:
        ProductStatus:
          $ref: '#/components/schemas/status'
        ProductStatusType:
          $ref: '#/components/schemas/productstatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productstatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: The account number associated with the card transaction
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    Consolidation:
      type: object
      properties:
        CardTransactionRecordReference:
          $ref: '#/components/schemas/cardpaymenttransaction'
        CardTransactionRecord:
          $ref: '#/components/schemas/cardpaymenttransaction'
        CardTransactionProductInstanceReference:
          $ref: '#/components/schemas/bankingproduct'
        CardTransactionIssuingBankReference:
          $ref: '#/components/schemas/involvedparty'
        CardTransactionMerchantAcquiringBankReference:
          $ref: '#/components/schemas/involvedparty'
        CardTransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        CardTransactionCurrency:
          $ref: '#/components/schemas/currencycode'
        CardTransactionAmountType:
          $ref: '#/components/schemas/amounttypevalues'
        CardTransactionAmount:
          $ref: '#/components/schemas/amount'
        CardTransactionMerchantReference:
          $ref: '#/components/schemas/involvedparty'
        CardTransactionLocationReference:
          $ref: '#/components/schemas/location'
        CardTransactionProductandServiceReference:
          $ref: '#/components/schemas/bankingproduct'
        CardTransactionDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    cardsettlementtypevalues:
      enum:
        - ScheduledProcessing
        - Ad-HocProcessing
      type: string
      description: "Defines the type of settlement process (e.g. scheduled processing, ad-hoc processing) ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "Defines the type and scheduling of card settlement processing, includes Issuer and Acquirer involvement/scheduling details as necessary ||\r\n|"
    CardFinancialSettlementProcedure:
      type: object
      properties:
        NetworkReference:
          $ref: '#/components/schemas/cardnetwork'
        CardFinancialSettlementProcessType:
          $ref: '#/components/schemas/cardsettlementtypevalues'
        CardFinancialSettlementProcessDateandTime:
          $ref: '#/components/schemas/datetime'
        CardFinancialSettlementServiceSchedule:
          $ref: '#/components/schemas/schedule'
        ParticipantAcquirerBankReference:
          $ref: '#/components/schemas/involvedparty'
        ParticipantIssuerBankReference:
          $ref: '#/components/schemas/involvedparty'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Card Financial Settlement. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CardFinancialSettlementProcedure:
      description: CardFinancialSettlementProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardFinancialSettlementProcedure'
    Consolidation:
      description: Consolidation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consolidation'
    Processing:
      description: Processing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Processing'
    Instruction:
      description: Instruction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Instruction'
    Payment:
      description: Payment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
  parameters:
    cardfinancialsettlementid:
      name: cardfinancialsettlementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    consolidationid:
      name: consolidationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    processingid:
      name: processingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    instructionid:
      name: instructionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    paymentid:
      name: paymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CardFinancialSettlementProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CardFinancialSettlementProcedure'
      required: true
    Consolidation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consolidation'
      required: true
    Processing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Processing'
      required: true
    Instruction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Instruction'
      required: true
    Payment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
      required: true