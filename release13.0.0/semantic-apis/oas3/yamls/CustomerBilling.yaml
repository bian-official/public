openapi: 3.0.1
info:
  title: Customer Billing
  description: 'This service domains provides a central service to compose, issue and track customer billing and invoices'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerBilling/13.0.0
paths:
  /CustomerBilling/Initiate:
    post:
      tags:
        - CR - CustomerBillingProcedure
      summary: InCR Initiate customer billing for a customer
      description: InCR Initiate customer billing for a customer
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CustomerBillingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerBillingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Update':
    put:
      tags:
        - CR - CustomerBillingProcedure
      summary: UpCR Update details of a customer billing transaction
      description: UpCR Update details of a customer billing transaction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerBillingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerBillingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Control':
    put:
      tags:
        - CR - CustomerBillingProcedure
      summary: CoCR Control the processing of customer billing (e.g. delay)
      description: CoCR Control the processing of customer billing (e.g. delay)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerBillingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerBillingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Execute':
    put:
      tags:
        - CR - CustomerBillingProcedure
      summary: ExCR Execute an automated action against an active bill (e.g. resubmit)
      description: ExCR Execute an automated action against an active bill (e.g. resubmit)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerBillingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerBillingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Request':
    put:
      tags:
        - CR - CustomerBillingProcedure
      summary: RqCR Request manual intervention with an active billing procedure
      description: RqCR Request manual intervention with an active billing procedure
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerBillingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerBillingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Retrieve':
    get:
      tags:
        - CR - CustomerBillingProcedure
      summary: ReCR Retrieve details about an active billing procedure
      description: ReCR Retrieve details about an active billing procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerBillingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Invoicing/{invoicingid}/Update':
    put:
      tags:
        - BQ - Invoicing
      summary: UpBQ Update details of a generated invoice
      description: UpBQ Update details of a generated invoice
      operationId: UpdateInvoicing
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
        - $ref: '#/components/parameters/invoicingid'
      requestBody:
        $ref: '#/components/requestBodies/Invoicing'
      responses:
        '200':
          $ref: '#/components/responses/Invoicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Invoicing/{invoicingid}/Retrieve':
    get:
      tags:
        - BQ - Invoicing
      summary: ReBQ Retrieve details about a sent invoice
      description: ReBQ Retrieve details about a sent invoice
      operationId: RetrieveInvoicing
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
        - $ref: '#/components/parameters/invoicingid'
      responses:
        '200':
          $ref: '#/components/responses/Invoicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/TrackingandReminders/Initiate':
    post:
      tags:
        - BQ - TrackingandReminders
      summary: InBQ Initiate tracking and reminder task against an active billing procedure
      description: InBQ Initiate tracking and reminder task against an active billing procedure
      operationId: InitiateTrackingandReminders
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
      requestBody:
        $ref: '#/components/requestBodies/TrackingandReminders'
      responses:
        '200':
          $ref: '#/components/responses/TrackingandReminders'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/TrackingandReminders/{trackingandremindersid}/Exchange':
    put:
      tags:
        - BQ - TrackingandReminders
      summary: 'EcBQ Accept, verify, reject etc. and tracking and reminder action'
      description: 'EcBQ Accept, verify, reject etc. and tracking and reminder action'
      operationId: ExchangeTrackingandReminders
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
        - $ref: '#/components/parameters/trackingandremindersid'
      requestBody:
        $ref: '#/components/requestBodies/TrackingandReminders'
      responses:
        '200':
          $ref: '#/components/responses/TrackingandReminders'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/TrackingandReminders/{trackingandremindersid}/Retrieve':
    get:
      tags:
        - BQ - TrackingandReminders
      summary: RwBQ Retrieve details about tracking and reminder activity
      description: RwBQ Retrieve details about tracking and reminder activity
      operationId: RetrieveTrackingandReminders
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
        - $ref: '#/components/parameters/trackingandremindersid'
      responses:
        '200':
          $ref: '#/components/responses/TrackingandReminders'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Payment/Initiate':
    post:
      tags:
        - BQ - Payment
      summary: InBQ Initiate payment processing against a billing transaction
      description: InBQ Initiate payment processing against a billing transaction
      operationId: InitiatePayment
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          $ref: '#/components/responses/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Payment/{paymentid}/Update':
    put:
      tags:
        - BQ - Payment
      summary: UpBQ Update payment details for a billing transaction
      description: UpBQ Update payment details for a billing transaction
      operationId: UpdatePayment
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
        - $ref: '#/components/parameters/paymentid'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          $ref: '#/components/responses/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Payment/{paymentid}/Exchange':
    put:
      tags:
        - BQ - Payment
      summary: 'EcBQ confirm, reject etc. a payment being applied to a billing transaction'
      description: 'EcBQ confirm, reject etc. a payment being applied to a billing transaction'
      operationId: ExchangePayment
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
        - $ref: '#/components/parameters/paymentid'
      requestBody:
        $ref: '#/components/requestBodies/Payment'
      responses:
        '200':
          $ref: '#/components/responses/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerBilling/{customerbillingid}/Payment/{paymentid}/Retrieve':
    get:
      tags:
        - BQ - Payment
      summary: ReBQ Retrieve payment processing details
      description: ReBQ Retrieve payment processing details
      operationId: RetrievePayment
      parameters:
        - $ref: '#/components/parameters/customerbillingid'
        - $ref: '#/components/parameters/paymentid'
      responses:
        '200':
          $ref: '#/components/responses/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    paymenttypevalues:
      enum:
        - Cashtransaction
        - Domesticpayment
        - Domestichighvaluepayment
        - Domesticprioritypayment
        - Crossborderpayment
        - Crossborderprioritypayment
        - Crossborderhighvaluepayment
        - Thirdcurrencypayment
        - Thirdcurrencyhighvaluepayment
        - Thirdcurrencyprioritypayment
        - Tradesettlementpayment
        - Foreignexchange
        - Equivalentamount
        - Loan
        - Loanrepayment
        - Securities
        - Lockbox
        - Dividend
        - Crossedcheque
        - Opencheque
        - Ordercheque
        - Circularcheque
        - Travellerscheques
        - Bankdraft
        - Cashletter
        - Documentarycredit
        - Billofexchange
        - Collection
        - Cashmanagementtransfer
        - Sweepaccount
        - Topaccount
        - Zerobalanceaccount
        - Standingfacilities
        - Swiftpayservicelevelcredit
        - Priorityservicelevelcredit
        - Standardservicelevelcredit
        - Liquiditytransfer
        - Advancepayment
        - Valuedateadjustment
        - Dvpgross
        - Dvpnet
        - Netting
        - Limitpayment
        - Backup
        - Expresspayment
        - Centralbankoperation
        - Clspayment
        - Eurodomesticpayment
        - Agriculturaltransfer
        - Alimonypayment
        - Balanceretail
        - Bonuspayment.
        - Brokeragefee
        - Capitalbuilding
        - Charitypayment
        - Childbenefit
        - Commercialcredit
        - Commission
        - Commoditytransfer
        - Costs
        - Copyright
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Insurancepremium
        - Intracompanypayment
        - Interest
        - Licensefee
        - Metals
        - Pensionpayment
        - Purchasesaleofgoods
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Salarypayment
        - Socialsecuritybenefit
        - Standingorder
        - Subscription
        - Treasurystatepayment
        - Unemploymentdisabilitybenefit
        - Valueaddedtaxpayment
        - Withholdingtax
        - Taxpayment
        - Miscellaneous
        - Overnightdeposit
        - Marginallending
        - Other
        - Upfront
        - Unwind
        - Principalexchange
      type: string
      description: ">\r\n* `Cashtransaction` - Transaction is a withdrawal/deposit of cash.\r\n* `Domesticpayment` - Payment has an origin and a destination in the same country, and is made in the currency of that country.\r\n* `Domestichighvaluepayment` - Transaction is a high value payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Domesticprioritypayment` - Transaction is a priority payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Crossborderpayment` - Payment has an origin in one country, a destination in another, and is made in the currency of either the origin or destination country.\r\n* `Crossborderprioritypayment` - Transaction is a priority payment that has an origin in one country and a destination in another and is made in the currency of either the origin or destination country.\r\n* `Crossborderhighvaluepayment` - Transaction is a high value payment that has an origin in one country and a destination in another country and is made in the currency of either the origin or destination country.\r\n* `Thirdcurrencypayment` - Transaction is a payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyhighvaluepayment` - Transaction is a high value payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyprioritypayment` - Payment is made in a third currency to the origin and destination countries. The origin and destination countries may be the same country.\r\n* `Tradesettlementpayment` - Transaction is the settlement of a trade, eg, a securities transaction.\r\n* `Foreignexchange` - Transaction isthe settlement of a foreign exchange deal.\r\n* `Equivalentamount` - Transaction is an equivalent amount relative to a currency conversion.\r\n* `Loan` - Transaction is the payment of a specific amount of money lent by a creditor/lender.\r\n* `Loanrepayment` - Transaction is an amount of money transferred in repayment of loan.\r\n* `Securities` - Transaction is a payment of securities.\r\n* `Lockbox` - Transaction is a payment(s) resulting from a lock box service.\r\n* `Dividend` - Transaction is a payment of dividends.\r\n* `Crossedcheque` - Transaction is a crossed cheque. A crossed check has two parallel lines across its face, indicating that the cheque must be paid into an account and not cashed over the counter.\r\n* `Opencheque` - Transaction is an uncrossed cheque that can be cashed at the bank of origin.\r\n* `Ordercheque` - Transaction is a cheque made payable to a named recipient 'or order' enabling the creditor to either deposit it in an account or endorse it to a third party, ie, transfer the rights to the cheque by signing it on the reverse.\r\n* `Circularcheque` - Transaction is an instruction from a bank to its correspondent bank to pay the creditor a stated sum of money on presentation of a means of identification.\r\n* `Travellerscheques` - Transaction is a payment resulting from travellers cheques.\r\n* `Bankdraft` - Transaction is a cheque drawn by a bank on itself or its agent. A person who owes money to another buys the draft from a bank for cash and hands it to the creditor who need have no fear that it might be dishonoured.\r\n* `Cashletter` - Transaction is a cash letter. A cash letter is a payment instrument in the form of a covering letter, whereby a financial institution, ie, the remitting bank, requests credit for one or more financial documents under usual reserve, ie, subject to final payment.\r\n* `Documentarycredit` - Transaction is a documentary credit from one banker to another, authorising the payment of a specified sum of money to the person named in the document, based on specified conditions.\r\n* `Billofexchange` - Transaction is a written order from a drawer to a drawee to pay a specified sum of money upon demand, or on a specified date, to the drawer or to a third party specified by the drawer. A bill of exchange is also called a draft.\r\n* `Collection` - Transaction is a collection. A collection is the act of sending a cheque, bill of exchange or another financial instrument to the prospective financial institution for payment.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Sweepaccount` - Transaction relates to a cash management instruction, requesting a sweep of the account of the debtor.\r\n* `Topaccount` - Transaction is a cash management instruction, requesting to top the account of the debtor above a certain floor amount. The floor amount, if not pre-agreed by the parties involved, may be specified.\r\n* `Zerobalanceaccount` - Transaction is a cash management instruction, requesting to zero balance the account of the debtor.\r\n* `Standingfacilities` - Payment is linked to overnight deposits and the marginal lending facility.\r\n* `Swiftpayservicelevelcredit` - Transaction is a credit transfer to be processed according to the SWIFTPay Service Level.\r\n* `Priorityservicelevelcredit` - Transaction is a credit transfer to be processed according to the Priority Service Level.\r\n* `Standardservicelevelcredit` - Transaction is a credit transfer to be processed according to the Standard Service Level.\r\n* `Liquiditytransfer` - Payment is made to transfer liquidity to/from the settlement account of a member, to/from the current account held at the central institution or any other institution.\r\n* `Advancepayment` - Transaction is a payment made in advance or as an advance.\r\n* `Valuedateadjustment` - Transaction reverses a previously incorrectly value dated entry.\r\n* `Dvpgross` - Gross cash payment offsetting the amount owed/due for a securities transaction settlement.\r\n* `Dvpnet` - Net payment offsetting the cash balance due/owed for a series of securities transactions settlement.\r\n* `Netting` - Transaction is a netting operation.\r\n* `Limitpayment` - Transaction is a payment that is processed when the pool of liquidity exceeds the minimum value reserved for an express payment in the RTGSPlus system.\r\n* `Backup` - Payment is made under the recovery procedure to move liquidity to/from the settlement account of a member according to the specifications of the system.\r\n* `Expresspayment` - Transaction is a payment that is processed whenever liquidity is available on the settlement account of a member of the RTGSPlus system.\r\n* `Centralbankoperation` - Payment is made to settle an operation made with the central bank.\r\n* `Clspayment` - Payment is linked to CLS activities.\r\n* `Eurodomesticpayment` - Transaction is a credit transfer in Euro with its country of origin and country of destination within the European Union. The origin and destination countries may be one and the same country.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is a payment(s) made by one spouse to the other after a separation or divorce. An alimony payment may be applied to other family relationships.\r\n* `Balanceretail` - Transaction is a payment offsetting the net cash balance owed/due in a retail payment system.\r\n* `Bonuspayment.` - Net cash payment offsetting the balance due/owed in a retail payment system.\r\n* `Brokeragefee` - Transaction is charges levied by a broker.\r\n* `Capitalbuilding` - Transaction is payment into a personal pension scheme for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Childbenefit` - Transaction is a payment made to a parent/guardian to help maintain a child.\r\n* `Commercialcredit` - Transaction is settlement of a commercial credit.\r\n* `Commission` - Transaction is payment of a fee for executing a transaction.\r\n* `Commoditytransfer` - Transaction is a payment of products traded on a commodity exchange.\r\n* `Costs` - Transaction is apayment of costs.\r\n* `Copyright` - Transaction is a payment of copyright.\r\n* `Governmentpayment` - Transaction is apayment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is a payment of an instalment or to the settlement of a hire-purchase agreement.\r\n* `Insurancepremium` - Transaction is a payment of an insurance premium.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Interest` - Transaction is a payment of interest.\r\n* `Licensefee` - Transaction is a payment of a license fee.\r\n* `Metals` - Transaction is a purchase or sale of metals.\r\n* `Pensionpayment` - Transaction is a payment of a pension allowance.\r\n* `Purchasesaleofgoods` - Transaction is a payment for the purchase and sale of goods.\r\n* `Refund` - Transaction is a repayment of funds.\r\n* `Rent` - Transaction is a payment of rent.\r\n* `Royalties` - Transaction is a payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is a payment for the purchase and sale of services.\r\n* `Salarypayment` - Transaction is a payment of salaries.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, a payment made by a government to support individuals.\r\n* `Standingorder` - Transaction is a standing order. A standing order is an instruction given by a party having explicit authority on the account to debit, ie, either debit account owner or originating party, to a first agent to process cash transfers at specified intervals during an implicit or explicit period of time. It is given once, and is valid for an open or closed period of time.\r\n* `Subscription` - Transaction is a payment of a subscription.\r\n* `Treasurystatepayment` - Payment is linked to the Treasury State.\r\n* `Unemploymentdisabilitybenefit` - Transaction is a payment made to an unemployed/disabled person.\r\n* `Valueaddedtaxpayment` - Transaction is apayment of value added tax.\r\n* `Withholdingtax` - Transaction is a payment of withholding tax.\r\n* `Taxpayment` - Transaction is a payment of taxes.\r\n* `Miscellaneous` - Transaction is for an unspecified reason. Miscellaneous is to be used only when no explicit code is available.\r\n* `Overnightdeposit` - Transaction is linked to an overnight deposit.\r\n* `Marginallending` - Transaction is linked to the marginal lending facility.\r\n* `Other` - Specifies that a proprietary code must be indicated.\r\n* `Upfront` - Transaction is an initial payment made by one of the counterparties  either to bring a transaction to fair value or for any other reason that may be the cause of an off-market transaction.\r\n* `Unwind` - Transaction is the final settlement payment made when a transaction is unwound prior to its end date or a payment that may result due to the full termination of derivative transaction(s).\r\n* `Principalexchange` - Transaction is an exchange of notional values for cross-currency swaps.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The payment details (e.g. payment account) ||\r\n|"
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: The total amount due CurrencyAndAmount|CurrencyAndAmount (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022  ()
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: The due date for payment ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: The legal entity being charged (will usually be the customer) Party|Party (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM ()
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: The billing period is appropriate (e.g. for an on-going service) DateTimePeriod|DateTimePeriod (https://www.iso20022.org/standardsrepository/type/DateTimePeriod)|Standard|ISO20022 BM ()
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer for the billing ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: An identifier that allows to uniquely refer to a Payment Transaction.
    paymentdatetimetypevalues:
      enum:
        - RequestedExecutionDate
        - AcceptanceDate
        - CreationDate
        - ValueDate
        - DueDate
        - ExpiryDate
      type: string
      description: ">\r\n* `RequestedExecutionDate` - Date at which the initiating party requests the clearing agent to process the payment. ISO20022\nUsage: This is the date on which the debtor's account is to be debited. If payment by cheque, the date when the cheque must be generated by the bank. \r\n* `AcceptanceDate` - Date and time at which all processing conditions for execution of the payment are met and adequate financial cover is available at the account servicing agent. ISO20022\r\n* `CreationDate` - Date and time at which the payment execution was created by the instructing agent. ISO20022\r\n* `ValueDate` - Date on which a payment must be executed (ISO20022)\r\n* `DueDate` - Due date for the payment. (ISO20022)\r\n* `ExpiryDate` - \r\n"
    paymentdatetime:
      type: object
      properties:
        PaymentDate:
          $ref: '#/components/schemas/datetime'
        PaymentDateType:
          $ref: '#/components/schemas/paymentdatetimetypevalues'
      description: ''
    paymentpurposevalues:
      enum:
        - Salarypayment
        - Treasurypayment
        - Advancepayment
        - Agriculturaltransfer
        - Alimonypayment
        - Childbenefit
        - Unemploymentdisabilitybenefit
        - Bonuspayment.
        - Cashmanagementtransfer
        - Capitalbuilding
        - Charitypayment
        - Collectionpayment
        - Commoditytransfer
        - Commercialpayment
        - Commission
        - Costs
        - Copyright
        - Dividend
        - Foreignexchange
        - Purchasesaleofgoods
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Intracompanypayment
        - Insurancepremium
        - Interest
        - Licensefee
        - Loan
        - Loanrepayment
        - Netting
        - Payroll
        - Pensionpayment
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Securities
        - Socialsecuritybenefit
        - Subscription
        - Taxpayment
        - Valueaddedtaxpayment
        - Consumerthirdpartyconsolidatedpayment
        - Debitcollectionpayment
        - Supplierpayment
        - Hedging
        - Multipleservicetypes
        - Nototherwisespecified
        - Cardpayment
        - Creditcardbill
        - Ferry
        - Air
        - Bus
        - Railway
        - Convalescentcarefacility
        - Dentalservices
        - Anesthesiaservices
        - Homehealthcare
        - Hospitalcare
        - Intermediatecarefacility
        - Longtermcarefacility
        - Medicalservices
        - Visioncare
        - Durablemedicaleequipment
        - Cabletvbill
        - Electricitybill
        - Gasbill
        - Telephonebill
        - Othertelecomrelatedbill
        - Waterbill
        - Study
        - Pricepayment
        - Installment
        - Recurringinstallmentpayment
        - Openingfee
        - Cancellationfee
        - Governmentinsurance
        - Insurancepremiumcar
        - Laborinsurance
        - Lifeinsurance
        - Propertyinsurance
        - Healthinsurance
        - Carloanprincipalrepayment
        - Housingloanrepayment
        - Companysocialloanpaymenttobank
        - Estatetax
        - Housingtax
        - Incometax
        - Netincometax
        - Businessexpenses
        - Trustfund
        - Networkcharge
        - Networkcommunication
        - Receiptpayment
        - Paymentterms
        - Other
        - Withholding
      type: string
      description: ">\r\n* `Salarypayment` - Transaction is the payment of salaries.\r\n* `Treasurypayment` - Transaction is related to treasury operations.\r\n* `Advancepayment` - Transaction is an advance payment.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is the payment of alimony.\r\n* `Childbenefit` - Transaction is related to a payment made to assist parent/guardian to maintain child.\r\n* `Unemploymentdisabilitybenefit` - Transaction is related to a payment to a person who is unemployed/disabled.\r\n* `Bonuspayment.` - Transaction is related to payment of a bonus.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Capitalbuilding` - Transaction is related to capital building fringe fortune, ie capital building for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Collectionpayment` - Transaction is a collection of funds initiated via a credit transfer or direct debit.\r\n* `Commoditytransfer` - Transaction is payment of commodities.\r\n* `Commercialpayment` - Transaction is related to a payment of commercial credit or debit. (formerly CommercialCredit).\r\n* `Commission` - Transaction is payment of commission.\r\n* `Costs` - Transaction is related to payment of costs.\r\n* `Copyright` - Transaction is payment of copyright.\r\n* `Dividend` - Transaction is payment of dividends.\r\n* `Foreignexchange` - Transaction is related to a foreign exchange operation.\r\n* `Purchasesaleofgoods` - Transaction is related to purchase and sale of goods.\r\n* `Governmentpayment` - Transaction is a payment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is payment for an installment/hire-purchase agreement.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Insurancepremium` - Transaction is payment of an insurance premium.\r\n* `Interest` - Transaction is payment of interest.\r\n* `Licensefee` - Transaction is payment of a license fee.\r\n* `Loan` - Transaction is related to transfer of loan to borrower.\r\n* `Loanrepayment` - Transaction is related to repayment of loan to lender.\r\n* `Netting` - Transaction is related to a netting operation.\r\n* `Payroll` - Transaction is related to the payment of payroll.\r\n* `Pensionpayment` - Transaction is the payment of pension.\r\n* `Refund` - Transaction is the payment of a refund.\r\n* `Rent` - Transaction is the payment of rent.\r\n* `Royalties` - Transaction is the payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is related to purchase and sale of services.\r\n* `Securities` - Transaction is the payment of securities.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, ie payment made by a government to support individuals.\r\n* `Subscription` - Transaction is related to a payment of information or entertainment services either in printed or electronic form.\r\n* `Taxpayment` - Transaction is the payment of taxes.\r\n* `Valueaddedtaxpayment` - Transaction is the payment of value added tax.\r\n* `Consumerthirdpartyconsolidatedpayment` - Transaction is a payment used by a third party who can collect funds to pay on behalf of consumers, ie credit counseling or bill payment companies.\r\n* `Debitcollectionpayment` - Collection of funds initiated via a debit transfer.\r\n* `Supplierpayment` - Transaction is related to a payment to a supplier.\r\n* `Hedging` - Transaction is related to a hedging operation.\r\n* `Multipleservicetypes` - Transaction is related to a payment for multiple service types.\r\n* `Nototherwisespecified` - Transaction is related to a payment for type of services not specified elsewhere.\r\n* `Cardpayment` - Transaction is related to a payment of credit card account.\r\n* `Creditcardbill` - Transaction is related to a payment of credit card bill.\r\n* `Ferry` - Transaction is a payment for ferry related business.\r\n* `Air` - Transaction is a payment for air transport related business.\r\n* `Bus` - Transaction is a payment for bus transport related business.\r\n* `Railway` - Transaction is a payment for railway transport related business.\r\n* `Convalescentcarefacility` - Transaction is a payment for convalescence care facility services.\r\n* `Dentalservices` - Transaction is a payment for dental services.\r\n* `Anesthesiaservices` - Transaction is a payment for anesthesia services.\r\n* `Homehealthcare` - Transaction is a payment for home health care services.\r\n* `Hospitalcare` - Transaction is a payment for hospital care services.\r\n* `Intermediatecarefacility` - Transaction is a payment for intermediate care facility services.\r\n* `Longtermcarefacility` - Transaction is a payment for long-term care facility services.\r\n* `Medicalservices` - Transaction is a payment for medical care services.\r\n* `Visioncare` - Transaction is a payment for vision care services.\r\n* `Durablemedicaleequipment` - Transaction is a payment is for use of durable medical equipment.\r\n* `Cabletvbill` - Transaction is related to a payment of cable TV bill.\r\n* `Electricitybill` - Transaction is related to a payment of electricity bill.\r\n* `Gasbill` - Transaction is related to a payment of gas bill.\r\n* `Telephonebill` - Transaction is related to a payment of telephone bill.\r\n* `Othertelecomrelatedbill` - Transaction is related to a payment of other telecom related bill.\r\n* `Waterbill` - Transaction is related to a payment of water bill.\r\n* `Study` - Transaction is related to a payment of study/tuition costs.\r\n* `Pricepayment` - Transaction is related to a payment of a price.\r\n* `Installment` - Transaction is related to a payment of an installment.\r\n* `Recurringinstallmentpayment` - Transaction is related to a payment of a recurring installment made at regular intervals.\r\n* `Openingfee` - Transaction is related to a payment of opening fee.\r\n* `Cancellationfee` - Transaction is related to a payment of cancellation fee.\r\n* `Governmentinsurance` - Transaction is related to a payment of government insurance.\r\n* `Insurancepremiumcar` - Transaction is a payment of car insurance premium.\r\n* `Laborinsurance` - Transaction is a payment of labor insurance.\r\n* `Lifeinsurance` - Transaction is a payment of life insurance.\r\n* `Propertyinsurance` - Transaction is a payment of property insurance.\r\n* `Healthinsurance` - Transaction is a payment of health insurance.\r\n* `Carloanprincipalrepayment` - Transaction is a payment of car loan principal payment.\r\n* `Housingloanrepayment` - Transaction is related to a payment of housing loan.\r\n* `Companysocialloanpaymenttobank` - Transaction is a payment by a company to a bank for financing social loans to employees.\r\n* `Estatetax` - Transaction is related to a payment of estate tax.\r\n* `Housingtax` - Transaction is related to a payment of housing tax.\r\n* `Incometax` - Transaction is related to a payment of income tax.\r\n* `Netincometax` - Transaction is related to a payment of net income tax.\r\n* `Businessexpenses` - Transaction is related to a payment of business expenses.\r\n* `Trustfund` - Transaction is related to a payment of a trust fund.\r\n* `Networkcharge` - Transaction is related to a payment of network charges.\r\n* `Networkcommunication` - Transaction is related to a payment of network communication.\r\n* `Receiptpayment` - Transaction is related to a payment of receipt.\r\n* `Paymentterms` - Transaction is related to payment terms specifications.\r\n* `Other` - Other payment purpose.\r\n* `Withholding` - Transaction is related to a payment of withholding tax.\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    paymenttransactionstatustypevalues:
      enum:
        - Acceptedtechnicalvalidation
        - Received
        - Partiallyaccepted
        - Rejected
        - Pending
        - Acceptedcustomerprofile
        - Acceptedsettlementinprocess
        - Acceptedsettlementcompleted
        - Accepted
        - Acceptedcancellationrequest
        - Rejectedcancellationrequest
        - Acceptedwithchange
        - Partiallyacceptedcancellationrequest
        - Pendingcancellationrequest
        - Acceptedcreditsettlementcompleted
        - Paymentcancelled
        - Nocancellationprocess
      type: string
      description: ">\r\n* `Acceptedtechnicalvalidation` - Authentication and syntactical and semantical validation are successful.\r\n* `Received` - Payment initiation has been received by the receiving agent.\r\n* `Partiallyaccepted` - A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.\r\n* `Rejected` - Payment initiation or individual transaction included in the payment initiation has been rejected.\r\n* `Pending` - Payment initiation or individual transaction included in the payment initiation is pending.  Further checks and status update will be performed.\r\n* `Acceptedcustomerprofile` - Preceding check of technical validation was successful. Customer profile check was also successful.\r\n* `Acceptedsettlementinprocess` - All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\r\n* `Acceptedsettlementcompleted` - Settlement on the debtor's account has been completed.\r\n* `Accepted` - Request is accepted.\r\n* `Acceptedcancellationrequest` - Cancellation is accepted.\r\n* `Rejectedcancellationrequest` - Cancellation request is rejected\r\n* `Acceptedwithchange` - Instruction is accepted but a change will be made, such as date or remittance not sent.\r\n* `Partiallyacceptedcancellationrequest` - Cancellation is partially accepted.\r\n* `Pendingcancellationrequest` - Cancellation request is pending.\r\n* `Acceptedcreditsettlementcompleted` - Settlement on the creditor's account has been completed.\r\n* `Paymentcancelled` - Payment is cancelled.\r\n* `Nocancellationprocess` - There is no cancellation process ongoing\r\n"
    paymenttransactionstatus:
      type: object
      properties:
        PaymentTransactionStatus:
          $ref: '#/components/schemas/status'
        PaymentTransactionStatusType:
          $ref: '#/components/schemas/paymenttransactionstatustypevalues'
      description: "Specifies the status of a payment transaction at a specified time.\nElements"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    paymenttransaction:
      type: object
      properties:
        PaymentTransactionType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentTransactionAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionIdentification:
          $ref: '#/components/schemas/identifier'
        PaymentTransactionUsedMechanism:
          $ref: '#/components/schemas/text'
        PaymentTransactionDatetime:
          $ref: '#/components/schemas/paymentdatetime'
        PaymentTransactionPurpose:
          $ref: '#/components/schemas/paymentpurposevalues'
        PaymentTransactionStatus:
          $ref: '#/components/schemas/paymenttransactionstatus'
        PaymentTransactionAppliedFeeAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionCurrency:
          $ref: '#/components/schemas/currencytypevalues'
        PaymentCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: Reference to the received payment transaction
    Payment:
      type: object
      properties:
        PaymentTransactionReference:
          $ref: '#/components/schemas/paymenttransaction'
        PaymentTransaction:
          $ref: '#/components/schemas/paymenttransaction'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: ''
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: The billing address (can be an electronic location Location/Address|Location/Address (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022 BM ()
    invoice:
      type: object
      properties:
        InvoiceIdentification:
          $ref: '#/components/schemas/identifier'
        InvoiceType:
          $ref: '#/components/schemas/text'
        InvoiceDueDate:
          $ref: '#/components/schemas/datetime'
        InvoicePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        InvoiceAssignedDocument:
          $ref: '#/components/schemas/document'
        InvoiceAdress:
          $ref: '#/components/schemas/address'
        InvoiceAmount:
          $ref: '#/components/schemas/amount'
        InvoiceStatus:
          $ref: '#/components/schemas/status'
        CreditDebitNoteAmount:
          $ref: '#/components/schemas/amount'
        TotalTaxAmount:
          $ref: '#/components/schemas/amount'
        TotalInvoiceAmount:
          $ref: '#/components/schemas/amount'
        InvoiceCurrency:
          $ref: '#/components/schemas/currencycode'
        TotalCharge:
          $ref: '#/components/schemas/amount'
        TotalPrepaidAmount:
          $ref: '#/components/schemas/amount'
        TotalNetAmount:
          $ref: '#/components/schemas/amount'
        CreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        RemittedAmount:
          $ref: '#/components/schemas/amount'
        InvoiceIssueDate:
          $ref: '#/components/schemas/datetime'
      description: The customer invoice record
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: The document reference for the sent invoice
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Work documentation, forms and schedules produced and referenced during the analysis (for future reference)'
    Invoicing:
      type: object
      properties:
        CustomerInvoiceRecord:
          $ref: '#/components/schemas/invoice'
        InvoiceDate:
          $ref: '#/components/schemas/datetime'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        CorrespondenceInstanceReference:
          $ref: '#/components/schemas/identifier'
        Invoice:
          $ref: '#/components/schemas/invoice'
        InvoicingWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The target and actual billing activities and dates ||\r\n|"
    deviceidentificationtypevalues:
      enum:
        - IMEI
        - Serialnumber
        - Secureelementidentification
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `IMEI` - International Mobile Equipment Identity.\r\n* `Serialnumber` - Device serial number.\r\n* `Secureelementidentification` - Secure element ID.\r\n* `Othernational` - Other nationally assigned code.\r\n* `Otherprivate` - Other privately assigned code.\r\n"
    deviceidentification:
      type: object
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/identifier'
        DeviceIdentificationType:
          $ref: '#/components/schemas/deviceidentificationtypevalues'
      description: ''
    devicetypevalues:
      enum:
        - Securecardreader
        - Nonsecurecardreader
        - Mobile
        - Tablet
        - Personalcomputer
        - Othernational
        - Otherprivate
        - Wearable
        - Vehicle
        - Embedded
        - Keyfob
        - Jewellery
        - Sticker
        - Gamingdevice
        - Watch
        - Unknown
        - BiometricDevice
      type: string
      description: ">\r\n* `Securecardreader` - Secure card reader attached to the customer device\r\n* `Nonsecurecardreader` - Non-secure card reader attached to the customer device.\r\n* `Mobile` - Mobile phone\r\n* `Tablet` - Tablet\r\n* `Personalcomputer` - Personal computer\r\n* `Othernational` - Other device defined at national level\r\n* `Otherprivate` - Other device defined in a private way.\r\n* `Wearable` - Wearable device.\r\n* `Vehicle` - Vehicle.\r\n* `Embedded` - Embedded in a device.\r\n* `Keyfob` - Key Fob\r\n* `Jewellery` - Jewellery\r\n* `Sticker` - Sticker\r\n* `Gamingdevice` - Gaming Device\r\n* `Watch` - Watch\r\n* `Unknown` - Device type unknown\r\n* `BiometricDevice` - A biometric device is a security identification and authentication device. Such devices use automated methods of verifying or recognising the identity of a living person based on a physiological or behavioral characteristic.\nhttps://en.wikipedia.org/wiki/Biometric_device\n\r\n"
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: Country of the location.
    deviceoperatingsystemtypevalues:
      enum:
        - Android
        - Ios
        - Windows
        - Blackberry
        - Tizen
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `Android` - Android operating system.\r\n* `Ios` - iOS operating system.\r\n* `Windows` - Windows operating system.\r\n* `Blackberry` - Blackberry operating system.\r\n* `Tizen` - Tizen operating system.\r\n* `Othernational` - Other nationally defined code.\r\n* `Otherprivate` - Other privately defined code.\r\n"
    device:
      type: object
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/deviceidentification'
        DeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        DeviceProperty:
          $ref: '#/components/schemas/text'
        DeviceElement:
          $ref: '#/components/schemas/text'
        DeviceStatus:
          $ref: '#/components/schemas/status'
        DeviceVersion:
          type: string
          description: ''
          format: number
        DeviceDateTime:
          $ref: '#/components/schemas/datetime'
        DeviceDescription:
          $ref: '#/components/schemas/text'
        DeviceName:
          $ref: '#/components/schemas/name'
        DeviceLanguage:
          $ref: '#/components/schemas/text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/text'
        DeviceLocation:
          $ref: '#/components/schemas/location'
        DeviceManufacturer:
          $ref: '#/components/schemas/text'
        DeviceCountry:
          $ref: '#/components/schemas/country'
        DeviceAddress:
          $ref: '#/components/schemas/address'
        DeviceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        DeviceOperatingSystem:
          $ref: '#/components/schemas/deviceoperatingsystemtypevalues'
      description: ''
    customercontact:
      type: object
      properties:
        ContactType:
          $ref: '#/components/schemas/text'
        ContactDateTime:
          $ref: '#/components/schemas/datetime'
        ContactLocation:
          $ref: '#/components/schemas/location'
        ContactSchedule:
          $ref: '#/components/schemas/schedule'
        ContactResult:
          $ref: '#/components/schemas/text'
        ContactPurpose:
          $ref: '#/components/schemas/text'
        ContactDevice:
          $ref: '#/components/schemas/device'
        ContactIndicator:
          $ref: '#/components/schemas/text'
        ContactContent:
          $ref: '#/components/schemas/text'
      description: Reference to an outbound contact established with the customer
    messagetypevalues:
      enum:
        - FinancialMessage
        - NonFinancialMessage
        - InboundMessage
        - OutboundMessage
      type: string
      description: ">\r\n* `FinancialMessage` - \r\n* `NonFinancialMessage` - \r\n* `InboundMessage` - \r\n* `OutboundMessage` - \r\n"
    message:
      type: object
      properties:
        MessageType:
          $ref: '#/components/schemas/messagetypevalues'
        MessageContent:
          $ref: '#/components/schemas/text'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/status'
      description: Content of the reminder message
    TrackingandReminders:
      type: object
      properties:
        CustomerReminderContactRecord:
          $ref: '#/components/schemas/customercontact'
        ContactMessage:
          $ref: '#/components/schemas/message'
        ContactDate:
          $ref: '#/components/schemas/datetime'
        ContactResult:
          $ref: '#/components/schemas/text'
        TrackingandRemindersResult:
          $ref: '#/components/schemas/text'
        TrackingandRemindersWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: "The type of customer billing (e.g. product fees, penalties) ||\r\n|"
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: "The product instance associated with the charge ||\r\n|"
    customeragreement:
      type: object
      properties:
        CustomerAgreement:
          type: string
          description: 'An agreement between a bank and its customer. '
          format: class
      description: "The agreement covering the product arrangement (referenced for any specific billing terms and conditions) ||\r\n|"
    statementtypevalues:
      enum:
        - FinancialStatement
        - AccountStatement
        - CustomerStatement
      type: string
      description: ">\r\n* `FinancialStatement` - \r\n* `AccountStatement` - \r\n* `CustomerStatement` - \r\n"
    statement:
      type: object
      properties:
        StatementType:
          $ref: '#/components/schemas/statementtypevalues'
      description: "The itemized breakdown of the charges with references ||\r\n|"
    CustomerBillingProcedure:
      type: object
      properties:
        CustomerBillingTransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        CustomerBillingTransactionDescription:
          $ref: '#/components/schemas/text'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        CustomerAgreementReference:
          $ref: '#/components/schemas/customeragreement'
        CustomerBillingProductandServiceActionDescription:
          $ref: '#/components/schemas/text'
        CustomerBillingParty:
          $ref: '#/components/schemas/party'
        CustomerBillingAddress:
          $ref: '#/components/schemas/address'
        CustomerBillingPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        CustomerBillingStatement:
          $ref: '#/components/schemas/statement'
        CustomerBillingAmount:
          $ref: '#/components/schemas/amount'
        CustomerBillingPaymentDueDate:
          $ref: '#/components/schemas/datetime'
        CustomerBillingPaymentDetails:
          $ref: '#/components/schemas/text'
        CustomerBillingPaymentSchedule:
          $ref: '#/components/schemas/schedule'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Customer Billing. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerBillingProcedure:
      description: CustomerBillingProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerBillingProcedure'
    Invoicing:
      description: Invoicing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoicing'
    TrackingandReminders:
      description: TrackingandReminders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackingandReminders'
    Payment:
      description: Payment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
  parameters:
    customerbillingid:
      name: customerbillingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    invoicingid:
      name: invoicingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    trackingandremindersid:
      name: trackingandremindersid
      in: path
      required: true
      style: simple
      schema:
        type: string
    paymentid:
      name: paymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerBillingProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerBillingProcedure'
      required: true
    Invoicing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoicing'
      required: true
    TrackingandReminders:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackingandReminders'
      required: true
    Payment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
      required: true