openapi: 3.0.1
info:
  title: Fraud Diagnosis
  description: This service domain handles the evaluation of detected possible fraud to support an appropriate response to contain the exposure
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/FraudDiagnosis/13.0.0
paths:
  /FraudDiagnosis/Evaluate:
    post:
      tags:
        - CR - FraudDiagnosisAnalysis
      summary: EvCR Start a fraud diagnosis evaluation on a transaction
      description: EvCR Start a fraud diagnosis evaluation on a transaction
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/FraudDiagnosisAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/FraudDiagnosisAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/Update':
    put:
      tags:
        - CR - FraudDiagnosisAnalysis
      summary: UpCR Update details for an active fraud diagnosis
      description: UpCR Update details for an active fraud diagnosis
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
      requestBody:
        $ref: '#/components/requestBodies/FraudDiagnosisAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/FraudDiagnosisAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/Exchange':
    put:
      tags:
        - CR - FraudDiagnosisAnalysis
      summary: ExCR Perform an automated action to an active diagnosis (e.g. upload additional data)
      description: ExCR Perform an automated action to an active diagnosis (e.g. upload additional data)
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
      requestBody:
        $ref: '#/components/requestBodies/FraudDiagnosisAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/FraudDiagnosisAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/Request':
    put:
      tags:
        - CR - FraudDiagnosisAnalysis
      summary: RqCR Request manual intervention for an active diagnosis (e.g. request access to analyst)
      description: RqCR Request manual intervention for an active diagnosis (e.g. request access to analyst)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
      requestBody:
        $ref: '#/components/requestBodies/FraudDiagnosisAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/FraudDiagnosisAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/Retrieve':
    get:
      tags:
        - CR - FraudDiagnosisAnalysis
      summary: ReCR Retrieve details about a fraud diagnosis
      description: ReCR Retrieve details about a fraud diagnosis
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
      responses:
        '200':
          $ref: '#/components/responses/FraudDiagnosisAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/CustomerBehavior/{customerbehaviorid}/Retrieve':
    get:
      tags:
        - BQ - CustomerBehavior
      summary: ReBQ Retrieve details about a customer behavior analysis
      description: ReBQ Retrieve details about a customer behavior analysis
      operationId: RetrieveCustomerBehavior
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
        - $ref: '#/components/parameters/customerbehaviorid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerBehavior'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/EconomicModel/{economicmodelid}/Retrieve':
    get:
      tags:
        - BQ - EconomicModel
      summary: ReBQ Retrieve details about an economic model analysis
      description: ReBQ Retrieve details about an economic model analysis
      operationId: RetrieveEconomicModel
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
        - $ref: '#/components/parameters/economicmodelid'
      responses:
        '200':
          $ref: '#/components/responses/EconomicModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/AnalystReview/{analystreviewid}/Request':
    put:
      tags:
        - BQ - AnalystReview
      summary: RqBQ Request access to an analist for an active diagnosis
      description: RqBQ Request access to an analist for an active diagnosis
      operationId: RequestAnalystReview
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
        - $ref: '#/components/parameters/analystreviewid'
      requestBody:
        $ref: '#/components/requestBodies/AnalystReview'
      responses:
        '200':
          $ref: '#/components/responses/AnalystReview'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudDiagnosis/{frauddiagnosisid}/AnalystReview/{analystreviewid}/Retrieve':
    get:
      tags:
        - BQ - AnalystReview
      summary: ReBQ Retrieve details about a analyst review of a transaction
      description: ReBQ Retrieve details about a analyst review of a transaction
      operationId: RetrieveAnalystReview
      parameters:
        - $ref: '#/components/parameters/frauddiagnosisid'
        - $ref: '#/components/parameters/analystreviewid'
      responses:
        '200':
          $ref: '#/components/responses/AnalystReview'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    economicmodelanalysis:
      type: object
      properties:
        EconomicModelAnalysis:
          type: string
          description: An analysis for evaluation the economic impact.
          format: class
      description: 'The result of the economic model, including the recommended response'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Work documentation, forms and schedules produced and referenced during the analysis (for future reference)'
    EconomicModel:
      type: object
      properties:
        EconomicModelAnalysisResult:
          $ref: '#/components/schemas/economicmodelanalysis'
        EconomicModelWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\nExamples: Average balance calculation, Propensity to buy"
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n* `RevenueAnalysis` - \r\n* `CostAnalysis` - \r\n* `PredictiveAnalysis` - \r\n* `BehavioralAnalysis` - \r\n* `ProfitabilityAnalysis` - \r\n* `CompetitiveAnalysis` - \r\n* `CohortAnalysis` - \r\n* `SegmentAnalysis` - \r\n* `SWOTAnalysis` - \r\n* `Benchmarking` - \r\n* `PositioningAnalysis` - \r\n* `ScenarioAnalysis` - \r\n* `IntelligenceGathering` - \r\n* `Profiling` - \r\n"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The schedule and timing of the analysis performed using the algorithm
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
        AnalysisSchedule:
          $ref: '#/components/schemas/schedule'
      description: The production transaction customer behavior analysis results
    CustomerBehavior:
      type: object
      properties:
        CustomerBehaviorAnalysisResult:
          $ref: '#/components/schemas/analysis'
        CustomerBehaviorAnalysisWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\nExamples: Average balance calculation, Propensity to buy"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: The recommended action resulting from the analysts review
    AnalystReview:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        OutboundContactReference:
          type: string
          description: Reference to an outbound contact established with the customer
          format: object
        AnalystReviewAnalysisResult:
          $ref: '#/components/schemas/analysis'
        AnalystReviewWorkProduct:
          $ref: '#/components/schemas/workproduct'
        AnalystReviewRecommendedAction:
          $ref: '#/components/schemas/action'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\nExamples: Average balance calculation, Propensity to buy"
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The time the session was active
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    sessiontypevalues:
      enum:
        - ContactHandlingSession
        - CustomerDialogueSession
        - ChannelOperatingSession
        - GatewayOperatingSession
        - SwitchOperatingSession
        - DeviceOperatingSession
        - InterbankTransactionOperatingSession
        - CorrespondenceOperatingSession
        - InteractiveHelpOperatingSession
        - ACHOperatingSession
      type: string
      description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - \r\n"
    sessiontype:
      type: object
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/name'
        SessionType:
          $ref: '#/components/schemas/sessiontypevalues'
      description: 'Specifies the classification of session like Customer Contact Session, Channel Operating Session, Device Operating Session, etc.'
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
      description: "Reference to the product fulfillment production session for which fraud diagnosis is performed ||\r\n|"
    profile:
      type: object
      properties:
        Profile:
          type: string
          description: A brief description of the characteristics of something or someone. (Business Dictionary)
          format: class
      description: "Details the types of fraud diagnosis algorithms and tests are applied ||\r\n|"
    productiontransaction:
      type: object
      properties:
        ProductionTransaction:
          type: string
          description: 'A transaction to fulfill the product''s arrangement. '
          format: class
      description: "Reference to the one or more production transactions isolated by the fraud evaluation tests identified by Fraud Evaluation ||\r\n|"
    FraudDiagnosisAnalysis:
      type: object
      properties:
        ProductProductionSessionReference:
          $ref: '#/components/schemas/session'
        FraudDiagnosisEvaluationProfile:
          $ref: '#/components/schemas/profile'
        FraudDiagnosisTransactionConsolidationRecord:
          type: string
          description: The production transaction details that are submitted for fraud diagnosis
          format: object
        FraudEvaluationProductionAnomalyRecord:
          type: string
          description: Details of detected out of pattern production activity that could be fraud highlighted by Fraud Evaluation
          format: object
        FraudEvaluationProductionAnomalyProductionTransactionReference:
          $ref: '#/components/schemas/productiontransaction'
        FraudDiagnosisDetermination:
          type: string
          description: Details the conclusion of the analysis and determination (e.g. diagnosis of likely fraud)
          format: object
        FraudDiagnosisRecommendation:
          type: string
          description: 'Details the recommended action in response to the analysis (e.g. accept or reject the transaction, flag account for fraud)'
          format: object
      description: "Analyze the performance or behavior of some on-going activity or entity  within Fraud Diagnosis. \nExamples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks.\n\nAnalyze the performance or behavior of some on-going activity or entity. Examples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    FraudDiagnosisAnalysis:
      description: FraudDiagnosisAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FraudDiagnosisAnalysis'
    CustomerBehavior:
      description: CustomerBehavior
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerBehavior'
    EconomicModel:
      description: EconomicModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EconomicModel'
    AnalystReview:
      description: AnalystReview
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnalystReview'
  parameters:
    frauddiagnosisid:
      name: frauddiagnosisid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customerbehaviorid:
      name: customerbehaviorid
      in: path
      required: true
      style: simple
      schema:
        type: string
    economicmodelid:
      name: economicmodelid
      in: path
      required: true
      style: simple
      schema:
        type: string
    analystreviewid:
      name: analystreviewid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    FraudDiagnosisAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FraudDiagnosisAnalysis'
      required: true
    AnalystReview:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnalystReview'
      required: true