openapi: 3.0.1
info:
  title: Financial Statement Assessment
  description: 'This Service Domain supports a range of financial analyses that can be used to extract specific insights (e.g. valuations, liquidity, risk, market sensitivities) from an entity''s financial statements'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/FinancialStatementAssessment/13.0.0
paths:
  /FinancialStatementAssessment/Evaluate:
    post:
      tags:
        - CR - FinancialStatementAssessment
      summary: Evaluate Financial Statement Assessment
      description: Evaluate Financial Statement Assessment
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Execute':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Execute Financial Statement Assessment
      description: Execute Financial Statement Assessment
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Grant':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Grant Financial Statement Assessment
      description: Grant Financial Statement Assessment
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Notify':
    get:
      tags:
        - CR - FinancialStatementAssessment
      summary: Notify Financial Statement Assessment
      description: Notify Financial Statement Assessment
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Request':
    put:
      tags:
        - CR - FinancialStatementAssessment
      summary: Request Financial Statement Assessment
      description: Request Financial Statement Assessment
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialStatementAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/Retrieve':
    get:
      tags:
        - CR - FinancialStatementAssessment
      summary: Retrieve Financial Statement Assessment
      description: Retrieve Financial Statement Assessment
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/FinancialStatementAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/Evaluate':
    post:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Evaluate Asset and Liability Valuation Test
      description: Evaluate Asset and Liability Valuation Test
      operationId: EvaluateAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/Evaluate':
    post:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Evaluate Liquidity and Cash Flow Test
      description: Evaluate Liquidity and Cash Flow Test
      operationId: EvaluateLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/Evaluate':
    post:
      tags:
        - BQ - RiskTest
      summary: Evaluate Risk Test
      description: Evaluate Risk Test
      operationId: EvaluateRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/Evaluate':
    post:
      tags:
        - BQ - SensitivityTest
      summary: Evaluate Sensitivity Test
      description: Evaluate Sensitivity Test
      operationId: EvaluateSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Execute':
    put:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Execute Asset and Liability Valuation Test
      description: Execute Asset and Liability Valuation Test
      operationId: ExecuteAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Execute':
    put:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Execute Liquidity and Cash Flow Test
      description: Execute Liquidity and Cash Flow Test
      operationId: ExecuteLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Execute':
    put:
      tags:
        - BQ - RiskTest
      summary: Execute Risk Test
      description: Execute Risk Test
      operationId: ExecuteRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Execute':
    put:
      tags:
        - BQ - SensitivityTest
      summary: Execute Sensitivity Test
      description: Execute Sensitivity Test
      operationId: ExecuteSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Notify':
    get:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Notify Asset and Liability Valuation Test
      description: Notify Asset and Liability Valuation Test
      operationId: NotifyAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Notify':
    get:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Notify Liquidity and Cash Flow Test
      description: Notify Liquidity and Cash Flow Test
      operationId: NotifyLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Notify':
    get:
      tags:
        - BQ - RiskTest
      summary: Notify Risk Test
      description: Notify Risk Test
      operationId: NotifyRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Notify':
    get:
      tags:
        - BQ - SensitivityTest
      summary: Notify Sensitivity Test
      description: Notify Sensitivity Test
      operationId: NotifySensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Request':
    put:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Request Asset and Liability Valuation Test
      description: Request Asset and Liability Valuation Test
      operationId: RequestAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      requestBody:
        $ref: '#/components/requestBodies/AssetandLiabilityValuationTest'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Request':
    put:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Request Liquidity and Cash Flow Test
      description: Request Liquidity and Cash Flow Test
      operationId: RequestLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      requestBody:
        $ref: '#/components/requestBodies/LiquidityandCashFlowTest'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Request':
    put:
      tags:
        - BQ - RiskTest
      summary: Request Risk Test
      description: Request Risk Test
      operationId: RequestRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      requestBody:
        $ref: '#/components/requestBodies/RiskTest'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Request':
    put:
      tags:
        - BQ - SensitivityTest
      summary: Request Sensitivity Test
      description: Request Sensitivity Test
      operationId: RequestSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      requestBody:
        $ref: '#/components/requestBodies/SensitivityTest'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/AssetandLiabilityValuationTest/{assetandliabilityvaluationtestid}/Retrieve':
    get:
      tags:
        - BQ - AssetandLiabilityValuationTest
      summary: Retrieve Asset and Liability Valuation Test
      description: Retrieve Asset and Liability Valuation Test
      operationId: RetrieveAssetandLiabilityValuationTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/assetandliabilityvaluationtestid'
      responses:
        '200':
          $ref: '#/components/responses/AssetandLiabilityValuationTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/LiquidityandCashFlowTest/{liquidityandcashflowtestid}/Retrieve':
    get:
      tags:
        - BQ - LiquidityandCashFlowTest
      summary: Retrieve Liquidity and Cash Flow Test
      description: Retrieve Liquidity and Cash Flow Test
      operationId: RetrieveLiquidityandCashFlowTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/liquidityandcashflowtestid'
      responses:
        '200':
          $ref: '#/components/responses/LiquidityandCashFlowTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/RiskTest/{risktestid}/Retrieve':
    get:
      tags:
        - BQ - RiskTest
      summary: Retrieve Risk Test
      description: Retrieve Risk Test
      operationId: RetrieveRiskTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/risktestid'
      responses:
        '200':
          $ref: '#/components/responses/RiskTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FinancialStatementAssessment/{financialstatementassessmentid}/SensitivityTest/{sensitivitytestid}/Retrieve':
    get:
      tags:
        - BQ - SensitivityTest
      summary: Retrieve Sensitivity Test
      description: Retrieve Sensitivity Test
      operationId: RetrieveSensitivityTest
      parameters:
        - $ref: '#/components/parameters/financialstatementassessmentid'
        - $ref: '#/components/parameters/sensitivitytestid'
      responses:
        '200':
          $ref: '#/components/responses/SensitivityTest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the party who has provided Financial Statement Assessment ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Financial Statement Assessment Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation before the test can be applied
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "Timetable to assess Financial Statement Assessment ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Sensitivity Test specific Business Service
    assessmenttypevalues:
      enum:
        - AssetValuation
        - ProductMatching
        - Authorization
        - Authentication
        - QualityAssurance
        - Audit
        - ComplianceCheck
        - FundingCheck
        - SuitabilityCheck
        - PerformanceCheck
        - ImpactAssessment
        - RiskAssessment
        - Rating
        - UnderwritingAssessment
        - Qualification
        - Verification
        - KYCAssessment
        - PEPAssessment
        - AMLAssessment
      type: string
      description: "The type of Financial Statement Assessment ||\r\n|"
    model:
      type: object
      properties:
        ModelType:
          $ref: '#/components/schemas/text'
        ModelPurpose:
          $ref: '#/components/schemas/text'
        ModelVersion:
          $ref: '#/components/schemas/text'
        ModelName:
          $ref: '#/components/schemas/name'
        ModelDateAndTime:
          $ref: '#/components/schemas/datetime'
        ModelStatus:
          $ref: '#/components/schemas/status'
      description: ''
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: Document that provides background or corroborating information regarding an assessment(s).
    requirement:
      type: object
      properties:
        RequirementType:
          type: string
          description: ''
          format: string
      description: ''
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: Date when the assessment expires. (ISO20022)
    assessment:
      type: object
      properties:
        AssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
        AssessmentMethod:
          $ref: '#/components/schemas/text'
        AssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/text'
        AssessmentModel:
          $ref: '#/components/schemas/model'
        AssessmentDateTime:
          $ref: '#/components/schemas/datetime'
        AssessmentResult:
          $ref: '#/components/schemas/text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/text'
        AssessmentRequirement:
          $ref: '#/components/schemas/requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/date'
        AssessmentStatus:
          $ref: '#/components/schemas/status'
      description: An unique reference to an item or an occurrence of Financial Statement Assessment Assessment|Assessment (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022 BM ()
    testtypevalues:
      enum:
        - ProductEligibilityTest
        - NextBestProductTest
        - IssuedDeviceTest
        - CardHolderAuthenticationTest
        - CardFundsAvailableTest
        - CardTransactionFraudTest
        - CardStand-InAuthorizationTest
        - ExternalAccessRequestTest
        - SuitabilityTest
        - LegalComplianceTest
        - RegulatoryComplianceTest
        - SystemFunctionalTest
        - SystemProductionTest
        - SystemBusinessRiskTest
        - SystemOperationsTest
        - CreditPolicyComplianceTest
        - RuleSetAndDecisionTreeTest
        - ModelBasedTests
        - AssetAndLiabilityValuationTest
        - LiquidityAndCashFlowTest
        - RiskTest
        - SensitivityTest
      type: string
      description: ">\r\n* `ProductEligibilityTest` - \r\n* `NextBestProductTest` - \r\n* `IssuedDeviceTest` - \r\n* `CardHolderAuthenticationTest` - \r\n* `CardFundsAvailableTest` - \r\n* `CardTransactionFraudTest` - \r\n* `CardStand-InAuthorizationTest` - \r\n* `ExternalAccessRequestTest` - \r\n* `SuitabilityTest` - \r\n* `LegalComplianceTest` - \r\n* `RegulatoryComplianceTest` - \r\n* `SystemFunctionalTest` - \r\n* `SystemProductionTest` - \r\n* `SystemBusinessRiskTest` - \r\n* `SystemOperationsTest` - \r\n* `CreditPolicyComplianceTest` - \r\n* `RuleSetAndDecisionTreeTest` - \r\n* `ModelBasedTests` - \r\n* `AssetAndLiabilityValuationTest` - \r\n* `LiquidityAndCashFlowTest` - \r\n* `RiskTest` - \r\n* `SensitivityTest` - \r\n"
    test:
      type: object
      properties:
        TestResult:
          $ref: '#/components/schemas/text'
        TestGuidance:
          $ref: '#/components/schemas/text'
        TestType:
          $ref: '#/components/schemas/testtypevalues'
        TestDescription:
          $ref: '#/components/schemas/text'
      description: Reference to Sensitivity Test
    SensitivityTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        SensitivityTestService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        SensitivityTestReference:
          $ref: '#/components/schemas/test'
        SensitivityTestType:
          $ref: '#/components/schemas/testtypevalues'
      description: The Sensitivity Test test is one aspect that can be intergrated into the overall Sensitivity Test
    AssetandLiabilityValuationTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        AssetandLiabilityValuationTestService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        AssetandLiabilityValuationTestReference:
          $ref: '#/components/schemas/test'
        AssetandLiabilityValuationTestType:
          $ref: '#/components/schemas/testtypevalues'
      description: The Sensitivity Test test is one aspect that can be intergrated into the overall Sensitivity Test
    LiquidityandCashFlowTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        LiquidityandCashFlowTestService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        LiquidityandCashFlowTestReference:
          $ref: '#/components/schemas/test'
        LiquidityandCashFlowTestType:
          $ref: '#/components/schemas/testtypevalues'
      description: The Sensitivity Test test is one aspect that can be intergrated into the overall Sensitivity Test
    RiskTest:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        VersionNumber:
          type: string
          description: The test version employed
          format: number
        RiskTestService:
          $ref: '#/components/schemas/businessservice'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        RiskTestReference:
          $ref: '#/components/schemas/test'
        RiskTestType:
          $ref: '#/components/schemas/testtypevalues'
      description: The Sensitivity Test test is one aspect that can be intergrated into the overall Sensitivity Test
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    FinancialStatementAssessmentOutcome:
      type: object
      properties:
        FinancialStatementAssessmentWorkProduct:
          $ref: '#/components/schemas/workproduct'
        FinancialStatementAssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
      description: The Sensitivity Test test is one aspect that can be intergrated into the overall Sensitivity Test
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between Assessments according to type of concern defined within Financial Statement Assessment . ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: "A selected optional business service as subject matter of Financial Statement Assessment ||\r\n|"
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: "Reference to the log of (usage) ativities/events of Financial Statement Assessment ||\r\n|"
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: "Request to assess ||\r\n|"
    FinancialStatementAssessment:
      type: object
      properties:
        FinancialStatementAssessmentParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        FinancialStatementAssessmentSelectedOption:
          $ref: '#/components/schemas/service'
        FinancialStatementAssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
        FinancialStatementAssessmentReference:
          $ref: '#/components/schemas/assessment'
        FinancialStatementAssessmentRequest:
          $ref: '#/components/schemas/instruction'
        FinancialStatementAssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        FinancialStatementAssessmentStatus:
          $ref: '#/components/schemas/status'
        FinancialStatementAssessmentUsageLog:
          $ref: '#/components/schemas/log'
        FinancialStatementAssessmentRequesterReference:
          $ref: '#/components/schemas/involvedparty'
        FinancialStatementAssessmentAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        FinancialStatementAssessmentServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
      description: 'To test or assess an entity, possibly against some formal qualification or certification requirement within Financial Statement Assessment. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    FinancialStatementAssessment:
      description: FinancialStatementAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialStatementAssessment'
    AssetandLiabilityValuationTest:
      description: AssetandLiabilityValuationTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetandLiabilityValuationTest'
    LiquidityandCashFlowTest:
      description: LiquidityandCashFlowTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiquidityandCashFlowTest'
    RiskTest:
      description: RiskTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskTest'
    SensitivityTest:
      description: SensitivityTest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensitivityTest'
  parameters:
    financialstatementassessmentid:
      name: financialstatementassessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    assetandliabilityvaluationtestid:
      name: assetandliabilityvaluationtestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    liquidityandcashflowtestid:
      name: liquidityandcashflowtestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    risktestid:
      name: risktestid
      in: path
      required: true
      style: simple
      schema:
        type: string
    sensitivitytestid:
      name: sensitivitytestid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    FinancialStatementAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialStatementAssessment'
      required: true
    AssetandLiabilityValuationTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetandLiabilityValuationTest'
      required: true
    LiquidityandCashFlowTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiquidityandCashFlowTest'
      required: true
    RiskTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskTest'
      required: true
    SensitivityTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SensitivityTest'
      required: true