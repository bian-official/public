openapi: 3.0.1
info:
  title: Party Authentication
  description: This service domain provides a customer identify authentication service covering all channels and devices to support access to the banks products and services
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PartyAuthentication/13.0.0
paths:
  /PartyAuthentication/Evaluate:
    post:
      tags:
        - CR - PartyAuthenticationAssessment
      summary: EvCR Evaluate a customer's authenticity
      description: EvCR Evaluate a customer's authenticity
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/PartyAuthenticationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PartyAuthenticationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Update':
    put:
      tags:
        - CR - PartyAuthenticationAssessment
      summary: UpCR Update details of a customer authentication assessment
      description: UpCR Update details of a customer authentication assessment
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/PartyAuthenticationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PartyAuthenticationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Exchange':
    put:
      tags:
        - CR - PartyAuthenticationAssessment
      summary: 'EcCR Accept, reject, etc. a customer authentication assessment'
      description: 'EcCR Accept, reject, etc. a customer authentication assessment'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/PartyAuthenticationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PartyAuthenticationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Execute':
    put:
      tags:
        - CR - PartyAuthenticationAssessment
      summary: ExCR Execute an automated action for an assessment (e.g. submit data)
      description: ExCR Execute an automated action for an assessment (e.g. submit data)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/PartyAuthenticationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PartyAuthenticationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Request':
    put:
      tags:
        - CR - PartyAuthenticationAssessment
      summary: RqCR Request manual interventions in an assessment (e.g. engage specialist)
      description: RqCR Request manual interventions in an assessment (e.g. engage specialist)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/PartyAuthenticationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PartyAuthenticationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Grant':
    put:
      tags:
        - CR - PartyAuthenticationAssessment
      summary: GrCR Obtain an authentication grant (a token)
      description: GrCR Obtain an authentication grant (a token)
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/PartyAuthenticationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PartyAuthenticationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Retrieve':
    get:
      tags:
        - CR - PartyAuthenticationAssessment
      summary: ReCR Retrieve details about an authentication assessment
      description: ReCR Retrieve details about an authentication assessment
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      responses:
        '200':
          $ref: '#/components/responses/PartyAuthenticationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Password/Evaluate':
    post:
      tags:
        - BQ - Password
      summary: EvBQ Evaluate customer authenticity using passwords
      description: EvBQ Evaluate customer authenticity using passwords
      operationId: EvaluatePassword
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/Password'
      responses:
        '200':
          $ref: '#/components/responses/Password'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Password/{passwordid}/Retrieve':
    get:
      tags:
        - BQ - Password
      summary: ReBQ Retrieve details about a password evaluation
      description: ReBQ Retrieve details about a password evaluation
      operationId: RetrievePassword
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
        - $ref: '#/components/parameters/passwordid'
      responses:
        '200':
          $ref: '#/components/responses/Password'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Question/Evaluate':
    post:
      tags:
        - BQ - Question
      summary: EvBQ Evaluate customer authenticity using secret questions
      description: EvBQ Evaluate customer authenticity using secret questions
      operationId: EvaluateQuestion
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/Question'
      responses:
        '200':
          $ref: '#/components/responses/Question'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Question/{questionid}/Retrieve':
    get:
      tags:
        - BQ - Question
      summary: ReBQ Retrieve details about a secret question evaluation
      description: ReBQ Retrieve details about a secret question evaluation
      operationId: RetrieveQuestion
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
        - $ref: '#/components/parameters/questionid'
      responses:
        '200':
          $ref: '#/components/responses/Question'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Document/Evaluate':
    post:
      tags:
        - BQ - Document
      summary: EvBQ Evaluate customer authenticity using documents
      description: EvBQ Evaluate customer authenticity using documents
      operationId: EvaluateDocument
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/Document'
      responses:
        '200':
          $ref: '#/components/responses/Document'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Document/{documentid}/Retrieve':
    get:
      tags:
        - BQ - Document
      summary: ReBQ Retrieve details about a document evaluation
      description: ReBQ Retrieve details about a document evaluation
      operationId: RetrieveDocument
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
        - $ref: '#/components/parameters/documentid'
      responses:
        '200':
          $ref: '#/components/responses/Document'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Device/Evaluate':
    post:
      tags:
        - BQ - Device
      summary: EvBQ Evaluate customer authenticity using a device
      description: EvBQ Evaluate customer authenticity using a device
      operationId: EvaluateDevice
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/Device'
      responses:
        '200':
          $ref: '#/components/responses/Device'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Device/{deviceid}/Retrieve':
    get:
      tags:
        - BQ - Device
      summary: ReBQ Retrieve details about a device evaluation
      description: ReBQ Retrieve details about a device evaluation
      operationId: RetrieveDevice
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
        - $ref: '#/components/parameters/deviceid'
      responses:
        '200':
          $ref: '#/components/responses/Device'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Biometric/Evaluate':
    post:
      tags:
        - BQ - Biometric
      summary: EvBQ Evaluate customer authenticity using biometrics
      description: EvBQ Evaluate customer authenticity using biometrics
      operationId: EvaluateBiometric
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/Biometric'
      responses:
        '200':
          $ref: '#/components/responses/Biometric'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Biometric/{biometricid}/Retrieve':
    get:
      tags:
        - BQ - Biometric
      summary: ReBQ Retrieve details about a biometric evaluation
      description: ReBQ Retrieve details about a biometric evaluation
      operationId: RetrieveBiometric
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
        - $ref: '#/components/parameters/biometricid'
      responses:
        '200':
          $ref: '#/components/responses/Biometric'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Behavior/Evaluate':
    post:
      tags:
        - BQ - Behavior
      summary: EvBQ Evaluate customer authenticity using behaviors
      description: EvBQ Evaluate customer authenticity using behaviors
      operationId: EvaluateBehavior
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
      requestBody:
        $ref: '#/components/requestBodies/Behavior'
      responses:
        '200':
          $ref: '#/components/responses/Behavior'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyAuthentication/{partyauthenticationid}/Behavior/{behaviorid}/Retrieve':
    get:
      tags:
        - BQ - Behavior
      summary: ReBQ Retrieve details about a behavior evaluation
      description: ReBQ Retrieve details about a behavior evaluation
      operationId: RetrieveBehavior
      parameters:
        - $ref: '#/components/parameters/partyauthenticationid'
        - $ref: '#/components/parameters/behaviorid'
      responses:
        '200':
          $ref: '#/components/responses/Behavior'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The combination of the different assessment results used in the authentication determination ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the party or legal entity as the authentication subject ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    deviceidentificationtypevalues:
      enum:
        - IMEI
        - Serialnumber
        - Secureelementidentification
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `IMEI` - International Mobile Equipment Identity.\r\n* `Serialnumber` - Device serial number.\r\n* `Secureelementidentification` - Secure element ID.\r\n* `Othernational` - Other nationally assigned code.\r\n* `Otherprivate` - Other privately assigned code.\r\n"
    deviceidentification:
      type: object
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/identifier'
        DeviceIdentificationType:
          $ref: '#/components/schemas/deviceidentificationtypevalues'
      description: ''
    devicetypevalues:
      enum:
        - Securecardreader
        - Nonsecurecardreader
        - Mobile
        - Tablet
        - Personalcomputer
        - Othernational
        - Otherprivate
        - Wearable
        - Vehicle
        - Embedded
        - Keyfob
        - Jewellery
        - Sticker
        - Gamingdevice
        - Watch
        - Unknown
        - BiometricDevice
      type: string
      description: ">\r\n* `Securecardreader` - Secure card reader attached to the customer device\r\n* `Nonsecurecardreader` - Non-secure card reader attached to the customer device.\r\n* `Mobile` - Mobile phone\r\n* `Tablet` - Tablet\r\n* `Personalcomputer` - Personal computer\r\n* `Othernational` - Other device defined at national level\r\n* `Otherprivate` - Other device defined in a private way.\r\n* `Wearable` - Wearable device.\r\n* `Vehicle` - Vehicle.\r\n* `Embedded` - Embedded in a device.\r\n* `Keyfob` - Key Fob\r\n* `Jewellery` - Jewellery\r\n* `Sticker` - Sticker\r\n* `Gamingdevice` - Gaming Device\r\n* `Watch` - Watch\r\n* `Unknown` - Device type unknown\r\n* `BiometricDevice` - A biometric device is a security identification and authentication device. Such devices use automated methods of verifying or recognising the identity of a living person based on a physiological or behavioral characteristic.\nhttps://en.wikipedia.org/wiki/Biometric_device\n\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: "The life cycle stage of a device\n\ne.g. active, defect"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: Geographical location of the device.
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: Country of the location.
    deviceoperatingsystemtypevalues:
      enum:
        - Android
        - Ios
        - Windows
        - Blackberry
        - Tizen
        - Othernational
        - Otherprivate
      type: string
      description: ">\r\n* `Android` - Android operating system.\r\n* `Ios` - iOS operating system.\r\n* `Windows` - Windows operating system.\r\n* `Blackberry` - Blackberry operating system.\r\n* `Tizen` - Tizen operating system.\r\n* `Othernational` - Other nationally defined code.\r\n* `Otherprivate` - Other privately defined code.\r\n"
    device:
      type: object
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/deviceidentification'
        DeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        DeviceProperty:
          $ref: '#/components/schemas/text'
        DeviceElement:
          $ref: '#/components/schemas/text'
        DeviceStatus:
          $ref: '#/components/schemas/status'
        DeviceVersion:
          type: string
          description: ''
          format: number
        DeviceDateTime:
          $ref: '#/components/schemas/datetime'
        DeviceDescription:
          $ref: '#/components/schemas/text'
        DeviceName:
          $ref: '#/components/schemas/name'
        DeviceLanguage:
          $ref: '#/components/schemas/text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/text'
        DeviceLocation:
          $ref: '#/components/schemas/location'
        DeviceManufacturer:
          $ref: '#/components/schemas/text'
        DeviceCountry:
          $ref: '#/components/schemas/country'
        DeviceAddress:
          $ref: '#/components/schemas/address'
        DeviceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        DeviceOperatingSystem:
          $ref: '#/components/schemas/deviceoperatingsystemtypevalues'
      description: Reference to the device being used for authentication
    issueddevicestatustypevalues:
      enum:
        - Issued
        - IssuedButNotActivated
        - Activated
        - Suspended
        - Retrieved
      type: string
      description: ">\r\n* `Issued` - \r\n* `IssuedButNotActivated` - \r\n* `Activated` - \r\n* `Suspended` - \r\n* `Retrieved` - \r\n"
    branch:
      type: object
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/identifier'
        BranchAddress:
          $ref: '#/components/schemas/address'
        BranchName:
          $ref: '#/components/schemas/name'
      description: The name of the branch where the party will collect the device
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    productstatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productstatus:
      type: object
      properties:
        ProductStatus:
          $ref: '#/components/schemas/status'
        ProductStatusType:
          $ref: '#/components/schemas/productstatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productstatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: The product or service to which the Issued Device will be attached
    devicecustomizationtypevalues:
      enum:
        - CardDesign
      type: string
      description: ">\r\n* `CardDesign` - \r\n"
    issueddevice:
      type: object
      properties:
        IssuedDeviceStatus:
          $ref: '#/components/schemas/issueddevicestatustypevalues'
        IssuedDevicePartyReference:
          $ref: '#/components/schemas/party'
        IssuedDeviceConfiguration:
          $ref: '#/components/schemas/text'
        IssuedDeviceReference:
          $ref: '#/components/schemas/device'
        IssuedDeviceValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        IssuedDeviceDeliveryMethod:
          $ref: '#/components/schemas/text'
        DeviceIssueDate:
          $ref: '#/components/schemas/datetime'
        IssuedDeviceCollectLocation:
          $ref: '#/components/schemas/branch'
        IssuedDeviceProductReference:
          $ref: '#/components/schemas/bankingproduct'
        IssedDeviceCustomizationType:
          $ref: '#/components/schemas/devicecustomizationtypevalues'
      description: Reference to the customer issued device
    testtypevalues:
      enum:
        - ProductEligibilityTest
        - NextBestProductTest
        - IssuedDeviceTest
        - CardHolderAuthenticationTest
        - CardFundsAvailableTest
        - CardTransactionFraudTest
        - CardStand-InAuthorizationTest
        - ExternalAccessRequestTest
        - SuitabilityTest
        - LegalComplianceTest
        - RegulatoryComplianceTest
        - SystemFunctionalTest
        - SystemProductionTest
        - SystemBusinessRiskTest
        - SystemOperationsTest
        - CreditPolicyComplianceTest
        - RuleSetAndDecisionTreeTest
        - ModelBasedTests
        - AssetAndLiabilityValuationTest
        - LiquidityAndCashFlowTest
        - RiskTest
        - SensitivityTest
      type: string
      description: ">\r\n* `ProductEligibilityTest` - \r\n* `NextBestProductTest` - \r\n* `IssuedDeviceTest` - \r\n* `CardHolderAuthenticationTest` - \r\n* `CardFundsAvailableTest` - \r\n* `CardTransactionFraudTest` - \r\n* `CardStand-InAuthorizationTest` - \r\n* `ExternalAccessRequestTest` - \r\n* `SuitabilityTest` - \r\n* `LegalComplianceTest` - \r\n* `RegulatoryComplianceTest` - \r\n* `SystemFunctionalTest` - \r\n* `SystemProductionTest` - \r\n* `SystemBusinessRiskTest` - \r\n* `SystemOperationsTest` - \r\n* `CreditPolicyComplianceTest` - \r\n* `RuleSetAndDecisionTreeTest` - \r\n* `ModelBasedTests` - \r\n* `AssetAndLiabilityValuationTest` - \r\n* `LiquidityAndCashFlowTest` - \r\n* `RiskTest` - \r\n* `SensitivityTest` - \r\n"
    test:
      type: object
      properties:
        TestResult:
          $ref: '#/components/schemas/text'
        TestGuidance:
          $ref: '#/components/schemas/text'
        TestType:
          $ref: '#/components/schemas/testtypevalues'
        TestDescription:
          $ref: '#/components/schemas/text'
      description: The result of the device check
    Device:
      type: object
      properties:
        AuthenticationDeviceReference:
          $ref: '#/components/schemas/device'
        AuthenticationDevicePropertyValue:
          $ref: '#/components/schemas/value'
        IssuedDeviceInstanceReference:
          $ref: '#/components/schemas/issueddevice'
        IssuedDevicePropertyValue:
          $ref: '#/components/schemas/value'
        DeviceTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    biometricdatatypevalues:
      enum:
        - PhysiologicalBiometricData
        - BehavioralBiometricData
      type: string
      description: ">\r\n* `PhysiologicalBiometricData` - \r\n* `BehavioralBiometricData` - \r\n"
    biometricdata:
      type: object
      properties:
        BiometricDataType:
          $ref: '#/components/schemas/biometricdatatypevalues'
      description: 'The biometric record submitted for authentication (e.g. face scan, fingerprint, signature)'
    Biometric:
      type: object
      properties:
        AuthenticationBiometricType:
          $ref: '#/components/schemas/biometricdatatypevalues'
        AuthenticationBiometricRecord:
          $ref: '#/components/schemas/biometricdata'
        RegisteredBiometricInstanceReference:
          $ref: '#/components/schemas/biometricdata'
        BiometricTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: Reference to the document and document type being presented for authentication
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: The document reference for the authentication document
    Document:
      type: object
      properties:
        AuthenticationDocumentReference:
          $ref: '#/components/schemas/document'
        AuthenticationDocumentContent:
          $ref: '#/components/schemas/text'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        DocumentContent:
          $ref: '#/components/schemas/text'
        AuthenticationDocumentComparisonTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    behavioraldata:
      type: object
      properties:
        BehavioralData:
          type: string
          description: 'Behavioral data refers to patterns of behavior exhibited by individuals that can be used to verify '
          format: class
      description: The behavioral record submitted for authentication
    Behavior:
      type: object
      properties:
        AuthenticationBehaviorType:
          $ref: '#/components/schemas/text'
        AuthenticationBehaviorRecord:
          $ref: '#/components/schemas/behavioraldata'
        RegisteredBehaviorInstanceReference:
          $ref: '#/components/schemas/behavioraldata'
        BehaviorTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    secretquestion:
      type: object
      properties:
        SecretQuestionTemplate:
          $ref: '#/components/schemas/text'
        SecretQuestionValue:
          $ref: '#/components/schemas/value'
      description: Reference to the selected secret question
    Question:
      type: object
      properties:
        AuthenticationSecretQuestionReference:
          $ref: '#/components/schemas/secretquestion'
        AuthenticationSecretQuestionTemplate:
          $ref: '#/components/schemas/text'
        AuthenticationSecretQuestionValue:
          $ref: '#/components/schemas/value'
        SecretQuestionTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    password:
      type: object
      properties:
        PasswordValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PasswordFormat:
          $ref: '#/components/schemas/text'
        PasswordValue:
          $ref: '#/components/schemas/value'
      description: Reference to an issued password
    Password:
      type: object
      properties:
        AuthenticationReferenceDataReference:
          type: string
          description: Reference to a customer reference data item to be compared with submitted value
          format: object
        AuthenticationReferenceDataType:
          $ref: '#/components/schemas/text'
        AuthenticationReferenceDataValue:
          $ref: '#/components/schemas/value'
        AuthenticationPasswordReference:
          $ref: '#/components/schemas/password'
        AuthenticationPasswordTemplate:
          $ref: '#/components/schemas/text'
        AuthenticationPasswordStoredValue:
          $ref: '#/components/schemas/value'
        AuthenticationPasswordValidFromToDate:
          $ref: '#/components/schemas/datetimeperiod'
        AuthenticationPasswordPresentedValue:
          $ref: '#/components/schemas/value'
        AuthenticationPasswordTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    authenticationresulttypevalues:
      enum:
        - Denial
        - Nonparticipation
        - Unabletoauthenticate
        - Merchantnotenroled
        - Withcryptogram
        - Withoutcryptogram
      type: string
      description: ">\r\n* `Denial` - The authentication didn’t succeed.\r\n* `Nonparticipation` - The card does not participate in the authentication programme.\r\n* `Unabletoauthenticate` - The authentication couldn’t be carried out.\r\n* `Merchantnotenroled` - Merchant not enrolled in the authentication programme.\r\n* `Withcryptogram` - Authentication succeeded with a cryptogram.\r\n* `Withoutcryptogram` - Authentication succeeded without a cryptogram.\r\n"
    authenticationleveltypevalues:
      enum:
        - BasicAuthentication
        - Two-FactorAuthentication
        - Multi-FactorAuthentication
        - AdvancedAuthentication
      type: string
      description: "The required value and value returned as a result of the authentication task, defining the level of identity assurance achieved - valid for the duration of the current contact ||\r\n|"
    authenticationmethodtypevalues:
      enum:
        - Onlinepin
        - Offlinepin
        - Signaturecapture
        - Password
        - Biometry
        - Cscverification
        - Cryptogramverification
        - Unknownmethod
        - Bypass
        - Papersignature
        - Manualverification
        - Merchantauthentication
        - Securecertificate
        - Securenocertificate
        - Securedchannel
        - Billingaddressverification
        - Cardholderidentificationdata
        - Passiveauthentication
        - Secureelectroniccommerce
        - Shippingaddressverification
        - Tokenauthentication
        - Paymenttoken
        - Authenticationtoken
        - Mobile
        - Other
        - Addressdigits
        - Alienregistrationnumber
        - Arqcverification
        - Birthdate
        - Cardholdername
        - Cityofbirth
        - Customeridentification
        - Driveridentification
        - Driverlicensenumber
        - Email
        - Employeeidentificationnumber
        - Employeridentificationnumber
        - Identitycardnumber
        - Onetimepassword
        - Othercardholderidentification
        - Othercryptogram
        - Passportnumber
        - Postalcode
        - Shippingaddressfrom
        - Shippingaddressto
        - Cardholderaddress
        - Nonvisiblecsc
        - Othernational
        - Otherprivate
        - Placeofbirth
        - Socialsecuritynumber
        - Taxidentificationnumber
        - Accountdigitalsignature
        - Arpcverification
        - ATC
        - Offlinebiographics
        - Offlinebiometrics
        - Offlinedataauthentication
        - Offlinedigitisedsignatureanalysis
        - Offlinepinencrypted
        - Offlinepininclear
        - Onlinebiographics
        - Phonehome
        - Phonework
        - Pkisignature
        - Qualifiedcertificate
        - Threeds
        - Cardholdercertificateserialnumber
        - Acceptorcertificateserialnumber
        - Nationalidentifier
      type: string
      description: ">\r\n* `Onlinepin` - On-line PIN authentication (Personal Identification Number).\r\n* `Offlinepin` - Off-line PIN authentication (Personal Identification Number).\r\n* `Signaturecapture` - Electronic signature capture (handwritten signature).\r\n* `Password` - Authentication by a password.\r\n* `Biometry` - Biometric authentication of the cardholder.\r\n* `Cscverification` - Verification of Card Security Code.\r\n* `Cryptogramverification` - Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\r\n* `Unknownmethod` - Authentication method is performed unknown.\r\n* `Bypass` - Authentication bypassed by the merchant.\r\n* `Papersignature` - Handwritten paper signature.\r\n* `Manualverification` - Manual verification, for example passport or drivers license.\r\n* `Merchantauthentication` - Merchant-related authentication.\r\n* `Securecertificate` - Electronic commerce transaction secured with the X.509 certificate of a customer.\r\n* `Securenocertificate` - Secure electronic transaction without cardholder certificate.\r\n* `Securedchannel` - Channel-encrypted transaction.\r\n* `Billingaddressverification` - Cardholder billing address verification.\r\n* `Cardholderidentificationdata` - Cardholder data provided for verification, for instance social security number, driver license number, passport number.\r\n* `Passiveauthentication` - Authentication based on statistical cardholder behaviour.\r\n* `Secureelectroniccommerce` - Authentication performed during a secure electronic commerce transaction.\r\n* `Shippingaddressverification` - Cardholder shipping address verification.\r\n* `Tokenauthentication` - Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\r\n* `Paymenttoken` - Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\r\n* `Authenticationtoken` - A token is used to verify an already performed authentication.\r\n* `Mobile` - Customer mobile device.\r\n* `Other` - Other customer authentication.\r\n* `Addressdigits` - Digits of the address.\r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Arqcverification` - Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\r\n* `Birthdate` - Date of birth of a person.\r\n* `Cardholdername` - Name of cardholder\r\n* `Cityofbirth` - City of birth to authenticate a person.\r\n* `Customeridentification` - Customer number used as a mechanism of authentication.\r\n* `Driveridentification` - Identification of a driver in a fleet of vehicles.\r\n* `Driverlicensenumber` - Number assigned by a driving license authority to a person driving a car.\r\n* `Email` - Electronic mail address\r\n* `Employeeidentificationnumber` - Number assigned to an employee by an employer.\r\n* `Employeridentificationnumber` - Number assigned to an employer by a registration authority.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Onetimepassword` - Verification of a one-time password provided by the issuer.\r\n* `Othercardholderidentification` - Other cardholder data provided for identification.\r\n* `Othercryptogram` - Verification of a cryptogram generated by a non-card form factor.\r\n* `Passportnumber` - Number assigned by a passport authority to a passport.\r\n* `Postalcode` - Verification based on digits of the postal code.\r\n* `Shippingaddressfrom` - Shipping address from verification.\r\n* `Shippingaddressto` - Shipping address to verification\r\n* `Cardholderaddress` - Verification whether the address corresponds to the cardholder's one.\r\n* `Nonvisiblecsc` - Non visible Card Security Code.\r\n* `Othernational` - Other type of verification defined at national level.\r\n* `Otherprivate` - Other type of verification defined at private level\r\n* `Placeofbirth` - Place of birth of a person.\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Accountdigitalsignature` - Account-based digital signature authentication.\r\n* `Arpcverification` - Response Card Cryptogram (ARPC)  verification.\r\n* `ATC` - Application Transaction Counter\r\n* `Offlinebiographics` - Biographics authentication in an offline mode.\r\n* `Offlinebiometrics` - Biometrics authentication in an offline mode\r\n* `Offlinedataauthentication` - Authentication of data in an offline mode\r\n* `Offlinedigitisedsignatureanalysis` - Analysis of signature transmitted offline\r\n* `Offlinepinencrypted` - PIN generated offline and transmitted encrypted\r\n* `Offlinepininclear` - PIN generated offline and transmitted in clear\r\n* `Onlinebiographics` - Biographics authentication in an online mode.\r\n* `Phonehome` - Customer home phone number.\r\n* `Phonework` - Customer work phone number\r\n* `Pkisignature` - PKI (Public Key Infrastructure) based digital signature\r\n* `Qualifiedcertificate` - QualifiedCertificate\r\n* `Threeds` - Authentication performed during a secure electronic commerce transaction.\r\n* `Cardholdercertificateserialnumber` - Serial number of the cardholder's certificate.\r\n* `Acceptorcertificateserialnumber` - Serial number of the acceptor's certificate.\r\n* `Nationalidentifier` - Nationally assigned identifier.\r\n"
    authenticationentitytypevalues:
      enum:
        - ICC
        - Authorisedagent
        - Merchant
        - Acquirer
        - Issuer
        - Terminal
      type: string
      description: ">\r\n* `ICC` - Application in the chip card (Integrated Circuit Card), for instance an offline PIN verification.\r\n* `Authorisedagent` - Authorisation agent of the issuer.\r\n* `Merchant` - Merchant (for example signature verification by the attendant).\r\n* `Acquirer` - Acquirer of the transaction.\r\n* `Issuer` - Card issuer.\r\n* `Terminal` - Secure application in the terminal.\r\n"
    authenticationtypevalues:
      enum:
        - Knowledge-BasedAuthentication
        - Token-BasedAuthentication
        - BiometricAuthentication
        - Certificate-BasedAuthentication
        - AdaptiveAuthentication
      type: string
      description: "Reference to the different types of authentication assessment ||\r\n|"
    partyauthentication:
      type: object
      properties:
        PartyAuthenticationResult:
          $ref: '#/components/schemas/authenticationresulttypevalues'
        PartyAuthenticationLevel:
          $ref: '#/components/schemas/authenticationleveltypevalues'
        PIN:
          $ref: '#/components/schemas/identifier'
        PartyAuthenticationValue:
          $ref: '#/components/schemas/value'
        PartyAuthenticationMethod:
          $ref: '#/components/schemas/authenticationmethodtypevalues'
        PartyAuthenticationEntity:
          $ref: '#/components/schemas/authenticationentitytypevalues'
        PartyAuthenticationType:
          $ref: '#/components/schemas/authenticationtypevalues'
      description: Details the types of authentication assessments that are combined into the overall evaluation Authentication|Authentication (https://www.iso20022.org/standardsrepository/type/Authentication)|Standard|ISO20022 BM ()
    tokenstatustypevalues:
      enum:
        - Active
        - Expired
        - Cancelled
        - Generated
        - Stored
        - Mapped
        - Routed
        - Suspension
        - Updated
      type: string
      description: ">\r\n* `Active` - \r\n* `Expired` - \r\n* `Cancelled` - \r\n* `Generated` - \r\n* `Stored` - \r\n* `Mapped` - \r\n* `Routed` - \r\n* `Suspension` - \r\n* `Updated` - \r\n"
    tokenidentificationandverificationmethodtypevalues:
      enum:
        - AssertedAuthentication
        - RiskBasedNoninteractiveAuthentication
        - InteractiveAuthentication
      type: string
      description: ">\r\n* `AssertedAuthentication` - \r\n* `RiskBasedNoninteractiveAuthentication` - \r\n* `InteractiveAuthentication` - \r\n"
    tokenrequest:
      type: object
      properties:
        TokenRequestIdentification:
          $ref: '#/components/schemas/identifier'
        TokenRequestReason:
          $ref: '#/components/schemas/text'
      description: ''
    tokenprotectionmethodtypevalues:
      enum:
        - Software
        - Trustedexectutionenvironment
        - Secureelement
        - Secureenclave
        - Otherprivate
        - Othernational
        - Trustedplatformmodule
        - Virtualtrustedexecutionenvironment
      type: string
      description: ">\r\n* `Software` - Software protection method.\r\n* `Trustedexectutionenvironment` - Trusted execution environment method.\r\n* `Secureelement` - Secure element method.\r\n* `Secureenclave` - Secure enclave method.\r\n* `Otherprivate` - Other privately assigned code.\r\n* `Othernational` - Other code assigned by national organisation.\r\n* `Trustedplatformmodule` - Trusted Platform Module (TPM).\r\n* `Virtualtrustedexecutionenvironment` - Virtual trusted execution environment\r\n"
    tokenstoragelocationtypevalues:
      enum:
        - Device
        - Onfile
        - Cardacceptorwallet
        - Issuerwallet
        - Thirdpartywallet
        - Otherprivate
        - Othernational
      type: string
      description: ">\r\n* `Device` - Stored in device.\r\n* `Onfile` - Storage is on file.\r\n* `Cardacceptorwallet` - Storage is in wallet managed by card acceptor.\r\n* `Issuerwallet` - Storage is in wallet managed by Issuer.\r\n* `Thirdpartywallet` - Storage location is in wallet managed by a third party.\r\n* `Otherprivate` - Code defined by private agreement.\r\n* `Othernational` - Code defined by national standards organisation.\r\n"
    tokentypevalues:
      enum:
        - RefreshToken
        - AccessToken
        - SecurityToken
        - AuthenticationToken
      type: string
      description: ">\r\n* `RefreshToken` - \r\n* `AccessToken` - \r\n* `SecurityToken` - \r\n* `AuthenticationToken` - \r\n"
    token:
      type: object
      properties:
        TokenIdentification:
          $ref: '#/components/schemas/identifier'
        TokenStatus:
          $ref: '#/components/schemas/tokenstatustypevalues'
        TokenIdentificationAndVerificationMethod:
          $ref: '#/components/schemas/tokenidentificationandverificationmethodtypevalues'
        TokenStatusDate:
          $ref: '#/components/schemas/datetime'
        TokenDeviceReference:
          $ref: '#/components/schemas/device'
        TokenRequestReference:
          $ref: '#/components/schemas/tokenrequest'
        TokenProtectionMethod:
          $ref: '#/components/schemas/tokenprotectionmethodtypevalues'
        TokenStorageLocation:
          $ref: '#/components/schemas/tokenstoragelocationtypevalues'
        TokenType:
          $ref: '#/components/schemas/tokentypevalues'
      description: " ||\r\n|"
    PartyAuthenticationAssessment:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        PartyReference:
          $ref: '#/components/schemas/involvedparty'
        PartyAuthenticationAssessmentProfile:
          $ref: '#/components/schemas/partyauthentication'
        AuthenticationType:
          $ref: '#/components/schemas/authenticationtypevalues'
        PartyAuthenticationConsolidationRecord:
          $ref: '#/components/schemas/text'
        CustomerContactAuthenticationLevel:
          $ref: '#/components/schemas/authenticationleveltypevalues'
        AuthorisationTokenReference:
          $ref: '#/components/schemas/token'
        RefreshTokenReference:
          $ref: '#/components/schemas/token'
      description: 'To test or assess an entity, possibly against some formal qualification or certification requirement within Party Authentication. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    PartyAuthenticationAssessment:
      description: PartyAuthenticationAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyAuthenticationAssessment'
    Password:
      description: Password
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Password'
    Question:
      description: Question
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Question'
    Document:
      description: Document
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
    Device:
      description: Device
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
    Biometric:
      description: Biometric
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Biometric'
    Behavior:
      description: Behavior
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Behavior'
  parameters:
    partyauthenticationid:
      name: partyauthenticationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    passwordid:
      name: passwordid
      in: path
      required: true
      style: simple
      schema:
        type: string
    questionid:
      name: questionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    documentid:
      name: documentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    deviceid:
      name: deviceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    biometricid:
      name: biometricid
      in: path
      required: true
      style: simple
      schema:
        type: string
    behaviorid:
      name: behaviorid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    PartyAuthenticationAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyAuthenticationAssessment'
      required: true
    Password:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Password'
      required: true
    Question:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Question'
      required: true
    Document:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
      required: true
    Device:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
      required: true
    Biometric:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Biometric'
      required: true
    Behavior:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Behavior'
      required: true