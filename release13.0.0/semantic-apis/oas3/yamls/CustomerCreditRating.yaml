openapi: 3.0.1
info:
  title: Customer Credit Rating
  description: This service domain maintains and administers the bank's credit assessment for customers based on consolidated internal data and optionally by referencing external credit agency reports
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerCreditRating/13.0.0
paths:
  /CustomerCreditRating/Initiate:
    post:
      tags:
        - CR - CustomerCreditRatingState
      summary: InCR Initiate credit state monitoring for a customer
      description: InCR Initiate credit state monitoring for a customer
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CustomerCreditRatingState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCreditRatingState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/Control':
    put:
      tags:
        - CR - CustomerCreditRatingState
      summary: CoCR Control credit state monitoring (e.g. high frequency update)
      description: CoCR Control credit state monitoring (e.g. high frequency update)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCreditRatingState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCreditRatingState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/Exchange':
    put:
      tags:
        - CR - CustomerCreditRatingState
      summary: 'EcCR Accept, reject, etc credit state monitoring content'
      description: 'EcCR Accept, reject, etc credit state monitoring content'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCreditRatingState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCreditRatingState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/Execute':
    put:
      tags:
        - CR - CustomerCreditRatingState
      summary: ExCR Execute an automated task for credit state (e.g. auto refresh)
      description: ExCR Execute an automated task for credit state (e.g. auto refresh)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCreditRatingState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCreditRatingState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/Request':
    put:
      tags:
        - CR - CustomerCreditRatingState
      summary: RqCR Request manual intervention for credit state (e.g. revise underlying assessment)
      description: RqCR Request manual intervention for credit state (e.g. revise underlying assessment)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCreditRatingState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCreditRatingState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/Retrieve':
    get:
      tags:
        - CR - CustomerCreditRatingState
      summary: ReCR Retrieve details about credit state monitoring for a customer
      description: ReCR Retrieve details about credit state monitoring for a customer
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCreditRatingState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/Alerts/{alertsid}/Capture':
    put:
      tags:
        - BQ - Alerts
      summary: CaBQ Capture notification of a credit alert
      description: CaBQ Capture notification of a credit alert
      operationId: CaptureAlerts
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
        - $ref: '#/components/parameters/alertsid'
      requestBody:
        $ref: '#/components/requestBodies/Alerts'
      responses:
        '200':
          $ref: '#/components/responses/Alerts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/Alerts/{alertsid}/Retrieve':
    get:
      tags:
        - BQ - Alerts
      summary: ReBQ Retrieve details about a credit alert
      description: ReBQ Retrieve details about a credit alert
      operationId: RetrieveAlerts
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
        - $ref: '#/components/parameters/alertsid'
      responses:
        '200':
          $ref: '#/components/responses/Alerts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/InternalReporting/{internalreportingid}/Capture':
    put:
      tags:
        - BQ - InternalReporting
      summary: CaBQ Capture internal product reports to support credit analysis
      description: CaBQ Capture internal product reports to support credit analysis
      operationId: CaptureInternalReporting
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
        - $ref: '#/components/parameters/internalreportingid'
      requestBody:
        $ref: '#/components/requestBodies/InternalReporting'
      responses:
        '200':
          $ref: '#/components/responses/InternalReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/InternalReporting/{internalreportingid}/Retrieve':
    get:
      tags:
        - BQ - InternalReporting
      summary: ReBQ Retrieve details about internal reporting to the credit monitoring activity
      description: ReBQ Retrieve details about internal reporting to the credit monitoring activity
      operationId: RetrieveInternalReporting
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
        - $ref: '#/components/parameters/internalreportingid'
      responses:
        '200':
          $ref: '#/components/responses/InternalReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/ExternalReporting/{externalreportingid}/Capture':
    put:
      tags:
        - BQ - ExternalReporting
      summary: CaBQ Capture external credit reports to support credit analysis and state
      description: CaBQ Capture external credit reports to support credit analysis and state
      operationId: CaptureExternalReporting
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
        - $ref: '#/components/parameters/externalreportingid'
      requestBody:
        $ref: '#/components/requestBodies/ExternalReporting'
      responses:
        '200':
          $ref: '#/components/responses/ExternalReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCreditRating/{customercreditratingid}/ExternalReporting/{externalreportingid}/Retrieve':
    get:
      tags:
        - BQ - ExternalReporting
      summary: ReBQ Retrieve details about external reporting to the credit monitoring activity
      description: ReBQ Retrieve details about external reporting to the credit monitoring activity
      operationId: RetrieveExternalReporting
      parameters:
        - $ref: '#/components/parameters/customercreditratingid'
        - $ref: '#/components/parameters/externalreportingid'
      responses:
        '200':
          $ref: '#/components/responses/ExternalReporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: The product/service instance that generated the alert
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: The individual source of the alert - if not automated by production
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The type of credit status being monitored (e.g. consumer, small business, corporate) ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: The date/time the value was last refreshed ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    Alerts:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        CustomerCreditAlertType:
          $ref: '#/components/schemas/text'
        CustomerCreditAlertDescription:
          $ref: '#/components/schemas/text'
        Date:
          $ref: '#/components/schemas/datetime'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - \r\n"
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: Reference to the internal bank product and service activity report that is used for the credit assessment
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule for refreshing the credit state and supporting analysis, and update history as appropriate ||\r\n|"
    InternalReporting:
      type: object
      properties:
        ProductandServiceActivityReportReference:
          $ref: '#/components/schemas/report'
        ProductandServiceActivityReportSchedule:
          $ref: '#/components/schemas/schedule'
        ProductandServiceActivityReport:
          $ref: '#/components/schemas/report'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    ExternalReporting:
      type: object
      properties:
        RatingAgencyReportSchedule:
          $ref: '#/components/schemas/schedule'
        RatingAgencyCreditReportType:
          $ref: '#/components/schemas/reporttypevalues'
        Referencetotheratingagencycreditreport:
          $ref: '#/components/schemas/text'
        RatingAgencyCreditReport:
          $ref: '#/components/schemas/report'
        RatingAgencyCreditReportDate:
          $ref: '#/components/schemas/datetime'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the associated customer (can currently be a person or a company) ||\r\n|"
    customercreditratingassessment:
      type: object
      properties:
        CreditRatingAssessmentType:
          type: string
          description: ''
          format: ''
      description: "Any underlying analysis records and results that support the credit rating ||\r\n|"
    customerbehaviormodeltypevalues:
      enum:
        - DemographicModel
        - PsychographicModel
        - GeographicModel
        - SocioeconomicModel
        - SituationalModel
        - CulturalModel
        - Usage-BasedModel
        - Benefit-SoughtModel
        - HybridModel
      type: string
      description: ">\r\n* `DemographicModel` - Analyze customer behavior based on demographic factors such as age, gender, income, education, and occupation.\nExample: Segmenting customers by age group to tailor marketing strategies.\r\n* `PsychographicModel` - Focus on psychological attributes, including values, attitudes, interests, and lifestyles.\nExample: Creating buyer personas based on lifestyle choices and interests.\r\n* `GeographicModel` - Look at customer behavior based on geographic location, considering factors like regional preferences and climate.\nExample: Targeting advertisements based on location-specific needs.\r\n* `SocioeconomicModel` - Combine social and economic factors to understand consumer behavior\nExample: Analyzing how economic status influences buying decisions\r\n* `SituationalModel` - Consider the context or situation in which the consumer is making a decision, including time of day, season, and situational needs.\nExample: Promoting holiday-related products during festive seasons.\r\n* `CulturalModel` - Focus on the influence of culture, traditions, and social norms on consumer behavior.\nExample: Adapting marketing messages to align with cultural values and practices.\r\n* `Usage-BasedModel` - Segment customers based on how they use a product or service, including frequency and intensity of use.\nExample: Differentiating between heavy, moderate, and light users of a product.\r\n* `Benefit-SoughtModel` - Classify customers according to the benefits they seek from a product or service.\nExample: Marketing products based on specific benefits like convenience, cost-saving, or luxury.\r\n* `HybridModel` - Combine elements from various models to provide a comprehensive view of customer behavior.\nExample: Using demographic, psychographic, and behavioral data together for more precise targeting\r\n"
    customerbehaviormodel:
      type: object
      properties:
        CustomerBehaviorModelType:
          $ref: '#/components/schemas/customerbehaviormodeltypevalues'
      description: "Reference to the customer behavior model(s) used to develop any underlying analysis for determining the credit state ||\r\n|"
    assessmenttypevalues:
      enum:
        - AssetValuation
        - ProductMatching
        - Authorization
        - Authentication
        - QualityAssurance
        - Audit
        - ComplianceCheck
        - FundingCheck
        - SuitabilityCheck
        - PerformanceCheck
        - ImpactAssessment
        - RiskAssessment
        - Rating
        - UnderwritingAssessment
        - Qualification
        - Verification
        - KYCAssessment
        - PEPAssessment
        - AMLAssessment
      type: string
      description: "The type of analysis performed to support the credit state ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: "Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    model:
      type: object
      properties:
        ModelType:
          $ref: '#/components/schemas/text'
        ModelPurpose:
          $ref: '#/components/schemas/text'
        ModelVersion:
          $ref: '#/components/schemas/text'
        ModelName:
          $ref: '#/components/schemas/name'
        ModelDateAndTime:
          $ref: '#/components/schemas/datetime'
        ModelStatus:
          $ref: '#/components/schemas/status'
      description: ''
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: Document that provides background or corroborating information regarding an assessment(s).
    requirement:
      type: object
      properties:
        RequirementType:
          type: string
          description: ''
          format: string
      description: ''
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: Date when the assessment expires. (ISO20022)
    assessment:
      type: object
      properties:
        AssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
        AssessmentMethod:
          $ref: '#/components/schemas/text'
        AssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/text'
        AssessmentModel:
          $ref: '#/components/schemas/model'
        AssessmentDateTime:
          $ref: '#/components/schemas/datetime'
        AssessmentResult:
          $ref: '#/components/schemas/text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/text'
        AssessmentRequirement:
          $ref: '#/components/schemas/requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/date'
        AssessmentStatus:
          $ref: '#/components/schemas/status'
      description: The resulting report from the credit rating assessment Assessment|Assessment (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022 BM ()
    customerratingtypevalues:
      enum:
        - CustomerProfitabilityRating
        - CustomerCreditRating
        - CustomerRiskRating
      type: string
      description: ">\r\n* `CustomerProfitabilityRating` - A value of Customer Rating Type whereby customer profitability is measured.\n\nA customer profitability rating (CPR) is an assessment used by businesses to evaluate the profitability of individual customers or customer segments. This rating helps companies understand which customers contribute the most to their bottom line and enables them to tailor their strategies to maximize overall profitability.\r\n* `CustomerCreditRating` - A value of Customer Rating Type whereby customer creditability is measured.\n\nA customer credit rating is a numerical score or rating that represents the creditworthiness of an individual or a business. It indicates the likelihood that the borrower will repay their debt obligations on time\r\n* `CustomerRiskRating` - A customer risk rating is an assessment of the potential risk associated with a customer, often used in the context of anti-money laundering (AML) and know your customer (KYC) regulations. It evaluates the likelihood of a customer engaging in activities that could pose a legal, financial, or reputational risk to the institution.\r\n"
    customerrating:
      type: object
      properties:
        CustomerRatingType:
          $ref: '#/components/schemas/customerratingtypevalues'
        CustomerRatingValue:
          $ref: '#/components/schemas/value'
        CustomerRatingDescription:
          $ref: '#/components/schemas/text'
        CustomerRatingValueDate:
          $ref: '#/components/schemas/datetime'
        CustomerRatingValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: "A record of the customers credit state ||\r\n|"
    CustomerCreditRatingState:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerCreditRatingStatusType:
          $ref: '#/components/schemas/text'
        CustomerCreditRatingSchedule:
          $ref: '#/components/schemas/schedule'
        CustomerCreditRatingAssessmentRecord:
          $ref: '#/components/schemas/customercreditratingassessment'
        AssessmentCustomerBehaviorModelReference:
          $ref: '#/components/schemas/customerbehaviormodel'
        CreditRatingAssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
        CreditRatingAssessmentDate:
          $ref: '#/components/schemas/datetime'
        CreditRatingAssessmentWorkProducts:
          $ref: '#/components/schemas/workproduct'
        CreditRatingAssessmentResult:
          $ref: '#/components/schemas/assessment'
        CustomerCreditRatingRecord:
          $ref: '#/components/schemas/customerrating'
        CustomerCreditRatingState:
          type: string
          description: Is the current credit rating or score (typically a ranking value e.g. 1-10)
          format: object
        CustomerCreditRatingAssessment:
          $ref: '#/components/schemas/customercreditratingassessment'
        CustomerCreditRatingNarrative:
          type: string
          description: A structured report outlining basis for the credit rating
          format: object
        CustomerCreditRatingDate:
          $ref: '#/components/schemas/datetime'
      description: 'Monitor and define the status/rating of some entity within Customer Credit Rating. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerCreditRatingState:
      description: CustomerCreditRatingState
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCreditRatingState'
    Alerts:
      description: Alerts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Alerts'
    InternalReporting:
      description: InternalReporting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalReporting'
    ExternalReporting:
      description: ExternalReporting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExternalReporting'
  parameters:
    customercreditratingid:
      name: customercreditratingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    alertsid:
      name: alertsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    internalreportingid:
      name: internalreportingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    externalreportingid:
      name: externalreportingid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerCreditRatingState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCreditRatingState'
      required: true
    Alerts:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Alerts'
      required: true
    InternalReporting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalReporting'
      required: true
    ExternalReporting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExternalReporting'
      required: true