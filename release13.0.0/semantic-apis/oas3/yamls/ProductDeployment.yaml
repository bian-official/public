openapi: 3.0.1
info:
  title: Product Deployment
  description: Plan and administer the production deployment new and updated products and services
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductDeployment/13.0.0
paths:
  /ProductDeployment/Create:
    post:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: CrCR Create a product or service deployment project
      description: CrCR Create a product or service deployment project
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceDeploymentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Update':
    put:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: UpCR Update details of a product or service deployment project
      description: UpCR Update details of a product or service deployment project
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceDeploymentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Control':
    put:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: CoCR Control the execution of a product or service deployment project
      description: CoCR Control the execution of a product or service deployment project
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceDeploymentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Exchange':
    put:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: 'EcCR Accept, verify etc. aspects of a product or service deployment project'
      description: 'EcCR Accept, verify etc. aspects of a product or service deployment project'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceDeploymentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Capture':
    put:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: CaCR Capture details about tasks performed during the deployment
      description: CaCR Capture details about tasks performed during the deployment
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceDeploymentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Request':
    put:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: RqCR Request manual intervention in a deployment project
      description: RqCR Request manual intervention in a deployment project
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceDeploymentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Grant':
    put:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: GrCR Grant permission to perform some action or access resources under the control of the deployment
      description: GrCR Grant permission to perform some action or access resources under the control of the deployment
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceDeploymentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Retrieve':
    get:
      tags:
        - CR - ProductandServiceDeploymentDevelopment
      summary: ReCR Retrieve details about a deployment project
      description: ReCR Retrieve details about a deployment project
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceDeploymentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Systems/{systemsid}/Update':
    put:
      tags:
        - BQ - Systems
      summary: UpBQ Update details relating to the systems tasks of the deployment
      description: UpBQ Update details relating to the systems tasks of the deployment
      operationId: UpdateSystems
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/systemsid'
      requestBody:
        $ref: '#/components/requestBodies/Systems'
      responses:
        '200':
          $ref: '#/components/responses/Systems'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Systems/{systemsid}/Exchange':
    put:
      tags:
        - BQ - Systems
      summary: 'EcBQ Accept, reject etc. a systems related task of the deployment'
      description: 'EcBQ Accept, reject etc. a systems related task of the deployment'
      operationId: ExchangeSystems
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/systemsid'
      requestBody:
        $ref: '#/components/requestBodies/Systems'
      responses:
        '200':
          $ref: '#/components/responses/Systems'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Systems/{systemsid}/Request':
    put:
      tags:
        - BQ - Systems
      summary: RqBQ Request manual intervention in a systems related deployment task
      description: RqBQ Request manual intervention in a systems related deployment task
      operationId: RequestSystems
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/systemsid'
      requestBody:
        $ref: '#/components/requestBodies/Systems'
      responses:
        '200':
          $ref: '#/components/responses/Systems'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Systems/{systemsid}/Retrieve':
    get:
      tags:
        - BQ - Systems
      summary: ReBQ Retrieve details about a systems related deployment task or deliverable
      description: ReBQ Retrieve details about a systems related deployment task or deliverable
      operationId: RetrieveSystems
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/systemsid'
      responses:
        '200':
          $ref: '#/components/responses/Systems'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ITOperations/{itoperationsid}/Update':
    put:
      tags:
        - BQ - ITOperations
      summary: UpBQ Update details relating to the IT operations tasks of the deployment
      description: UpBQ Update details relating to the IT operations tasks of the deployment
      operationId: UpdateITOperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/itoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ITOperations'
      responses:
        '200':
          $ref: '#/components/responses/ITOperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ITOperations/{itoperationsid}/Exchange':
    put:
      tags:
        - BQ - ITOperations
      summary: 'EcBQ Accept, reject etc. an IT operations related task of the deployment'
      description: 'EcBQ Accept, reject etc. an IT operations related task of the deployment'
      operationId: ExchangeITOperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/itoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ITOperations'
      responses:
        '200':
          $ref: '#/components/responses/ITOperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ITOperations/{itoperationsid}/Request':
    put:
      tags:
        - BQ - ITOperations
      summary: RqBQ Request manual intervention in an IT operations related deployment task
      description: RqBQ Request manual intervention in an IT operations related deployment task
      operationId: RequestITOperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/itoperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ITOperations'
      responses:
        '200':
          $ref: '#/components/responses/ITOperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ITOperations/{itoperationsid}/Retrieve':
    get:
      tags:
        - BQ - ITOperations
      summary: ReBQ Retrieve details about an IT operations related deployment task or deliverable
      description: ReBQ Retrieve details about an IT operations related deployment task or deliverable
      operationId: RetrieveITOperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/itoperationsid'
      responses:
        '200':
          $ref: '#/components/responses/ITOperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/HROperations/{hroperationsid}/Update':
    put:
      tags:
        - BQ - HROperations
      summary: UpBQ Update details relating to the staff operations tasks of the deployment
      description: UpBQ Update details relating to the staff operations tasks of the deployment
      operationId: UpdateHROperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/hroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/HROperations'
      responses:
        '200':
          $ref: '#/components/responses/HROperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/HROperations/{hroperationsid}/Exchange':
    put:
      tags:
        - BQ - HROperations
      summary: 'EcBQ Accept, reject etc. a staff operations related task of the deployment'
      description: 'EcBQ Accept, reject etc. a staff operations related task of the deployment'
      operationId: ExchangeHROperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/hroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/HROperations'
      responses:
        '200':
          $ref: '#/components/responses/HROperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/HROperations/{hroperationsid}/Request':
    put:
      tags:
        - BQ - HROperations
      summary: RqBQ Request manual intervention in a staff operations related deployment task
      description: RqBQ Request manual intervention in a staff operations related deployment task
      operationId: RequestHROperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/hroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/HROperations'
      responses:
        '200':
          $ref: '#/components/responses/HROperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/HROperations/{hroperationsid}/Retrieve':
    get:
      tags:
        - BQ - HROperations
      summary: ReBQ Retrieve details about a staff operations related deployment task or deliverable
      description: ReBQ Retrieve details about a staff operations related deployment task or deliverable
      operationId: RetrieveHROperations
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/hroperationsid'
      responses:
        '200':
          $ref: '#/components/responses/HROperations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/SalesandMarketing/{salesandmarketingid}/Update':
    put:
      tags:
        - BQ - SalesandMarketing
      summary: UpBQ Update details relating to the sales and marketing tasks of the deployment
      description: UpBQ Update details relating to the sales and marketing tasks of the deployment
      operationId: UpdateSalesandMarketing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/salesandmarketingid'
      requestBody:
        $ref: '#/components/requestBodies/SalesandMarketing'
      responses:
        '200':
          $ref: '#/components/responses/SalesandMarketing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/SalesandMarketing/{salesandmarketingid}/Exchange':
    put:
      tags:
        - BQ - SalesandMarketing
      summary: 'EcBQ Accept, reject etc. a sales and marketing related task of the deployment'
      description: 'EcBQ Accept, reject etc. a sales and marketing related task of the deployment'
      operationId: ExchangeSalesandMarketing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/salesandmarketingid'
      requestBody:
        $ref: '#/components/requestBodies/SalesandMarketing'
      responses:
        '200':
          $ref: '#/components/responses/SalesandMarketing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/SalesandMarketing/{salesandmarketingid}/Request':
    put:
      tags:
        - BQ - SalesandMarketing
      summary: RqBQ Request manual intervention in a sales and marketing related deployment task
      description: RqBQ Request manual intervention in a sales and marketing related deployment task
      operationId: RequestSalesandMarketing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/salesandmarketingid'
      requestBody:
        $ref: '#/components/requestBodies/SalesandMarketing'
      responses:
        '200':
          $ref: '#/components/responses/SalesandMarketing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/SalesandMarketing/{salesandmarketingid}/Retrieve':
    get:
      tags:
        - BQ - SalesandMarketing
      summary: ReBQ Retrieve details about a sales and marketing related deployment task or deliverable
      description: ReBQ Retrieve details about a sales and marketing related deployment task or deliverable
      operationId: RetrieveSalesandMarketing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/salesandmarketingid'
      responses:
        '200':
          $ref: '#/components/responses/SalesandMarketing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Servicing/{servicingid}/Update':
    put:
      tags:
        - BQ - Servicing
      summary: UpBQ Update details relating to the servicing tasks of the deployment
      description: UpBQ Update details relating to the servicing tasks of the deployment
      operationId: UpdateServicing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/servicingid'
      requestBody:
        $ref: '#/components/requestBodies/Servicing'
      responses:
        '200':
          $ref: '#/components/responses/Servicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Servicing/{servicingid}/Exchange':
    put:
      tags:
        - BQ - Servicing
      summary: 'EcBQ Accept, reject etc. a servicing related task of the deployment'
      description: 'EcBQ Accept, reject etc. a servicing related task of the deployment'
      operationId: ExchangeServicing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/servicingid'
      requestBody:
        $ref: '#/components/requestBodies/Servicing'
      responses:
        '200':
          $ref: '#/components/responses/Servicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Servicing/{servicingid}/Request':
    put:
      tags:
        - BQ - Servicing
      summary: RqBQ Request manual intervention in a servicing related deployment task
      description: RqBQ Request manual intervention in a servicing related deployment task
      operationId: RequestServicing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/servicingid'
      requestBody:
        $ref: '#/components/requestBodies/Servicing'
      responses:
        '200':
          $ref: '#/components/responses/Servicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Servicing/{servicingid}/Retrieve':
    get:
      tags:
        - BQ - Servicing
      summary: ReBQ Retrieve details about a servicing related deployment task or deliverable
      description: ReBQ Retrieve details about a servicing related deployment task or deliverable
      operationId: RetrieveServicing
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/servicingid'
      responses:
        '200':
          $ref: '#/components/responses/Servicing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Production/{productionid}/Update':
    put:
      tags:
        - BQ - Production
      summary: UpBQ Update details relating to the production tasks of the deployment
      description: UpBQ Update details relating to the production tasks of the deployment
      operationId: UpdateProduction
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionid'
      requestBody:
        $ref: '#/components/requestBodies/Production'
      responses:
        '200':
          $ref: '#/components/responses/Production'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Production/{productionid}/Exchange':
    put:
      tags:
        - BQ - Production
      summary: 'EcBQ Accept, reject etc. a production related task of the deployment'
      description: 'EcBQ Accept, reject etc. a production related task of the deployment'
      operationId: ExchangeProduction
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionid'
      requestBody:
        $ref: '#/components/requestBodies/Production'
      responses:
        '200':
          $ref: '#/components/responses/Production'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Production/{productionid}/Request':
    put:
      tags:
        - BQ - Production
      summary: RqBQ Request manual intervention in a production related deployment task
      description: RqBQ Request manual intervention in a production related deployment task
      operationId: RequestProduction
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionid'
      requestBody:
        $ref: '#/components/requestBodies/Production'
      responses:
        '200':
          $ref: '#/components/responses/Production'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/Production/{productionid}/Retrieve':
    get:
      tags:
        - BQ - Production
      summary: ReBQ Retrieve details about a production related deployment task or deliverable
      description: ReBQ Retrieve details about a production related deployment task or deliverable
      operationId: RetrieveProduction
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionid'
      responses:
        '200':
          $ref: '#/components/responses/Production'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ProductionSupport/{productionsupportid}/Update':
    put:
      tags:
        - BQ - ProductionSupport
      summary: UpBQ Update details relating to the production support tasks of the deployment
      description: UpBQ Update details relating to the production support tasks of the deployment
      operationId: UpdateProductionSupport
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionsupportid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionSupport'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSupport'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ProductionSupport/{productionsupportid}/Exchange':
    put:
      tags:
        - BQ - ProductionSupport
      summary: 'EcBQ Accept, reject etc. a production support related task of the deployment'
      description: 'EcBQ Accept, reject etc. a production support related task of the deployment'
      operationId: ExchangeProductionSupport
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionsupportid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionSupport'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSupport'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ProductionSupport/{productionsupportid}/Request':
    put:
      tags:
        - BQ - ProductionSupport
      summary: RqBQ Request manual intervention in a production support related deployment task
      description: RqBQ Request manual intervention in a production support related deployment task
      operationId: RequestProductionSupport
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionsupportid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionSupport'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSupport'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductDeployment/{productdeploymentid}/ProductionSupport/{productionsupportid}/Retrieve':
    get:
      tags:
        - BQ - ProductionSupport
      summary: ReBQ Retrieve details about a production support related deployment task or deliverable
      description: ReBQ Retrieve details about a production support related deployment task or deliverable
      operationId: RetrieveProductionSupport
      parameters:
        - $ref: '#/components/parameters/productdeploymentid'
        - $ref: '#/components/parameters/productionsupportid'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSupport'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    requirement:
      type: object
      properties:
        RequirementType:
          type: string
          description: ''
          format: string
      description: The consolidated aspects of the staffing operations deployment tasks
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: The reference to and descriptive name of the deployment project Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A description of the scope, goal and make-up of the product deployment project ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: "Key dates associated with the development of the deployment plan (e.g. planning start date, deployment plan approval, deployment plan sign-off) ||\r\n|"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Value of the specific date type ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: File of consolidated deployment planning and deliverable specifications for the task
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: Reference to associated documents
    HROperations:
      type: object
      properties:
        ProductandServiceDeploymentHROperationsRequirements:
          $ref: '#/components/schemas/requirement'
        ProductandServiceDeploymentHROperationsRequirementsWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProductandServiceDeploymentHROperationsRequirementsTaskSpecification:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more deliverables that may be further defined in terms of an approach to be followed to create them\n\nExamples: Functional module specification"
    SalesandMarketing:
      type: object
      properties:
        ProductandServiceDeploymentSalesandMarketingRequirements:
          $ref: '#/components/schemas/requirement'
        ProductandServiceDeploymentSalesandMarketingRequirementsWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProductandServiceDeploymentSalesandMarketingRequirementsTaskSpecification:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more deliverables that may be further defined in terms of an approach to be followed to create them\n\nExamples: Functional module specification"
    ProductionSupport:
      type: object
      properties:
        ProductandServiceDeploymentProductionSupportRequirements:
          $ref: '#/components/schemas/requirement'
        ProductandServiceDeploymentProductionSupportRequirementsWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProductandServiceDeploymentProductionSupportRequirementsTaskSpecification:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more deliverables that may be further defined in terms of an approach to be followed to create them\n\nExamples: Functional module specification"
    Systems:
      type: object
      properties:
        ProductandServiceDeploymentSystemsRequirements:
          $ref: '#/components/schemas/requirement'
        ProductandServiceDeploymentSystemsRequirementsWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProductandServiceDeploymentSystemsRequirementsTaskSpecification:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more deliverables that may be further defined in terms of an approach to be followed to create them\n\nExamples: Functional module specification"
    Servicing:
      type: object
      properties:
        ProductandServiceDeploymentServicingRequirements:
          $ref: '#/components/schemas/requirement'
        ProductandServiceDeploymentServicingRequirementsWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProductandServiceDeploymentServicingRequirementsTaskSpecification:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more deliverables that may be further defined in terms of an approach to be followed to create them\n\nExamples: Functional module specification"
    Production:
      type: object
      properties:
        ProductandServiceDeploymentProductionRequirements:
          $ref: '#/components/schemas/requirement'
        ProductandServiceDeploymentProductionRequirementsWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProductandServiceDeploymentProductionRequirementsTaskSpecification:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more deliverables that may be further defined in terms of an approach to be followed to create them\n\nExamples: Functional module specification"
    ITOperations:
      type: object
      properties:
        ProductandServiceDeploymentITOperationsRequirements:
          $ref: '#/components/schemas/requirement'
        ProductandServiceDeploymentITOperationsRequirementsWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProductandServiceDeploymentITOperationsRequirementsTaskSpecification:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more deliverables that may be further defined in terms of an approach to be followed to create them\n\nExamples: Functional module specification"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: ''
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: "The financial considerations for the deployment (includes planning and execution) ||\r\n|"
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
        - DevelopmentPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n* `DevelopmentPlan` - \r\n"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: "The derived deployment execution plan, covering tasks from the completion and acceptance of the deployment plan through to completion of the deployment including post deployment analysis tasks if required. Consolidates the different aspects of the plan. (Captures both planned and actual results) ||\r\n|"
    organisationidentificationtypevalues:
      enum:
        - LEI
        - ELF
        - MIC
        - BICFI
        - Bankpartyidentification
        - Centralbankidentificationnumber
        - Clearingidentificationnumber
        - Certificateofincorporationnumber
        - Countryidentificationcode
        - Customernumber
        - Datauniversalnumberingsystem
        - Employeridentificationnumber
        - Gs1glnidentifier
        - SIREN
        - SIRET
        - Taxidentificationnumber
        - EANGLN
      type: string
      description: ">\r\n* `LEI` - Legal Entity Identifier is a code allocated to a party as described in ISO 17442 \"Financial Services - Legal Entity Identifier (LEI)\".\r\n* `ELF` - Entity Legal Forms is a code allocated to a party as described in ISO 20275 \"Financial services  Entity legal forms (ELF)\". \r\n* `MIC` - Market Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383 \"Codes for exchanges and market identifications\".\r\n* `BICFI` - Code allocated to a financial institution by the ISO 9362 Registration Authority as described in ISO 9362 \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".\r\n* `Bankpartyidentification` - Unique and unambiguous assignment made by a specific bank or similar financial institution to identify a relationship as defined between the bank and its client.\r\n* `Centralbankidentificationnumber` - A unique identification number assigned by a central bank to identify an organisation.\r\n* `Clearingidentificationnumber` - A unique identification number assigned by a clearing house to identify an organisation\r\n* `Certificateofincorporationnumber` - A unique identification number assigned by a designated authority to a certificate of incorporation and used to identify an organisation.\r\n* `Countryidentificationcode` - Country authority given organisation identification (e.g., corporate registration number)\r\n* `Customernumber` - Number assigned by an issuer to identify a customer.\nNumber assigned by a party to identify a creditor or debtor relationship.\r\n* `Datauniversalnumberingsystem` - A unique identification number provided by Dun & Bradstreet to identify an organisation.\r\n* `Employeridentificationnumber` - Number assigned by a registration authority to an employer.\r\n* `Gs1glnidentifier` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to GS1 numbering scheme rules.The number is used to retrieve detailed information that is linked to it.\r\n* `SIREN` - The SIREN number is a 9 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation in France.\r\n* `SIRET` - The SIRET number is a 14 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation unit in France. It consists of the SIREN number, followed by a five digit classification number, to identify the local geographical unit of that entity\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to identify an organisation.\r\n* `EANGLN` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to the European Association for Numbering (EAN) numbering scheme rules. The number is used to retrieve detailed information that is linked to it. (iso20022)\r\n"
    organisationidentification:
      type: object
      properties:
        OrganisationIdentificationType:
          $ref: '#/components/schemas/organisationidentificationtypevalues'
        OrganisationIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    organisationdatetimetypevalues:
      enum:
        - RegistrationDate
        - EstablishmentDate
        - EntityExpirationDate
      type: string
      description: ">\r\n* `RegistrationDate` - Date and time at which a given organisation was officially registered. (ISO20022)\r\n* `EstablishmentDate` - Date when the organisation was established. ISO20022\r\n* `EntityExpirationDate` - The date the Legal Entity ceased operation or was merged. ISO20022\r\n"
    organisationdatetime:
      type: object
      properties:
        OrganisatioDate:
          $ref: '#/components/schemas/datetime'
        OrganisatioDateType:
          $ref: '#/components/schemas/organisationdatetimetypevalues'
      description: ''
    organisationtypevalues:
      enum:
        - LegalEntity
        - Authority
        - OrganisationUnit
        - FinancialInstitution
        - Charity
        - GovernmentBody
      type: string
      description: ">\r\n* `LegalEntity` - \r\n* `Authority` - \r\n* `OrganisationUnit` - \r\n* `FinancialInstitution` - \r\n* `Charity` - \r\n* `GovernmentBody` - \r\n"
    organisationnametypevalues:
      enum:
        - ShortName
        - TradingName
        - LegalName
      type: string
      description: ">\r\n* `ShortName` - \r\n* `TradingName` - \r\n* `LegalName` - \r\n"
    organisationname:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/name'
        NameType:
          $ref: '#/components/schemas/organisationnametypevalues'
      description: ''
    organisationlegalstructuretypevalues:
      enum:
        - Corporation
        - Individual
        - Supranational
        - Sovereign
        - Municipal
        - Province
        - State
        - County
        - Partnership
        - Financialinstitution
        - National
      type: string
      description: ">\r\n* `Corporation` - Legal structure is a corporation.\r\n* `Individual` - Legal structure is an individual.\r\n* `Supranational` - Legal structure is a supranational.\r\n* `Sovereign` - Legal structure is a sovereign.\r\n* `Municipal` - Legal structure is a municipal.\r\n* `Province` - Legal structure is a province.\r\n* `State` - Legal structure is a state.\r\n* `County` - Legal structure is a county.\r\n* `Partnership` - Legal structure is a partnership.\r\n* `Financialinstitution` - Legal structure is a financial institution.\r\n* `National` - Legal structure is a state.\r\n"
    organisation:
      type: object
      properties:
        OrganisationStructureHierarchy:
          $ref: '#/components/schemas/text'
        OrganisationIdentification:
          $ref: '#/components/schemas/organisationidentification'
        OrganisationSector:
          $ref: '#/components/schemas/text'
        LegalEntityIndicator:
          type: string
          description: ''
          format: string
        OrganisationDate:
          $ref: '#/components/schemas/organisationdatetime'
        OrganisationType:
          $ref: '#/components/schemas/organisationtypevalues'
        OrganisationName:
          $ref: '#/components/schemas/organisationname'
        OrganisationLegalStructure:
          $ref: '#/components/schemas/organisationlegalstructuretypevalues'
      description: "The organizational aspects of the deployment effort (includes planning and execution) Organisation _x000D_\n|Organisation  (https://www.iso20022.org/standardsrepository/type/Organisation)|Standard|ISO20022 BM ()"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The deployment schedule of events, planned and actual (includes planning and execution tasks) ||\r\n|"
    ProductandServiceDeploymentDevelopment:
      type: object
      properties:
        ProductandServiceDeploymentProjectName:
          $ref: '#/components/schemas/name'
        ProductandServiceDeploymentProjectType:
          $ref: '#/components/schemas/text'
        ProductandServiceDeploymentProjectDescription:
          $ref: '#/components/schemas/text'
        ProductandServiceDeploymentImplementationPlan:
          $ref: '#/components/schemas/plan'
        ProductandServiceDeploymentBudget:
          $ref: '#/components/schemas/budgetarrangement'
        ProductandServiceDeploymentOrganization:
          $ref: '#/components/schemas/organisation'
        ProductandServiceDeploymentSchedule:
          $ref: '#/components/schemas/schedule'
        DateType:
          $ref: '#/components/schemas/datetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
      description: "To build or enhance something, typically an IT production systems  within Product Deployment. Includes development, Assessment and deployment activities.\nExample: Build, enhance, test and deploy a major enhancement to a production product processing system."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProductandServiceDeploymentDevelopment:
      description: ProductandServiceDeploymentDevelopment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductandServiceDeploymentDevelopment'
    Systems:
      description: Systems
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Systems'
    ITOperations:
      description: ITOperations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ITOperations'
    HROperations:
      description: HROperations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HROperations'
    SalesandMarketing:
      description: SalesandMarketing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesandMarketing'
    Servicing:
      description: Servicing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Servicing'
    Production:
      description: Production
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Production'
    ProductionSupport:
      description: ProductionSupport
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionSupport'
  parameters:
    productdeploymentid:
      name: productdeploymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    systemsid:
      name: systemsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    itoperationsid:
      name: itoperationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    hroperationsid:
      name: hroperationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    salesandmarketingid:
      name: salesandmarketingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    servicingid:
      name: servicingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productionid:
      name: productionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productionsupportid:
      name: productionsupportid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProductandServiceDeploymentDevelopment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductandServiceDeploymentDevelopment'
      required: true
    Systems:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Systems'
      required: true
    ITOperations:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ITOperations'
      required: true
    HROperations:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HROperations'
      required: true
    SalesandMarketing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesandMarketing'
      required: true
    Servicing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Servicing'
      required: true
    Production:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Production'
      required: true
    ProductionSupport:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionSupport'
      required: true