openapi: 3.0.1
info:
  title: Product Portfolio
  description: Maintain a portfolio of analytical views of the product portfolio to support product profitability and performance analysis
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductPortfolio/13.0.0
paths:
  /ProductPortfolio/Evaluate:
    post:
      tags:
        - CR - ProductPortfolioAnalysis
      summary: EvCR Evaluate product portfolio performance
      description: EvCR Evaluate product portfolio performance
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/ProductPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ProductPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/Update':
    put:
      tags:
        - CR - ProductPortfolioAnalysis
      summary: UpCR Update settings or content for product portfolio analysis activity
      description: UpCR Update settings or content for product portfolio analysis activity
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
      requestBody:
        $ref: '#/components/requestBodies/ProductPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ProductPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/Request':
    put:
      tags:
        - CR - ProductPortfolioAnalysis
      summary: RqCR Request manual intervention in the product portfolio analysis activity
      description: RqCR Request manual intervention in the product portfolio analysis activity
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
      requestBody:
        $ref: '#/components/requestBodies/ProductPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ProductPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/Retrieve':
    get:
      tags:
        - CR - ProductPortfolioAnalysis
      summary: ReCR Retrieve details about product portfolio analysis activity
      description: ReCR Retrieve details about product portfolio analysis activity
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
      responses:
        '200':
          $ref: '#/components/responses/ProductPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/PerformanceAnalysis/Evaluate':
    post:
      tags:
        - BQ - PerformanceAnalysis
      summary: EvBQ Evaluate product performance using a specific type of analysis
      description: EvBQ Evaluate product performance using a specific type of analysis
      operationId: EvaluatePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Update':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: UpBQ Update details of a specific product performance analysis
      description: UpBQ Update details of a specific product performance analysis
      operationId: UpdatePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Exchange':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: 'EcBQ Accept, reject, verify, etc. product performance analysis'
      description: 'EcBQ Accept, reject, verify, etc. product performance analysis'
      operationId: ExchangePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Execute':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: ExBQ Execute an automated action against on-going analysis
      description: ExBQ Execute an automated action against on-going analysis
      operationId: ExecutePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Request':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: RqBQ Request manual intervention to on-going analysis
      description: RqBQ Request manual intervention to on-going analysis
      operationId: RequestPerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductPortfolio/{productportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Retrieve':
    get:
      tags:
        - BQ - PerformanceAnalysis
      summary: ReBQ Retrieve details about a specific product performance analysis
      description: ReBQ Retrieve details about a specific product performance analysis
      operationId: RetrievePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/productportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: "Defines a type of performance analysis performed to products in the portfolio (e.g. scheduled review, specialized analysis, sensitivity assessment/projection) ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Record of a task to perform a selected type of performance analysis on a product within the portfolio
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Specific properties and characteristics of the product that provide context for the performance analysis ||\r\n|"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: The date/time the performance report was completed ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Party who plays a  specific role in the context of assigning a status.
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    model:
      type: object
      properties:
        ModelType:
          $ref: '#/components/schemas/text'
        ModelPurpose:
          $ref: '#/components/schemas/text'
        ModelVersion:
          $ref: '#/components/schemas/text'
        ModelName:
          $ref: '#/components/schemas/name'
        ModelDateAndTime:
          $ref: '#/components/schemas/datetime'
        ModelStatus:
          $ref: '#/components/schemas/status'
      description: Reference to the performance analysis model used
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: "A consolidated report containing the results of performance analyses applied to the products making up the overall portfolio ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Work documentation, forms and schedules produced and referenced during the analysis'
    PerformanceAnalysis:
      type: object
      properties:
        ProductPerformanceAnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        ProductPerformanceAnalysisTask:
          $ref: '#/components/schemas/task'
        ProductPerformanceRequestSpecification:
          $ref: '#/components/schemas/text'
        ProductPerformanceModelReference:
          $ref: '#/components/schemas/model'
        ProductPerformanceProductandServiceActivityReport:
          $ref: '#/components/schemas/report'
        ProductPerformanceFinancialMarketResearchReport:
          $ref: '#/components/schemas/report'
        ProductPerformanceWorkProducts:
          $ref: '#/components/schemas/workproduct'
        ProductPerformanceRequestResult:
          type: string
          description: The output from executing the selected product performance analysis
          format: object
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\nExamples: Average balance calculation, Propensity to buy"
    producttypevalues:
      enum:
        - BankingProduct
        - InsuranceProduct
      type: string
      description: "The product type within the portfolio analysis ||\r\n|"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "Definition of the performance goals for products as defined by senior management functions (target/anticipated and actual as assessed). ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule for performing product portfolio analysis for the enterprise or division ||\r\n|"
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
        AnalysisSchedule:
          $ref: '#/components/schemas/schedule'
      description: "The consolidated report of the performance evaluation and comparisons from the analysis ||\r\n|"
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: "Reference to associated performance analysis reporting documents ||\r\n|"
    ProductPortfolioAnalysis:
      type: object
      properties:
        ProductPortfolioMake-up:
          type: string
          description: Definition of the product portfolio
          format: object
        ProductType:
          $ref: '#/components/schemas/producttypevalues'
        ProductTypeDefinition:
          $ref: '#/components/schemas/text'
        ProductPortfolioPerformanceGoals:
          $ref: '#/components/schemas/goal'
        ProductPortfolioAnalysisSchedule:
          $ref: '#/components/schemas/schedule'
        ProductPortfolioAnalysisReport:
          $ref: '#/components/schemas/report'
        ProductAnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        ProductAnalysisResult:
          $ref: '#/components/schemas/analysis'
        ProductAnalysisReportingDate:
          $ref: '#/components/schemas/datetime'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
      description: "Analyze the performance or behavior of some on-going activity or entity  within Product Portfolio. \nExamples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks.\n\nAnalyze the performance or behavior of some on-going activity or entity. Examples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProductPortfolioAnalysis:
      description: ProductPortfolioAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductPortfolioAnalysis'
    PerformanceAnalysis:
      description: PerformanceAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
  parameters:
    productportfolioid:
      name: productportfolioid
      in: path
      required: true
      style: simple
      schema:
        type: string
    performanceanalysisid:
      name: performanceanalysisid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProductPortfolioAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductPortfolioAnalysis'
      required: true
    PerformanceAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
      required: true