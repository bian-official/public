openapi: 3.0.1
info:
  title: Corporate Action
  description: This Service Domain supports the various custodial tasks associated with processing associated corporate actions for customer's with securities held at the bank
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CorporateAction/13.0.0
paths:
  '/CorporateAction/{corporateactionid}/Control':
    put:
      tags:
        - CR - CorporateActionProcedure
      summary: Control Corporate Action Procedure
      description: Control Corporate Action Procedure
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateActionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/Exchange':
    put:
      tags:
        - CR - CorporateActionProcedure
      summary: Exchange Corporate Action Procedure
      description: Exchange Corporate Action Procedure
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateActionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/Execute':
    put:
      tags:
        - CR - CorporateActionProcedure
      summary: Execute Corporate Action Procedure
      description: Execute Corporate Action Procedure
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateActionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /CorporateAction/Initiate:
    post:
      tags:
        - CR - CorporateActionProcedure
      summary: Initiate Corporate Action Procedure
      description: Initiate Corporate Action Procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CorporateActionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/Notify':
    get:
      tags:
        - CR - CorporateActionProcedure
      summary: Notify Corporate Action Procedure
      description: Notify Corporate Action Procedure
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/Request':
    put:
      tags:
        - CR - CorporateActionProcedure
      summary: Request Corporate Action Procedure
      description: Request Corporate Action Procedure
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateActionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/Retrieve':
    get:
      tags:
        - CR - CorporateActionProcedure
      summary: Retrieve Corporate Action Procedure
      description: Retrieve Corporate Action Procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/Update':
    put:
      tags:
        - CR - CorporateActionProcedure
      summary: Update Corporate Action Procedure
      description: Update Corporate Action Procedure
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/CorporateActionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CorporateActionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityDividendPayment/{securitydividendpaymentid}/Exchange':
    put:
      tags:
        - BQ - SecurityDividendPayment
      summary: Exchange Security Dividend Payment Workstep
      description: Exchange Security Dividend Payment Workstep
      operationId: ExchangeSecurityDividendPayment
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitydividendpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityDividendPayment'
      responses:
        '200':
          $ref: '#/components/responses/SecurityDividendPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityMergersandAcquisitionAction/{securitymergersandacquisitionactionid}/Exchange':
    put:
      tags:
        - BQ - SecurityMergersandAcquisitionAction
      summary: Exchange Security Mergers and Acquisition Action Workstep
      description: Exchange Security Mergers and Acquisition Action Workstep
      operationId: ExchangeSecurityMergersandAcquisitionAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitymergersandacquisitionactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityMergersandAcquisitionAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityMergersandAcquisitionAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityRightsIssueAction/{securityrightsissueactionid}/Exchange':
    put:
      tags:
        - BQ - SecurityRightsIssueAction
      summary: Exchange Security Rights Issue Action Workstep
      description: Exchange Security Rights Issue Action Workstep
      operationId: ExchangeSecurityRightsIssueAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityrightsissueactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityRightsIssueAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityRightsIssueAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecuritySpin-OffAction/{securityspin-offactionid}/Exchange':
    put:
      tags:
        - BQ - SecuritySpin-OffAction
      summary: Exchange Security Spin-Off Action Workstep
      description: Exchange Security Spin-Off Action Workstep
      operationId: ExchangeSecuritySpin-OffAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityspin-offactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritySpin-OffAction'
      responses:
        '200':
          $ref: '#/components/responses/SecuritySpin-OffAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/StockSplitorReversalAction/{stocksplitorreversalactionid}/Exchange':
    put:
      tags:
        - BQ - StockSplitorReversalAction
      summary: Exchange Stock Split or Reversal Action Workstep
      description: Exchange Stock Split or Reversal Action Workstep
      operationId: ExchangeStockSplitorReversalAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/stocksplitorreversalactionid'
      requestBody:
        $ref: '#/components/requestBodies/StockSplitorReversalAction'
      responses:
        '200':
          $ref: '#/components/responses/StockSplitorReversalAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityDividendPayment/{securitydividendpaymentid}/Execute':
    put:
      tags:
        - BQ - SecurityDividendPayment
      summary: Execute Security Dividend Payment Workstep
      description: Execute Security Dividend Payment Workstep
      operationId: ExecuteSecurityDividendPayment
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitydividendpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityDividendPayment'
      responses:
        '200':
          $ref: '#/components/responses/SecurityDividendPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityMergersandAcquisitionAction/{securitymergersandacquisitionactionid}/Execute':
    put:
      tags:
        - BQ - SecurityMergersandAcquisitionAction
      summary: Execute Security Mergers and Acquisition Action Workstep
      description: Execute Security Mergers and Acquisition Action Workstep
      operationId: ExecuteSecurityMergersandAcquisitionAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitymergersandacquisitionactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityMergersandAcquisitionAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityMergersandAcquisitionAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityRightsIssueAction/{securityrightsissueactionid}/Execute':
    put:
      tags:
        - BQ - SecurityRightsIssueAction
      summary: Execute Security Rights Issue Action Workstep
      description: Execute Security Rights Issue Action Workstep
      operationId: ExecuteSecurityRightsIssueAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityrightsissueactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityRightsIssueAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityRightsIssueAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecuritySpin-OffAction/{securityspin-offactionid}/Execute':
    put:
      tags:
        - BQ - SecuritySpin-OffAction
      summary: Execute Security Spin-Off Action Workstep
      description: Execute Security Spin-Off Action Workstep
      operationId: ExecuteSecuritySpin-OffAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityspin-offactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritySpin-OffAction'
      responses:
        '200':
          $ref: '#/components/responses/SecuritySpin-OffAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/StockSplitorReversalAction/{stocksplitorreversalactionid}/Execute':
    put:
      tags:
        - BQ - StockSplitorReversalAction
      summary: Execute Stock Split or Reversal Action Workstep
      description: Execute Stock Split or Reversal Action Workstep
      operationId: ExecuteStockSplitorReversalAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/stocksplitorreversalactionid'
      requestBody:
        $ref: '#/components/requestBodies/StockSplitorReversalAction'
      responses:
        '200':
          $ref: '#/components/responses/StockSplitorReversalAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityDividendPayment/Initiate':
    post:
      tags:
        - BQ - SecurityDividendPayment
      summary: Initiate Security Dividend Payment Workstep
      description: Initiate Security Dividend Payment Workstep
      operationId: InitiateSecurityDividendPayment
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityDividendPayment'
      responses:
        '200':
          $ref: '#/components/responses/SecurityDividendPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityMergersandAcquisitionAction/Initiate':
    post:
      tags:
        - BQ - SecurityMergersandAcquisitionAction
      summary: Initiate Security Mergers and Acquisition Action Workstep
      description: Initiate Security Mergers and Acquisition Action Workstep
      operationId: InitiateSecurityMergersandAcquisitionAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityMergersandAcquisitionAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityMergersandAcquisitionAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityRightsIssueAction/Initiate':
    post:
      tags:
        - BQ - SecurityRightsIssueAction
      summary: Initiate Security Rights Issue Action Workstep
      description: Initiate Security Rights Issue Action Workstep
      operationId: InitiateSecurityRightsIssueAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityRightsIssueAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityRightsIssueAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecuritySpin-OffAction/Initiate':
    post:
      tags:
        - BQ - SecuritySpin-OffAction
      summary: Initiate Security Spin-Off Action Workstep
      description: Initiate Security Spin-Off Action Workstep
      operationId: InitiateSecuritySpin-OffAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritySpin-OffAction'
      responses:
        '200':
          $ref: '#/components/responses/SecuritySpin-OffAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/StockSplitorReversalAction/Initiate':
    post:
      tags:
        - BQ - StockSplitorReversalAction
      summary: Initiate Stock Split or Reversal Action Workstep
      description: Initiate Stock Split or Reversal Action Workstep
      operationId: InitiateStockSplitorReversalAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
      requestBody:
        $ref: '#/components/requestBodies/StockSplitorReversalAction'
      responses:
        '200':
          $ref: '#/components/responses/StockSplitorReversalAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityDividendPayment/{securitydividendpaymentid}/Notify':
    get:
      tags:
        - BQ - SecurityDividendPayment
      summary: Notify Security Dividend Payment Workstep
      description: Notify Security Dividend Payment Workstep
      operationId: NotifySecurityDividendPayment
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitydividendpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/SecurityDividendPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityMergersandAcquisitionAction/{securitymergersandacquisitionactionid}/Notify':
    get:
      tags:
        - BQ - SecurityMergersandAcquisitionAction
      summary: Notify Security Mergers and Acquisition Action Workstep
      description: Notify Security Mergers and Acquisition Action Workstep
      operationId: NotifySecurityMergersandAcquisitionAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitymergersandacquisitionactionid'
      responses:
        '200':
          $ref: '#/components/responses/SecurityMergersandAcquisitionAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityRightsIssueAction/{securityrightsissueactionid}/Notify':
    get:
      tags:
        - BQ - SecurityRightsIssueAction
      summary: Notify Security Rights Issue Action Workstep
      description: Notify Security Rights Issue Action Workstep
      operationId: NotifySecurityRightsIssueAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityrightsissueactionid'
      responses:
        '200':
          $ref: '#/components/responses/SecurityRightsIssueAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecuritySpin-OffAction/{securityspin-offactionid}/Notify':
    get:
      tags:
        - BQ - SecuritySpin-OffAction
      summary: Notify Security Spin-Off Action Workstep
      description: Notify Security Spin-Off Action Workstep
      operationId: NotifySecuritySpin-OffAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityspin-offactionid'
      responses:
        '200':
          $ref: '#/components/responses/SecuritySpin-OffAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/StockSplitorReversalAction/{stocksplitorreversalactionid}/Notify':
    get:
      tags:
        - BQ - StockSplitorReversalAction
      summary: Notify Stock Split or Reversal Action Workstep
      description: Notify Stock Split or Reversal Action Workstep
      operationId: NotifyStockSplitorReversalAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/stocksplitorreversalactionid'
      responses:
        '200':
          $ref: '#/components/responses/StockSplitorReversalAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityDividendPayment/{securitydividendpaymentid}/Request':
    put:
      tags:
        - BQ - SecurityDividendPayment
      summary: Request Security Dividend Payment Workstep
      description: Request Security Dividend Payment Workstep
      operationId: RequestSecurityDividendPayment
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitydividendpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityDividendPayment'
      responses:
        '200':
          $ref: '#/components/responses/SecurityDividendPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityMergersandAcquisitionAction/{securitymergersandacquisitionactionid}/Request':
    put:
      tags:
        - BQ - SecurityMergersandAcquisitionAction
      summary: Request Security Mergers and Acquisition Action Workstep
      description: Request Security Mergers and Acquisition Action Workstep
      operationId: RequestSecurityMergersandAcquisitionAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitymergersandacquisitionactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityMergersandAcquisitionAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityMergersandAcquisitionAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityRightsIssueAction/{securityrightsissueactionid}/Request':
    put:
      tags:
        - BQ - SecurityRightsIssueAction
      summary: Request Security Rights Issue Action Workstep
      description: Request Security Rights Issue Action Workstep
      operationId: RequestSecurityRightsIssueAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityrightsissueactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityRightsIssueAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityRightsIssueAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecuritySpin-OffAction/{securityspin-offactionid}/Request':
    put:
      tags:
        - BQ - SecuritySpin-OffAction
      summary: Request Security Spin-Off Action Workstep
      description: Request Security Spin-Off Action Workstep
      operationId: RequestSecuritySpin-OffAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityspin-offactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritySpin-OffAction'
      responses:
        '200':
          $ref: '#/components/responses/SecuritySpin-OffAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/StockSplitorReversalAction/{stocksplitorreversalactionid}/Request':
    put:
      tags:
        - BQ - StockSplitorReversalAction
      summary: Request Stock Split or Reversal Action Workstep
      description: Request Stock Split or Reversal Action Workstep
      operationId: RequestStockSplitorReversalAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/stocksplitorreversalactionid'
      requestBody:
        $ref: '#/components/requestBodies/StockSplitorReversalAction'
      responses:
        '200':
          $ref: '#/components/responses/StockSplitorReversalAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityDividendPayment/{securitydividendpaymentid}/Retrieve':
    get:
      tags:
        - BQ - SecurityDividendPayment
      summary: Retrieve Security Dividend Payment Workstep
      description: Retrieve Security Dividend Payment Workstep
      operationId: RetrieveSecurityDividendPayment
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitydividendpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/SecurityDividendPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityMergersandAcquisitionAction/{securitymergersandacquisitionactionid}/Retrieve':
    get:
      tags:
        - BQ - SecurityMergersandAcquisitionAction
      summary: Retrieve Security Mergers and Acquisition Action Workstep
      description: Retrieve Security Mergers and Acquisition Action Workstep
      operationId: RetrieveSecurityMergersandAcquisitionAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitymergersandacquisitionactionid'
      responses:
        '200':
          $ref: '#/components/responses/SecurityMergersandAcquisitionAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityRightsIssueAction/{securityrightsissueactionid}/Retrieve':
    get:
      tags:
        - BQ - SecurityRightsIssueAction
      summary: Retrieve Security Rights Issue Action Workstep
      description: Retrieve Security Rights Issue Action Workstep
      operationId: RetrieveSecurityRightsIssueAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityrightsissueactionid'
      responses:
        '200':
          $ref: '#/components/responses/SecurityRightsIssueAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecuritySpin-OffAction/{securityspin-offactionid}/Retrieve':
    get:
      tags:
        - BQ - SecuritySpin-OffAction
      summary: Retrieve Security Spin-Off Action Workstep
      description: Retrieve Security Spin-Off Action Workstep
      operationId: RetrieveSecuritySpin-OffAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityspin-offactionid'
      responses:
        '200':
          $ref: '#/components/responses/SecuritySpin-OffAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/StockSplitorReversalAction/{stocksplitorreversalactionid}/Retrieve':
    get:
      tags:
        - BQ - StockSplitorReversalAction
      summary: Retrieve Stock Split or Reversal Action Workstep
      description: Retrieve Stock Split or Reversal Action Workstep
      operationId: RetrieveStockSplitorReversalAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/stocksplitorreversalactionid'
      responses:
        '200':
          $ref: '#/components/responses/StockSplitorReversalAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityDividendPayment/{securitydividendpaymentid}/Update':
    put:
      tags:
        - BQ - SecurityDividendPayment
      summary: Update Security Dividend Payment Workstep
      description: Update Security Dividend Payment Workstep
      operationId: UpdateSecurityDividendPayment
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitydividendpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityDividendPayment'
      responses:
        '200':
          $ref: '#/components/responses/SecurityDividendPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityMergersandAcquisitionAction/{securitymergersandacquisitionactionid}/Update':
    put:
      tags:
        - BQ - SecurityMergersandAcquisitionAction
      summary: Update Security Mergers and Acquisition Action Workstep
      description: Update Security Mergers and Acquisition Action Workstep
      operationId: UpdateSecurityMergersandAcquisitionAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securitymergersandacquisitionactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityMergersandAcquisitionAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityMergersandAcquisitionAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecurityRightsIssueAction/{securityrightsissueactionid}/Update':
    put:
      tags:
        - BQ - SecurityRightsIssueAction
      summary: Update Security Rights Issue Action Workstep
      description: Update Security Rights Issue Action Workstep
      operationId: UpdateSecurityRightsIssueAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityrightsissueactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecurityRightsIssueAction'
      responses:
        '200':
          $ref: '#/components/responses/SecurityRightsIssueAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/SecuritySpin-OffAction/{securityspin-offactionid}/Update':
    put:
      tags:
        - BQ - SecuritySpin-OffAction
      summary: Update Security Spin-Off Action Workstep
      description: Update Security Spin-Off Action Workstep
      operationId: UpdateSecuritySpin-OffAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/securityspin-offactionid'
      requestBody:
        $ref: '#/components/requestBodies/SecuritySpin-OffAction'
      responses:
        '200':
          $ref: '#/components/responses/SecuritySpin-OffAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CorporateAction/{corporateactionid}/StockSplitorReversalAction/{stocksplitorreversalactionid}/Update':
    put:
      tags:
        - BQ - StockSplitorReversalAction
      summary: Update Stock Split or Reversal Action Workstep
      description: Update Stock Split or Reversal Action Workstep
      operationId: UpdateStockSplitorReversalAction
      parameters:
        - $ref: '#/components/parameters/corporateactionid'
        - $ref: '#/components/parameters/stocksplitorreversalactionid'
      requestBody:
        $ref: '#/components/requestBodies/StockSplitorReversalAction'
      responses:
        '200':
          $ref: '#/components/responses/StockSplitorReversalAction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: " ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Corporate Action Procedure Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation and or tasks that need to be completed prior to the initiation of the workstep
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule according to which the service provider will process the Corporate Action Procedure ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Security Rights Issue Action Workstep specific Business Service
    proceduretypevalues:
      type: object
      properties:
        Proceduretypevalues:
          type: string
          description: A Classification value that distinguishes between the type of process undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of process undertaken within Procedure
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: "Request to process Corporate Action Procedure ||\r\n|"
    procedure:
      type: object
      properties:
        ProcedureType:
          $ref: '#/components/schemas/proceduretypevalues'
        ProcedureDateTime:
          $ref: '#/components/schemas/datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/status'
      description: "An unique reference to an item or an occurrence of Corporate Action Procedure ||\r\n|"
    worksteptypevalues:
      type: object
      properties:
        Worksteptypevalues:
          type: string
          description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    workstep:
      type: object
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/text'
        WorkstepType:
          $ref: '#/components/schemas/worksteptypevalues'
        WorkstepDescription:
          $ref: '#/components/schemas/text'
        WorkstepDateTime:
          $ref: '#/components/schemas/datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/workproduct'
      description: Reference to Security Rights Issue Action Workstep
    SecurityRightsIssueAction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorporateActionProcedureReference:
          $ref: '#/components/schemas/procedure'
        SecurityRightsIssueActionWorkstepReference:
          $ref: '#/components/schemas/workstep'
        SecurityRightsIssueActionWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Security Rights Issue Action Workstep in the context of executing the Security Rights Issue Action Workstep
    SecuritySpin-OffAction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorporateActionProcedureReference:
          $ref: '#/components/schemas/procedure'
        SecuritySpin-OffActionWorkstepReference:
          $ref: '#/components/schemas/workstep'
        SecuritySpin-OffActionWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Security Rights Issue Action Workstep in the context of executing the Security Rights Issue Action Workstep
    StockSplitorReversalAction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorporateActionProcedureReference:
          $ref: '#/components/schemas/procedure'
        StockSplitorReversalActionWorkstepReference:
          $ref: '#/components/schemas/workstep'
        StockSplitorReversalActionWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Security Rights Issue Action Workstep in the context of executing the Security Rights Issue Action Workstep
    SecurityDividendPayment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorporateActionProcedureReference:
          $ref: '#/components/schemas/procedure'
        SecurityDividendPaymentWorkstepReference:
          $ref: '#/components/schemas/workstep'
        SecurityDividendPaymentWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Security Rights Issue Action Workstep in the context of executing the Security Rights Issue Action Workstep
    SecurityMergersandAcquisitionAction:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CorporateActionProcedureReference:
          $ref: '#/components/schemas/procedure'
        SecurityMergersandAcquisitionActionWorkstepReference:
          $ref: '#/components/schemas/workstep'
        SecurityMergersandAcquisitionActionWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Security Rights Issue Action Workstep in the context of executing the Security Rights Issue Action Workstep
    CorporateActionOutcome:
      type: object
      properties:
        CorporateActionWorkProduct:
          $ref: '#/components/schemas/workproduct'
        CorporateActionProcedure:
          $ref: '#/components/schemas/procedure'
      description: A course of action for doing Security Rights Issue Action Workstep in the context of executing the Security Rights Issue Action Workstep
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between Procedures according to the type of business services and/or type of concern defined within Corporate Action Procedure ||\r\n|"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: "A selected optional business service as subject matter of Corporate Action Procedure ||\r\n|"
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: "Reference to the Financial Facility related to Corporate Action Procedure ||\r\n|"
    proceduretype:
      type: object
      properties:
        ProcedureTypeName:
          $ref: '#/components/schemas/name'
        ProcedureType:
          $ref: '#/components/schemas/proceduretypevalues'
      description: "A Classification value that distinguishes between the type of process undertaken within Corporate Action Procedure ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: "A Classification value that distinguishes between the type of services in Corporate Action Procedure ||\r\n|"
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    bankingproducttype:
      type: object
      properties:
        ProductTypeDefinition:
          type: string
          description: ''
          format: string
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductClassificationIssuingAuthority:
          type: string
          description: ''
          format: string
      description: "A Classification value that distinguishes between the type of products/services related to Corporate Action Procedure ||\r\n|"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    productstatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productstatus:
      type: object
      properties:
        ProductStatus:
          $ref: '#/components/schemas/status'
        ProductStatusType:
          $ref: '#/components/schemas/productstatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productstatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: "Reference to the product or service that is related to Corporate Action Procedure Product_x000D_\n|Product (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022 BM ()"
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactiontype:
      type: object
      properties:
        TransactionTypeName:
          $ref: '#/components/schemas/name'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
      description: "A Classification value that distinguishes between the type of transactions in Corporate Action Procedure ||\r\n|"
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to the transaction that is related to Corporate Action Procedure ObligationFulfilment|ObligationFulfilment (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022 BM ()
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Reference to the Financial Transaction Arrangement that is related to Corporate Action Procedure Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementstatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementstatus:
      type: object
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/status'
        AgreementStatusType:
          $ref: '#/components/schemas/agreementstatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: "Reference to the Customer Agreement that is related to Corporate Action Procedure Agreement_x000D_\n|Agreement (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022 BM ()"
    corporateactionstatustypevalues:
      enum:
        - Active
        - Deactivated
        - Expired
        - Cancelled
        - Withdrawn
        - Inactive
      type: string
      description: ">\r\n* `Active` - The CA event is active. (ISO20022)\r\n* `Deactivated` - The CA event is deactivated. The clients cannot send instruction anymore. (ISO20022)\r\n* `Expired` - The CA event is expired, no more processing, claims, transformations take place. (ISO20022)\r\n* `Cancelled` - The CA event is cancelled. (ISO20022)\r\n* `Withdrawn` - The CA event is withrawn, ie, cancelled by the market. (ISO20022)\r\n* `Inactive` - Option is not active and can no longer be responded to. Any responses already processed against this option will remain valid, eg, expired option. (ISO20022)\r\n"
    corporateactiontypevalues:
      enum:
        - Dividendreinvestment
        - Accumulation
        - Activetradingstatus
        - Annualgeneralmeeting
        - Attachment
        - Bankruptcy
        - Bonddefault
        - Bonusissue
        - Callonintermediatesecurities
        - Capitaldistribution
        - Capitalgainsdistribution
        - Capitalisation
        - Cashdistributionfromnoneligiblesecuritiessales
        - Cashdividend
        - Change
        - Classactionproposedsettlement
        - Companyoption
        - Consent
        - Conversion
        - Couponstripping
        - Courtmeeting
        - Creditevent
        - Decreaseinvalue
        - Detachment
        - Disclosure
        - Dividendoption
        - Drawing
        - Dutchauction
        - Earlyredemption
        - Exchange
        - Exchangeoption
        - Extraordinarygeneralmeeting
        - Finalmaturity
        - Fullcall
        - Increaseinvalue
        - Information
        - Instalmentcall
        - Interestpayment
        - Interestpaymentwithprincipal
        - Intermediatesecuritiesdistribution
        - Liquidationdividend
        - Maturityextension
        - Merger
        - Namechange
        - Nonofficialoffer
        - Nonustefradcertification
        - Oddlotsalepurchase
        - Ordinarygeneralmeeting
        - Otherevent
        - Paripassu
        - Partialredemptionwithoutpoolfactorreduction
        - Partialredemptionwithpoolfactorreduction
        - Payinkind
        - Placeofincorporation
        - Prefunding
        - Priorityissue
        - Putredemption
        - Redenomination
        - Remarketing
        - Remarketingagreement
        - Repurchaseoffer
        - Reversestocksplit
        - Rightsissue
        - Scripdividend
        - Securitiesholdersmeeting
        - Sharespremiumdividend
        - Smallestnegotiableunit
        - Spinoff
        - Stockdividend
        - Stocksplit
        - Subscription
        - Taxonnondistributedproceeds
        - Taxreclaim
        - Tender
        - Tradingstatusdelisted
        - Tradingstatussuspended
        - Warrantexercise
        - Withholdingtaxreliefcertification
        - Worthless
      type: string
      description: ">\r\n* `Dividendreinvestment` - Dividend payment where holders can keep cash or have the cash reinvested in the market by the issuer into additional shares in the issuing company. To be distinguished from DVOP as the company invests the dividend in the market rather than creating new share capital in exchange for the dividend.\r\n* `Accumulation` - Funds related event in which the income (for example accumulation units) that accrues during an accounting period is retained within the fund instead of being paid away to investors. The retained income is nonetheless deemed to have been distributed to investors for tax purposes.\r\n* `Activetradingstatus` - Trading in the security has commenced or security has been re-activated after a suspension in trading.\r\n* `Annualgeneralmeeting` - Meeting Annual general meeting.\r\n* `Attachment` - Combination of different security types to create a unit. Units are usually comprised of warrants and bonds or warrants and equities. Securities may be combined at the request of the security holder or based on market convention.\r\n* `Bankruptcy` - Legal status of a company unable to pay creditors. Bankruptcy usually involves a formal court ruling. Securities may become valueless.\r\n* `Bonddefault` - Failure by the company to perform obligations defined as default events under the bond agreement and that have not been remedied.\r\n* `Bonusissue` - Bonus or capitalisation issue. Security holders receive additional assets free of payment from the issuer, in proportion to their holding.\r\n* `Callonintermediatesecurities` - Call or exercise on nil paid securities or intermediate securities resulting from an intermediate securities distribution (RHDI). This code is used for the second event, when an intermediate securities' issue (rights/coupons) is composed of two events, the first event being the distribution of intermediate securities.\r\n* `Capitaldistribution` - Corporate event pays shareholders an amount in cash issued from the capital account. There is no reduction to the face value of a single share (or the share has no par value). The number of circulating shares remains unchanged.\r\n* `Capitalgainsdistribution` - Event is the distribution of profits resulting from the sale of securities. Shareholders of mutual funds, unit trusts, or SICAVs are recipients of capital gains distributions and are often reinvested in additional shares of the fund.\r\n* `Capitalisation` - Increase of the current principal of a debt instrument without increasing the nominal value. It normally arises from the incorporation of due but unpaid interest into the principal. This is commonly done by increasing the pool factor value, for example, capitalisation, and negative amortisation.\r\n* `Cashdistributionfromnoneligiblesecuritiessales` - Distribution to shareholders of cash resulting from the selling of non-eligible securities, for example, in the frame of a depositary receipt program.\r\n* `Cashdividend` - Distribution of cash to shareholders, in proportion to their equity holding. Ordinary dividends are recurring and regular. Shareholder must take cash and may be offered a choice of currency.\r\n* `Change` - Information regarding a change further described in the corporate action details.\r\n* `Classactionproposedsettlement` - Situation where interested parties seek restitution for financial loss. The security holder may be offered the opportunity to join a class action proceeding and would need to respond with an instruction.\r\n* `Companyoption` - Company option may be granted by the company, allowing the holder to take up shares at some future date(s) at a pre arranged price in the company. A company may not grant options which enable the holder to take up unissued shares at a time which is five or more years from the date of the grant. Option holders are not members of a company. They are contingent creditors of a company and hence may, in some instances, be entitled to vote on and be bound by a scheme of arrangement between the creditors and the company. As many options have multiple exercise periods a company option will either lapse or carry on to the next expiry date.\r\n* `Consent` - Procedure that aims to obtain consent of holder to a proposal by the issuer or a third party without convening a meeting. For example, consent to change the terms of a bond.\r\n* `Conversion` - Conversion of securities (generally convertible bonds or preferred shares) into another form of securities (usually common shares) at a pre-stated price/ratio.\r\n* `Couponstripping` - Coupon stripping is the process whereby interest coupons for future payment dates are separated from the security corpus that entitles the holder to the principal repayment.\r\n* `Courtmeeting` - Announcement of a meeting at a Court.\r\n* `Creditevent` - Occurrence of credit derivative for which the issuer of one or several underlying securities is unable to fulfill its financial obligations (as defined in terms and conditions).\r\n* `Decreaseinvalue` - Reduction of face value of a single share or the value of fund assets. The number of circulating shares/units remains unchanged. This event may include a cash payout to holders.\r\n* `Detachment` - Separation of components that comprise a security, for example, usually units comprised of warrants and bond or warrants and equity. Units may be broken up at the request of the security holder or based on market convention.\r\n* `Disclosure` - Requirement for holders or beneficial owners to disclose their name, location and holdings of any issue to the issuer.\r\n* `Dividendoption` - Distribution of a dividend to shareholders with a choice of benefit to receive. Shareholders may choose to receive shares or cash. To be distinguished from DRIP as the company creates new share capital in exchange for the dividend rather than investing the dividend in the market.\r\n* `Drawing` - Securities are redeemed in part before the scheduled final maturity date. It is done without any pool factor reduction. The redemption is reflected in a debit of the face amount (FAMT). Drawing is distinct from partial call since drawn bonds are chosen by lottery. Therefore, not every holder is affected in the same way.\r\n* `Dutchauction` - Action by a party wishing to acquire a security. Holders of the security are invited to make an offer to sell, within a specific price range. The acquiring party will buy from the holder with lowest offer.\r\n* `Earlyredemption` - This includes drawing, partial and full call, put.\r\n* `Exchange` - Exchange of holdings for other securities and/or cash. The exchange can be either mandatory or voluntary involving the exchange of outstanding securities for different securities and/or cash. For example \"exchange offer\", \"capital reorganisation\" or \"funds separation\".\r\n* `Exchangeoption` - Event is an option for the shareholders to exchange their securities for other securities and/or cash. Exchange options are mentioned in the terms and conditions of a security and are valid during the whole lifetime of a security.\r\n* `Extraordinarygeneralmeeting` - Extraordinary or Special General Meeting. Extraordinary or special general meeting.\r\n* `Finalmaturity` - Redemption of an entire issue outstanding of securities, for example, bonds, preferred equity, funds, by the issuer or its agent, for example, asset manager, at final maturity.\r\n* `Fullcall` - Redemption of an entire issue outstanding of securities, for example, bonds, preferred equity, funds, by the issuer or its agent, for example, asset manager, before final maturity.\r\n* `Increaseinvalue` - Increase in the face value of a single security. The number of circulating securities remains unchanged.\r\n* `Information` - Information provided by the issuer having no accounting/financial impact on the holder.\r\n* `Instalmentcall` - Instalment towards the purchase of equity capital, subject to an agreement between an issuer and a purchaser.\r\n* `Interestpayment` - Interest payment distributed to holders of an interest bearing asset.\r\n* `Interestpaymentwithprincipal` - Event which consists of two components, the decrease of the amortized value of a pool factor security and an interest payment.\r\n* `Intermediatesecuritiesdistribution` - Distribution of intermediate securities that gives the holder the right to take part in a future event.\r\n* `Liquidationdividend` - Distribution of cash, assets or both. Debt may be paid in order of priority based on preferred claims to assets specified by the security.\r\n* `Maturityextension` - As stipulated in the security's Terms and Conditions, the issuer or the holder may prolong the maturity date of a security. After extension, the security details may differ from the original issue. An issuer initiated extension may be subject to holder's approval.\r\n* `Merger` - Exchange of outstanding securities, initiated by the issuer which may include options, as the result of two or more companies combining assets, that is, an external, third party company. Cash payments may accompany share exchange.\r\n* `Namechange` - Event is a name change. The issuing company changes its name. The event shows the change from old name to new name and may involve surrendering physical shares with the old name to the registrar.\r\n* `Nonofficialoffer` - Offers that are not supervised or regulated by an official entity and being offered by a party, for example a broker, usually at a discount price, for example broker offer, mini-tender, mini odd lot offer or third party offer.\r\n* `Nonustefradcertification` - Non-US beneficial owner certification requirement for exchange of temporary to permanent notes.\r\n* `Oddlotsalepurchase` - Sale or purchase of odd-lots to/from the issuing company, initiated either by the holder of the security or through an offer made by the issuer.\r\n* `Ordinarygeneralmeeting` - Ordinary general meeting.\r\n* `Otherevent` - Other event, use only when no other event type applies, for example, a new event type.\r\n* `Paripassu` - Occurs when securities with different characteristics, for example, shares with different entitlements to dividend or voting rights, become identical in all respects, for example, pari-passu or assimilation. May be scheduled in advance, for example, shares resulting from a bonus may become fungible after a pre-set period of time, or may result from outside events, for example, merger, reorganisation, issue of supplementary tranches.\r\n* `Partialredemptionwithoutpoolfactorreduction` - Securities are redeemed in part before their scheduled final maturity date. It is done without any pool factor reduction. The redemption is reflected in a debit of the face amount (FAMT).\r\n* `Partialredemptionwithpoolfactorreduction` - Securities are redeemed in part before their scheduled final maturity date. The redemption is reflected in a pool factor reduction. No movement of securities occurs.\r\n* `Payinkind` - Interest payment, in any kind except cash, distributed to holders of an interest bearing asset.\r\n* `Placeofincorporation` - Changes in the state of incorporation for US companies and changes in the place of incorporation for foreign companies. Where shares need to be registered following the incorporation change, the holder(s) may have to elect the registrar.\r\n* `Prefunding` - Also called partial defeasance. Issuer has money set aside to redeem a portion of an issue and the indenture states that the securities could be called earlier than the stated maturity.\r\n* `Priorityissue` - Form of open or public offer where, due to a limited amount of securities available, priority is given to existing shareholders.\r\n* `Putredemption` - Early redemption of a security at the election of the holder subject to the terms and condition of the issue with no reduction in nominal value.\r\n* `Redenomination` - Event by which the unit (currency and/or nominal) of a security is restated, for example, nominal/par value of security in a national currency is restated in another currency.\r\n* `Remarketing` - Purchase and sale of remarketed preferred equities/bonds through the negotiation of interest rate between the issuers and the holders.\r\n* `Remarketingagreement` - Purchase and sale of remarketed preferred equities/bonds through the negotiation of interest rate between the issuers and the holders.\r\n* `Repurchaseoffer` - Repurchase offer / issuer bid / reverse rights. Offer to existing holders by the issuing company to repurchase its own securities. The objective of the offer is to reduce the number of outstanding securities.\r\n* `Reversestocksplit` - Decrease in a company's number of outstanding equities without any change in the shareholder's equity or the aggregate market value at the time of the split. Equity price and nominal value are increased accordingly.\r\n* `Rightsissue` - Offer to holders of a security to subscribe for additional securities via the distribution of an intermediate security. Both processes are included in the same event.\r\n* `Scripdividend` - Dividend or interest paid in the form of scrip.\r\n* `Securitiesholdersmeeting` - Ordinary or annual or extraordinary or special general meeting.\r\n* `Sharespremiumdividend` - Corporate event pays shareholders an amount in cash issued from the shares premium reserve. It is similar to a dividend but with different tax implications.\r\n* `Smallestnegotiableunit` - Modification of the smallest negotiable unit of shares in order to obtain a new negotiable unit.\r\n* `Spinoff` - Distribution of securities issued by another company. The distributed securities may either be of a newly created or of an existing company. For example, spin-off, demerger, unbundling, divestment.\r\n* `Stockdividend` - Dividend paid to shareholders in the form of equities of the issuing corporation.\r\n* `Stocksplit` - Increase in a corporation's number of outstanding equities without any change in the shareholder's equity or the aggregate market value at the time of the split. Equity price and nominal value are reduced accordingly.\r\n* `Subscription` - Ability for security holders to purchase (additional or new) securities at a certain price, in proportion to their holding.\r\n* `Taxonnondistributedproceeds` - Taxable component on non-distributed proceeds, for example, Australian deemed income or US 871m income regulation.\r\n* `Taxreclaim` - Event related to tax reclaim activities.\r\n* `Tender` - Offer made to holders by a third party, requesting them to sell (tender) or exchange their securities.\r\n* `Tradingstatusdelisted` - Security is no longer able to comply with the listing requirements of a stock exchange and is removed from official board quotation.\r\n* `Tradingstatussuspended` - Trading in the security has been suspended.\r\n* `Warrantexercise` - Option offered to holders to buy (call warrant) or to sell (put warrant) a specific amount of stock, cash, or commodity, at a predetermined price, during a predetermined period of time (which usually corresponds to the life of the issue).\r\n* `Withholdingtaxreliefcertification` - Certification process for withholding tax reduction or exemption based on the tax status of the holder.\r\n* `Worthless` - Booking out of valueless securities.\r\n"
    corporateactiondatetimetypevalues:
      enum:
        - TradingDate
        - PariPassuDate
        - AnnouncementDate
        - EffectiveDate
        - LapsedDate
        - MarginFixingDate
      type: string
      description: ">\r\n* `TradingDate` - Date/time at which the deal (rights) was agreed. (ISO20022)\r\n* `PariPassuDate` - Date on which security will assimilate, become fungible, or have the same rights to dividends as the parent issue. (ISO20022)\r\n* `AnnouncementDate` - Date/time at which the issuer announced that a corporate action event will occur such as the issue of securities or an official meeting. (ISO20022)\r\n* `EffectiveDate` - Date/time at which an event is officially effective from the issuer's perspective. (ISO20022)\r\n* `LapsedDate` - Date/time at which an event/offer is terminated or lapsed. (ISO20022)\r\n* `MarginFixingDate` - Date/time at which the margin rate will be determined . (ISO20022)\r\n"
    corporateaction:
      type: object
      properties:
        CorporateActionStatus:
          $ref: '#/components/schemas/corporateactionstatustypevalues'
        CorporateActionType:
          $ref: '#/components/schemas/corporateactiontypevalues'
        CorporateActionDateTime:
          $ref: '#/components/schemas/corporateactiondatetimetypevalues'
      description: ' CorporateActionEvent|CorporateActionEvent (https://www.iso20022.org/standardsrepository/type/CorporateActionEvent)|Standard|ISO20022 BM ()'
    feetypevalues:
      enum:
        - Accountingfee
        - Adrfee
        - Advisoryfee
        - Airwaybillfee
        - Backendload
        - Brokeragefee
        - Clearanceandhandlingatdestination
        - Clearanceandhandlingatorigin
        - Collectfreight
        - Commission
        - Contingencydeferredsalescharge
        - Correspondentbankcharge
        - Custodyfee
        - Dangerousgoodsfee
        - Dilutionlevy
        - Discount
        - Equalisation
        - Frontendload
        - Initial
        - Insurancepremium
        - Issuancecancellationfee
        - Issuancefee
        - Managementfee
        - Matchingfees
        - Miscellaneousfee
        - Other
        - Packaging
        - Partacquis
        - Penalty
        - Pickup
        - Postagecharge
        - Premium
        - Publicationfee
        - Regulatoryfee
        - Securitycharge
        - Serviceprovisionfee
        - Shippingcharge
        - Signatureservice
        - Specialconcessions
        - Speciallyagreedfrontendload
        - Storageatdestination
        - Storageatorigin
        - Switch
        - Transferfee
        - Transportcharges
        - Ucitscommission
        - ChequeRelatedFee
      type: string
      description: ">\r\n* `Accountingfee` - Fee paid for accounting services rendered.\r\n* `Adrfee` - Charge linked to an ADR (American Depositary Receipt).\r\n* `Advisoryfee` - Fee paid for advisory services rendered.\r\n* `Airwaybillfee` - Charge is an airway bill fee.\r\n* `Backendload` - Sales charge paid by the investor when redeeming an investment such as an investment fund.\r\n* `Brokeragefee` - Fee paid to a broker for services provided.\r\n* `Clearanceandhandlingatdestination` - Charge is for clearance and handling of goods at destination.\r\n* `Clearanceandhandlingatorigin` - Charge is for clearance and handling of goods at origin.\r\n* `Collectfreight` - Charge is for the collection of the freight.\r\n* `Commission` - Fee paid for services provided.\r\n* `Contingencydeferredsalescharge` - Deferred sales charge.\r\n* `Correspondentbankcharge` - In investment funds, the charge of the correspondent bank for transferring money.\r\n* `Custodyfee` - Fee paid to a custodian in respect of custodial services.\r\n* `Dangerousgoodsfee` - Charge is for dangerous goods.\r\n* `Dilutionlevy` - In investment funds, a charge payable by the investor covering bid-offer spreads and dealing charges for the underlying investments. The dilution levy is paid to the fund for the benefit of other unit holders.\r\n* `Discount` - Charge that has been reduced from the standard initial charge levied by a fund, eg, during a launch period or as negotiated by a funds supermarket / discount broker.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive or performance fees at the end of the fiscal year.\r\n* `Frontendload` - Sales charge paid immediately by the investor when subscribing to an investment such as an investment fund.\r\n* `Initial` - Charge paid at the time of the first subscription.\r\n* `Insurancepremium` - Charge is a premium for insurance.\r\n* `Issuancecancellationfee` - Fee linked to the cancellation of an issuance.\r\n* `Issuancefee` - Charge linked to the issuance of security.\r\n* `Managementfee` - Fee paid to an investment manager for services. The fee usually includes fund administration costs and investor relationship management. Typically, the amount paid is a percentage of the assets under management.\r\n* `Matchingfees` - Fee charged for matching and/or confirmation.\r\n* `Miscellaneousfee` - Miscellaneous fee.\r\n* `Other` - Another type of charge.\r\n* `Packaging` - Charge is for packaging of goods.\r\n* `Partacquis` - Portion of charge that the fund is entitled to receive, that cannot be reduced by an intermediary.\r\n* `Penalty` - Fee charged to the investor for early redemption of the fund.\r\n* `Pickup` - Charge is for pick-up of goods.\r\n* `Postagecharge` - Charge paid for the postage.\r\n* `Premium` - In investment funds, pre-arranged addition to the trade amount based on the published net asset value.\r\n* `Publicationfee` - Fee paid in respect of publications made.\r\n* `Regulatoryfee` - Fee charged by a regulatory authority, eg, Securities and Exchange fees.\r\n* `Securitycharge` - Charge is for security.\r\n* `Serviceprovisionfee` - Fee paid for the provision of financial services.\r\n* `Shippingcharge` - Charge for shipping, including the insurance of securities.\r\n* `Signatureservice` - Charge is for signature services.\r\n* `Specialconcessions` - Charges, drawdown, or other reduction from or in addition to the deal price.\r\n* `Speciallyagreedfrontendload` - Specially agreed front-end load.\r\n* `Storageatdestination` - Charge is for storage of goods at destination.\r\n* `Storageatorigin` - Charge is for storage of goods at origin.\r\n* `Switch` - In investment funds, charge related to a switch transaction.\r\n* `Transferfee` - In investment funds, a fee charged for the transfer of ownership of an investment fund.\r\n* `Transportcharges` - Charge is for transport.\r\n* `Ucitscommission` - Charges paid by the investor to the Fund Company for subscription and redemption orders.\r\n* `ChequeRelatedFee` - \r\n"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: "Base amount that would be applied when the service is requested. \n\n"
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: 'Rate used to calculate the amount of the adjustment, allowance, charge or fee. (ISO20022)'
    feeplantypevalues:
      enum:
        - StandardFeePlan
        - FinalFeePlan
      type: string
      description: ">\r\n* `StandardFeePlan` - \r\n* `FinalFeePlan` - \r\n"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: ''
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
        - DevelopmentPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n* `DevelopmentPlan` - \r\n"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: ''
    feeplan:
      type: object
      properties:
        FeePlanName:
          $ref: '#/components/schemas/name'
        FeePlanType:
          $ref: '#/components/schemas/feeplantypevalues'
        FeePlan:
          $ref: '#/components/schemas/plan'
      description: "An arranged FeeRatePlan\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    adjustmentdirectiontypevalues:
      enum:
        - Added
        - Substracted
      type: string
      description: ">\r\n* `Added` - Adjustment amount must be added to the total amount.\r\n* `Substracted` - Adjustment amount must be substracted from the total amount.\r\n"
    chargebearertypevalues:
      enum:
        - Bornebydebtor
        - Bornebycreditor
        - Shared
        - Followingservicelevel
      type: string
      description: ">\r\n* `Bornebydebtor` - All transaction charges are to be borne by the debtor.\r\n* `Bornebycreditor` - All transaction charges are to be borne by the creditor.\r\n* `Shared` - In a credit transfer context, means that transaction charges on the sender side are to be borne by the debtor, transaction charges on the receiver side are to be borne by the creditor. In a direct debit context, means that transaction charges on the sender side are to be borne by the creditor, transaction charges on the receiver side are to be borne by the debtor.\r\n* `Followingservicelevel` - Charges are to be applied following the rules agreed in the service level and/or scheme.\r\n"
    feearrangement:
      type: object
      properties:
        FeeType:
          $ref: '#/components/schemas/feetypevalues'
        FeeAmount:
          $ref: '#/components/schemas/amount'
        FeeRate:
          $ref: '#/components/schemas/rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/datetime'
        FeePlan:
          $ref: '#/components/schemas/feeplan'
        FeeCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        FeeReason:
          $ref: '#/components/schemas/text'
        FeeDirection:
          $ref: '#/components/schemas/adjustmentdirectiontypevalues'
        FeeBearerType:
          $ref: '#/components/schemas/chargebearertypevalues'
      description: Specifies the charges relative to a corporate action event. (ISO20022)
    corporateactionarrangement:
      type: object
      properties:
        CorporateActionType:
          $ref: '#/components/schemas/corporateactiontypevalues'
        CorporateActionDateTime:
          $ref: '#/components/schemas/corporateactiondatetimetypevalues'
        CorporateActionDeadline:
          $ref: '#/components/schemas/datetimeperiod'
        CorporateActionPrice:
          type: string
          description: "Specifies prices related to a corporate action. (ISO20022)\n"
          format: string
        CorporateActionFeeAndCharge:
          $ref: '#/components/schemas/feearrangement'
      description: ' CorporateActionEvent|CorporateActionEvent (https://www.iso20022.org/standardsrepository/type/CorporateActionEvent)|Standard|ISO20022 BM ()'
    corporateactioninvolvementtypevalues:
      enum:
        - CorporateActionAgent
        - CorporateActionOfferor
      type: string
      description: " ||\r\n|"
    CorporateActionProcedure:
      type: object
      properties:
        CorporateActionProcedureParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        CorporateActionProcedureSelectedOption:
          $ref: '#/components/schemas/feature'
        CorporateActionProcedureRequest:
          $ref: '#/components/schemas/instruction'
        CorporateActionProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        CorporateActionProcedureStatus:
          $ref: '#/components/schemas/status'
        CorporateActionProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateActionProcedureBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateActionProcedureServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateActionProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        CorporateActionProcedureEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateActionProcedureCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateActionProcedureType:
          $ref: '#/components/schemas/proceduretype'
        CorporateActionProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        CorporateActionProcedureServiceType:
          $ref: '#/components/schemas/servicetype'
        CorporateActionProcedureProductandServiceType:
          $ref: '#/components/schemas/bankingproducttype'
        CorporateActionProcedureProductandServiceInstance:
          $ref: '#/components/schemas/bankingproduct'
        CorporateActionProcedureTransactionType:
          $ref: '#/components/schemas/transactiontype'
        CorporateActionProcedureTransaction:
          $ref: '#/components/schemas/transaction'
        CorporateActionProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/arrangement'
        CorporateActionProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/agreement'
        CorporateActionProcedureReference:
          $ref: '#/components/schemas/procedure'
        CorporateActionReference:
          $ref: '#/components/schemas/corporateaction'
        CorporateActionArrangementReference:
          $ref: '#/components/schemas/corporateactionarrangement'
        CorporateActionInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        CorporateActionInvolvementType:
          $ref: '#/components/schemas/corporateactioninvolvementtypevalues'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Corporate Action. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CorporateActionProcedure:
      description: CorporateActionProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateActionProcedure'
    SecurityDividendPayment:
      description: SecurityDividendPayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityDividendPayment'
    SecurityMergersandAcquisitionAction:
      description: SecurityMergersandAcquisitionAction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityMergersandAcquisitionAction'
    SecurityRightsIssueAction:
      description: SecurityRightsIssueAction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityRightsIssueAction'
    SecuritySpin-OffAction:
      description: SecuritySpin-OffAction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecuritySpin-OffAction'
    StockSplitorReversalAction:
      description: StockSplitorReversalAction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StockSplitorReversalAction'
  parameters:
    corporateactionid:
      name: corporateactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    securitydividendpaymentid:
      name: securitydividendpaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    securitymergersandacquisitionactionid:
      name: securitymergersandacquisitionactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    securityrightsissueactionid:
      name: securityrightsissueactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    securityspin-offactionid:
      name: securityspin-offactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    stocksplitorreversalactionid:
      name: stocksplitorreversalactionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CorporateActionProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateActionProcedure'
      required: true
    SecurityDividendPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityDividendPayment'
      required: true
    SecurityMergersandAcquisitionAction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityMergersandAcquisitionAction'
      required: true
    SecurityRightsIssueAction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityRightsIssueAction'
      required: true
    SecuritySpin-OffAction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecuritySpin-OffAction'
      required: true
    StockSplitorReversalAction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StockSplitorReversalAction'
      required: true