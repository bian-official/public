openapi: 3.0.1
info:
  title: Investment Portfolio Analysis
  description: 'Assess and report on investment portfolio make-up, valuation and performance'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/InvestmentPortfolioAnalysis/13.0.0
paths:
  /InvestmentPortfolioAnalysis/Evaluate:
    post:
      tags:
        - CR - ManagedInvestmentPortfolioAnalysis
      summary: EvCR perform an evaluation of an investment portfolio
      description: EvCR perform an evaluation of an investment portfolio
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/Exchange':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAnalysis
      summary: 'EcCR Accept, verify, etc. the investment portfolio evaluation'
      description: 'EcCR Accept, verify, etc. the investment portfolio evaluation'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/Execute':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAnalysis
      summary: ExCR Execute an automated task for a evaluation
      description: ExCR Execute an automated task for a evaluation
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/Request':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAnalysis
      summary: RqCR Request manual intervention for an evaluation
      description: RqCR Request manual intervention for an evaluation
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/Retrieve':
    get:
      tags:
        - CR - ManagedInvestmentPortfolioAnalysis
      summary: ReCR Retrieve details about an investment portfolio analysis
      description: ReCR Retrieve details about an investment portfolio analysis
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/PerformanceAnalysis/{performanceanalysisid}/Exchange':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: 'EcBQ Accept, verify etc. an analysis result'
      description: 'EcBQ Accept, verify etc. an analysis result'
      operationId: ExchangePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/PerformanceAnalysis/{performanceanalysisid}/Execute':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: ExBQ Execute an automated task for a specific type of analysis
      description: ExBQ Execute an automated task for a specific type of analysis
      operationId: ExecutePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/PerformanceAnalysis/{performanceanalysisid}/Request':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: RqBQ Request manual intervention for a specific type of analysis
      description: RqBQ Request manual intervention for a specific type of analysis
      operationId: RequestPerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioAnalysis/{investmentportfolioanalysisid}/PerformanceAnalysis/{performanceanalysisid}/Retrieve':
    get:
      tags:
        - BQ - PerformanceAnalysis
      summary: ReBQ Retrieve details about a specific type of investment portfolio analysis
      description: ReBQ Retrieve details about a specific type of investment portfolio analysis
      operationId: RetrievePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/investmentportfolioanalysisid'
        - $ref: '#/components/parameters/performanceanalysisid'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n* `RevenueAnalysis` - \r\n* `CostAnalysis` - \r\n* `PredictiveAnalysis` - \r\n* `BehavioralAnalysis` - \r\n* `ProfitabilityAnalysis` - \r\n* `CompetitiveAnalysis` - \r\n* `CohortAnalysis` - \r\n* `SegmentAnalysis` - \r\n* `SWOTAnalysis` - \r\n* `Benchmarking` - \r\n* `PositioningAnalysis` - \r\n* `ScenarioAnalysis` - \r\n* `IntelligenceGathering` - \r\n* `Profiling` - \r\n"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Record of a task to perform a selected type of performance analysis on an investment portfolio
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The specific details of the performance analysis (can be a default/standard analysis or a specialist/ad-hoc request)
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: ''
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: The date/time the performance report was completed ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the underlying investment account GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "The employee/business unit with the relationship management responsibilities for the customer ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    model:
      type: object
      properties:
        ModelType:
          $ref: '#/components/schemas/text'
        ModelPurpose:
          $ref: '#/components/schemas/text'
        ModelVersion:
          $ref: '#/components/schemas/text'
        ModelName:
          $ref: '#/components/schemas/name'
        ModelDateAndTime:
          $ref: '#/components/schemas/datetime'
        ModelStatus:
          $ref: '#/components/schemas/status'
      description: Reference to the performance analysis model used
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: 'The data file, report of investment transaction details used in the analysis'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Work documentation, forms and schedules produced and referenced during the analysis'
    assessmenttypevalues:
      enum:
        - AssetValuation
        - ProductMatching
        - Authorization
        - Authentication
        - QualityAssurance
        - Audit
        - ComplianceCheck
        - FundingCheck
        - SuitabilityCheck
        - PerformanceCheck
        - ImpactAssessment
        - RiskAssessment
        - Rating
        - UnderwritingAssessment
        - Qualification
        - Verification
        - KYCAssessment
        - PEPAssessment
        - AMLAssessment
      type: string
      description: ">\r\n* `AssetValuation` - \r\n* `ProductMatching` - \r\n* `Authorization` - An evaluation whether a party or system is allowed to do something.\n\nThe consent given by a participant (or a third party acting on behalf of that participant) in order to transfer funds or securities. (ECB)\n\nAuthorization is a mechanism by which a computer system determines whether to allow or deny specific action to a user. Authorization is often controlled by rather complex rules and algorithms, usually specified as part of an access control model. Authorization often follows (and required) authentication, however, authentication and authorization are two separate mechanisms. In rare cases, \"authorization\" is understood as a process of allowing access, granting permissions or giving approval. Such as \"authorization\" of a request to join a group. (ISO/IEC 24760-1:2019 - IT Security and Privacy)\r\n* `Authentication` - An evaluation whether a party or system is what it claims to be.\n\nA security mechanism for verifying: 1) the identity of an individual or other entity (including verification by means of a computer or computer application); and 2) the level of authority of that person or entity (i.e. the ability of that person or entity to perform specific tasks or activities). (ECB)\n\nAuthentication is a mechanism by which a computer system checks that the user is really the one she or he claims to be. Authentication can be implemented by a broad variety of mechanisms broadly divided into three categories: something you know, something you have, something you are. Traditionally, authentication is done by the means of by username and password. Authentication is often followed by authorization, however, authentication and authorization are two separate mechanisms. (ISO/IEC 24760-1:2019 - IT Security and Privacy)\r\n* `QualityAssurance` - \r\n* `Audit` - \r\n* `ComplianceCheck` - \r\n* `FundingCheck` - \r\n* `SuitabilityCheck` - \r\n* `PerformanceCheck` - \r\n* `ImpactAssessment` - \r\n* `RiskAssessment` - \r\n* `Rating` - \r\n* `UnderwritingAssessment` - \r\n* `Qualification` - \r\n* `Verification` - A process establishing that a particular information is correct, while the meaning of \"information\" and \"correct\" varies from context to context. When dealing with identity information, this usually means formal verification of identity attributes, checking the schema, identifier uniqueness and referential integrity. However, verification may mean deeper verification, such as checking that the information is true and up-to-date.  (ISO/IEC 24760-1:2019 - IT Security and Privacy)\n\r\n* `KYCAssessment` - An assessment conducted by businesses and financial institutions to verify and confirm the identity of their customers or clients. The primary purpose of a KYC check is to prevent illegal activities, such as money laundering, terrorist financing, and fraud, by ensuring that customers are who they claim to be.\r\n* `PEPAssessment` - A PEP check, or \"Politically Exposed Person\" check, is an assessment conducted by used by businesses, financial institutions, and government agencies to identify individuals who hold prominent public positions or have significant political influence. The purpose of a PEP check is to assess and manage the potential risks associated with doing business with these individuals, as they may be more susceptible to corruption, money laundering, or other illicit activities.\r\n* `AMLAssessment` - An AML (Anti-Money Laundering) check is an assessment conducted by businesses, financial institutions, and other organizations to prevent and detect money laundering and the financing of criminal activities. The main purpose of an AML check is to ensure that financial transactions and business relationships are not being used to disguise the illegal origins of funds.\r\n"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule for performing investment portfolio analysis for the account ||\r\n|"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: Document that provides background or corroborating information regarding an assessment(s).
    requirement:
      type: object
      properties:
        RequirementType:
          type: string
          description: ''
          format: string
      description: ''
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: Date when the assessment expires. (ISO20022)
    assessment:
      type: object
      properties:
        AssessmentType:
          $ref: '#/components/schemas/assessmenttypevalues'
        AssessmentMethod:
          $ref: '#/components/schemas/text'
        AssessmentSchedule:
          $ref: '#/components/schemas/schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/text'
        AssessmentModel:
          $ref: '#/components/schemas/model'
        AssessmentDateTime:
          $ref: '#/components/schemas/datetime'
        AssessmentResult:
          $ref: '#/components/schemas/text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/text'
        AssessmentRequirement:
          $ref: '#/components/schemas/requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/date'
        AssessmentStatus:
          $ref: '#/components/schemas/status'
      description: The output from executing the selected performance analysis
    PerformanceAnalysis:
      type: object
      properties:
        InvestmentPortfolioPerformanceAnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        InvestmentPortfolioPerformanceAnalysisTask:
          $ref: '#/components/schemas/task'
        InvestmentPerformanceRequestSpecification:
          $ref: '#/components/schemas/text'
        InvestmentPerformanceModelReference:
          $ref: '#/components/schemas/model'
        InvestmentPerformanceProductandServiceActivityReport:
          $ref: '#/components/schemas/report'
        InvestmentPerformanceFinancialMarketResearchReport:
          $ref: '#/components/schemas/report'
        InvestmentPerformanceWorkProducts:
          $ref: '#/components/schemas/workproduct'
        InvestmentPerformanceRequestResult:
          $ref: '#/components/schemas/assessment'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\nExamples: Average balance calculation, Propensity to buy"
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: "Reference to the investment portfolio product instance ||\r\n|"
    investmentportfolioanalysisreport:
      type: object
      properties:
        InvestmentPortfolioAnalysisReport:
          type: string
          description: A consolidated report containing the results of analyses applied to the investment portfolio
          format: class
      description: "A consolidated report containing the results of performance analyses applied to the investment portfolio ||\r\n|"
    investmentportfolioanalysistypevalues:
      enum:
        - InvestmentPortfolioValuation
        - InvestmentPortfolioSensitivityAnalysis
        - InvestmentPortfolioPerformanceAnalysis
      type: string
      description: "Defines a type of performance analysis performed (e.g. standard regular scheduled review, specialist review, customer requested review) ||\r\n|"
    investmentportfolioanalysis:
      type: object
      properties:
        InvestmentPortfolioAnalysisType:
          $ref: '#/components/schemas/investmentportfolioanalysistypevalues'
      description: "The consolidated report of the performance evaluation and comparisons from the analysis ||\r\n|"
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: "Reference to associated performance analysis reporting documents ||\r\n|"
    ManagedInvestmentPortfolioAnalysis:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        InvestmentPortfolioInstanceReference:
          $ref: '#/components/schemas/identifier'
        InvestmentPortfolioAnalysisSchedule:
          $ref: '#/components/schemas/schedule'
        InvestmentAccountArrangementInstanceReference:
          $ref: '#/components/schemas/identifier'
        InvestmentPortfolioAnalysisReport:
          $ref: '#/components/schemas/investmentportfolioanalysisreport'
        InvestmentPortfolioAnalysisType:
          $ref: '#/components/schemas/investmentportfolioanalysistypevalues'
        InvestmentPortfolioAnalysisResult:
          $ref: '#/components/schemas/investmentportfolioanalysis'
        InvestmentPortfolioAnalysisReportingDate:
          $ref: '#/components/schemas/datetime'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
      description: "Analyze the performance or behavior of some on-going activity or entity  within Investment Portfolio Analysis. \nExamples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks.\n\nAnalyze the performance or behavior of some on-going activity or entity. Examples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ManagedInvestmentPortfolioAnalysis:
      description: ManagedInvestmentPortfolioAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManagedInvestmentPortfolioAnalysis'
    PerformanceAnalysis:
      description: PerformanceAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
  parameters:
    investmentportfolioanalysisid:
      name: investmentportfolioanalysisid
      in: path
      required: true
      style: simple
      schema:
        type: string
    performanceanalysisid:
      name: performanceanalysisid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ManagedInvestmentPortfolioAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManagedInvestmentPortfolioAnalysis'
      required: true
    PerformanceAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
      required: true