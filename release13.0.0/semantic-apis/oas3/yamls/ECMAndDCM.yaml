openapi: 3.0.1
info:
  title: ECM And DCM
  description: 'Supports the specification, pricing and issuance of equity and debt (bond) primary capital market products for corporate financing services'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ECMAndDCM/13.0.0
paths:
  /ECMAndDCM/Initiate:
    post:
      tags:
        - CR - ECMAndDCMFacility
      summary: InCR initiate an ECM And DCM transaction for a corporate customer
      description: InCR initiate an ECM And DCM transaction for a corporate customer
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ECMAndDCMFacility'
      responses:
        '200':
          $ref: '#/components/responses/ECMAndDCMFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Update':
    put:
      tags:
        - CR - ECMAndDCMFacility
      summary: UpCR Update details of an active ECM And DCM transaction
      description: UpCR Update details of an active ECM And DCM transaction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
      requestBody:
        $ref: '#/components/requestBodies/ECMAndDCMFacility'
      responses:
        '200':
          $ref: '#/components/responses/ECMAndDCMFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Exchange':
    put:
      tags:
        - CR - ECMAndDCMFacility
      summary: 'EcCR Accept, reject, verify, etc. aspects of an ECM And DCM transaction'
      description: 'EcCR Accept, reject, verify, etc. aspects of an ECM And DCM transaction'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
      requestBody:
        $ref: '#/components/requestBodies/ECMAndDCMFacility'
      responses:
        '200':
          $ref: '#/components/responses/ECMAndDCMFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Request':
    put:
      tags:
        - CR - ECMAndDCMFacility
      summary: RqCR Request manual intervention to an active ECM And DCM transaction
      description: RqCR Request manual intervention to an active ECM And DCM transaction
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
      requestBody:
        $ref: '#/components/requestBodies/ECMAndDCMFacility'
      responses:
        '200':
          $ref: '#/components/responses/ECMAndDCMFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Retrieve':
    get:
      tags:
        - CR - ECMAndDCMFacility
      summary: ReCR Retrieve details about an active ECM And DCM transaction
      description: ReCR Retrieve details about an active ECM And DCM transaction
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
      responses:
        '200':
          $ref: '#/components/responses/ECMAndDCMFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/InstrumentDefinition/{instrumentdefinitionid}/Update':
    put:
      tags:
        - BQ - InstrumentDefinition
      summary: UpBQ Update details of the ECM And DCM instrument specification
      description: UpBQ Update details of the ECM And DCM instrument specification
      operationId: UpdateInstrumentDefinition
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/instrumentdefinitionid'
      requestBody:
        $ref: '#/components/requestBodies/InstrumentDefinition'
      responses:
        '200':
          $ref: '#/components/responses/InstrumentDefinition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/InstrumentDefinition/{instrumentdefinitionid}/Request':
    put:
      tags:
        - BQ - InstrumentDefinition
      summary: RqBQ Request manual intervention to the instrument definition
      description: RqBQ Request manual intervention to the instrument definition
      operationId: RequestInstrumentDefinition
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/instrumentdefinitionid'
      requestBody:
        $ref: '#/components/requestBodies/InstrumentDefinition'
      responses:
        '200':
          $ref: '#/components/responses/InstrumentDefinition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/InstrumentDefinition/{instrumentdefinitionid}/Retrieve':
    get:
      tags:
        - BQ - InstrumentDefinition
      summary: ReBQ Retrieve details about the ECM And DCM instrument definition
      description: ReBQ Retrieve details about the ECM And DCM instrument definition
      operationId: RetrieveInstrumentDefinition
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/instrumentdefinitionid'
      responses:
        '200':
          $ref: '#/components/responses/InstrumentDefinition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Prospectus/{prospectusid}/Update':
    put:
      tags:
        - BQ - Prospectus
      summary: UpBQ Update details of the ECM And DCM prospectus
      description: UpBQ Update details of the ECM And DCM prospectus
      operationId: UpdateProspectus
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/prospectusid'
      requestBody:
        $ref: '#/components/requestBodies/Prospectus'
      responses:
        '200':
          $ref: '#/components/responses/Prospectus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Prospectus/{prospectusid}/Request':
    put:
      tags:
        - BQ - Prospectus
      summary: RqBQ Request manual intervention with the prospectus development
      description: RqBQ Request manual intervention with the prospectus development
      operationId: RequestProspectus
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/prospectusid'
      requestBody:
        $ref: '#/components/requestBodies/Prospectus'
      responses:
        '200':
          $ref: '#/components/responses/Prospectus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Prospectus/{prospectusid}/Retrieve':
    get:
      tags:
        - BQ - Prospectus
      summary: ReBQ Retrieve details about the ECM And DCM prospectus development
      description: ReBQ Retrieve details about the ECM And DCM prospectus development
      operationId: RetrieveProspectus
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/prospectusid'
      responses:
        '200':
          $ref: '#/components/responses/Prospectus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Placement/{placementid}/Update':
    put:
      tags:
        - BQ - Placement
      summary: UpBQ Update details of ECM And DCM placement activity
      description: UpBQ Update details of ECM And DCM placement activity
      operationId: UpdatePlacement
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/placementid'
      requestBody:
        $ref: '#/components/requestBodies/Placement'
      responses:
        '200':
          $ref: '#/components/responses/Placement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Placement/{placementid}/Request':
    put:
      tags:
        - BQ - Placement
      summary: RqBQ Request manual intervention in the placement activity
      description: RqBQ Request manual intervention in the placement activity
      operationId: RequestPlacement
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/placementid'
      requestBody:
        $ref: '#/components/requestBodies/Placement'
      responses:
        '200':
          $ref: '#/components/responses/Placement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ECMAndDCM/{ecmanddcmid}/Placement/{placementid}/Retrieve':
    get:
      tags:
        - BQ - Placement
      summary: ReBQ Retrieve details about the ECM And DCM placement actions
      description: ReBQ Retrieve details about the ECM And DCM placement actions
      operationId: RetrievePlacement
      parameters:
        - $ref: '#/components/parameters/ecmanddcmid'
        - $ref: '#/components/parameters/placementid'
      responses:
        '200':
          $ref: '#/components/responses/Placement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: "Business unit and or employee reference to the source of the financial advice ||\r\n|"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The consolidated record of the developed investment vehicle. Combines the output of the development and issuance activities, participant details, investment transaction records as appropriate (details not included at this time) ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule for work tasks performed and to be performed through the issuing process ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: "Key dates associated with the issuance process (e.g. engagement date, prospectus date, offering date) ||\r\n|"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: "Value of the date type ||\r\n|"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the associated party ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, forms and documents used and generated through the work task'
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: "The document reference for associated documents such as disclosures and acceptance records ||\r\n|"
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: The consolidated details of the investments obtained for the issuance - details investor participation for private placement and primary market transaction references for public offerings
    Placement:
      type: object
      properties:
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        ProspectList:
          $ref: '#/components/schemas/text'
        PlacementRoadshowSchedule:
          $ref: '#/components/schemas/schedule'
        PlacementWorkTaskRecord:
          $ref: '#/components/schemas/text'
        PlacementWorkTaskType:
          $ref: '#/components/schemas/text'
        PlacementWorkTaskDescription:
          $ref: '#/components/schemas/text'
        PlacementWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        PlacementTransaction:
          $ref: '#/components/schemas/transaction'
      description: The product features/services available with a financical facility
    InstrumentDefinition:
      type: object
      properties:
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        InstrumentDefinitionWorkTaskRecord:
          $ref: '#/components/schemas/text'
        InstrumentDefinitionWorkTaskType:
          $ref: '#/components/schemas/text'
        InstrumentDefinitionWorkTaskDescription:
          $ref: '#/components/schemas/text'
        InstrumentDefinitionWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        InstrumentDefinitionSpecification:
          $ref: '#/components/schemas/text'
      description: The product features/services available with a financical facility
    prospect:
      type: object
      properties:
        Prospect:
          type: string
          description: "A potential customer\n\n"
          format: class
      description: 'The developed prospectus for the ECM/DCM instrument, including agreed pricing strategy'
    Prospectus:
      type: object
      properties:
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        ProspectusWorkTaskRecord:
          $ref: '#/components/schemas/text'
        ProspectusWorkTaskType:
          $ref: '#/components/schemas/text'
        ProspectusWorkTaskDescription:
          $ref: '#/components/schemas/text'
        ProspectusWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        Prospectus:
          $ref: '#/components/schemas/prospect'
      description: The product features/services available with a financical facility
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: "Reference to the advisory service session ||\r\n|"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    branch:
      type: object
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/identifier'
        BranchAddress:
          $ref: '#/components/schemas/address'
        BranchName:
          $ref: '#/components/schemas/name'
      description: ''
    branchlocation:
      type: object
      properties:
        BranchReference:
          $ref: '#/components/schemas/branch'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: "Bank branch associated with the customer account/relationship for booking purposes ||\r\n|"
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    modalitytypevalues:
      enum:
        - AllocationModality
        - CalculationModality
        - DerivationModality
        - PaymentModality
        - ProcessingModality
        - ApplicationModality
        - DeliveryModality
      type: string
      description: ">\r\n* `AllocationModality` - \r\n* `CalculationModality` - \r\n* `DerivationModality` - \r\n* `PaymentModality` - \r\n* `ProcessingModality` - \r\n* `ApplicationModality` - \r\n* `DeliveryModality` - \r\n"
    servicearrangementmodality:
      type: object
      properties:
        ServiceArrangementModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: ''
    partyobligationorentitlement:
      type: object
      properties:
        ObligationOrEntitlementSubject:
          $ref: '#/components/schemas/subject'
        ObligationOrEntitlementType:
          $ref: '#/components/schemas/arrangementtypevalues'
        ObligationOrEntitlementModality:
          $ref: '#/components/schemas/servicearrangementmodality'
        ObligationOrEntitlementDefinition:
          $ref: '#/components/schemas/text'
      description: "Description of the role, obligations or entitlements of the associated party ||\r\n|"
    ECMAndDCMFacility:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        BankBranchLocationReference:
          $ref: '#/components/schemas/branchlocation'
        BusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        Associations:
          $ref: '#/components/schemas/involvedparty'
        AssociationType:
          type: string
          description: 'The type of association (e.g. co-investor, legal)'
          format: string
        AssociationObligationEntitlement:
          $ref: '#/components/schemas/partyobligationorentitlement'
        AssociationReference:
          $ref: '#/components/schemas/involvedparty'
        ECMAndDCMFulfillmentSchedule:
          $ref: '#/components/schemas/schedule'
        DateType:
          $ref: '#/components/schemas/datetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
        ECMAndDCMInstrumentRecord:
          $ref: '#/components/schemas/text'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within ECM And DCM. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ECMAndDCMFacility:
      description: ECMAndDCMFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ECMAndDCMFacility'
    InstrumentDefinition:
      description: InstrumentDefinition
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstrumentDefinition'
    Prospectus:
      description: Prospectus
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Prospectus'
    Placement:
      description: Placement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Placement'
  parameters:
    ecmanddcmid:
      name: ecmanddcmid
      in: path
      required: true
      style: simple
      schema:
        type: string
    instrumentdefinitionid:
      name: instrumentdefinitionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    prospectusid:
      name: prospectusid
      in: path
      required: true
      style: simple
      schema:
        type: string
    placementid:
      name: placementid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ECMAndDCMFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ECMAndDCMFacility'
      required: true
    InstrumentDefinition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstrumentDefinition'
      required: true
    Prospectus:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Prospectus'
      required: true
    Placement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Placement'
      required: true