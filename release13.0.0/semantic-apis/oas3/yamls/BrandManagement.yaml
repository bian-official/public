openapi: 3.0.1
info:
  title: Brand Management
  description: Respond to events that potentially damage the brand or provide an opportunity to strengthen/leverage brand awareness
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/BrandManagement/13.0.0
paths:
  '/BrandManagement/{brandmanagementid}/Update':
    put:
      tags:
        - CR - BrandManagementPlan
      summary: UpCR Update aspects of eth brand management plan
      description: UpCR Update aspects of eth brand management plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BrandManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BrandManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Request':
    put:
      tags:
        - CR - BrandManagementPlan
      summary: RqCR Request manual intervention with the brand management plan (e.g. reassess brand value/significance)
      description: RqCR Request manual intervention with the brand management plan (e.g. reassess brand value/significance)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BrandManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BrandManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Grant':
    put:
      tags:
        - CR - BrandManagementPlan
      summary: GrCR Provide a permission grant to reference the brand (e.g. authorize logo use in marketing)
      description: GrCR Provide a permission grant to reference the brand (e.g. authorize logo use in marketing)
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BrandManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BrandManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Retrieve':
    get:
      tags:
        - CR - BrandManagementPlan
      summary: ReCR Retrieve details about brand management activity
      description: ReCR Retrieve details about brand management activity
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/BrandManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/Create':
    post:
      tags:
        - BQ - BrandAdvice
      summary: CrBQ Create a brand advice task
      description: CrBQ Create a brand advice task
      operationId: CreateBrandAdvice
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BrandAdvice'
      responses:
        '200':
          $ref: '#/components/responses/BrandAdvice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Update':
    put:
      tags:
        - BQ - BrandAdvice
      summary: UpBQ Update details of provided brand related advice
      description: UpBQ Update details of provided brand related advice
      operationId: UpdateBrandAdvice
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
        - $ref: '#/components/parameters/brandadviceid'
      requestBody:
        $ref: '#/components/requestBodies/BrandAdvice'
      responses:
        '200':
          $ref: '#/components/responses/BrandAdvice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Exchange':
    put:
      tags:
        - BQ - BrandAdvice
      summary: 'EcBQ Accept, reject proposed brand usage in an initiative'
      description: 'EcBQ Accept, reject proposed brand usage in an initiative'
      operationId: ExchangeBrandAdvice
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
        - $ref: '#/components/parameters/brandadviceid'
      requestBody:
        $ref: '#/components/requestBodies/BrandAdvice'
      responses:
        '200':
          $ref: '#/components/responses/BrandAdvice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Request':
    put:
      tags:
        - BQ - BrandAdvice
      summary: RqBQ Request manual intervention for brand advice (e.g. request specialist support)
      description: RqBQ Request manual intervention for brand advice (e.g. request specialist support)
      operationId: RequestBrandAdvice
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
        - $ref: '#/components/parameters/brandadviceid'
      requestBody:
        $ref: '#/components/requestBodies/BrandAdvice'
      responses:
        '200':
          $ref: '#/components/responses/BrandAdvice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/BrandAdvice/{brandadviceid}/Retrieve':
    get:
      tags:
        - BQ - BrandAdvice
      summary: ReBQ Retrieve details about brand advice activity
      description: ReBQ Retrieve details about brand advice activity
      operationId: RetrieveBrandAdvice
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
        - $ref: '#/components/parameters/brandadviceid'
      responses:
        '200':
          $ref: '#/components/responses/BrandAdvice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/Create':
    post:
      tags:
        - BQ - Troubleshooting
      summary: CrBQ Create a brand troubleshooting action
      description: CrBQ Create a brand troubleshooting action
      operationId: CreateTroubleshooting
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/{troubleshootingid}/Update':
    put:
      tags:
        - BQ - Troubleshooting
      summary: UpBQ Update details relating to brand troubleshooting activity
      description: UpBQ Update details relating to brand troubleshooting activity
      operationId: UpdateTroubleshooting
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
        - $ref: '#/components/parameters/troubleshootingid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/{troubleshootingid}/Request':
    put:
      tags:
        - BQ - Troubleshooting
      summary: RqBQ Request manual intervention in a troubleshooting action
      description: RqBQ Request manual intervention in a troubleshooting action
      operationId: RequestTroubleshooting
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
        - $ref: '#/components/parameters/troubleshootingid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BrandManagement/{brandmanagementid}/Troubleshooting/{troubleshootingid}/Retrieve':
    get:
      tags:
        - BQ - Troubleshooting
      summary: ReBQ Retrieve details about brand troubleshooting activity
      description: ReBQ Retrieve details about brand troubleshooting activity
      operationId: RetrieveTroubleshooting
      parameters:
        - $ref: '#/components/parameters/brandmanagementid'
        - $ref: '#/components/parameters/troubleshootingid'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Definition of the brand, including how it is to be represented in different media and contexts ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: 'The make-up of the advice task performed, includes schedule of meetings/working sessions and provision of guidance materials'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, evaluations and recommendations for the work task'
    BrandAdvice:
      type: object
      properties:
        BrandAdviceWorkTaskType:
          $ref: '#/components/schemas/text'
        BrandAdviceWorkTask:
          $ref: '#/components/schemas/task'
        BrandAdviceWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        BrandAdviceWorkTaskResult:
          $ref: '#/components/schemas/task'
        BrandAdviceWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "Schedule of any brand development related activities, includes usage and exposure tracking and impact analysis activities ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: 'Actions taken to mitigate the event (e.g. press release, other communications, corrective/compensatory actions'
    Troubleshooting:
      type: object
      properties:
        BrandImpactEventType:
          $ref: '#/components/schemas/text'
        BrandImpactTroubleshootingTask:
          $ref: '#/components/schemas/task'
        BrandImpactEventDescription:
          $ref: '#/components/schemas/text'
        BrandImpactEventResponseSchedule:
          $ref: '#/components/schemas/schedule'
        BrandImpactEventResponseAction:
          $ref: '#/components/schemas/action'
        BrandImpactEventWorkProducts:
          $ref: '#/components/schemas/workproduct'
        BrandImpactEventWorkTaskResult:
          $ref: '#/components/schemas/task'
        BrandImpactEventWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    brandvalueassessment:
      type: object
      properties:
        BrandValueAssessment:
          type: string
          description: An analysis of the brand value based on comparative market research
          format: class
      description: "An analysis of the brand value based on comparative market research ||\r\n|"
    BrandManagementPlan:
      type: object
      properties:
        BrandDefinition:
          $ref: '#/components/schemas/text'
        BrandValueAssessment:
          $ref: '#/components/schemas/brandvalueassessment'
        BrandUsage:
          type: string
          description: An inventory of situations where the brand is incorporated or exposed in business development activity - these situations may require on-going exposure monitoring or assessment
          format: object
        BrandDevelopmentSchedule:
          $ref: '#/components/schemas/schedule'
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Brand Management.'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BrandManagementPlan:
      description: BrandManagementPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandManagementPlan'
    BrandAdvice:
      description: BrandAdvice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandAdvice'
    Troubleshooting:
      description: Troubleshooting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Troubleshooting'
  parameters:
    brandmanagementid:
      name: brandmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    brandadviceid:
      name: brandadviceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    troubleshootingid:
      name: troubleshootingid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    BrandManagementPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandManagementPlan'
      required: true
    BrandAdvice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandAdvice'
      required: true
    Troubleshooting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Troubleshooting'
      required: true