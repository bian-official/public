openapi: 3.0.1
info:
  title: Customer Position
  description: 'This service domain maintains a consolidated financial position for a customer, combining details from all products and services in use. The position can cover available funds, credit, collateral, tax exposure and other financial measures as necessary'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerPosition/13.0.0
paths:
  /CustomerPosition/Initiate:
    post:
      tags:
        - CR - CustomerPositionState
      summary: InCR Initiation position monitoring for a customer
      description: InCR Initiation position monitoring for a customer
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Update':
    put:
      tags:
        - CR - CustomerPositionState
      summary: UpCR Update the settings for customer position tracking
      description: UpCR Update the settings for customer position tracking
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Control':
    put:
      tags:
        - CR - CustomerPositionState
      summary: CoCR Control the customer position tracking (e.g. suspend)
      description: CoCR Control the customer position tracking (e.g. suspend)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Execute':
    put:
      tags:
        - CR - CustomerPositionState
      summary: ExCR Execute an automated task for position tracking (e.g. issue an alert)
      description: ExCR Execute an automated task for position tracking (e.g. issue an alert)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Request':
    put:
      tags:
        - CR - CustomerPositionState
      summary: RqCR Request an action for customer position monitoring (e.g. review and refresh content)
      description: RqCR Request an action for customer position monitoring (e.g. review and refresh content)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPositionState'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Retrieve':
    get:
      tags:
        - CR - CustomerPositionState
      summary: ReCR Retrieve details about a customer position
      description: ReCR Retrieve details about a customer position
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPositionState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Exchange':
    put:
      tags:
        - BQ - Cashflow
      summary: EcBQ Accept or verify the presented cash flow position
      description: EcBQ Accept or verify the presented cash flow position
      operationId: ExchangeCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      requestBody:
        $ref: '#/components/requestBodies/Cashflow'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Capture':
    put:
      tags:
        - BQ - Cashflow
      summary: CaBQ Capture product transaction reports (push from fulfillment)
      description: CaBQ Capture product transaction reports (push from fulfillment)
      operationId: CaptureCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      requestBody:
        $ref: '#/components/requestBodies/Cashflow'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Retrieve':
    get:
      tags:
        - BQ - Cashflow
      summary: ReBQ retrieve details about a cash flow analysis as part of the customer position
      description: ReBQ retrieve details about a cash flow analysis as part of the customer position
      operationId: RetrieveCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Exchange':
    put:
      tags:
        - BQ - Credit
      summary: EcBQ Accept or verify the presented credit position
      description: EcBQ Accept or verify the presented credit position
      operationId: ExchangeCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      requestBody:
        $ref: '#/components/requestBodies/Credit'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Capture':
    put:
      tags:
        - BQ - Credit
      summary: CaBQ Capture credit assessment reports (push from credit administration)
      description: CaBQ Capture credit assessment reports (push from credit administration)
      operationId: CaptureCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      requestBody:
        $ref: '#/components/requestBodies/Credit'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Retrieve':
    get:
      tags:
        - BQ - Credit
      summary: ReBQ retrieve details about a credit analysis as part of the customer position
      description: ReBQ retrieve details about a credit analysis as part of the customer position
      operationId: RetrieveCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Collateral/{collateralid}/Exchange':
    put:
      tags:
        - BQ - Collateral
      summary: EcBQ Accept or verify the presented collateral position
      description: EcBQ Accept or verify the presented collateral position
      operationId: ExchangeCollateral
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/collateralid'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        '200':
          $ref: '#/components/responses/Collateral'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Collateral/{collateralid}/Capture':
    put:
      tags:
        - BQ - Collateral
      summary: CaBQ Capture collateral allocation reports (push from collateral allocation management)
      description: CaBQ Capture collateral allocation reports (push from collateral allocation management)
      operationId: CaptureCollateral
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/collateralid'
      requestBody:
        $ref: '#/components/requestBodies/Collateral'
      responses:
        '200':
          $ref: '#/components/responses/Collateral'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Collateral/{collateralid}/Retrieve':
    get:
      tags:
        - BQ - Collateral
      summary: ReBQ retrieve details about a collateral allocation as part of the customer position
      description: ReBQ retrieve details about a collateral allocation as part of the customer position
      operationId: RetrieveCollateral
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/collateralid'
      responses:
        '200':
          $ref: '#/components/responses/Collateral'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/Evaluate':
    post:
      tags:
        - BQ - Cashflow
      summary: Setup transaction history
      description: Setup transaction history
      operationId: EvaluateCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/Cashflow'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Cashflow/{cashflowid}/Notify':
    get:
      tags:
        - BQ - Cashflow
      summary: Notify details about a cash flow analysis as part of the customer position
      description: Notify details about a cash flow analysis as part of the customer position
      operationId: NotifyCashflow
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/cashflowid'
      responses:
        '200':
          $ref: '#/components/responses/Cashflow'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/{creditid}/Notify':
    get:
      tags:
        - BQ - Credit
      summary: Notify Credit
      description: Notify Credit
      operationId: NotifyCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
        - $ref: '#/components/parameters/creditid'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPosition/{customerpositionid}/Credit/Evaluate':
    post:
      tags:
        - BQ - Credit
      summary: Evaluate Credit
      description: Evaluate Credit
      operationId: EvaluateCredit
      parameters:
        - $ref: '#/components/parameters/customerpositionid'
      requestBody:
        $ref: '#/components/requestBodies/Credit'
      responses:
        '200':
          $ref: '#/components/responses/Credit'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: "An unique reference to an item or an occurrence of <CR>\n GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer that the consolidated financial position represents ||\r\n|"
    assettypevalues:
      type: object
      properties:
        Assettypevalues:
          type: string
          description: "A functional Classification Hierarchy that distinguishes between objects of value according to some criteria.\nComment: BIAN Has developed a classification hierarchy, but also other authorities have defined classification hierarchies."
          format: enumeration
      description: 'The type of asset (e.g. building, machinery, inventory, financial instrument, art)'
    collateraltypevalues:
      enum:
        - Letterofcredit
        - Cash
        - Securities
        - Physicalentities
        - Insurance
        - Stockcertificate
        - Bond
        - Bankguarantee
        - Other
        - Commodity
        - Automobile
        - Industrialvehicle
        - Commercialtruck
        - Railvehicle
        - Nauticalcommercialvehicle
        - Nauticalleisurevehicle
        - Aeroplane
        - Machinetool
        - Industrialequipment
        - Officeequipment
        - Itequipment
        - Medicalequipment
        - Energyrelatedequipment
        - Commercialbuilding
      type: string
      description: ">\r\n* `Letterofcredit` - Instrument issued by a bank substituting its name and credit standing for that of its customer. A letter of credit is a written undertaking of the bank, issued for the account of a customer (the applicant), to honour a demand for payment, upon the beneficiary's compliance with the terms and conditions set forth in the undertaking.\r\n* `Cash` - Collateral type is cash.\r\n* `Securities` - Collateral type is securities.\r\n* `Physicalentities` - Collateral type are physical entities, for example, airplanes for debt issued by the airline industry.\r\n* `Insurance` - Collateral type is an insurance contract.\r\n* `Stockcertificate` - Collateral type is stock certificates.\r\n* `Bond` - Collateral type is bonds.\r\n* `Bankguarantee` - Collateral type is a bank guarantee.\r\n* `Other` - Other assets that could be used as collateral.\r\n* `Commodity` - Collateral type is commodities.\r\n* `Automobile` - Collateral type is automobile.\r\n* `Industrialvehicle` - Collateral type is industrial vehicle.\r\n* `Commercialtruck` - Collateral type is commercial track.\r\n* `Railvehicle` - Collateral type is rail vehicle.\r\n* `Nauticalcommercialvehicle` - Collateral type is nautical commercial vehicle.\r\n* `Nauticalleisurevehicle` - Collateral type is nautical leisure vehicle.\r\n* `Aeroplane` - Collateral type is aeroplane.\r\n* `Machinetool` - Collateral type is machine.\r\n* `Industrialequipment` - Collateral type is industrial equipment.\r\n* `Officeequipment` - Collateral type is office equipment.\r\n* `Itequipment` - Collateral type is IT equipment.\r\n* `Medicalequipment` - Collateral type is medical equipment.\r\n* `Energyrelatedequipment` - Collateral type is energy related equipment.\r\n* `Commercialbuilding` - Collateral type is commercial building.\r\n"
    collateralassetstatustypevalues:
      enum:
        - Offered
        - UnderAssessment
        - Transferred
        - Allocated
        - FreeForAllocation
        - AllocatedToAnotherLoan
        - IssuedForExecution
      type: string
      description: ">\r\n* `Offered` - \r\n* `UnderAssessment` - \r\n* `Transferred` - \r\n* `Allocated` - \r\n* `FreeForAllocation` - \r\n* `AllocatedToAnotherLoan` - \r\n* `IssuedForExecution` - \r\n"
    collateralasset:
      type: object
      properties:
        CollateralAssetIdentification:
          $ref: '#/components/schemas/identifier'
        CollateralAssetType:
          $ref: '#/components/schemas/collateraltypevalues'
        CollateralAssetStatus:
          $ref: '#/components/schemas/collateralassetstatustypevalues'
      description: 'Reference to the collateral item (e.g. address, account reference)'
    collateralassetadministrativeplan:
      type: object
      properties:
        CollateralAssetAdministrativePlan:
          type: string
          description: An administrative plan derived from the arrangements in one or more collateral agreements.
          format: class
      description: Reference to the administration record of the asset item
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: ''
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Amount at which the asset has been valued at a particular valuation
    assetvaluation:
      type: object
      properties:
        AssetValue:
          $ref: '#/components/schemas/value'
        AssetValueType:
          $ref: '#/components/schemas/text'
        AssetValuationType:
          $ref: '#/components/schemas/text'
        AssetValuationDate:
          $ref: '#/components/schemas/datetime'
        AssetValuationRate:
          $ref: '#/components/schemas/rate'
        AssetValuationStatus:
          $ref: '#/components/schemas/status'
        AssetValuationValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AsseValuationAmount:
          $ref: '#/components/schemas/amount'
      description: The current and historical valuation of the asset
    allocationstatustypevalues:
      enum:
        - Fullyallocated
        - Partiallyallocated
        - Earmarked
      type: string
      description: ">\r\n* `Fullyallocated` - \r\n* `Partiallyallocated` - \r\n* `Earmarked` - Not allocated, merely earmarked\r\n"
    collateralassetallocation:
      type: object
      properties:
        CollateralAssetAllocationStatus:
          $ref: '#/components/schemas/allocationstatustypevalues'
      description: A record of past and current allocations of the collateral asset
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n* `RevenueAnalysis` - \r\n* `CostAnalysis` - \r\n* `PredictiveAnalysis` - \r\n* `BehavioralAnalysis` - \r\n* `ProfitabilityAnalysis` - \r\n* `CompetitiveAnalysis` - \r\n* `CohortAnalysis` - \r\n* `SegmentAnalysis` - \r\n* `SWOTAnalysis` - \r\n* `Benchmarking` - \r\n* `PositioningAnalysis` - \r\n* `ScenarioAnalysis` - \r\n* `IntelligenceGathering` - \r\n* `Profiling` - \r\n"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The schedule and timing of the analysis performed using the algorithm
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
        AnalysisSchedule:
          $ref: '#/components/schemas/schedule'
      description: 'The customer collateral position analysis - combines collateral valuation, allocation and associated product utilization)'
    Collateral:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CollateralAssetType:
          $ref: '#/components/schemas/assettypevalues'
        CollateralAssetReference:
          $ref: '#/components/schemas/collateralasset'
        CollateralAssetDescription:
          $ref: '#/components/schemas/text'
        CollateralAssetAdministrationInstanceReference:
          $ref: '#/components/schemas/collateralassetadministrativeplan'
        CollateralAssetStatus:
          $ref: '#/components/schemas/collateralassetstatustypevalues'
        CollateralAssetValuation:
          $ref: '#/components/schemas/assetvaluation'
        CollateralAssetAllocationProfile:
          $ref: '#/components/schemas/collateralassetallocation'
        CollateralAssetValuationDate:
          $ref: '#/components/schemas/datetime'
        CollateralAssetLoantoValueRatio:
          $ref: '#/components/schemas/text'
        CustomerCollateralPositionAnalysisRecord:
          $ref: '#/components/schemas/analysis'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: "Reference to the customer product/account ||\r\n|"
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: The product/service activity report - transactional activity used for financial analysis
    channeltypevalues:
      enum:
        - CommunicationChannel
        - AuthenticationChannel
      type: string
      description: ">\r\n* `CommunicationChannel` - \r\n* `AuthenticationChannel` - \r\n"
    channel:
      type: object
      properties:
        ChannelType:
          $ref: '#/components/schemas/channeltypevalues'
      description: Specifies the channel through which the report must be made available to the  information recipient.
    frequencytypevalues:
      enum:
        - Annual
        - Monthly
        - Quarterly
        - Semiannual
        - Weekly
        - Daily
        - Adhoc
        - Intraday
        - Overnight
        - Tendays
        - Fortnightly
        - Triggeredbymovement
        - Never
        - Rate
        - Oncreditevent
        - Upfront
        - Onexpiry
        - Hourly
      type: string
      description: ">\r\n* `Annual` - Event takes place every year or once a year.\r\n* `Monthly` - Event takes place every month or once a month.\r\n* `Quarterly` - Event takes place every three months or four times a year.\r\n* `Semiannual` - Event takes place every six months or two times a year.\r\n* `Weekly` - Event takes place once a week.\r\n* `Daily` - Event takes place every day.\r\n* `Adhoc` - Event takes place on request or as necessary.\r\n* `Intraday` - Event takes place several times a day.\r\n* `Overnight` - Event takes place overnight.\r\n* `Tendays` - Event takes place every ten business days.\r\n* `Fortnightly` - Event takes place every two weeks.\r\n* `Triggeredbymovement` - Event takes place at the end of the day if there was a movement on the account, otherwise nothing is sent that day.\r\n* `Never` - Event does never take place.\r\n* `Rate` - Event takes place based on a change of a rate.\r\n* `Oncreditevent` - Event occurs due to a credit event occurring for an issuer.\r\n* `Upfront` - Event that takes place at the initiation of a trade or agreement.\r\n* `Onexpiry` - Event occurs on expiry of a financial contract.\r\n* `Hourly` - Event takes place every hours.\r\n"
    reportingarrangement:
      type: object
      properties:
        ReportingChannel:
          $ref: '#/components/schemas/channel'
        ReportingFrequency:
          $ref: '#/components/schemas/frequencytypevalues'
      description: Defines content/transaction types to be included in the report extract
    balancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - CurrentBalance
        - AvailableBalance
        - LedgerBalance
        - ReserveBalance
        - FreeBalance
        - PrincipalBalance
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - PreviouslyClosedBooked
        - Expected
      type: string
      description: ">\r\n* `OpeningBalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `ClosingBalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `CurrentBalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `AvailableBalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `LedgerBalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `ReserveBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n* `ClosingAvailable` - Closing balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `ClosingBooked` - Balance of the account at the end of the pre-agreed account reporting period. It is the sum of the opening booked balance at the beginning of the period and all entries booked to the account during the pre-agreed account reporting period.\r\n* `ForwardAvailable` - Forward available balance of money that is at the disposal of the account owner on the date specified.\r\n* `Information` - Balance for informational purposes.\r\n* `InterimAvailable` - Available balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `InterimBooked` - Balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `OpeningAvailable` - Opening balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `OpeningBooked` - Book balance of the account at the beginning of the account reporting period. It always equals the closing book balance from the previous report.\r\n* `PreviouslyClosedBooked` - Balance of the account at the previously closed account reporting period. The opening booked balance for the new period has to be equal to this balance.\nUsage: the previously booked closing balance should equal (inclusive date) the booked closing balance of the date it references and equal the actual booked opening balance of the current date.\r\n* `Expected` - Balance, composed of booked entries and pending items known at the time of calculation, which projects the end of day balance if everything is booked on the account and no other entry is posted.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    balancecounterpartytypevalues:
      enum:
        - Bilateral
        - Multilateral
      type: string
      description: ">\r\n* `Bilateral` - Balance calculated regarding one member in the system. (ISO20022)\r\n* `Multilateral` - Balance calculated regarding all members in the system. (ISO20022)\r\n"
    balancesubtypevalues:
      enum:
        - Adjustment
        - Basecurrency
        - Blocked
        - Blockedfunds
        - Daylightoverdraft
        - Eligibleassets
        - Firmcollateralization
        - Amountsthathavebeenusedtoserveasfirmcollateral
        - Securitiesforecast
        - Netfunding
        - Intermediate
        - Localcurrency
        - Limitrelated
        - Reservedliquidity
        - Securitiespending
        - Payinpayout
        - Progressiveaverage
        - Reserve
        - Selfcollateralization
        - Amountsthathavebeenusedtoserveasselfcollateral
        - Threshold
      type: string
      description: ">\r\n* `Adjustment` - Balance to be held in the settlement account in order to comply with the average reserve due, in the event that the bank's balance is equal to the reserve due during the remaining days of the maintenance period.\r\n* `Basecurrency` - Balance representing the amount in the domestic or base accounting currency.\r\n* `Blocked` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes. In some countries, a blocked balance is known as a 'reserve' balance.\r\n* `Blockedfunds` - Balance representing funds that cannot be touched by the account owner.\r\n* `Daylightoverdraft` - Balance representing the intra day overdraft granted by the Central Bank to financial institutions participating in a RTGS system. This balance may vary over time and shall be offset at the end of the day.\r\n* `Eligibleassets` - Balance representing the potential loan a Central Bank would make in cash if the collateral is pledged, eg, securities available and eligible as collateral with the Central Bank.\r\n* `Firmcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral.\r\n* `Amountsthathavebeenusedtoserveasfirmcollateral` - Balance representing the cash equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral and have been used as collateral.\r\n* `Securitiesforecast` - Balance representing the total of all balance types representing the forecast of transactions to settle, blocked items, custody transactions and corporate actions cash disbursements.\r\n* `Netfunding` - Balance representing the net amount to be funded resulting from the difference between the total of all transactions with a cash impact and the existing cash coverage.\r\n* `Intermediate` - Balance representing an intermediate amount such as the opening or closing balance incrementally carried forward from one page to the next in a multi-page statement or report.\r\n* `Localcurrency` - Balance representing the amount in the local market currency for which the asset is held.\r\n* `Limitrelated` - Balance of a specific limit value, eg, a bilateral balance is calculated in relation to a given bilateral limit.\r\n* `Reservedliquidity` - Balance representing the amount that a financial institution has set aside for a specific reason and which is therefore not available. In the context of CSDs, reservation of liquidity made to meet settlement obligations.\r\n* `Securitiespending` - Balance of securities pending delivery, such as orders to sell securities have been executed but settlement of the open transactions has not been confirmed.\r\n* `Payinpayout` - Balance representing the fictive amount of automated direct debits or payment based on standing arrangements between the CSD and the user. Usage: Pay-Ins and Pay-Outs can be different based on individual payment instructions or available funds.\r\n* `Progressiveaverage` - Average of the daily balances on the account used to fulfil the reserve requirements calculated from the beginning of the maintenance period.\r\n* `Reserve` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes.\r\n* `Selfcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of the net incoming balance of securities qualified to serve as collateral for which settlement instructions are held at.\r\n* `Amountsthathavebeenusedtoserveasselfcollateral` - Balance representing the cash-equivalent resulting from evaluation of incoming securities, qualified to serve as collateral and actually used as collateral, which have been settled during the settlement process.\r\n* `Threshold` - Balance representing the amount that will be destined for investment. Difference between available balance and threshold for investment limit.\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceValueDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        BalanceCounterpartyType:
          $ref: '#/components/schemas/balancecounterpartytypevalues'
        BalanceCalculationDate:
          $ref: '#/components/schemas/datetime'
        BalanceSubType:
          $ref: '#/components/schemas/balancesubtypevalues'
      description: ''
    Cashflow:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        ProductArrangementInstanceReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ProductArrangementInstanceReport:
          $ref: '#/components/schemas/report'
        ReportOptionsSelectionCriteria:
          $ref: '#/components/schemas/reportingarrangement'
        ReportPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportFormatTemplate:
          $ref: '#/components/schemas/text'
        Report:
          $ref: '#/components/schemas/report'
        CustomerCashflowPositionAnalysisRecord:
          $ref: '#/components/schemas/analysis'
        CustomerProductType:
          $ref: '#/components/schemas/productagreementtypevalues'
        CustomerAccountBalance:
          $ref: '#/components/schemas/accountbalance'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    customercreditratingassessment:
      type: object
      properties:
        CreditRatingAssessmentType:
          type: string
          description: ''
          format: ''
      description: The internal bank credit rating/assessment
    creditratingassessmenttype:
      type: object
      properties:
        Creditratingassessmenttype:
          type: string
          description: 'Credit assessment type (e.g. consumer, small business, corporate)'
          format: enumeration
      description: 'Credit assessment type (e.g. consumer, small business, corporate)'
    Credit:
      type: object
      properties:
        CustomerCreditRatingAssessment:
          $ref: '#/components/schemas/customercreditratingassessment'
        CustomerCreditRatingAssessmentType:
          $ref: '#/components/schemas/creditratingassessmenttype'
        CustomerCreditRatingNarrative:
          $ref: '#/components/schemas/text'
        CustomerCreditPositionAnalysisRecord:
          $ref: '#/components/schemas/analysis'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    positiontypevalues:
      enum:
        - Balance/Cashflow
        - CreditPosition
        - CollateralPosition
        - SecurityPosition
      type: string
      description: ">\r\n* `Balance/Cashflow` - \r\n* `CreditPosition` - \r\n* `CollateralPosition` - \r\n* `SecurityPosition` - \r\n"
    customerposition:
      type: object
      properties:
        PositionType:
          $ref: '#/components/schemas/positiontypevalues'
        EventReference:
          type: string
          description: ''
          format: rwc:6b875bd2-ebec-752e-d19b-254d90ed3b96/262190
      description: "The consolidated position state that is tracked for the customer - combines analysis from all  measures ||\r\n|"
    CustomerPositionState:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerPositioReference:
          $ref: '#/components/schemas/customerposition'
        AccountReference:
          $ref: '#/components/schemas/productagreement'
        CustomerPositionStateReference:
          $ref: '#/components/schemas/identifier'
      description: 'Monitor and define the status/rating of some entity within Customer Position. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerPositionState:
      description: CustomerPositionState
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPositionState'
    Cashflow:
      description: Cashflow
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cashflow'
    Credit:
      description: Credit
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credit'
    Collateral:
      description: Collateral
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Collateral'
  parameters:
    customerpositionid:
      name: customerpositionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cashflowid:
      name: cashflowid
      in: path
      required: true
      style: simple
      schema:
        type: string
    creditid:
      name: creditid
      in: path
      required: true
      style: simple
      schema:
        type: string
    collateralid:
      name: collateralid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerPositionState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPositionState'
      required: true
    Cashflow:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cashflow'
      required: true
    Credit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credit'
      required: true
    Collateral:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Collateral'
      required: true