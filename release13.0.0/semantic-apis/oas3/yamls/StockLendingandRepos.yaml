openapi: 3.0.1
info:
  title: Stock Lending and Repos
  description: This Service Domain supports the bank offering tri-party repo transactions made between its customers to support their short term capital management requirements
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/StockLendingandRepos/13.0.0
paths:
  '/StockLendingandRepos/{stocklendingandreposid}/Control':
    put:
      tags:
        - CR - RepoTransaction
      summary: Control Repo Transaction
      description: Control Repo Transaction
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Exchange':
    put:
      tags:
        - CR - RepoTransaction
      summary: Exchange Repo Transaction
      description: Exchange Repo Transaction
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Execute':
    put:
      tags:
        - CR - RepoTransaction
      summary: Execute Repo Transaction
      description: Execute Repo Transaction
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /StockLendingandRepos/Initiate:
    post:
      tags:
        - CR - RepoTransaction
      summary: Initiate Repo Transaction
      description: Initiate Repo Transaction
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Notify':
    get:
      tags:
        - CR - RepoTransaction
      summary: Notify Repo Transaction
      description: Notify Repo Transaction
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Request':
    put:
      tags:
        - CR - RepoTransaction
      summary: Request Repo Transaction
      description: Request Repo Transaction
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Retrieve':
    get:
      tags:
        - CR - RepoTransaction
      summary: Retrieve Repo Transaction
      description: Retrieve Repo Transaction
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/Update':
    put:
      tags:
        - CR - RepoTransaction
      summary: Update Repo Transaction
      description: Update Repo Transaction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransaction'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Exchange':
    put:
      tags:
        - BQ - RepoTransactionCashTransfer
      summary: Exchange Repo Transaction Cash Transfer Task
      description: Exchange Repo Transaction Cash Transfer Task
      operationId: ExchangeRepoTransactionCashTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiation/{repotransactioninitiationid}/Exchange':
    put:
      tags:
        - BQ - RepoTransactionInitiation
      summary: Exchange Repo Transaction Initiation Task
      description: Exchange Repo Transaction Initiation Task
      operationId: ExchangeRepoTransactionInitiation
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiation'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Exchange':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransfer
      summary: Exchange Repo Transaction Security Transfer Task
      description: Exchange Repo Transaction Security Transfer Task
      operationId: ExchangeRepoTransactionSecurityTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Execute':
    put:
      tags:
        - BQ - RepoTransactionCashTransfer
      summary: Execute Repo Transaction Cash Transfer Task
      description: Execute Repo Transaction Cash Transfer Task
      operationId: ExecuteRepoTransactionCashTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiation/{repotransactioninitiationid}/Execute':
    put:
      tags:
        - BQ - RepoTransactionInitiation
      summary: Execute Repo Transaction Initiation Task
      description: Execute Repo Transaction Initiation Task
      operationId: ExecuteRepoTransactionInitiation
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiation'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Execute':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransfer
      summary: Execute Repo Transaction Security Transfer Task
      description: Execute Repo Transaction Security Transfer Task
      operationId: ExecuteRepoTransactionSecurityTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransfer/Initiate':
    post:
      tags:
        - BQ - RepoTransactionCashTransfer
      summary: Initiate Repo Transaction Cash Transfer Task
      description: Initiate Repo Transaction Cash Transfer Task
      operationId: InitiateRepoTransactionCashTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiation/Initiate':
    post:
      tags:
        - BQ - RepoTransactionInitiation
      summary: Initiate Repo Transaction Initiation Task
      description: Initiate Repo Transaction Initiation Task
      operationId: InitiateRepoTransactionInitiation
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiation'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransfer/Initiate':
    post:
      tags:
        - BQ - RepoTransactionSecurityTransfer
      summary: Initiate Repo Transaction Security Transfer Task
      description: Initiate Repo Transaction Security Transfer Task
      operationId: InitiateRepoTransactionSecurityTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Notify':
    get:
      tags:
        - BQ - RepoTransactionCashTransfer
      summary: Notify Repo Transaction Cash Transfer Task
      description: Notify Repo Transaction Cash Transfer Task
      operationId: NotifyRepoTransactionCashTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransferid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiation/{repotransactioninitiationid}/Notify':
    get:
      tags:
        - BQ - RepoTransactionInitiation
      summary: Notify Repo Transaction Initiation Task
      description: Notify Repo Transaction Initiation Task
      operationId: NotifyRepoTransactionInitiation
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Notify':
    get:
      tags:
        - BQ - RepoTransactionSecurityTransfer
      summary: Notify Repo Transaction Security Transfer Task
      description: Notify Repo Transaction Security Transfer Task
      operationId: NotifyRepoTransactionSecurityTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransferid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Request':
    put:
      tags:
        - BQ - RepoTransactionCashTransfer
      summary: Request Repo Transaction Cash Transfer Task
      description: Request Repo Transaction Cash Transfer Task
      operationId: RequestRepoTransactionCashTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiation/{repotransactioninitiationid}/Request':
    put:
      tags:
        - BQ - RepoTransactionInitiation
      summary: Request Repo Transaction Initiation Task
      description: Request Repo Transaction Initiation Task
      operationId: RequestRepoTransactionInitiation
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiation'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Request':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransfer
      summary: Request Repo Transaction Security Transfer Task
      description: Request Repo Transaction Security Transfer Task
      operationId: RequestRepoTransactionSecurityTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Retrieve':
    get:
      tags:
        - BQ - RepoTransactionCashTransfer
      summary: Retrieve Repo Transaction Cash Transfer Task
      description: Retrieve Repo Transaction Cash Transfer Task
      operationId: RetrieveRepoTransactionCashTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransferid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiation/{repotransactioninitiationid}/Retrieve':
    get:
      tags:
        - BQ - RepoTransactionInitiation
      summary: Retrieve Repo Transaction Initiation Task
      description: Retrieve Repo Transaction Initiation Task
      operationId: RetrieveRepoTransactionInitiation
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Retrieve':
    get:
      tags:
        - BQ - RepoTransactionSecurityTransfer
      summary: Retrieve Repo Transaction Security Transfer Task
      description: Retrieve Repo Transaction Security Transfer Task
      operationId: RetrieveRepoTransactionSecurityTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransferid'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Update':
    put:
      tags:
        - BQ - RepoTransactionCashTransfer
      summary: Update Repo Transaction Cash Transfer Task
      description: Update Repo Transaction Cash Transfer Task
      operationId: UpdateRepoTransactionCashTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioncashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionCashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionCashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionInitiation/{repotransactioninitiationid}/Update':
    put:
      tags:
        - BQ - RepoTransactionInitiation
      summary: Update Repo Transaction Initiation Task
      description: Update Repo Transaction Initiation Task
      operationId: UpdateRepoTransactionInitiation
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactioninitiationid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionInitiation'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/StockLendingandRepos/{stocklendingandreposid}/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Update':
    put:
      tags:
        - BQ - RepoTransactionSecurityTransfer
      summary: Update Repo Transaction Security Transfer Task
      description: Update Repo Transaction Security Transfer Task
      operationId: UpdateRepoTransactionSecurityTransfer
      parameters:
        - $ref: '#/components/parameters/stocklendingandreposid'
        - $ref: '#/components/parameters/repotransactionsecuritytransferid'
      requestBody:
        $ref: '#/components/requestBodies/RepoTransactionSecurityTransfer'
      responses:
        '200':
          $ref: '#/components/responses/RepoTransactionSecurityTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: " ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: Refers to the lifecycle of a Condition
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation prior to the execution of the task
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The timing and key actions/milestones involved in completing the transaction task
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Repo Transaction Security Transfer Task specific Business Service
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: "The status of Repo Transaction ||\r\n|"
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to Repo Transaction Security Transfer Task
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Reference to Repo Transaction Security Transfer Task
    RepoTransactionSecurityTransfer:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        RepoTransactionReference:
          $ref: '#/components/schemas/transaction'
        RepoTransactionSecurityTransferTaskReference:
          $ref: '#/components/schemas/task'
        RepoTransactionSecurityTransferTaskType:
          $ref: '#/components/schemas/text'
      description: The Repo Transaction Security Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Security Transfer Task
    RepoTransactionInitiation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        RepoTransactionReference:
          $ref: '#/components/schemas/transaction'
        RepoTransactionInitiationTaskReference:
          $ref: '#/components/schemas/task'
        RepoTransactionInitiationTaskType:
          $ref: '#/components/schemas/text'
      description: The Repo Transaction Security Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Security Transfer Task
    RepoTransactionCashTransfer:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        RepoTransactionReference:
          $ref: '#/components/schemas/transaction'
        RepoTransactionCashTransferTaskReference:
          $ref: '#/components/schemas/task'
        RepoTransactionCashTransferTaskType:
          $ref: '#/components/schemas/text'
      description: The Repo Transaction Security Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Security Transfer Task
    calendartypevalues:
      enum:
        - UKCalendar
        - ChineseCalendar
      type: string
      description: ">\r\n* `UKCalendar` - \r\n* `ChineseCalendar` - \r\n"
    calendar:
      type: object
      properties:
        CalendarType:
          $ref: '#/components/schemas/calendartypevalues'
        CalendarName:
          $ref: '#/components/schemas/name'
      description: ''
    feetypevalues:
      enum:
        - Accountingfee
        - Adrfee
        - Advisoryfee
        - Airwaybillfee
        - Backendload
        - Brokeragefee
        - Clearanceandhandlingatdestination
        - Clearanceandhandlingatorigin
        - Collectfreight
        - Commission
        - Contingencydeferredsalescharge
        - Correspondentbankcharge
        - Custodyfee
        - Dangerousgoodsfee
        - Dilutionlevy
        - Discount
        - Equalisation
        - Frontendload
        - Initial
        - Insurancepremium
        - Issuancecancellationfee
        - Issuancefee
        - Managementfee
        - Matchingfees
        - Miscellaneousfee
        - Other
        - Packaging
        - Partacquis
        - Penalty
        - Pickup
        - Postagecharge
        - Premium
        - Publicationfee
        - Regulatoryfee
        - Securitycharge
        - Serviceprovisionfee
        - Shippingcharge
        - Signatureservice
        - Specialconcessions
        - Speciallyagreedfrontendload
        - Storageatdestination
        - Storageatorigin
        - Switch
        - Transferfee
        - Transportcharges
        - Ucitscommission
        - ChequeRelatedFee
      type: string
      description: ">\r\n* `Accountingfee` - Fee paid for accounting services rendered.\r\n* `Adrfee` - Charge linked to an ADR (American Depositary Receipt).\r\n* `Advisoryfee` - Fee paid for advisory services rendered.\r\n* `Airwaybillfee` - Charge is an airway bill fee.\r\n* `Backendload` - Sales charge paid by the investor when redeeming an investment such as an investment fund.\r\n* `Brokeragefee` - Fee paid to a broker for services provided.\r\n* `Clearanceandhandlingatdestination` - Charge is for clearance and handling of goods at destination.\r\n* `Clearanceandhandlingatorigin` - Charge is for clearance and handling of goods at origin.\r\n* `Collectfreight` - Charge is for the collection of the freight.\r\n* `Commission` - Fee paid for services provided.\r\n* `Contingencydeferredsalescharge` - Deferred sales charge.\r\n* `Correspondentbankcharge` - In investment funds, the charge of the correspondent bank for transferring money.\r\n* `Custodyfee` - Fee paid to a custodian in respect of custodial services.\r\n* `Dangerousgoodsfee` - Charge is for dangerous goods.\r\n* `Dilutionlevy` - In investment funds, a charge payable by the investor covering bid-offer spreads and dealing charges for the underlying investments. The dilution levy is paid to the fund for the benefit of other unit holders.\r\n* `Discount` - Charge that has been reduced from the standard initial charge levied by a fund, eg, during a launch period or as negotiated by a funds supermarket / discount broker.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive or performance fees at the end of the fiscal year.\r\n* `Frontendload` - Sales charge paid immediately by the investor when subscribing to an investment such as an investment fund.\r\n* `Initial` - Charge paid at the time of the first subscription.\r\n* `Insurancepremium` - Charge is a premium for insurance.\r\n* `Issuancecancellationfee` - Fee linked to the cancellation of an issuance.\r\n* `Issuancefee` - Charge linked to the issuance of security.\r\n* `Managementfee` - Fee paid to an investment manager for services. The fee usually includes fund administration costs and investor relationship management. Typically, the amount paid is a percentage of the assets under management.\r\n* `Matchingfees` - Fee charged for matching and/or confirmation.\r\n* `Miscellaneousfee` - Miscellaneous fee.\r\n* `Other` - Another type of charge.\r\n* `Packaging` - Charge is for packaging of goods.\r\n* `Partacquis` - Portion of charge that the fund is entitled to receive, that cannot be reduced by an intermediary.\r\n* `Penalty` - Fee charged to the investor for early redemption of the fund.\r\n* `Pickup` - Charge is for pick-up of goods.\r\n* `Postagecharge` - Charge paid for the postage.\r\n* `Premium` - In investment funds, pre-arranged addition to the trade amount based on the published net asset value.\r\n* `Publicationfee` - Fee paid in respect of publications made.\r\n* `Regulatoryfee` - Fee charged by a regulatory authority, eg, Securities and Exchange fees.\r\n* `Securitycharge` - Charge is for security.\r\n* `Serviceprovisionfee` - Fee paid for the provision of financial services.\r\n* `Shippingcharge` - Charge for shipping, including the insurance of securities.\r\n* `Signatureservice` - Charge is for signature services.\r\n* `Specialconcessions` - Charges, drawdown, or other reduction from or in addition to the deal price.\r\n* `Speciallyagreedfrontendload` - Specially agreed front-end load.\r\n* `Storageatdestination` - Charge is for storage of goods at destination.\r\n* `Storageatorigin` - Charge is for storage of goods at origin.\r\n* `Switch` - In investment funds, charge related to a switch transaction.\r\n* `Transferfee` - In investment funds, a fee charged for the transfer of ownership of an investment fund.\r\n* `Transportcharges` - Charge is for transport.\r\n* `Ucitscommission` - Charges paid by the investor to the Fund Company for subscription and redemption orders.\r\n* `ChequeRelatedFee` - \r\n"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: 'Total fee charged '
    feetransaction:
      type: object
      properties:
        AppliedFeeType:
          $ref: '#/components/schemas/feetypevalues'
        AccruedFeeAmount:
          $ref: '#/components/schemas/amount'
        AppliedFeeAmount:
          $ref: '#/components/schemas/amount'
      description: ''
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: The actual interest rate used for the payment of the interest for the specified interest period. (ISO20022)
    interesttypevalues:
      enum:
        - Fixed
        - Floatingratenote
        - Dualbasis
        - Index
        - Discounted
        - Zerocoupon
        - Exinterest
        - Cuminterest
      type: string
      description: ">\r\n* `Fixed` - Indicates that the type of interest is fixed.\r\n* `Floatingratenote` - Indicates that the type of interest is a floating rate note.\r\n* `Dualbasis` - Indicates that the type of interest is a dual basis.\r\n* `Index` - Indicates that the type of interest is index.\r\n* `Discounted` - Indicates that the type of interest is discounted.\r\n* `Zerocoupon` - Indicates that the type of interest is a zero coupon.\r\n* `Exinterest` - Indicates deal price excluding accrued interest.\r\n* `Cuminterest` - Indicates deal price including accrued interest.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          $ref: '#/components/schemas/amount'
        InterestTransactionDescription:
          $ref: '#/components/schemas/text'
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        AppliedInterestRate:
          $ref: '#/components/schemas/rate'
        AppliedInteretType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: ''
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    StockLendingandReposOutcome:
      type: object
      properties:
        StockLendingandReposCalendar:
          $ref: '#/components/schemas/calendar'
        StockLendingandReposCounterparty:
          $ref: '#/components/schemas/involvedparty'
        StockLendingandReposDividend:
          $ref: '#/components/schemas/text'
        StockLendingandReposFees:
          $ref: '#/components/schemas/feetransaction'
        StockLendingandReposInterest:
          $ref: '#/components/schemas/interesttransaction'
        StockLendingandReposMargining:
          $ref: '#/components/schemas/text'
        StockLendingandReposNotionalPrincipal:
          $ref: '#/components/schemas/text'
        StockLendingandReposOptions:
          $ref: '#/components/schemas/text'
        StockLendingandReposRates:
          $ref: '#/components/schemas/rate'
        StockLendingandReposSettlement:
          $ref: '#/components/schemas/text'
        StockLendingandReposWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Repo Transaction Security Transfer Task is a discrete action or task that is required in the execution of the Repo Transaction Security Transfer Task
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between business service transaction within Repo Transaction ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: "A selected optional business service as subject matter of Repo Transaction ||\r\n|"
    repurchasetypevalues:
      enum:
        - Swap
        - Repurchasecall
        - Pairoff
        - Reporate
        - Rollover
        - Topup
        - Withdrawal
        - Principalexposureadjustment
      type: string
      description: "A Classification value that specifies type of transaction for this  Repo Transaction ||\r\n|"
    repotransaction:
      type: object
      properties:
        RepoTransaction:
          type: string
          description: A Transaction that is the result of fulfillment of Repo Arrangement
          format: class
      description: "An unique reference to an item or an occurrence of Repo Transaction ||\r\n|"
    repurchaseagreementtypevalues:
      enum:
        - SpecificCollateral
        - GeneralCollateral
      type: string
      description: ">\r\n* `SpecificCollateral` - Repurchase agreement where a single, pre-defined, financial instrument is sold and repurchased. (IS020022)\r\n* `GeneralCollateral` - Repurchase agreement where the agreement allows for the sale and repurchase of any of a selection of assets from a pool of eligible assets. (ISO20022)\r\n"
    repurchaseagreement:
      type: object
      properties:
        RepurchaseAgreementType:
          $ref: '#/components/schemas/repurchaseagreementtypevalues'
      description: " ||\r\n|"
    repurchaseagreementinvolvementtypevalues:
      enum:
        - Investor/Lender
        - Borrower
        - Dealer
        - Tri-PartyAgent
      type: string
      description: " ||\r\n|"
    repoarrangement:
      type: object
      properties:
        RepurchaseRate:
          $ref: '#/components/schemas/rate'
        TerminationDateTime:
          $ref: '#/components/schemas/datetime'
        RepurchaseAmount:
          $ref: '#/components/schemas/amount'
        RepurchaseType:
          $ref: '#/components/schemas/repurchasetypevalues'
      description: " ||\r\n|"
    RepoTransaction:
      type: object
      properties:
        RepoTransactionParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        RepoTransactionSelectedOption:
          $ref: '#/components/schemas/service'
        RepoTransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        RepoTransactionType:
          $ref: '#/components/schemas/repurchasetypevalues'
        RepoTransactionReference:
          $ref: '#/components/schemas/repotransaction'
        RepurchaseAgreementReference:
          $ref: '#/components/schemas/repurchaseagreement'
        RepurchaseAgreementInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        RepurchaseAgreementInvolvementType:
          $ref: '#/components/schemas/repurchaseagreementinvolvementtypevalues'
        RepurchaseArrangementReference:
          $ref: '#/components/schemas/repoarrangement'
      description: 'Execute a well-bounded financial transaction/task, typically involving largely automated/structured fulfillment processing within Stock Lending and Repos. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    RepoTransaction:
      description: RepoTransaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransaction'
    RepoTransactionCashTransfer:
      description: RepoTransactionCashTransfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionCashTransfer'
    RepoTransactionInitiation:
      description: RepoTransactionInitiation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionInitiation'
    RepoTransactionSecurityTransfer:
      description: RepoTransactionSecurityTransfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionSecurityTransfer'
  parameters:
    stocklendingandreposid:
      name: stocklendingandreposid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repotransactioncashtransferid:
      name: repotransactioncashtransferid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repotransactioninitiationid:
      name: repotransactioninitiationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    repotransactionsecuritytransferid:
      name: repotransactionsecuritytransferid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    RepoTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransaction'
      required: true
    RepoTransactionCashTransfer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionCashTransfer'
      required: true
    RepoTransactionInitiation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionInitiation'
      required: true
    RepoTransactionSecurityTransfer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepoTransactionSecurityTransfer'
      required: true