openapi: 3.0.1
info:
  title: Advertising
  description: 'Develop the plan for and oversee advertising campaign activity, including budget and resource management'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/Advertising/13.0.0
paths:
  /Advertising/Create:
    post:
      tags:
        - CR - AdvertisingCampaignManagementPlan
      summary: CrCR Create and invoke the advertising campaign management plan
      description: CrCR Create and invoke the advertising campaign management plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/AdvertisingCampaignManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/AdvertisingCampaignManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/Update':
    put:
      tags:
        - CR - AdvertisingCampaignManagementPlan
      summary: UpCR Update details of the advertising campaign management plan
      description: UpCR Update details of the advertising campaign management plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/advertisingid'
      requestBody:
        $ref: '#/components/requestBodies/AdvertisingCampaignManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/AdvertisingCampaignManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/Request':
    put:
      tags:
        - CR - AdvertisingCampaignManagementPlan
      summary: RqCR Request manual intervention in the campaign plan (e.g. rework campaign priorities)
      description: RqCR Request manual intervention in the campaign plan (e.g. rework campaign priorities)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/advertisingid'
      requestBody:
        $ref: '#/components/requestBodies/AdvertisingCampaignManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/AdvertisingCampaignManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/Grant':
    put:
      tags:
        - CR - AdvertisingCampaignManagementPlan
      summary: GrCR Obtain a permission grant against the plan (e.g. obtain authority to develop materials)
      description: GrCR Obtain a permission grant against the plan (e.g. obtain authority to develop materials)
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/advertisingid'
      requestBody:
        $ref: '#/components/requestBodies/AdvertisingCampaignManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/AdvertisingCampaignManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/Retrieve':
    get:
      tags:
        - CR - AdvertisingCampaignManagementPlan
      summary: ReCR Retrieve details about the advertising campaign management plan
      description: ReCR Retrieve details about the advertising campaign management plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/advertisingid'
      responses:
        '200':
          $ref: '#/components/responses/AdvertisingCampaignManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/MarketTracking/{markettrackingid}/Update':
    put:
      tags:
        - BQ - MarketTracking
      summary: UpBQ Update details of the market tracking activity (e.g. change source)
      description: UpBQ Update details of the market tracking activity (e.g. change source)
      operationId: UpdateMarketTracking
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/MarketTracking/{markettrackingid}/Execute':
    put:
      tags:
        - BQ - MarketTracking
      summary: ExBQ Execute an automated task for the tracking activity (e.g. upload new data)
      description: ExBQ Execute an automated task for the tracking activity (e.g. upload new data)
      operationId: ExecuteMarketTracking
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/MarketTracking/{markettrackingid}/Request':
    put:
      tags:
        - BQ - MarketTracking
      summary: RqBQ Request manual intervention in the market tracking (e.g. request reworking of the analysis)
      description: RqBQ Request manual intervention in the market tracking (e.g. request reworking of the analysis)
      operationId: RequestMarketTracking
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/MarketTracking/{markettrackingid}/Retrieve':
    get:
      tags:
        - BQ - MarketTracking
      summary: ReBQ Retrieve details about the market tracking activity
      description: ReBQ Retrieve details about the market tracking activity
      operationId: RetrieveMarketTracking
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/markettrackingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/PerformanceAssessment/Create':
    post:
      tags:
        - BQ - PerformanceAssessment
      summary: CrBQ Create a performance assessment of the advertising campaign portfolio
      description: CrBQ Create a performance assessment of the advertising campaign portfolio
      operationId: CreatePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/advertisingid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/PerformanceAssessment/{performanceassessmentid}/Update':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: UpBQ Update details of a advertising campaign portfolio assessment
      description: UpBQ Update details of a advertising campaign portfolio assessment
      operationId: UpdatePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/PerformanceAssessment/{performanceassessmentid}/Execute':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: ExBQ Execute an automated action for a performance assessment (e.g. trigger assessment report)
      description: ExBQ Execute an automated action for a performance assessment (e.g. trigger assessment report)
      operationId: ExecutePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/PerformanceAssessment/{performanceassessmentid}/Request':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: RqBQ Request manual intervention to a performance assessment (e.g. request specific analysis)
      description: RqBQ Request manual intervention to a performance assessment (e.g. request specific analysis)
      operationId: RequestPerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/PerformanceAssessment/{performanceassessmentid}/Retrieve':
    get:
      tags:
        - BQ - PerformanceAssessment
      summary: ReBQ Retrieve details about advertising campaign performance assessment activity
      description: ReBQ Retrieve details about advertising campaign performance assessment activity
      operationId: RetrievePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/performanceassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/CampaignDirection/Create':
    post:
      tags:
        - BQ - CampaignDirection
      summary: CrBQ Create advertising campaign direction schedules (e.g. create the schedules for design or execution activity)
      description: CrBQ Create advertising campaign direction schedules (e.g. create the schedules for design or execution activity)
      operationId: CreateCampaignDirection
      parameters:
        - $ref: '#/components/parameters/advertisingid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/CampaignDirection/{campaigndirectionid}/Update':
    put:
      tags:
        - BQ - CampaignDirection
      summary: UpBQ Update the advertising campaign design and execution schedules
      description: UpBQ Update the advertising campaign design and execution schedules
      operationId: UpdateCampaignDirection
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/campaigndirectionid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/CampaignDirection/{campaigndirectionid}/Request':
    put:
      tags:
        - BQ - CampaignDirection
      summary: RqBQ Request manual intervention to the schedules (e.g. rework priorities)
      description: RqBQ Request manual intervention to the schedules (e.g. rework priorities)
      operationId: RequestCampaignDirection
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/campaigndirectionid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Advertising/{advertisingid}/CampaignDirection/{campaigndirectionid}/Retrieve':
    get:
      tags:
        - BQ - CampaignDirection
      summary: ReBQ Retrieve details about advertising campaign design and execution direction and scheduling activities
      description: ReBQ Retrieve details about advertising campaign design and execution direction and scheduling activities
      operationId: RetrieveCampaignDirection
      parameters:
        - $ref: '#/components/parameters/advertisingid'
        - $ref: '#/components/parameters/campaigndirectionid'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A description of the metric, defining how it is to be measured in deployment ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: 'The make-up of the market tracking task performed, includes consolidation and analysis of market research'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the business unit responsible for the campaign execution ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the advertising campaign execution GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, evaluations and findings for the work task'
    PerformanceAssessment:
      type: object
      properties:
        PerformanceAssessmentWorkTaskType:
          $ref: '#/components/schemas/text'
        PerformanceAssessmentWorkTask:
          $ref: '#/components/schemas/task'
        PerformanceAssessmentWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        PerformanceAssessmentWorkTaskResult:
          $ref: '#/components/schemas/task'
        PerformanceAssessmentWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: Schedule of planned and actual advertising campaign design development and refinement activity
    CampaignDirection:
      type: object
      properties:
        AdvertisingCampaignDevelopmentSchedule:
          $ref: '#/components/schemas/schedule'
        AdvertisingCampaignExecutionSchedule:
          $ref: '#/components/schemas/schedule'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    MarketTracking:
      type: object
      properties:
        MarketTrackingWorkTaskType:
          $ref: '#/components/schemas/text'
        MarketTrackingWorkTask:
          $ref: '#/components/schemas/task'
        GeneralMarketResearchDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/identifier'
        MarketTrackingWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        MarketTrackingWorkTaskResult:
          $ref: '#/components/schemas/task'
        MarketTrackingWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    profile:
      type: object
      properties:
        Profile:
          type: string
          description: A brief description of the characteristics of something or someone. (Business Dictionary)
          format: class
      description: "The collection of advertising campaigns that is used to assess performance and coverage and direct development and execution activity ||\r\n|"
    campaigntypevalues:
      enum:
        - MarketingCampaign
        - SocialCampaign
        - PoliticalCampaign
      type: string
      description: "The type of advertising campaign (e.g. media, mailshot, web-based) ||\r\n|"
    metric:
      type: object
      properties:
        Metric:
          type: string
          description: 'A metric is a standard or system of measurement that quantifies certain characteristics, properties, or performance of a given entity.'
          format: class
      description: "Metrics that are defined to assess the target and actual impact of the campaign ||\r\n|"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "A description of the target performance for the metric that can be defined for different usage scenarios as appropriate ||\r\n|"
    advertisingcampaignexecutionplan:
      type: object
      properties:
        AdvertisingCampaignExecutionSchedule:
          type: string
          description: Schedule of planned and actual customer campaign execution activities
          format: string
      description: "The execution plan for the advertising campaign, including external agencies employed, content development and execution tasks ||\r\n|"
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The period over which the advertising is executed Duration|Duration (https://www.iso20022.org/standardsrepository/type/duration)|Standard|ISO20022 BM ()
    proceduretypevalues:
      type: object
      properties:
        Proceduretypevalues:
          type: string
          description: A Classification value that distinguishes between the type of process undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of process undertaken within Procedure
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: Request to process something (most refers to Asset Type)
    procedure:
      type: object
      properties:
        ProcedureType:
          $ref: '#/components/schemas/proceduretypevalues'
        ProcedureDateTime:
          $ref: '#/components/schemas/datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/status'
      description: "The result/impact of the overall advertising campaign event (can refer to any detected up-tick in sales or servicing activity) ||\r\n|"
    AdvertisingCampaignManagementPlan:
      type: object
      properties:
        AdvertisingCampaignPortfolio:
          $ref: '#/components/schemas/profile'
        AdvertisingCampaignType:
          $ref: '#/components/schemas/campaigntypevalues'
        AdvertisingCampaignDescription:
          $ref: '#/components/schemas/text'
        AdvertisingCampaignMetrics:
          $ref: '#/components/schemas/metric'
        AdvertisingCampaignMetricDefinition:
          $ref: '#/components/schemas/text'
        AdvertisingCampaignMetricGoal:
          $ref: '#/components/schemas/goal'
        AdvertisingCampaignPerformanceRecord:
          type: string
          description: Maintains a record of the use and impact of the advertising campaign
          format: object
        AdvertisingCampaignProcedureInstanceReference:
          $ref: '#/components/schemas/identifier'
        AdvertisingCampaignExecutionPlan:
          $ref: '#/components/schemas/advertisingcampaignexecutionplan'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        AdvertisingCampaignDuration:
          $ref: '#/components/schemas/duration'
        AdvertisingCampaignProcedureResult:
          $ref: '#/components/schemas/procedure'
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Advertising.'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    AdvertisingCampaignManagementPlan:
      description: AdvertisingCampaignManagementPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvertisingCampaignManagementPlan'
    MarketTracking:
      description: MarketTracking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
    PerformanceAssessment:
      description: PerformanceAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAssessment'
    CampaignDirection:
      description: CampaignDirection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
  parameters:
    advertisingid:
      name: advertisingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettrackingid:
      name: markettrackingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    performanceassessmentid:
      name: performanceassessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    campaigndirectionid:
      name: campaigndirectionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    AdvertisingCampaignManagementPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdvertisingCampaignManagementPlan'
      required: true
    MarketTracking:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
      required: true
    PerformanceAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAssessment'
      required: true
    CampaignDirection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
      required: true