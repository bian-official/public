openapi: 3.0.1
info:
  title: Bank Drafts
  description: This Service Domain support bank guaranteed payment transactions such as bank drafts
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/BankDrafts/13.0.0
paths:
  '/BankDrafts/{bankdraftsid}/Control':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Control Bearer Document Transaction
      description: Control Bearer Document Transaction
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Exchange':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Exchange Bearer Document Transaction
      description: Exchange Bearer Document Transaction
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Execute':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Execute Bearer Document Transaction
      description: Execute Bearer Document Transaction
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /BankDrafts/Initiate:
    post:
      tags:
        - CR - BearerDocumentTransaction
      summary: Initiate Bearer Document Transaction
      description: Initiate Bearer Document Transaction
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Notify':
    get:
      tags:
        - CR - BearerDocumentTransaction
      summary: Notify Bearer Document Transaction
      description: Notify Bearer Document Transaction
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Request':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Request Bearer Document Transaction
      description: Request Bearer Document Transaction
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Retrieve':
    get:
      tags:
        - CR - BearerDocumentTransaction
      summary: Retrieve Bearer Document Transaction
      description: Retrieve Bearer Document Transaction
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/Update':
    put:
      tags:
        - CR - BearerDocumentTransaction
      summary: Update Bearer Document Transaction
      description: Update Bearer Document Transaction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittance/{bankguaranteedpaymentremittanceid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittance
      summary: Exchange Bank Guaranteed Payment Remittance Task
      description: Exchange Bank Guaranteed Payment Remittance Task
      operationId: ExchangeBankGuaranteedPaymentRemittance
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittanceid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittance'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecification/{bankguaranteedpaymentspecificationid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecification
      summary: Exchange Bank Guaranteed Payment Specification Task
      description: Exchange Bank Guaranteed Payment Specification Task
      operationId: ExchangeBankGuaranteedPaymentSpecification
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecification'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistration/{bearerdocumentcreationandregistrationid}/Exchange':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistration
      summary: Exchange Bearer Document Creation and Registration Task
      description: Exchange Bearer Document Creation and Registration Task
      operationId: ExchangeBearerDocumentCreationandRegistration
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistration'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPayment/{customerpaymentid}/Exchange':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Exchange Customer Payment Task
      description: Exchange Customer Payment Task
      operationId: ExchangeCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittance/{bankguaranteedpaymentremittanceid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittance
      summary: Execute Bank Guaranteed Payment Remittance Task
      description: Execute Bank Guaranteed Payment Remittance Task
      operationId: ExecuteBankGuaranteedPaymentRemittance
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittanceid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittance'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecification/{bankguaranteedpaymentspecificationid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecification
      summary: Execute Bank Guaranteed Payment Specification Task
      description: Execute Bank Guaranteed Payment Specification Task
      operationId: ExecuteBankGuaranteedPaymentSpecification
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecification'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistration/{bearerdocumentcreationandregistrationid}/Execute':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistration
      summary: Execute Bearer Document Creation and Registration Task
      description: Execute Bearer Document Creation and Registration Task
      operationId: ExecuteBearerDocumentCreationandRegistration
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistration'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPayment/{customerpaymentid}/Execute':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Execute Customer Payment Task
      description: Execute Customer Payment Task
      operationId: ExecuteCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittance/Initiate':
    post:
      tags:
        - BQ - BankGuaranteedPaymentRemittance
      summary: Initiate Bank Guaranteed Payment Remittance Task
      description: Initiate Bank Guaranteed Payment Remittance Task
      operationId: InitiateBankGuaranteedPaymentRemittance
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittance'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecification/Initiate':
    post:
      tags:
        - BQ - BankGuaranteedPaymentSpecification
      summary: Initiate Bank Guaranteed Payment Specification Task
      description: Initiate Bank Guaranteed Payment Specification Task
      operationId: InitiateBankGuaranteedPaymentSpecification
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecification'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistration/Initiate':
    post:
      tags:
        - BQ - BearerDocumentCreationandRegistration
      summary: Initiate Bearer Document Creation and Registration Task
      description: Initiate Bearer Document Creation and Registration Task
      operationId: InitiateBearerDocumentCreationandRegistration
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistration'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPayment/Initiate':
    post:
      tags:
        - BQ - CustomerPayment
      summary: Initiate Customer Payment Task
      description: Initiate Customer Payment Task
      operationId: InitiateCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittance/{bankguaranteedpaymentremittanceid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteedPaymentRemittance
      summary: Notify Bank Guaranteed Payment Remittance Task
      description: Notify Bank Guaranteed Payment Remittance Task
      operationId: NotifyBankGuaranteedPaymentRemittance
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittanceid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecification/{bankguaranteedpaymentspecificationid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteedPaymentSpecification
      summary: Notify Bank Guaranteed Payment Specification Task
      description: Notify Bank Guaranteed Payment Specification Task
      operationId: NotifyBankGuaranteedPaymentSpecification
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistration/{bearerdocumentcreationandregistrationid}/Notify':
    get:
      tags:
        - BQ - BearerDocumentCreationandRegistration
      summary: Notify Bearer Document Creation and Registration Task
      description: Notify Bearer Document Creation and Registration Task
      operationId: NotifyBearerDocumentCreationandRegistration
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationid'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPayment/{customerpaymentid}/Notify':
    get:
      tags:
        - BQ - CustomerPayment
      summary: Notify Customer Payment Task
      description: Notify Customer Payment Task
      operationId: NotifyCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittance/{bankguaranteedpaymentremittanceid}/Request':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittance
      summary: Request Bank Guaranteed Payment Remittance Task
      description: Request Bank Guaranteed Payment Remittance Task
      operationId: RequestBankGuaranteedPaymentRemittance
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittanceid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittance'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecification/{bankguaranteedpaymentspecificationid}/Request':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecification
      summary: Request Bank Guaranteed Payment Specification Task
      description: Request Bank Guaranteed Payment Specification Task
      operationId: RequestBankGuaranteedPaymentSpecification
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecification'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistration/{bearerdocumentcreationandregistrationid}/Request':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistration
      summary: Request Bearer Document Creation and Registration Task
      description: Request Bearer Document Creation and Registration Task
      operationId: RequestBearerDocumentCreationandRegistration
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistration'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPayment/{customerpaymentid}/Request':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Request Customer Payment Task
      description: Request Customer Payment Task
      operationId: RequestCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittance/{bankguaranteedpaymentremittanceid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteedPaymentRemittance
      summary: Retrieve Bank Guaranteed Payment Remittance Task
      description: Retrieve Bank Guaranteed Payment Remittance Task
      operationId: RetrieveBankGuaranteedPaymentRemittance
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittanceid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecification/{bankguaranteedpaymentspecificationid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteedPaymentSpecification
      summary: Retrieve Bank Guaranteed Payment Specification Task
      description: Retrieve Bank Guaranteed Payment Specification Task
      operationId: RetrieveBankGuaranteedPaymentSpecification
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistration/{bearerdocumentcreationandregistrationid}/Retrieve':
    get:
      tags:
        - BQ - BearerDocumentCreationandRegistration
      summary: Retrieve Bearer Document Creation and Registration Task
      description: Retrieve Bearer Document Creation and Registration Task
      operationId: RetrieveBearerDocumentCreationandRegistration
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationid'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPayment/{customerpaymentid}/Retrieve':
    get:
      tags:
        - BQ - CustomerPayment
      summary: Retrieve Customer Payment Task
      description: Retrieve Customer Payment Task
      operationId: RetrieveCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentRemittance/{bankguaranteedpaymentremittanceid}/Update':
    put:
      tags:
        - BQ - BankGuaranteedPaymentRemittance
      summary: Update Bank Guaranteed Payment Remittance Task
      description: Update Bank Guaranteed Payment Remittance Task
      operationId: UpdateBankGuaranteedPaymentRemittance
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentremittanceid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentRemittance'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentRemittance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BankGuaranteedPaymentSpecification/{bankguaranteedpaymentspecificationid}/Update':
    put:
      tags:
        - BQ - BankGuaranteedPaymentSpecification
      summary: Update Bank Guaranteed Payment Specification Task
      description: Update Bank Guaranteed Payment Specification Task
      operationId: UpdateBankGuaranteedPaymentSpecification
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bankguaranteedpaymentspecificationid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteedPaymentSpecification'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteedPaymentSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/BearerDocumentCreationandRegistration/{bearerdocumentcreationandregistrationid}/Update':
    put:
      tags:
        - BQ - BearerDocumentCreationandRegistration
      summary: Update Bearer Document Creation and Registration Task
      description: Update Bearer Document Creation and Registration Task
      operationId: UpdateBearerDocumentCreationandRegistration
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/bearerdocumentcreationandregistrationid'
      requestBody:
        $ref: '#/components/requestBodies/BearerDocumentCreationandRegistration'
      responses:
        '200':
          $ref: '#/components/responses/BearerDocumentCreationandRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankDrafts/{bankdraftsid}/CustomerPayment/{customerpaymentid}/Update':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Update Customer Payment Task
      description: Update Customer Payment Task
      operationId: UpdateCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankdraftsid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: " ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: Refers to the lifecycle of a Condition
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation prior to the execution of the task
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The timing and key actions/milestones involved in completing the transaction task
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Bank Guaranteed Payment Specification Task specific Business Service
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: "The status of Bearer Document Transaction ||\r\n|"
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: An unique reference to an item or an occurrence of Bearer Document Transaction ObligationFulfilment|ObligationFulfilment (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022 BM ()
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Reference to Bank Guaranteed Payment Specification Task
    BankGuaranteedPaymentSpecification:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteedPaymentSpecificationTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteedPaymentSpecificationTaskType:
          $ref: '#/components/schemas/text'
      description: The Bank Guaranteed Payment Specification Task is a discrete action or task that is required in the execution of the Bank Guaranteed Payment Specification Task
    CustomerPayment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        CustomerPaymentTaskReference:
          $ref: '#/components/schemas/task'
        CustomerPaymentTaskType:
          $ref: '#/components/schemas/text'
      description: The Bank Guaranteed Payment Specification Task is a discrete action or task that is required in the execution of the Bank Guaranteed Payment Specification Task
    BearerDocumentCreationandRegistration:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BearerDocumentCreationandRegistrationTaskReference:
          $ref: '#/components/schemas/task'
        BearerDocumentCreationandRegistrationTaskType:
          $ref: '#/components/schemas/text'
      description: The Bank Guaranteed Payment Specification Task is a discrete action or task that is required in the execution of the Bank Guaranteed Payment Specification Task
    BankGuaranteedPaymentRemittance:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteedPaymentRemittanceTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteedPaymentRemittanceTaskType:
          $ref: '#/components/schemas/text'
      description: The Bank Guaranteed Payment Specification Task is a discrete action or task that is required in the execution of the Bank Guaranteed Payment Specification Task
    calendartypevalues:
      enum:
        - UKCalendar
        - ChineseCalendar
      type: string
      description: ">\r\n* `UKCalendar` - \r\n* `ChineseCalendar` - \r\n"
    calendar:
      type: object
      properties:
        CalendarType:
          $ref: '#/components/schemas/calendartypevalues'
        CalendarName:
          $ref: '#/components/schemas/name'
      description: ''
    feetypevalues:
      enum:
        - Accountingfee
        - Adrfee
        - Advisoryfee
        - Airwaybillfee
        - Backendload
        - Brokeragefee
        - Clearanceandhandlingatdestination
        - Clearanceandhandlingatorigin
        - Collectfreight
        - Commission
        - Contingencydeferredsalescharge
        - Correspondentbankcharge
        - Custodyfee
        - Dangerousgoodsfee
        - Dilutionlevy
        - Discount
        - Equalisation
        - Frontendload
        - Initial
        - Insurancepremium
        - Issuancecancellationfee
        - Issuancefee
        - Managementfee
        - Matchingfees
        - Miscellaneousfee
        - Other
        - Packaging
        - Partacquis
        - Penalty
        - Pickup
        - Postagecharge
        - Premium
        - Publicationfee
        - Regulatoryfee
        - Securitycharge
        - Serviceprovisionfee
        - Shippingcharge
        - Signatureservice
        - Specialconcessions
        - Speciallyagreedfrontendload
        - Storageatdestination
        - Storageatorigin
        - Switch
        - Transferfee
        - Transportcharges
        - Ucitscommission
        - ChequeRelatedFee
      type: string
      description: ">\r\n* `Accountingfee` - Fee paid for accounting services rendered.\r\n* `Adrfee` - Charge linked to an ADR (American Depositary Receipt).\r\n* `Advisoryfee` - Fee paid for advisory services rendered.\r\n* `Airwaybillfee` - Charge is an airway bill fee.\r\n* `Backendload` - Sales charge paid by the investor when redeeming an investment such as an investment fund.\r\n* `Brokeragefee` - Fee paid to a broker for services provided.\r\n* `Clearanceandhandlingatdestination` - Charge is for clearance and handling of goods at destination.\r\n* `Clearanceandhandlingatorigin` - Charge is for clearance and handling of goods at origin.\r\n* `Collectfreight` - Charge is for the collection of the freight.\r\n* `Commission` - Fee paid for services provided.\r\n* `Contingencydeferredsalescharge` - Deferred sales charge.\r\n* `Correspondentbankcharge` - In investment funds, the charge of the correspondent bank for transferring money.\r\n* `Custodyfee` - Fee paid to a custodian in respect of custodial services.\r\n* `Dangerousgoodsfee` - Charge is for dangerous goods.\r\n* `Dilutionlevy` - In investment funds, a charge payable by the investor covering bid-offer spreads and dealing charges for the underlying investments. The dilution levy is paid to the fund for the benefit of other unit holders.\r\n* `Discount` - Charge that has been reduced from the standard initial charge levied by a fund, eg, during a launch period or as negotiated by a funds supermarket / discount broker.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive or performance fees at the end of the fiscal year.\r\n* `Frontendload` - Sales charge paid immediately by the investor when subscribing to an investment such as an investment fund.\r\n* `Initial` - Charge paid at the time of the first subscription.\r\n* `Insurancepremium` - Charge is a premium for insurance.\r\n* `Issuancecancellationfee` - Fee linked to the cancellation of an issuance.\r\n* `Issuancefee` - Charge linked to the issuance of security.\r\n* `Managementfee` - Fee paid to an investment manager for services. The fee usually includes fund administration costs and investor relationship management. Typically, the amount paid is a percentage of the assets under management.\r\n* `Matchingfees` - Fee charged for matching and/or confirmation.\r\n* `Miscellaneousfee` - Miscellaneous fee.\r\n* `Other` - Another type of charge.\r\n* `Packaging` - Charge is for packaging of goods.\r\n* `Partacquis` - Portion of charge that the fund is entitled to receive, that cannot be reduced by an intermediary.\r\n* `Penalty` - Fee charged to the investor for early redemption of the fund.\r\n* `Pickup` - Charge is for pick-up of goods.\r\n* `Postagecharge` - Charge paid for the postage.\r\n* `Premium` - In investment funds, pre-arranged addition to the trade amount based on the published net asset value.\r\n* `Publicationfee` - Fee paid in respect of publications made.\r\n* `Regulatoryfee` - Fee charged by a regulatory authority, eg, Securities and Exchange fees.\r\n* `Securitycharge` - Charge is for security.\r\n* `Serviceprovisionfee` - Fee paid for the provision of financial services.\r\n* `Shippingcharge` - Charge for shipping, including the insurance of securities.\r\n* `Signatureservice` - Charge is for signature services.\r\n* `Specialconcessions` - Charges, drawdown, or other reduction from or in addition to the deal price.\r\n* `Speciallyagreedfrontendload` - Specially agreed front-end load.\r\n* `Storageatdestination` - Charge is for storage of goods at destination.\r\n* `Storageatorigin` - Charge is for storage of goods at origin.\r\n* `Switch` - In investment funds, charge related to a switch transaction.\r\n* `Transferfee` - In investment funds, a fee charged for the transfer of ownership of an investment fund.\r\n* `Transportcharges` - Charge is for transport.\r\n* `Ucitscommission` - Charges paid by the investor to the Fund Company for subscription and redemption orders.\r\n* `ChequeRelatedFee` - \r\n"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: 'Total fee charged '
    feetransaction:
      type: object
      properties:
        AppliedFeeType:
          $ref: '#/components/schemas/feetypevalues'
        AccruedFeeAmount:
          $ref: '#/components/schemas/amount'
        AppliedFeeAmount:
          $ref: '#/components/schemas/amount'
      description: ''
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: The actual interest rate used for the payment of the interest for the specified interest period. (ISO20022)
    interesttypevalues:
      enum:
        - Fixed
        - Floatingratenote
        - Dualbasis
        - Index
        - Discounted
        - Zerocoupon
        - Exinterest
        - Cuminterest
      type: string
      description: ">\r\n* `Fixed` - Indicates that the type of interest is fixed.\r\n* `Floatingratenote` - Indicates that the type of interest is a floating rate note.\r\n* `Dualbasis` - Indicates that the type of interest is a dual basis.\r\n* `Index` - Indicates that the type of interest is index.\r\n* `Discounted` - Indicates that the type of interest is discounted.\r\n* `Zerocoupon` - Indicates that the type of interest is a zero coupon.\r\n* `Exinterest` - Indicates deal price excluding accrued interest.\r\n* `Cuminterest` - Indicates deal price including accrued interest.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          $ref: '#/components/schemas/amount'
        InterestTransactionDescription:
          $ref: '#/components/schemas/text'
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        AppliedInterestRate:
          $ref: '#/components/schemas/rate'
        AppliedInteretType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: ''
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    BankDraftsOutcome:
      type: object
      properties:
        BankDraftsCalendar:
          $ref: '#/components/schemas/calendar'
        BankDraftsCounterparty:
          $ref: '#/components/schemas/involvedparty'
        BankDraftsDividend:
          $ref: '#/components/schemas/text'
        BankDraftsFees:
          $ref: '#/components/schemas/feetransaction'
        BankDraftsInterest:
          $ref: '#/components/schemas/interesttransaction'
        BankDraftsMargining:
          $ref: '#/components/schemas/text'
        BankDraftsNotionalPrincipal:
          $ref: '#/components/schemas/text'
        BankDraftsOptions:
          $ref: '#/components/schemas/text'
        BankDraftsRates:
          $ref: '#/components/schemas/rate'
        BankDraftsSettlement:
          $ref: '#/components/schemas/text'
        BankDraftsWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Bank Guaranteed Payment Specification Task is a discrete action or task that is required in the execution of the Bank Guaranteed Payment Specification Task
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between business service transaction within Bearer Document Transaction ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: "A selected optional business service as subject matter of Bearer Document Transaction ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    actiontype:
      type: object
      properties:
        ActionTypeName:
          $ref: '#/components/schemas/name'
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: "A Classification value that specifies type of transaction for this  Bearer Document Transaction ||\r\n|"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: " Document _x000D_\n|Document (https://www.iso20022.org/standardsrepository/type/Document)|Standard|ISO20022 BM ()"
    paymenttypevalues:
      enum:
        - Cashtransaction
        - Domesticpayment
        - Domestichighvaluepayment
        - Domesticprioritypayment
        - Crossborderpayment
        - Crossborderprioritypayment
        - Crossborderhighvaluepayment
        - Thirdcurrencypayment
        - Thirdcurrencyhighvaluepayment
        - Thirdcurrencyprioritypayment
        - Tradesettlementpayment
        - Foreignexchange
        - Equivalentamount
        - Loan
        - Loanrepayment
        - Securities
        - Lockbox
        - Dividend
        - Crossedcheque
        - Opencheque
        - Ordercheque
        - Circularcheque
        - Travellerscheques
        - Bankdraft
        - Cashletter
        - Documentarycredit
        - Billofexchange
        - Collection
        - Cashmanagementtransfer
        - Sweepaccount
        - Topaccount
        - Zerobalanceaccount
        - Standingfacilities
        - Swiftpayservicelevelcredit
        - Priorityservicelevelcredit
        - Standardservicelevelcredit
        - Liquiditytransfer
        - Advancepayment
        - Valuedateadjustment
        - Dvpgross
        - Dvpnet
        - Netting
        - Limitpayment
        - Backup
        - Expresspayment
        - Centralbankoperation
        - Clspayment
        - Eurodomesticpayment
        - Agriculturaltransfer
        - Alimonypayment
        - Balanceretail
        - Bonuspayment.
        - Brokeragefee
        - Capitalbuilding
        - Charitypayment
        - Childbenefit
        - Commercialcredit
        - Commission
        - Commoditytransfer
        - Costs
        - Copyright
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Insurancepremium
        - Intracompanypayment
        - Interest
        - Licensefee
        - Metals
        - Pensionpayment
        - Purchasesaleofgoods
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Salarypayment
        - Socialsecuritybenefit
        - Standingorder
        - Subscription
        - Treasurystatepayment
        - Unemploymentdisabilitybenefit
        - Valueaddedtaxpayment
        - Withholdingtax
        - Taxpayment
        - Miscellaneous
        - Overnightdeposit
        - Marginallending
        - Other
        - Upfront
        - Unwind
        - Principalexchange
      type: string
      description: ">\r\n* `Cashtransaction` - Transaction is a withdrawal/deposit of cash.\r\n* `Domesticpayment` - Payment has an origin and a destination in the same country, and is made in the currency of that country.\r\n* `Domestichighvaluepayment` - Transaction is a high value payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Domesticprioritypayment` - Transaction is a priority payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Crossborderpayment` - Payment has an origin in one country, a destination in another, and is made in the currency of either the origin or destination country.\r\n* `Crossborderprioritypayment` - Transaction is a priority payment that has an origin in one country and a destination in another and is made in the currency of either the origin or destination country.\r\n* `Crossborderhighvaluepayment` - Transaction is a high value payment that has an origin in one country and a destination in another country and is made in the currency of either the origin or destination country.\r\n* `Thirdcurrencypayment` - Transaction is a payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyhighvaluepayment` - Transaction is a high value payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyprioritypayment` - Payment is made in a third currency to the origin and destination countries. The origin and destination countries may be the same country.\r\n* `Tradesettlementpayment` - Transaction is the settlement of a trade, eg, a securities transaction.\r\n* `Foreignexchange` - Transaction isthe settlement of a foreign exchange deal.\r\n* `Equivalentamount` - Transaction is an equivalent amount relative to a currency conversion.\r\n* `Loan` - Transaction is the payment of a specific amount of money lent by a creditor/lender.\r\n* `Loanrepayment` - Transaction is an amount of money transferred in repayment of loan.\r\n* `Securities` - Transaction is a payment of securities.\r\n* `Lockbox` - Transaction is a payment(s) resulting from a lock box service.\r\n* `Dividend` - Transaction is a payment of dividends.\r\n* `Crossedcheque` - Transaction is a crossed cheque. A crossed check has two parallel lines across its face, indicating that the cheque must be paid into an account and not cashed over the counter.\r\n* `Opencheque` - Transaction is an uncrossed cheque that can be cashed at the bank of origin.\r\n* `Ordercheque` - Transaction is a cheque made payable to a named recipient 'or order' enabling the creditor to either deposit it in an account or endorse it to a third party, ie, transfer the rights to the cheque by signing it on the reverse.\r\n* `Circularcheque` - Transaction is an instruction from a bank to its correspondent bank to pay the creditor a stated sum of money on presentation of a means of identification.\r\n* `Travellerscheques` - Transaction is a payment resulting from travellers cheques.\r\n* `Bankdraft` - Transaction is a cheque drawn by a bank on itself or its agent. A person who owes money to another buys the draft from a bank for cash and hands it to the creditor who need have no fear that it might be dishonoured.\r\n* `Cashletter` - Transaction is a cash letter. A cash letter is a payment instrument in the form of a covering letter, whereby a financial institution, ie, the remitting bank, requests credit for one or more financial documents under usual reserve, ie, subject to final payment.\r\n* `Documentarycredit` - Transaction is a documentary credit from one banker to another, authorising the payment of a specified sum of money to the person named in the document, based on specified conditions.\r\n* `Billofexchange` - Transaction is a written order from a drawer to a drawee to pay a specified sum of money upon demand, or on a specified date, to the drawer or to a third party specified by the drawer. A bill of exchange is also called a draft.\r\n* `Collection` - Transaction is a collection. A collection is the act of sending a cheque, bill of exchange or another financial instrument to the prospective financial institution for payment.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Sweepaccount` - Transaction relates to a cash management instruction, requesting a sweep of the account of the debtor.\r\n* `Topaccount` - Transaction is a cash management instruction, requesting to top the account of the debtor above a certain floor amount. The floor amount, if not pre-agreed by the parties involved, may be specified.\r\n* `Zerobalanceaccount` - Transaction is a cash management instruction, requesting to zero balance the account of the debtor.\r\n* `Standingfacilities` - Payment is linked to overnight deposits and the marginal lending facility.\r\n* `Swiftpayservicelevelcredit` - Transaction is a credit transfer to be processed according to the SWIFTPay Service Level.\r\n* `Priorityservicelevelcredit` - Transaction is a credit transfer to be processed according to the Priority Service Level.\r\n* `Standardservicelevelcredit` - Transaction is a credit transfer to be processed according to the Standard Service Level.\r\n* `Liquiditytransfer` - Payment is made to transfer liquidity to/from the settlement account of a member, to/from the current account held at the central institution or any other institution.\r\n* `Advancepayment` - Transaction is a payment made in advance or as an advance.\r\n* `Valuedateadjustment` - Transaction reverses a previously incorrectly value dated entry.\r\n* `Dvpgross` - Gross cash payment offsetting the amount owed/due for a securities transaction settlement.\r\n* `Dvpnet` - Net payment offsetting the cash balance due/owed for a series of securities transactions settlement.\r\n* `Netting` - Transaction is a netting operation.\r\n* `Limitpayment` - Transaction is a payment that is processed when the pool of liquidity exceeds the minimum value reserved for an express payment in the RTGSPlus system.\r\n* `Backup` - Payment is made under the recovery procedure to move liquidity to/from the settlement account of a member according to the specifications of the system.\r\n* `Expresspayment` - Transaction is a payment that is processed whenever liquidity is available on the settlement account of a member of the RTGSPlus system.\r\n* `Centralbankoperation` - Payment is made to settle an operation made with the central bank.\r\n* `Clspayment` - Payment is linked to CLS activities.\r\n* `Eurodomesticpayment` - Transaction is a credit transfer in Euro with its country of origin and country of destination within the European Union. The origin and destination countries may be one and the same country.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is a payment(s) made by one spouse to the other after a separation or divorce. An alimony payment may be applied to other family relationships.\r\n* `Balanceretail` - Transaction is a payment offsetting the net cash balance owed/due in a retail payment system.\r\n* `Bonuspayment.` - Net cash payment offsetting the balance due/owed in a retail payment system.\r\n* `Brokeragefee` - Transaction is charges levied by a broker.\r\n* `Capitalbuilding` - Transaction is payment into a personal pension scheme for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Childbenefit` - Transaction is a payment made to a parent/guardian to help maintain a child.\r\n* `Commercialcredit` - Transaction is settlement of a commercial credit.\r\n* `Commission` - Transaction is payment of a fee for executing a transaction.\r\n* `Commoditytransfer` - Transaction is a payment of products traded on a commodity exchange.\r\n* `Costs` - Transaction is apayment of costs.\r\n* `Copyright` - Transaction is a payment of copyright.\r\n* `Governmentpayment` - Transaction is apayment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is a payment of an instalment or to the settlement of a hire-purchase agreement.\r\n* `Insurancepremium` - Transaction is a payment of an insurance premium.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Interest` - Transaction is a payment of interest.\r\n* `Licensefee` - Transaction is a payment of a license fee.\r\n* `Metals` - Transaction is a purchase or sale of metals.\r\n* `Pensionpayment` - Transaction is a payment of a pension allowance.\r\n* `Purchasesaleofgoods` - Transaction is a payment for the purchase and sale of goods.\r\n* `Refund` - Transaction is a repayment of funds.\r\n* `Rent` - Transaction is a payment of rent.\r\n* `Royalties` - Transaction is a payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is a payment for the purchase and sale of services.\r\n* `Salarypayment` - Transaction is a payment of salaries.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, a payment made by a government to support individuals.\r\n* `Standingorder` - Transaction is a standing order. A standing order is an instruction given by a party having explicit authority on the account to debit, ie, either debit account owner or originating party, to a first agent to process cash transfers at specified intervals during an implicit or explicit period of time. It is given once, and is valid for an open or closed period of time.\r\n* `Subscription` - Transaction is a payment of a subscription.\r\n* `Treasurystatepayment` - Payment is linked to the Treasury State.\r\n* `Unemploymentdisabilitybenefit` - Transaction is a payment made to an unemployed/disabled person.\r\n* `Valueaddedtaxpayment` - Transaction is apayment of value added tax.\r\n* `Withholdingtax` - Transaction is a payment of withholding tax.\r\n* `Taxpayment` - Transaction is a payment of taxes.\r\n* `Miscellaneous` - Transaction is for an unspecified reason. Miscellaneous is to be used only when no explicit code is available.\r\n* `Overnightdeposit` - Transaction is linked to an overnight deposit.\r\n* `Marginallending` - Transaction is linked to the marginal lending facility.\r\n* `Other` - Specifies that a proprietary code must be indicated.\r\n* `Upfront` - Transaction is an initial payment made by one of the counterparties  either to bring a transaction to fair value or for any other reason that may be the cause of an off-market transaction.\r\n* `Unwind` - Transaction is the final settlement payment made when a transaction is unwound prior to its end date or a payment that may result due to the full termination of derivative transaction(s).\r\n* `Principalexchange` - Transaction is an exchange of notional values for cross-currency swaps.\r\n"
    priorityvaluetypes:
      enum:
        - Urgent
        - High
        - Normal
        - Low
      type: string
      description: ">\r\n* `Urgent` - Priority level is urgent (highest priority possible).\r\n* `High` - Priority level is high.\r\n* `Normal` - Priority level is normal.\r\n* `Low` - Priority level is low.\r\n"
    clearingchanneltypevalues:
      enum:
        - Realtimegrosssettlementsystem
        - Realtimenetsettlementsystem
        - Masspaymentnetsystem
        - Booktransfer
      type: string
      description: ">\r\n* `Realtimegrosssettlementsystem` - Clearing channel is a real-time gross settlement system.\r\n* `Realtimenetsettlementsystem` - Clearing channel is a real-time net settlement system.\r\n* `Masspaymentnetsystem` - Clearing channel is a mass payment net settlement system.\r\n* `Booktransfer` - Payment through internal book transfer.\r\n"
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    paymentinstructionstatus:
      type: object
      properties:
        PaymentInstructionStatus:
          $ref: '#/components/schemas/status'
        PaymentInstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
      description: ''
    paymentdatetimetypevalues:
      enum:
        - RequestedExecutionDate
        - AcceptanceDate
        - CreationDate
        - ValueDate
        - DueDate
        - ExpiryDate
      type: string
      description: ">\r\n* `RequestedExecutionDate` - Date at which the initiating party requests the clearing agent to process the payment. ISO20022\nUsage: This is the date on which the debtor's account is to be debited. If payment by cheque, the date when the cheque must be generated by the bank. \r\n* `AcceptanceDate` - Date and time at which all processing conditions for execution of the payment are met and adequate financial cover is available at the account servicing agent. ISO20022\r\n* `CreationDate` - Date and time at which the payment execution was created by the instructing agent. ISO20022\r\n* `ValueDate` - Date on which a payment must be executed (ISO20022)\r\n* `DueDate` - Due date for the payment. (ISO20022)\r\n* `ExpiryDate` - \r\n"
    paymentdatetime:
      type: object
      properties:
        PaymentDate:
          $ref: '#/components/schemas/datetime'
        PaymentDateType:
          $ref: '#/components/schemas/paymentdatetimetypevalues'
      description: ''
    paymentinstruction:
      type: object
      properties:
        PaymentInstructionDirectionType:
          $ref: '#/components/schemas/text'
        PaymentInstructionType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentInstructionRequestedMechanism:
          $ref: '#/components/schemas/text'
        PaymentInstructionProcessingValidityTime:
          $ref: '#/components/schemas/datetimeperiod'
        PaymentInstructionPriority:
          $ref: '#/components/schemas/priorityvaluetypes'
        PaymentInstructionClearingChannel:
          $ref: '#/components/schemas/clearingchanneltypevalues'
        PaymentCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        PaymentInstructionStatus:
          $ref: '#/components/schemas/paymentinstructionstatus'
        PaymentInstructionAmount:
          $ref: '#/components/schemas/amount'
        PaymentInstructionDatetime:
          $ref: '#/components/schemas/paymentdatetime'
      description: ' Payment|Payment (https://www.iso20022.org/standardsrepository/type/Payment)|Standard|ISO20022 BM ()'
    BearerDocumentTransaction:
      type: object
      properties:
        BearerDocumentTransactionParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        BearerDocumentTransactionSelectedOption:
          $ref: '#/components/schemas/service'
        BearerDocumentTransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        BearerDocumentTransactionType:
          $ref: '#/components/schemas/actiontype'
        BearerDocumentTransactionReference:
          $ref: '#/components/schemas/transaction'
        BearerDocumentReference:
          $ref: '#/components/schemas/document'
        BearerDocumentInstructionReference:
          $ref: '#/components/schemas/paymentinstruction'
        BearerDocumentInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
      description: 'Execute a well-bounded financial transaction/task, typically involving largely automated/structured fulfillment processing within Bank Drafts. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BearerDocumentTransaction:
      description: BearerDocumentTransaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BearerDocumentTransaction'
    BankGuaranteedPaymentRemittance:
      description: BankGuaranteedPaymentRemittance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentRemittance'
    BankGuaranteedPaymentSpecification:
      description: BankGuaranteedPaymentSpecification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentSpecification'
    BearerDocumentCreationandRegistration:
      description: BearerDocumentCreationandRegistration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BearerDocumentCreationandRegistration'
    CustomerPayment:
      description: CustomerPayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPayment'
  parameters:
    bankdraftsid:
      name: bankdraftsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteedpaymentremittanceid:
      name: bankguaranteedpaymentremittanceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteedpaymentspecificationid:
      name: bankguaranteedpaymentspecificationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bearerdocumentcreationandregistrationid:
      name: bearerdocumentcreationandregistrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customerpaymentid:
      name: customerpaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    BearerDocumentTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BearerDocumentTransaction'
      required: true
    BankGuaranteedPaymentRemittance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentRemittance'
      required: true
    BankGuaranteedPaymentSpecification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteedPaymentSpecification'
      required: true
    BearerDocumentCreationandRegistration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BearerDocumentCreationandRegistration'
      required: true
    CustomerPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPayment'
      required: true