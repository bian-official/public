openapi: 3.0.1
info:
  title: Investment Portfolio Planning
  description: Agree the policies and required make-up of an investment portfolio and ensure all required bank and regulatory terms and conditions are addressed
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/InvestmentPortfolioPlanning/13.0.0
paths:
  /InvestmentPortfolioPlanning/Evaluate:
    post:
      tags:
        - CR - ManagedInvestmentPortfolioAgreement
      summary: EvCR Establish a managed investment portfolio agreement
      description: EvCR Establish a managed investment portfolio agreement
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/Update':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAgreement
      summary: UpCR Update details of an active managed investment portfolio agreement
      description: UpCR Update details of an active managed investment portfolio agreement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/Control':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAgreement
      summary: CoCR Control the processing of an investment agreement
      description: CoCR Control the processing of an investment agreement
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/Exchange':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAgreement
      summary: 'EcCR Accept, reject etc an investment portfolio agreement'
      description: 'EcCR Accept, reject etc an investment portfolio agreement'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/Request':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAgreement
      summary: RqCR Request review that proposed activity is compatible with the agreement
      description: RqCR Request review that proposed activity is compatible with the agreement
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/Grant':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioAgreement
      summary: GrCR Obtain grant authority to act under the terms of the investment agreement
      description: GrCR Obtain grant authority to act under the terms of the investment agreement
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioAgreement'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/Retrieve':
    get:
      tags:
        - CR - ManagedInvestmentPortfolioAgreement
      summary: ReCR Retrieve details about a managed investment portfolio agreement
      description: ReCR Retrieve details about a managed investment portfolio agreement
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioAgreement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/InvestmentTerms/Evaluate':
    post:
      tags:
        - BQ - InvestmentTerms
      summary: EvBQ Establish the specific terms/conditions making up the investment agreement
      description: EvBQ Establish the specific terms/conditions making up the investment agreement
      operationId: EvaluateInvestmentTerms
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentTerms'
      responses:
        '200':
          $ref: '#/components/responses/InvestmentTerms'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/InvestmentTerms/{investmenttermsid}/Update':
    put:
      tags:
        - BQ - InvestmentTerms
      summary: UpBQ Update the terms/conditions for an investment agreement
      description: UpBQ Update the terms/conditions for an investment agreement
      operationId: UpdateInvestmentTerms
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
        - $ref: '#/components/parameters/investmenttermsid'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentTerms'
      responses:
        '200':
          $ref: '#/components/responses/InvestmentTerms'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/InvestmentTerms/{investmenttermsid}/Request':
    put:
      tags:
        - BQ - InvestmentTerms
      summary: RqBQ Request check of a proposed activity is compatible with a specific term of the agreement
      description: RqBQ Request check of a proposed activity is compatible with a specific term of the agreement
      operationId: RequestInvestmentTerms
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
        - $ref: '#/components/parameters/investmenttermsid'
      requestBody:
        $ref: '#/components/requestBodies/InvestmentTerms'
      responses:
        '200':
          $ref: '#/components/responses/InvestmentTerms'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioPlanning/{investmentportfolioplanningid}/InvestmentTerms/{investmenttermsid}/Retrieve':
    get:
      tags:
        - BQ - InvestmentTerms
      summary: ReBQ Retrieve details about the specific terms of an agreement
      description: ReBQ Retrieve details about the specific terms of an agreement
      operationId: RetrieveInvestmentTerms
      parameters:
        - $ref: '#/components/parameters/investmentportfolioplanningid'
        - $ref: '#/components/parameters/investmenttermsid'
      responses:
        '200':
          $ref: '#/components/responses/InvestmentTerms'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: 'The type of term (e.g. risk appetite, forbidden securities/sectors)'
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: The term of the agreement ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the associated customer for the investment portfolio ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to KYC/Regulatory assessments maintained by the Party Life-Cycle Management Service Domain GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: Refers to the lifecycle of a Condition
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: 'One or more specific constraint parameters that calibrate the term, applicable for position constraints (e.g. the specific percentage limit of holdings by value that can be applied to a type of security)'
    InvestmentTerms:
      type: object
      properties:
        InvestmentPortfolioAgreementTermType:
          $ref: '#/components/schemas/text'
        InvestmentPortfolioAgreementTermDescription:
          $ref: '#/components/schemas/text'
        InvestmentPortfolioAgreementTermConstraints:
          $ref: '#/components/schemas/condition'
      description: "A collection of terms (within some jurisdiction) that can be selected and configured to define a contract /agreement\n\nExamples: Required disclosures"
    organisationidentificationtypevalues:
      enum:
        - LEI
        - ELF
        - MIC
        - BICFI
        - Bankpartyidentification
        - Centralbankidentificationnumber
        - Clearingidentificationnumber
        - Certificateofincorporationnumber
        - Countryidentificationcode
        - Customernumber
        - Datauniversalnumberingsystem
        - Employeridentificationnumber
        - Gs1glnidentifier
        - SIREN
        - SIRET
        - Taxidentificationnumber
        - EANGLN
      type: string
      description: ">\r\n* `LEI` - Legal Entity Identifier is a code allocated to a party as described in ISO 17442 \"Financial Services - Legal Entity Identifier (LEI)\".\r\n* `ELF` - Entity Legal Forms is a code allocated to a party as described in ISO 20275 \"Financial services  Entity legal forms (ELF)\". \r\n* `MIC` - Market Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383 \"Codes for exchanges and market identifications\".\r\n* `BICFI` - Code allocated to a financial institution by the ISO 9362 Registration Authority as described in ISO 9362 \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".\r\n* `Bankpartyidentification` - Unique and unambiguous assignment made by a specific bank or similar financial institution to identify a relationship as defined between the bank and its client.\r\n* `Centralbankidentificationnumber` - A unique identification number assigned by a central bank to identify an organisation.\r\n* `Clearingidentificationnumber` - A unique identification number assigned by a clearing house to identify an organisation\r\n* `Certificateofincorporationnumber` - A unique identification number assigned by a designated authority to a certificate of incorporation and used to identify an organisation.\r\n* `Countryidentificationcode` - Country authority given organisation identification (e.g., corporate registration number)\r\n* `Customernumber` - Number assigned by an issuer to identify a customer.\nNumber assigned by a party to identify a creditor or debtor relationship.\r\n* `Datauniversalnumberingsystem` - A unique identification number provided by Dun & Bradstreet to identify an organisation.\r\n* `Employeridentificationnumber` - Number assigned by a registration authority to an employer.\r\n* `Gs1glnidentifier` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to GS1 numbering scheme rules.The number is used to retrieve detailed information that is linked to it.\r\n* `SIREN` - The SIREN number is a 9 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation in France.\r\n* `SIRET` - The SIRET number is a 14 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation unit in France. It consists of the SIREN number, followed by a five digit classification number, to identify the local geographical unit of that entity\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to identify an organisation.\r\n* `EANGLN` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to the European Association for Numbering (EAN) numbering scheme rules. The number is used to retrieve detailed information that is linked to it. (iso20022)\r\n"
    organisationidentification:
      type: object
      properties:
        OrganisationIdentificationType:
          $ref: '#/components/schemas/organisationidentificationtypevalues'
        OrganisationIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    organisationdatetimetypevalues:
      enum:
        - RegistrationDate
        - EstablishmentDate
        - EntityExpirationDate
      type: string
      description: ">\r\n* `RegistrationDate` - Date and time at which a given organisation was officially registered. (ISO20022)\r\n* `EstablishmentDate` - Date when the organisation was established. ISO20022\r\n* `EntityExpirationDate` - The date the Legal Entity ceased operation or was merged. ISO20022\r\n"
    organisationdatetime:
      type: object
      properties:
        OrganisatioDate:
          $ref: '#/components/schemas/datetime'
        OrganisatioDateType:
          $ref: '#/components/schemas/organisationdatetimetypevalues'
      description: ''
    organisationtypevalues:
      enum:
        - LegalEntity
        - Authority
        - OrganisationUnit
        - FinancialInstitution
        - Charity
        - GovernmentBody
      type: string
      description: ">\r\n* `LegalEntity` - \r\n* `Authority` - \r\n* `OrganisationUnit` - \r\n* `FinancialInstitution` - \r\n* `Charity` - \r\n* `GovernmentBody` - \r\n"
    organisationnametypevalues:
      enum:
        - ShortName
        - TradingName
        - LegalName
      type: string
      description: ">\r\n* `ShortName` - \r\n* `TradingName` - \r\n* `LegalName` - \r\n"
    organisationname:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/name'
        NameType:
          $ref: '#/components/schemas/organisationnametypevalues'
      description: ''
    organisationlegalstructuretypevalues:
      enum:
        - Corporation
        - Individual
        - Supranational
        - Sovereign
        - Municipal
        - Province
        - State
        - County
        - Partnership
        - Financialinstitution
        - National
      type: string
      description: ">\r\n* `Corporation` - Legal structure is a corporation.\r\n* `Individual` - Legal structure is an individual.\r\n* `Supranational` - Legal structure is a supranational.\r\n* `Sovereign` - Legal structure is a sovereign.\r\n* `Municipal` - Legal structure is a municipal.\r\n* `Province` - Legal structure is a province.\r\n* `State` - Legal structure is a state.\r\n* `County` - Legal structure is a county.\r\n* `Partnership` - Legal structure is a partnership.\r\n* `Financialinstitution` - Legal structure is a financial institution.\r\n* `National` - Legal structure is a state.\r\n"
    organisation:
      type: object
      properties:
        OrganisationStructureHierarchy:
          $ref: '#/components/schemas/text'
        OrganisationIdentification:
          $ref: '#/components/schemas/organisationidentification'
        OrganisationSector:
          $ref: '#/components/schemas/text'
        LegalEntityIndicator:
          type: string
          description: ''
          format: string
        OrganisationDate:
          $ref: '#/components/schemas/organisationdatetime'
        OrganisationType:
          $ref: '#/components/schemas/organisationtypevalues'
        OrganisationName:
          $ref: '#/components/schemas/organisationname'
        OrganisationLegalStructure:
          $ref: '#/components/schemas/organisationlegalstructuretypevalues'
      description: "Reference to the legal entity that is the subject of the agreement Organisation _x000D_\n|Organisation  (https://www.iso20022.org/standardsrepository/type/Organisation)|Standard|ISO20022 BM ()"
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: "The type of investment portfolio agreement (e.g. discretionary, trust ) ||\r\n|"
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: The contractual jurisdiction or coverage of the investment portfolio agreement (e.g. "governed by State") Jurisdiction|Jurisdiction (https://www.iso20022.org/standardsrepository/type/Jurisdiction)|Standard|ISO20022 BM ()
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: "Reference to any associated documents, (e.g. signed agreement document, disclosures) ||\r\n|"
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementstatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementstatus:
      type: object
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/status'
        AgreementStatusType:
          $ref: '#/components/schemas/agreementstatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: "The consolidated view of all of the constituent investment policy terms and conditions in any suitable format Agreement_x000D_\n|Agreement (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022 BM ()"
    ManagedInvestmentPortfolioAgreement:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        LegalEntityReference:
          $ref: '#/components/schemas/organisation'
        InvestmentPortfolioInstanceReference:
          $ref: '#/components/schemas/identifier'
        InvestmentPortfolioAgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        InvestmentPortfolioAgreementJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        InvestmentPortfolioAgreementValidFromToDate:
          $ref: '#/components/schemas/datetime'
        InvestmentPortfolioAgreementSignatoriesResponsibleParties:
          type: string
          description: Reference to signatories
          format: object
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        CustomerAgreementInstanceReference:
          $ref: '#/components/schemas/identifier'
        PartyRelationshipProcedureInstanceReference:
          $ref: '#/components/schemas/identifier'
        ManagedInvestmentPortfolioAgreement:
          $ref: '#/components/schemas/agreement'
      description: "Maintain the terms and conditions that apply to a commercial relationship within Investment Portfolio Planning.\n\n\n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ManagedInvestmentPortfolioAgreement:
      description: ManagedInvestmentPortfolioAgreement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManagedInvestmentPortfolioAgreement'
    InvestmentTerms:
      description: InvestmentTerms
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvestmentTerms'
  parameters:
    investmentportfolioplanningid:
      name: investmentportfolioplanningid
      in: path
      required: true
      style: simple
      schema:
        type: string
    investmenttermsid:
      name: investmenttermsid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ManagedInvestmentPortfolioAgreement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManagedInvestmentPortfolioAgreement'
      required: true
    InvestmentTerms:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvestmentTerms'
      required: true