openapi: 3.0.1
info:
  title: Account Recovery
  description: This service domain handles the restructuring of a distressed account (loan) after standard recovery procedures have been exhausted
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/AccountRecovery/13.0.0
paths:
  /AccountRecovery/Initiate:
    post:
      tags:
        - CR - AccountRecoveryProcedure
      summary: InCR Initiate the account recovery procedure
      description: InCR Initiate the account recovery procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/AccountRecoveryProcedure'
      responses:
        '200':
          $ref: '#/components/responses/AccountRecoveryProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Update':
    put:
      tags:
        - CR - AccountRecoveryProcedure
      summary: UpCR Update details of an active account recovery case
      description: UpCR Update details of an active account recovery case
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
      requestBody:
        $ref: '#/components/requestBodies/AccountRecoveryProcedure'
      responses:
        '200':
          $ref: '#/components/responses/AccountRecoveryProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Exchange':
    put:
      tags:
        - CR - AccountRecoveryProcedure
      summary: 'EcCR Accept, reject, verify etc. an active account recovery case'
      description: 'EcCR Accept, reject, verify etc. an active account recovery case'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
      requestBody:
        $ref: '#/components/requestBodies/AccountRecoveryProcedure'
      responses:
        '200':
          $ref: '#/components/responses/AccountRecoveryProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Retrieve':
    get:
      tags:
        - CR - AccountRecoveryProcedure
      summary: ReCR Retrieve details about an active account recovery case
      description: ReCR Retrieve details about an active account recovery case
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
      responses:
        '200':
          $ref: '#/components/responses/AccountRecoveryProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Assessment/{assessmentid}/Update':
    put:
      tags:
        - BQ - Assessment
      summary: UpBQ Update details of an active case assessment
      description: UpBQ Update details of an active case assessment
      operationId: UpdateAssessment
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/assessmentid'
      requestBody:
        $ref: '#/components/requestBodies/Assessment'
      responses:
        '200':
          $ref: '#/components/responses/Assessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Assessment/{assessmentid}/Retrieve':
    get:
      tags:
        - BQ - Assessment
      summary: ReBQ Retrieve details of an active case assessment
      description: ReBQ Retrieve details of an active case assessment
      operationId: RetrieveAssessment
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/assessmentid'
      responses:
        '200':
          $ref: '#/components/responses/Assessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Writedown/{writedownid}/Update':
    put:
      tags:
        - BQ - Writedown
      summary: UpBQ Update details of an active case write-down
      description: UpBQ Update details of an active case write-down
      operationId: UpdateWritedown
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/writedownid'
      requestBody:
        $ref: '#/components/requestBodies/Writedown'
      responses:
        '200':
          $ref: '#/components/responses/Writedown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Writedown/{writedownid}/Exchange':
    put:
      tags:
        - BQ - Writedown
      summary: 'EcBQ Accept, reject, verify etc. an active case write-down'
      description: 'EcBQ Accept, reject, verify etc. an active case write-down'
      operationId: ExchangeWritedown
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/writedownid'
      requestBody:
        $ref: '#/components/requestBodies/Writedown'
      responses:
        '200':
          $ref: '#/components/responses/Writedown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Planning/{planningid}/Update':
    put:
      tags:
        - BQ - Planning
      summary: UpBQ Update details of an active case recovery plan
      description: UpBQ Update details of an active case recovery plan
      operationId: UpdatePlanning
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/planningid'
      requestBody:
        $ref: '#/components/requestBodies/Planning'
      responses:
        '200':
          $ref: '#/components/responses/Planning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Planning/{planningid}/Retrieve':
    get:
      tags:
        - BQ - Planning
      summary: ReBQ Retrieve details of an active case recovery plan
      description: ReBQ Retrieve details of an active case recovery plan
      operationId: RetrievePlanning
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/planningid'
      responses:
        '200':
          $ref: '#/components/responses/Planning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Negotiation/{negotiationid}/Update':
    put:
      tags:
        - BQ - Negotiation
      summary: UpBQ Update details of an active case negotiation
      description: UpBQ Update details of an active case negotiation
      operationId: UpdateNegotiation
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/negotiationid'
      requestBody:
        $ref: '#/components/requestBodies/Negotiation'
      responses:
        '200':
          $ref: '#/components/responses/Negotiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Negotiation/{negotiationid}/Exchange':
    put:
      tags:
        - BQ - Negotiation
      summary: 'EcBQ Accept, reject, verify etc. an active case negotiation'
      description: 'EcBQ Accept, reject, verify etc. an active case negotiation'
      operationId: ExchangeNegotiation
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/negotiationid'
      requestBody:
        $ref: '#/components/requestBodies/Negotiation'
      responses:
        '200':
          $ref: '#/components/responses/Negotiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Negotiation/{negotiationid}/Request':
    put:
      tags:
        - BQ - Negotiation
      summary: RqBQ Request a negotiation for an active recovery case
      description: RqBQ Request a negotiation for an active recovery case
      operationId: RequestNegotiation
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/negotiationid'
      requestBody:
        $ref: '#/components/requestBodies/Negotiation'
      responses:
        '200':
          $ref: '#/components/responses/Negotiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Negotiation/{negotiationid}/Retrieve':
    get:
      tags:
        - BQ - Negotiation
      summary: ReBQ Retrieve details of an active case negotiation
      description: ReBQ Retrieve details of an active case negotiation
      operationId: RetrieveNegotiation
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/negotiationid'
      responses:
        '200':
          $ref: '#/components/responses/Negotiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Restructuring/{restructuringid}/Update':
    put:
      tags:
        - BQ - Restructuring
      summary: UpBQ Update details of case restructuring tasks
      description: UpBQ Update details of case restructuring tasks
      operationId: UpdateRestructuring
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/restructuringid'
      requestBody:
        $ref: '#/components/requestBodies/Restructuring'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Restructuring/{restructuringid}/Exchange':
    put:
      tags:
        - BQ - Restructuring
      summary: 'EcBQ Accept, reject, verify etc. case restructuring task'
      description: 'EcBQ Accept, reject, verify etc. case restructuring task'
      operationId: ExchangeRestructuring
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/restructuringid'
      requestBody:
        $ref: '#/components/requestBodies/Restructuring'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/AccountRecovery/{accountrecoveryid}/Restructuring/{restructuringid}/Retrieve':
    get:
      tags:
        - BQ - Restructuring
      summary: ReBQ Retrieve details of case restructuring tasks
      description: ReBQ Retrieve details of case restructuring tasks
      operationId: RetrieveRestructuring
      parameters:
        - $ref: '#/components/parameters/accountrecoveryid'
        - $ref: '#/components/parameters/restructuringid'
      responses:
        '200':
          $ref: '#/components/responses/Restructuring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Description of significant details and properties of the asset ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: "Key dates associated with recovery (e.g. account open, account closing) ||\r\n|"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Key date time vale ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: Reference to involved and interested parties (e.g. guarantor/cosigner) Party|Party (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM ()
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer associated with account recovery case - likely product 'owner' ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to a tax identifier associated with the customer/account for tax reporting GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'The status of the recovery case (e.g. in assessment, write-down, planning, negotiation, restructuring) Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()'
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Details of all transactions made against the account - not itemized here but referenced from fulfillment processing ObligationFulfilment|ObligationFulfilment (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022 BM ()
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Processing record for the write-down task within the account recovery process
    Writedown:
      type: object
      properties:
        Accountwrite-downtransaction:
          $ref: '#/components/schemas/transaction'
        AccountRecoveryCaseWrite-downTaskRecord:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    Assessment:
      type: object
      properties:
        AccountRecoveryCaseAssessmentTaskRecord:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    accountrecoveryplan:
      type: object
      properties:
        AccountRecoveryPlan:
          type: string
          description: A plan (tasks and targets) added to the Account Recovery Case Resolution Schedule.
          format: class
      description: Recovery tasks and targets added to the Account Recovery Case Resolution Schedule
    Planning:
      type: object
      properties:
        AccountRecoveryPlan:
          $ref: '#/components/schemas/accountrecoveryplan'
        AccountRecoveryCasePlanningTaskRecord:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "Target and actual dates for processing/resolution ||\r\n|"
    Restructuring:
      type: object
      properties:
        AccountRecoveryRestructuringSchedule:
          $ref: '#/components/schemas/schedule'
        AccountRecoveryCaseRestructuringTaskRecord:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Defines bank's policies and guidelines for account recovery/write down handling
    correspondencetypevalues:
      enum:
        - UnsolicitedMessage
        - Complaint
      type: string
      description: ">\r\n* `UnsolicitedMessage` - \r\n* `Complaint` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: The address for message delivery (needs to match channel selection)
    correspondencecommunicationmethodtypevalues:
      enum:
        - Fax
        - Email
        - Proprietary
        - Online
        - Phone
        - Postalservice
        - File
      type: string
      description: ">\r\n* `Fax` - Transmission by fax.\r\n* `Email` - Transmission by e-mail.\r\n* `Proprietary` - Transmission by proprietary method.\r\n* `Online` - Transmission on line, for example, in a web portal.\r\n* `Phone` - Transmission by telephone.\r\n* `Postalservice` - Transmission by postal service.\r\n* `File` - Transmission by file transfer.\r\n"
    correspondencemediumtypevalues:
      enum:
        - Paper
        - Electronic
        - Paperelectronic
        - Biometric
      type: string
      description: ">\r\n* `Paper` - Presentation is made on paper.\r\n* `Electronic` - Presentation is made electronically.\r\n* `Paperelectronic` - Presentation is made on paper and/or electronically.\r\n* `Biometric` - Biometric medium.\r\n"
    correspondence:
      type: object
      properties:
        CorrespondenceType:
          $ref: '#/components/schemas/correspondencetypevalues'
        CorrespondenceAddress:
          $ref: '#/components/schemas/address'
        CorrespondenceDateTime:
          $ref: '#/components/schemas/datetime'
        CorrespondenceContent:
          $ref: '#/components/schemas/text'
        CorrespondenceTemplate:
          $ref: '#/components/schemas/text'
        CorrespondenceCommunicationMethod:
          $ref: '#/components/schemas/correspondencecommunicationmethodtypevalues'
        CorrespondenceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        CorrespondenceMedium:
          $ref: '#/components/schemas/correspondencemediumtypevalues'
      description: 'Reference to negotiation/confirmation messages sent to involved parties, includes internal and external legal/law enforcement authorities'
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: "Reference to documents referenced and generated through the case Document _x000D_\n|Document (https://www.iso20022.org/standardsrepository/type/Document)|Standard|ISO20022 BM ()"
    Negotiation:
      type: object
      properties:
        AccountRecoveryGuidelines:
          $ref: '#/components/schemas/ruleset'
        CorrespondenceReference:
          $ref: '#/components/schemas/correspondence'
        CorrespondenceContent:
          $ref: '#/components/schemas/text'
        DocumentReference:
          $ref: '#/components/schemas/document'
        DocumentContent:
          $ref: '#/components/schemas/text'
        AccountRecoveryCaseNegotiationTaskRecord:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    casetypevalues:
      enum:
        - Card
        - Loan
        - Fraud
        - Payment
        - Market
        - Security
        - Other
      type: string
      description: "This is the type of recovery case (e.g. lapsed payment, collateral revaluation, credit) ||\r\n|"
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: "Refers to any new/replacement product established during the recovery/restructuring process ||\r\n|"
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: "The assigned customer relationship manager or unit for the case ||\r\n|"
    branch:
      type: object
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/identifier'
        BranchAddress:
          $ref: '#/components/schemas/address'
        BranchName:
          $ref: '#/components/schemas/name'
      description: ''
    branchlocation:
      type: object
      properties:
        BranchReference:
          $ref: '#/components/schemas/branch'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: "Location where the business is booked for reporting purposes ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Details the involved party's role/association with the account/account holder Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
        - IndividualAccount
        - JointAccount
        - LiquidationAccount
        - ProvisionAccount
        - PartnershipAccount
        - InvestmentAccount
      type: string
      description: 'The type of account being recovered (e.g. checking, mortgage) OBExternalAccountSubType1Code| ()|Standard|UK Open Banking ()'
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The currency for the account CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    limittypevalues:
      enum:
        - Multilateral
        - Bilateral
        - Netbilateral
        - Indirectbilateral
        - Global
        - Mandatorybilateral
        - Discretionarybilateral
        - Directdebit
        - Singlecustomerdirectdebit
        - Singlefinancialinstitutiondirectdebit
        - Totaldailycustomerdirectdebit
        - Totaldailyfinancialinstitutiondirectdebit
        - Autocollateralisation
        - Unsecuredcredit
        - Externalguarantee
      type: string
      description: 'Limits that are applied to the account  (e.g. transaction credit/debit, netting, position) LimitTypeCode|LimitTypeCode (https://www.iso20022.org/standardsrepository/type/LimitTypeCode)|Standard|ISO20022 BM ()'
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: 'Amount of money of the limit, expressed in a currency. (ISO20022)'
    limitstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Requested
      type: string
      description: ">\r\n* `Enabled` - Limit is currently in effect.\r\n* `Disabled` - Limit is not currently in effect.\r\n* `Deleted` - Limit has been deleted or suspended.\r\n* `Requested` - Limit has been asked for and is not yet enabled.\r\n"
    limitstatus:
      type: object
      properties:
        LimitStatus:
          $ref: '#/components/schemas/status'
        LimitStatusType:
          $ref: '#/components/schemas/limitstatustypevalues'
      description: Current status of the limit.
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: Specifies that the limit is a percentage of a related amount. (ISO20022)
    frequencytypevalues:
      enum:
        - Annual
        - Monthly
        - Quarterly
        - Semiannual
        - Weekly
        - Daily
        - Adhoc
        - Intraday
        - Overnight
        - Tendays
        - Fortnightly
        - Triggeredbymovement
        - Never
        - Rate
        - Oncreditevent
        - Upfront
        - Onexpiry
        - Hourly
      type: string
      description: ">\r\n* `Annual` - Event takes place every year or once a year.\r\n* `Monthly` - Event takes place every month or once a month.\r\n* `Quarterly` - Event takes place every three months or four times a year.\r\n* `Semiannual` - Event takes place every six months or two times a year.\r\n* `Weekly` - Event takes place once a week.\r\n* `Daily` - Event takes place every day.\r\n* `Adhoc` - Event takes place on request or as necessary.\r\n* `Intraday` - Event takes place several times a day.\r\n* `Overnight` - Event takes place overnight.\r\n* `Tendays` - Event takes place every ten business days.\r\n* `Fortnightly` - Event takes place every two weeks.\r\n* `Triggeredbymovement` - Event takes place at the end of the day if there was a movement on the account, otherwise nothing is sent that day.\r\n* `Never` - Event does never take place.\r\n* `Rate` - Event takes place based on a change of a rate.\r\n* `Oncreditevent` - Event occurs due to a credit event occurring for an issuer.\r\n* `Upfront` - Event that takes place at the initiation of a trade or agreement.\r\n* `Onexpiry` - Event occurs on expiry of a financial contract.\r\n* `Hourly` - Event takes place every hours.\r\n"
    frequency:
      type: object
      properties:
        FrequencyCode:
          $ref: '#/components/schemas/frequencytypevalues'
        FrequencyName:
          $ref: '#/components/schemas/name'
        FrequencyDefinition:
          $ref: '#/components/schemas/text'
      description: Specifies the periodicity linked to a limit for example the periodicity can indicate that the limit can be reached daily or monthly. (ISO20022)
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittypevalues'
        LimitCurrency:
          $ref: '#/components/schemas/currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/amount'
        LimitStatus:
          $ref: '#/components/schemas/limitstatus'
        LimitRate:
          $ref: '#/components/schemas/rate'
        LimitFrequency:
          $ref: '#/components/schemas/frequency'
        LimitIdentification:
          $ref: '#/components/schemas/identifier'
        LimitStartDatetime:
          $ref: '#/components/schemas/datetime'
        LimitCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        LimitAmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Current position against limits Limit|Limit (https://www.iso20022.org/standardsrepository/type/Limit)|Standard|ISO20022 (https://www.iso20022.org/)
    pointofaccesstypevalues:
      enum:
        - ChannelAccess
        - ProductAndServiceAccess
        - DeviceAccess
        - APIAccess
      type: string
      description: ">\r\n* `ChannelAccess` - \r\n* `ProductAndServiceAccess` - \r\n* `DeviceAccess` - \r\n* `APIAccess` - \r\n"
    authenticationmethodtypevalues:
      enum:
        - Onlinepin
        - Offlinepin
        - Signaturecapture
        - Password
        - Biometry
        - Cscverification
        - Cryptogramverification
        - Unknownmethod
        - Bypass
        - Papersignature
        - Manualverification
        - Merchantauthentication
        - Securecertificate
        - Securenocertificate
        - Securedchannel
        - Billingaddressverification
        - Cardholderidentificationdata
        - Passiveauthentication
        - Secureelectroniccommerce
        - Shippingaddressverification
        - Tokenauthentication
        - Paymenttoken
        - Authenticationtoken
        - Mobile
        - Other
        - Addressdigits
        - Alienregistrationnumber
        - Arqcverification
        - Birthdate
        - Cardholdername
        - Cityofbirth
        - Customeridentification
        - Driveridentification
        - Driverlicensenumber
        - Email
        - Employeeidentificationnumber
        - Employeridentificationnumber
        - Identitycardnumber
        - Onetimepassword
        - Othercardholderidentification
        - Othercryptogram
        - Passportnumber
        - Postalcode
        - Shippingaddressfrom
        - Shippingaddressto
        - Cardholderaddress
        - Nonvisiblecsc
        - Othernational
        - Otherprivate
        - Placeofbirth
        - Socialsecuritynumber
        - Taxidentificationnumber
        - Accountdigitalsignature
        - Arpcverification
        - ATC
        - Offlinebiographics
        - Offlinebiometrics
        - Offlinedataauthentication
        - Offlinedigitisedsignatureanalysis
        - Offlinepinencrypted
        - Offlinepininclear
        - Onlinebiographics
        - Phonehome
        - Phonework
        - Pkisignature
        - Qualifiedcertificate
        - Threeds
        - Cardholdercertificateserialnumber
        - Acceptorcertificateserialnumber
        - Nationalidentifier
      type: string
      description: ">\r\n* `Onlinepin` - On-line PIN authentication (Personal Identification Number).\r\n* `Offlinepin` - Off-line PIN authentication (Personal Identification Number).\r\n* `Signaturecapture` - Electronic signature capture (handwritten signature).\r\n* `Password` - Authentication by a password.\r\n* `Biometry` - Biometric authentication of the cardholder.\r\n* `Cscverification` - Verification of Card Security Code.\r\n* `Cryptogramverification` - Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\r\n* `Unknownmethod` - Authentication method is performed unknown.\r\n* `Bypass` - Authentication bypassed by the merchant.\r\n* `Papersignature` - Handwritten paper signature.\r\n* `Manualverification` - Manual verification, for example passport or drivers license.\r\n* `Merchantauthentication` - Merchant-related authentication.\r\n* `Securecertificate` - Electronic commerce transaction secured with the X.509 certificate of a customer.\r\n* `Securenocertificate` - Secure electronic transaction without cardholder certificate.\r\n* `Securedchannel` - Channel-encrypted transaction.\r\n* `Billingaddressverification` - Cardholder billing address verification.\r\n* `Cardholderidentificationdata` - Cardholder data provided for verification, for instance social security number, driver license number, passport number.\r\n* `Passiveauthentication` - Authentication based on statistical cardholder behaviour.\r\n* `Secureelectroniccommerce` - Authentication performed during a secure electronic commerce transaction.\r\n* `Shippingaddressverification` - Cardholder shipping address verification.\r\n* `Tokenauthentication` - Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\r\n* `Paymenttoken` - Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\r\n* `Authenticationtoken` - A token is used to verify an already performed authentication.\r\n* `Mobile` - Customer mobile device.\r\n* `Other` - Other customer authentication.\r\n* `Addressdigits` - Digits of the address.\r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Arqcverification` - Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\r\n* `Birthdate` - Date of birth of a person.\r\n* `Cardholdername` - Name of cardholder\r\n* `Cityofbirth` - City of birth to authenticate a person.\r\n* `Customeridentification` - Customer number used as a mechanism of authentication.\r\n* `Driveridentification` - Identification of a driver in a fleet of vehicles.\r\n* `Driverlicensenumber` - Number assigned by a driving license authority to a person driving a car.\r\n* `Email` - Electronic mail address\r\n* `Employeeidentificationnumber` - Number assigned to an employee by an employer.\r\n* `Employeridentificationnumber` - Number assigned to an employer by a registration authority.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Onetimepassword` - Verification of a one-time password provided by the issuer.\r\n* `Othercardholderidentification` - Other cardholder data provided for identification.\r\n* `Othercryptogram` - Verification of a cryptogram generated by a non-card form factor.\r\n* `Passportnumber` - Number assigned by a passport authority to a passport.\r\n* `Postalcode` - Verification based on digits of the postal code.\r\n* `Shippingaddressfrom` - Shipping address from verification.\r\n* `Shippingaddressto` - Shipping address to verification\r\n* `Cardholderaddress` - Verification whether the address corresponds to the cardholder's one.\r\n* `Nonvisiblecsc` - Non visible Card Security Code.\r\n* `Othernational` - Other type of verification defined at national level.\r\n* `Otherprivate` - Other type of verification defined at private level\r\n* `Placeofbirth` - Place of birth of a person.\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Accountdigitalsignature` - Account-based digital signature authentication.\r\n* `Arpcverification` - Response Card Cryptogram (ARPC)  verification.\r\n* `ATC` - Application Transaction Counter\r\n* `Offlinebiographics` - Biographics authentication in an offline mode.\r\n* `Offlinebiometrics` - Biometrics authentication in an offline mode\r\n* `Offlinedataauthentication` - Authentication of data in an offline mode\r\n* `Offlinedigitisedsignatureanalysis` - Analysis of signature transmitted offline\r\n* `Offlinepinencrypted` - PIN generated offline and transmitted encrypted\r\n* `Offlinepininclear` - PIN generated offline and transmitted in clear\r\n* `Onlinebiographics` - Biographics authentication in an online mode.\r\n* `Phonehome` - Customer home phone number.\r\n* `Phonework` - Customer work phone number\r\n* `Pkisignature` - PKI (Public Key Infrastructure) based digital signature\r\n* `Qualifiedcertificate` - QualifiedCertificate\r\n* `Threeds` - Authentication performed during a secure electronic commerce transaction.\r\n* `Cardholdercertificateserialnumber` - Serial number of the cardholder's certificate.\r\n* `Acceptorcertificateserialnumber` - Serial number of the acceptor's certificate.\r\n* `Nationalidentifier` - Nationally assigned identifier.\r\n"
    accessarrangement:
      type: object
      properties:
        PointOfAccessType:
          $ref: '#/components/schemas/pointofaccesstypevalues'
        AccessCredentialMethod:
          $ref: '#/components/schemas/authenticationmethodtypevalues'
      description: "Any additional parties given access to the account  (allowed roles and actions against the product) ||\r\n|"
    profile:
      type: object
      properties:
        Profile:
          type: string
          description: A brief description of the characteristics of something or someone. (Business Dictionary)
          format: class
      description: "Lists the customer's collateral asset allocation status against different loan products known to the bank ||\r\n|"
    collateraltypevalues:
      enum:
        - Letterofcredit
        - Cash
        - Securities
        - Physicalentities
        - Insurance
        - Stockcertificate
        - Bond
        - Bankguarantee
        - Other
        - Commodity
        - Automobile
        - Industrialvehicle
        - Commercialtruck
        - Railvehicle
        - Nauticalcommercialvehicle
        - Nauticalleisurevehicle
        - Aeroplane
        - Machinetool
        - Industrialequipment
        - Officeequipment
        - Itequipment
        - Medicalequipment
        - Energyrelatedequipment
        - Commercialbuilding
      type: string
      description: 'The type of asset (e.g. building, machinery, inventory, financial instrument, art) CollateralTypeCode|CollateralTypeCode (https://www.iso20022.org/standardsrepository/type/CollateralTypeCode)|Standard|ISO20022 BM ()'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: "Work documentation, forms and schedules produced and referenced during the case ||\r\n|"
    AccountRecoveryProcedure:
      type: object
      properties:
        AccountRecoveryCaseType:
          $ref: '#/components/schemas/casetypevalues'
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        LinkedProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        AccountNumber:
          type: string
          description: Reference to the underlying account for the product instance being recovered
          format: number
        BankBranchLocationReference:
          $ref: '#/components/schemas/branchlocation'
        DateType:
          $ref: '#/components/schemas/datetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
        InvolvedPartyReference:
          $ref: '#/components/schemas/party'
        InvolvedPartyObligationEntitlement:
          $ref: '#/components/schemas/arrangement'
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
        AccountLimitType:
          $ref: '#/components/schemas/limittypevalues'
        AccountLimit:
          $ref: '#/components/schemas/limitarrangement'
        AllowedAccess:
          $ref: '#/components/schemas/accessarrangement'
        TaxReference:
          $ref: '#/components/schemas/identifier'
        AccountStatus:
          $ref: '#/components/schemas/status'
        CollateralAssetAllocationProfile:
          $ref: '#/components/schemas/profile'
        CollateralType:
          $ref: '#/components/schemas/collateraltypevalues'
        CollateralAssetDescription:
          $ref: '#/components/schemas/text'
        TransactionRecord:
          $ref: '#/components/schemas/transaction'
        AccountRecoveryCaseWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentReference:
          $ref: '#/components/schemas/document'
        CustomerCommentary:
          type: string
          description: Record of customer correspondence/feedback associated with the account recovery process
          format: object
        AccountRecoveryCaseResolutionSchedule:
          $ref: '#/components/schemas/schedule'
        AccountRecoveryCaseStatus:
          $ref: '#/components/schemas/status'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Account Recovery. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    AccountRecoveryProcedure:
      description: AccountRecoveryProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountRecoveryProcedure'
    Assessment:
      description: Assessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Assessment'
    Writedown:
      description: Writedown
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Writedown'
    Planning:
      description: Planning
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Planning'
    Negotiation:
      description: Negotiation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Negotiation'
    Restructuring:
      description: Restructuring
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restructuring'
  parameters:
    accountrecoveryid:
      name: accountrecoveryid
      in: path
      required: true
      style: simple
      schema:
        type: string
    assessmentid:
      name: assessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    writedownid:
      name: writedownid
      in: path
      required: true
      style: simple
      schema:
        type: string
    planningid:
      name: planningid
      in: path
      required: true
      style: simple
      schema:
        type: string
    negotiationid:
      name: negotiationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    restructuringid:
      name: restructuringid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    AccountRecoveryProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountRecoveryProcedure'
      required: true
    Assessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Assessment'
      required: true
    Writedown:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Writedown'
      required: true
    Planning:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Planning'
      required: true
    Negotiation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Negotiation'
      required: true
    Restructuring:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restructuring'
      required: true