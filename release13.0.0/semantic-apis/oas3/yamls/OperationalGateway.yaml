openapi: 3.0.1
info:
  title: Operational Gateway
  description: 'This Service Domain operates production information exchanges with external parties for non-financial messages/transactions. It may employ a broad range of channels, media and technologies as needed to support the different requirements of any particular third party interface'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/OperationalGateway/13.0.0
paths:
  '/OperationalGateway/{operationalgatewayid}/Control':
    put:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Control Operational Gateway Operating Session
      description: Control Operational Gateway Operating Session
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalGatewayOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/Exchange':
    put:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Exchange Operational Gateway Operating Session
      description: Exchange Operational Gateway Operating Session
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalGatewayOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/Execute':
    put:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Execute Operational Gateway Operating Session
      description: Execute Operational Gateway Operating Session
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalGatewayOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /OperationalGateway/Initiate:
    post:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Initiate Operational Gateway Operating Session
      description: Initiate Operational Gateway Operating Session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/OperationalGatewayOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/Notify':
    get:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Notify Operational Gateway Operating Session
      description: Notify Operational Gateway Operating Session
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/Request':
    put:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Request Operational Gateway Operating Session
      description: Request Operational Gateway Operating Session
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalGatewayOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/Retrieve':
    get:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Retrieve Operational Gateway Operating Session
      description: Retrieve Operational Gateway Operating Session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/Update':
    put:
      tags:
        - CR - OperationalGatewayOperatingSession
      summary: Update Operational Gateway Operating Session
      description: Update Operational Gateway Operating Session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalGatewayOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/OperationalGatewayOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/InboundMessage/{inboundmessageid}/Exchange':
    put:
      tags:
        - BQ - InboundMessage
      summary: Exchange Inbound Message Function
      description: Exchange Inbound Message Function
      operationId: ExchangeInboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/inboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/InboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/InboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundMessage/{outboundmessageid}/Exchange':
    put:
      tags:
        - BQ - OutboundMessage
      summary: Exchange Outbound Message Function
      description: Exchange Outbound Message Function
      operationId: ExchangeOutboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/OutboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundWithResponse/{outboundwithresponseid}/Exchange':
    put:
      tags:
        - BQ - OutboundWithResponse
      summary: Exchange Outbound With Response Function
      description: Exchange Outbound With Response Function
      operationId: ExchangeOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundWithResponse'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/InboundMessage/{inboundmessageid}/Execute':
    put:
      tags:
        - BQ - InboundMessage
      summary: Execute Inbound Message Function
      description: Execute Inbound Message Function
      operationId: ExecuteInboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/inboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/InboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/InboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundMessage/{outboundmessageid}/Execute':
    put:
      tags:
        - BQ - OutboundMessage
      summary: Execute Outbound Message Function
      description: Execute Outbound Message Function
      operationId: ExecuteOutboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/OutboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundWithResponse/{outboundwithresponseid}/Execute':
    put:
      tags:
        - BQ - OutboundWithResponse
      summary: Execute Outbound With Response Function
      description: Execute Outbound With Response Function
      operationId: ExecuteOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundWithResponse'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/InboundMessage/Initiate':
    post:
      tags:
        - BQ - InboundMessage
      summary: Initiate Inbound Message Function
      description: Initiate Inbound Message Function
      operationId: InitiateInboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/InboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/InboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundMessage/Initiate':
    post:
      tags:
        - BQ - OutboundMessage
      summary: Initiate Outbound Message Function
      description: Initiate Outbound Message Function
      operationId: InitiateOutboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/OutboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundWithResponse/Initiate':
    post:
      tags:
        - BQ - OutboundWithResponse
      summary: Initiate Outbound With Response Function
      description: Initiate Outbound With Response Function
      operationId: InitiateOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundWithResponse'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/InboundMessage/{inboundmessageid}/Notify':
    get:
      tags:
        - BQ - InboundMessage
      summary: Notify Inbound Message Function
      description: Notify Inbound Message Function
      operationId: NotifyInboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/inboundmessageid'
      responses:
        '200':
          $ref: '#/components/responses/InboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundMessage/{outboundmessageid}/Notify':
    get:
      tags:
        - BQ - OutboundMessage
      summary: Notify Outbound Message Function
      description: Notify Outbound Message Function
      operationId: NotifyOutboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundmessageid'
      responses:
        '200':
          $ref: '#/components/responses/OutboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundWithResponse/{outboundwithresponseid}/Notify':
    get:
      tags:
        - BQ - OutboundWithResponse
      summary: Notify Outbound With Response Function
      description: Notify Outbound With Response Function
      operationId: NotifyOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/InboundMessage/{inboundmessageid}/Request':
    put:
      tags:
        - BQ - InboundMessage
      summary: Request Inbound Message Function
      description: Request Inbound Message Function
      operationId: RequestInboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/inboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/InboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/InboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundMessage/{outboundmessageid}/Request':
    put:
      tags:
        - BQ - OutboundMessage
      summary: Request Outbound Message Function
      description: Request Outbound Message Function
      operationId: RequestOutboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/OutboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundWithResponse/{outboundwithresponseid}/Request':
    put:
      tags:
        - BQ - OutboundWithResponse
      summary: Request Outbound With Response Function
      description: Request Outbound With Response Function
      operationId: RequestOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundWithResponse'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/InboundMessage/{inboundmessageid}/Retrieve':
    get:
      tags:
        - BQ - InboundMessage
      summary: Retrieve Inbound Message Function
      description: Retrieve Inbound Message Function
      operationId: RetrieveInboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/inboundmessageid'
      responses:
        '200':
          $ref: '#/components/responses/InboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundMessage/{outboundmessageid}/Retrieve':
    get:
      tags:
        - BQ - OutboundMessage
      summary: Retrieve Outbound Message Function
      description: Retrieve Outbound Message Function
      operationId: RetrieveOutboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundmessageid'
      responses:
        '200':
          $ref: '#/components/responses/OutboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundWithResponse/{outboundwithresponseid}/Retrieve':
    get:
      tags:
        - BQ - OutboundWithResponse
      summary: Retrieve Outbound With Response Function
      description: Retrieve Outbound With Response Function
      operationId: RetrieveOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/InboundMessage/{inboundmessageid}/Update':
    put:
      tags:
        - BQ - InboundMessage
      summary: Update Inbound Message Function
      description: Update Inbound Message Function
      operationId: UpdateInboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/inboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/InboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/InboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundMessage/{outboundmessageid}/Update':
    put:
      tags:
        - BQ - OutboundMessage
      summary: Update Outbound Message Function
      description: Update Outbound Message Function
      operationId: UpdateOutboundMessage
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundmessageid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundMessage'
      responses:
        '200':
          $ref: '#/components/responses/OutboundMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/OperationalGateway/{operationalgatewayid}/OutboundWithResponse/{outboundwithresponseid}/Update':
    put:
      tags:
        - BQ - OutboundWithResponse
      summary: Update Outbound With Response Function
      description: Update Outbound With Response Function
      operationId: UpdateOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/operationalgatewayid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundWithResponse'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the party who provides the services of Operational Gateway Operating Session ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Operational Gateway Operating Session Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation and or tasks that need to be completed prior to the invocation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule according to which the service provider will operate the Operational Gateway Operating Session ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Outbound Message Function specific Business Service
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The time the session was active
    sessiontypevalues:
      enum:
        - ContactHandlingSession
        - CustomerDialogueSession
        - ChannelOperatingSession
        - GatewayOperatingSession
        - SwitchOperatingSession
        - DeviceOperatingSession
        - InterbankTransactionOperatingSession
        - CorrespondenceOperatingSession
        - InteractiveHelpOperatingSession
        - ACHOperatingSession
      type: string
      description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - \r\n"
    sessiontype:
      type: object
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/name'
        SessionType:
          $ref: '#/components/schemas/sessiontypevalues'
      description: "A Classification value that distinguishes between the type of operations within Operational Gateway Operating Session ||\r\n|"
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
      description: "An unique reference to an item or an occurrence of Operational Gateway Operating Session ||\r\n|"
    function:
      type: object
      properties:
        Function:
          type: string
          description: "A kind of action.\n\nFunctions as Behaviour Qualifier: The collection of operational services/functions offered by the operational facility."
          format: class
      description: Reference to Outbound Message Function
    OutboundMessage:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        OperationalGatewayOperatingSessionReference:
          $ref: '#/components/schemas/session'
        OutboundMessageFunctionReference:
          $ref: '#/components/schemas/function'
        OutboundMessageFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Outbound Message Function for doing Outbound Message Function
    OutboundWithResponse:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        OperationalGatewayOperatingSessionReference:
          $ref: '#/components/schemas/session'
        OutboundWithResponseFunctionReference:
          $ref: '#/components/schemas/function'
        OutboundWithResponseFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Outbound Message Function for doing Outbound Message Function
    InboundMessage:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        OperationalGatewayOperatingSessionReference:
          $ref: '#/components/schemas/session'
        InboundMessageFunctionReference:
          $ref: '#/components/schemas/function'
        InboundMessageFunctionType:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Outbound Message Function for doing Outbound Message Function
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    event:
      type: object
      properties:
        EventType:
          $ref: '#/components/schemas/text'
        EventDateTime:
          $ref: '#/components/schemas/datetime'
        EventDescription:
          $ref: '#/components/schemas/text'
        EventSource:
          type: string
          description: ''
          format: object
        EventLocation:
          $ref: '#/components/schemas/location'
        EventAction:
          $ref: '#/components/schemas/action'
        EventStatus:
          $ref: '#/components/schemas/status'
        EventValue:
          $ref: '#/components/schemas/value'
        EventValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        EventIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    OperationalGatewayOutcome:
      type: object
      properties:
        OperationalGatewayIncident:
          $ref: '#/components/schemas/event'
        OperationalGatewayProvision:
          $ref: '#/components/schemas/text'
      description: An operational service or function supported within the Outbound Message Function for doing Outbound Message Function
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: "Reference to the log of (usage) ativities/events  of Operational Gateway Operating Session ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: "A Classification value that distinguishes between the type of services within Operational Gateway Operating Session ||\r\n|"
    systemconfigurationoption:
      type: object
      properties:
        SystemConfigurationOption:
          type: string
          description: "Options for configuring the system or the function/feature of system.\n"
          format: class
      description: "The configuration of Operational Gateway Operating Session ||\r\n|"
    OperationalGatewayOperatingSession:
      type: object
      properties:
        OperationalGatewayOperatingSessionSchedule:
          $ref: '#/components/schemas/schedule'
        OperationalGatewayOperatingSessionStatus:
          $ref: '#/components/schemas/status'
        OperationalGatewayOperatingSessionUsageLog:
          $ref: '#/components/schemas/log'
        OperationalGatewayOperatingSessionAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        OperationalGatewayOperatingSessionServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        OperationalGatewayOperatingSessionType:
          $ref: '#/components/schemas/sessiontype'
        OperationalGatewayOperatingSessionServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        OperationalGatewayOperatingSessionServiceType:
          $ref: '#/components/schemas/servicetype'
        OperationalGatewayOperatingSessionServiceConfiguration:
          $ref: '#/components/schemas/systemconfigurationoption'
        OperationalGatewayOperatingSessionReference:
          $ref: '#/components/schemas/session'
      description: 'Operate equipment and/or a largely automated facility within Operational Gateway. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    OperationalGatewayOperatingSession:
      description: OperationalGatewayOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalGatewayOperatingSession'
    InboundMessage:
      description: InboundMessage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InboundMessage'
    OutboundMessage:
      description: OutboundMessage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutboundMessage'
    OutboundWithResponse:
      description: OutboundWithResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutboundWithResponse'
  parameters:
    operationalgatewayid:
      name: operationalgatewayid
      in: path
      required: true
      style: simple
      schema:
        type: string
    inboundmessageid:
      name: inboundmessageid
      in: path
      required: true
      style: simple
      schema:
        type: string
    outboundmessageid:
      name: outboundmessageid
      in: path
      required: true
      style: simple
      schema:
        type: string
    outboundwithresponseid:
      name: outboundwithresponseid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    OperationalGatewayOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalGatewayOperatingSession'
      required: true
    InboundMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InboundMessage'
      required: true
    OutboundMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutboundMessage'
      required: true
    OutboundWithResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutboundWithResponse'
      required: true