openapi: 3.0.1
info:
  title: Letter of Credit
  description: This Service Domain handles the pricing and issuance of letters of credit to its corporate customers in support of their international trading requirements
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/LetterofCredit/13.0.0
paths:
  '/LetterofCredit/{letterofcreditid}/Control':
    put:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Control Letter Of Credit Transaction
      description: Control Letter Of Credit Transaction
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterOfCreditTransaction'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/Exchange':
    put:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Exchange Letter Of Credit Transaction
      description: Exchange Letter Of Credit Transaction
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterOfCreditTransaction'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/Execute':
    put:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Execute Letter Of Credit Transaction
      description: Execute Letter Of Credit Transaction
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterOfCreditTransaction'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /LetterofCredit/Initiate:
    post:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Initiate Letter Of Credit Transaction
      description: Initiate Letter Of Credit Transaction
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/LetterOfCreditTransaction'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/Notify':
    get:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Notify Letter Of Credit Transaction
      description: Notify Letter Of Credit Transaction
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/Request':
    put:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Request Letter Of Credit Transaction
      description: Request Letter Of Credit Transaction
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterOfCreditTransaction'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/Retrieve':
    get:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Retrieve Letter Of Credit Transaction
      description: Retrieve Letter Of Credit Transaction
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/Update':
    put:
      tags:
        - CR - LetterOfCreditTransaction
      summary: Update Letter Of Credit Transaction
      description: Update Letter Of Credit Transaction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterOfCreditTransaction'
      responses:
        '200':
          $ref: '#/components/responses/LetterOfCreditTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerCollateralAllocation/{customercollateralallocationid}/Exchange':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Exchange Customer Collateral Allocation Task
      description: Exchange Customer Collateral Allocation Task
      operationId: ExchangeCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerPayment/{customerpaymentid}/Exchange':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Exchange Customer Payment Task
      description: Exchange Customer Payment Task
      operationId: ExchangeCustomerPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDefinitionandPricing/{letterofcreditdefinitionandpricingid}/Exchange':
    put:
      tags:
        - BQ - LetterofCreditDefinitionandPricing
      summary: Exchange Letter of Credit Definition and Pricing Task
      description: Exchange Letter of Credit Definition and Pricing Task
      operationId: ExchangeLetterofCreditDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditIssuance/{letterofcreditissuanceid}/Exchange':
    put:
      tags:
        - BQ - LetterofCreditIssuance
      summary: Exchange Letter of Credit Issuance and Booking Task
      description: Exchange Letter of Credit Issuance and Booking Task
      operationId: ExchangeLetterofCreditIssuance
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditissuanceid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditIssuance'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditIssuance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDemandPayment/{letterofcreditdemandpaymentid}/Exchange':
    put:
      tags:
        - BQ - LetterofCreditDemandPayment
      summary: Exchange Letter of Credit Payout Task
      description: Exchange Letter of Credit Payout Task
      operationId: ExchangeLetterofCreditDemandPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdemandpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDemandPayment'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDemandPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/SellerObligationConfirmation/{sellerobligationconfirmationid}/Exchange':
    put:
      tags:
        - BQ - SellerObligationConfirmation
      summary: Exchange Seller Obligation Confirmation Task
      description: Exchange Seller Obligation Confirmation Task
      operationId: ExchangeSellerObligationConfirmation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/sellerobligationconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/SellerObligationConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/SellerObligationConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerCollateralAllocation/{customercollateralallocationid}/Execute':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Execute Customer Collateral Allocation Task
      description: Execute Customer Collateral Allocation Task
      operationId: ExecuteCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerPayment/{customerpaymentid}/Execute':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Execute Customer Payment Task
      description: Execute Customer Payment Task
      operationId: ExecuteCustomerPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDefinitionandPricing/{letterofcreditdefinitionandpricingid}/Execute':
    put:
      tags:
        - BQ - LetterofCreditDefinitionandPricing
      summary: Execute Letter of Credit Definition and Pricing Task
      description: Execute Letter of Credit Definition and Pricing Task
      operationId: ExecuteLetterofCreditDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditIssuance/{letterofcreditissuanceid}/Execute':
    put:
      tags:
        - BQ - LetterofCreditIssuance
      summary: Execute Letter of Credit Issuance and Booking Task
      description: Execute Letter of Credit Issuance and Booking Task
      operationId: ExecuteLetterofCreditIssuance
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditissuanceid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditIssuance'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditIssuance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDemandPayment/{letterofcreditdemandpaymentid}/Execute':
    put:
      tags:
        - BQ - LetterofCreditDemandPayment
      summary: Execute Letter of Credit Payout Task
      description: Execute Letter of Credit Payout Task
      operationId: ExecuteLetterofCreditDemandPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdemandpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDemandPayment'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDemandPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/SellerObligationConfirmation/{sellerobligationconfirmationid}/Execute':
    put:
      tags:
        - BQ - SellerObligationConfirmation
      summary: Execute Seller Obligation Confirmation Task
      description: Execute Seller Obligation Confirmation Task
      operationId: ExecuteSellerObligationConfirmation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/sellerobligationconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/SellerObligationConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/SellerObligationConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerCollateralAllocation/Initiate':
    post:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Initiate Customer Collateral Allocation Task
      description: Initiate Customer Collateral Allocation Task
      operationId: InitiateCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerPayment/Initiate':
    post:
      tags:
        - BQ - CustomerPayment
      summary: Initiate Customer Payment Task
      description: Initiate Customer Payment Task
      operationId: InitiateCustomerPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDefinitionandPricing/Initiate':
    post:
      tags:
        - BQ - LetterofCreditDefinitionandPricing
      summary: Initiate Letter of Credit Definition and Pricing Task
      description: Initiate Letter of Credit Definition and Pricing Task
      operationId: InitiateLetterofCreditDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditIssuance/Initiate':
    post:
      tags:
        - BQ - LetterofCreditIssuance
      summary: Initiate Letter of Credit Issuance and Booking Task
      description: Initiate Letter of Credit Issuance and Booking Task
      operationId: InitiateLetterofCreditIssuance
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditIssuance'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditIssuance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDemandPayment/Initiate':
    post:
      tags:
        - BQ - LetterofCreditDemandPayment
      summary: Initiate Letter of Credit Payout Task
      description: Initiate Letter of Credit Payout Task
      operationId: InitiateLetterofCreditDemandPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDemandPayment'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDemandPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/SellerObligationConfirmation/Initiate':
    post:
      tags:
        - BQ - SellerObligationConfirmation
      summary: Initiate Seller Obligation Confirmation Task
      description: Initiate Seller Obligation Confirmation Task
      operationId: InitiateSellerObligationConfirmation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
      requestBody:
        $ref: '#/components/requestBodies/SellerObligationConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/SellerObligationConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerCollateralAllocation/{customercollateralallocationid}/Notify':
    get:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Notify Customer Collateral Allocation Task
      description: Notify Customer Collateral Allocation Task
      operationId: NotifyCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerPayment/{customerpaymentid}/Notify':
    get:
      tags:
        - BQ - CustomerPayment
      summary: Notify Customer Payment Task
      description: Notify Customer Payment Task
      operationId: NotifyCustomerPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customerpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDefinitionandPricing/{letterofcreditdefinitionandpricingid}/Notify':
    get:
      tags:
        - BQ - LetterofCreditDefinitionandPricing
      summary: Notify Letter of Credit Definition and Pricing Task
      description: Notify Letter of Credit Definition and Pricing Task
      operationId: NotifyLetterofCreditDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdefinitionandpricingid'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditIssuance/{letterofcreditissuanceid}/Notify':
    get:
      tags:
        - BQ - LetterofCreditIssuance
      summary: Notify Letter of Credit Issuance and Booking Task
      description: Notify Letter of Credit Issuance and Booking Task
      operationId: NotifyLetterofCreditIssuance
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditissuanceid'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditIssuance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDemandPayment/{letterofcreditdemandpaymentid}/Notify':
    get:
      tags:
        - BQ - LetterofCreditDemandPayment
      summary: Notify Letter of Credit Payout Task
      description: Notify Letter of Credit Payout Task
      operationId: NotifyLetterofCreditDemandPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdemandpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDemandPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/SellerObligationConfirmation/{sellerobligationconfirmationid}/Notify':
    get:
      tags:
        - BQ - SellerObligationConfirmation
      summary: Notify Seller Obligation Confirmation Task
      description: Notify Seller Obligation Confirmation Task
      operationId: NotifySellerObligationConfirmation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/sellerobligationconfirmationid'
      responses:
        '200':
          $ref: '#/components/responses/SellerObligationConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerCollateralAllocation/{customercollateralallocationid}/Request':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Request Customer Collateral Allocation Task
      description: Request Customer Collateral Allocation Task
      operationId: RequestCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerPayment/{customerpaymentid}/Request':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Request Customer Payment Task
      description: Request Customer Payment Task
      operationId: RequestCustomerPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDefinitionandPricing/{letterofcreditdefinitionandpricingid}/Request':
    put:
      tags:
        - BQ - LetterofCreditDefinitionandPricing
      summary: Request Letter of Credit Definition and Pricing Task
      description: Request Letter of Credit Definition and Pricing Task
      operationId: RequestLetterofCreditDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditIssuance/{letterofcreditissuanceid}/Request':
    put:
      tags:
        - BQ - LetterofCreditIssuance
      summary: Request Letter of Credit Issuance and Booking Task
      description: Request Letter of Credit Issuance and Booking Task
      operationId: RequestLetterofCreditIssuance
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditissuanceid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditIssuance'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditIssuance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDemandPayment/{letterofcreditdemandpaymentid}/Request':
    put:
      tags:
        - BQ - LetterofCreditDemandPayment
      summary: Request Letter of Credit Payout Task
      description: Request Letter of Credit Payout Task
      operationId: RequestLetterofCreditDemandPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdemandpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDemandPayment'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDemandPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/SellerObligationConfirmation/{sellerobligationconfirmationid}/Request':
    put:
      tags:
        - BQ - SellerObligationConfirmation
      summary: Request Seller Obligation Confirmation Task
      description: Request Seller Obligation Confirmation Task
      operationId: RequestSellerObligationConfirmation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/sellerobligationconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/SellerObligationConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/SellerObligationConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerCollateralAllocation/{customercollateralallocationid}/Retrieve':
    get:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Retrieve Customer Collateral Allocation Task
      description: Retrieve Customer Collateral Allocation Task
      operationId: RetrieveCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerPayment/{customerpaymentid}/Retrieve':
    get:
      tags:
        - BQ - CustomerPayment
      summary: Retrieve Customer Payment Task
      description: Retrieve Customer Payment Task
      operationId: RetrieveCustomerPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customerpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDefinitionandPricing/{letterofcreditdefinitionandpricingid}/Retrieve':
    get:
      tags:
        - BQ - LetterofCreditDefinitionandPricing
      summary: Retrieve Letter of Credit Definition and Pricing Task
      description: Retrieve Letter of Credit Definition and Pricing Task
      operationId: RetrieveLetterofCreditDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdefinitionandpricingid'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditIssuance/{letterofcreditissuanceid}/Retrieve':
    get:
      tags:
        - BQ - LetterofCreditIssuance
      summary: Retrieve Letter of Credit Issuance and Booking Task
      description: Retrieve Letter of Credit Issuance and Booking Task
      operationId: RetrieveLetterofCreditIssuance
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditissuanceid'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditIssuance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDemandPayment/{letterofcreditdemandpaymentid}/Retrieve':
    get:
      tags:
        - BQ - LetterofCreditDemandPayment
      summary: Retrieve Letter of Credit Payout Task
      description: Retrieve Letter of Credit Payout Task
      operationId: RetrieveLetterofCreditDemandPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdemandpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDemandPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/SellerObligationConfirmation/{sellerobligationconfirmationid}/Retrieve':
    get:
      tags:
        - BQ - SellerObligationConfirmation
      summary: Retrieve Seller Obligation Confirmation Task
      description: Retrieve Seller Obligation Confirmation Task
      operationId: RetrieveSellerObligationConfirmation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/sellerobligationconfirmationid'
      responses:
        '200':
          $ref: '#/components/responses/SellerObligationConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerCollateralAllocation/{customercollateralallocationid}/Update':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Update Customer Collateral Allocation Task
      description: Update Customer Collateral Allocation Task
      operationId: UpdateCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/CustomerPayment/{customerpaymentid}/Update':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Update Customer Payment Task
      description: Update Customer Payment Task
      operationId: UpdateCustomerPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDefinitionandPricing/{letterofcreditdefinitionandpricingid}/Update':
    put:
      tags:
        - BQ - LetterofCreditDefinitionandPricing
      summary: Update Letter of Credit Definition and Pricing Task
      description: Update Letter of Credit Definition and Pricing Task
      operationId: UpdateLetterofCreditDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditIssuance/{letterofcreditissuanceid}/Update':
    put:
      tags:
        - BQ - LetterofCreditIssuance
      summary: Update Letter of Credit Issuance and Booking Task
      description: Update Letter of Credit Issuance and Booking Task
      operationId: UpdateLetterofCreditIssuance
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditissuanceid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditIssuance'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditIssuance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/LetterofCreditDemandPayment/{letterofcreditdemandpaymentid}/Update':
    put:
      tags:
        - BQ - LetterofCreditDemandPayment
      summary: Update Letter of Credit Payout Task
      description: Update Letter of Credit Payout Task
      operationId: UpdateLetterofCreditDemandPayment
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/letterofcreditdemandpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/LetterofCreditDemandPayment'
      responses:
        '200':
          $ref: '#/components/responses/LetterofCreditDemandPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/LetterofCredit/{letterofcreditid}/SellerObligationConfirmation/{sellerobligationconfirmationid}/Update':
    put:
      tags:
        - BQ - SellerObligationConfirmation
      summary: Update Seller Obligation Confirmation Task
      description: Update Seller Obligation Confirmation Task
      operationId: UpdateSellerObligationConfirmation
      parameters:
        - $ref: '#/components/parameters/letterofcreditid'
        - $ref: '#/components/parameters/sellerobligationconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/SellerObligationConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/SellerObligationConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: The name of Letter of Credit Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Brief description of the purpose of the undertaking (Letter of Credit) ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Party asked to advise the undertaking (Letter of Credit) to the beneficiary or to another advising party. ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Unique and unambiguous identifier assigned to the undertaking (Letter of Credit) issued by the guarantor/issuer. This reference is used throughout the life cycle of the undertaking (Letter of Credit).  GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: Refers to the lifecycle of a Condition
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation prior to the execution of the task
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The timing and key actions/milestones involved in completing the transaction task
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Letter of Credit Definition and Pricing Task specific Business Service
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: "The status of Letter Of Credit Transaction ||\r\n|"
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Details of the underlying transaction for which the undertaking (Letter of Credit) is issued. ObligationFulfilment|ObligationFulfilment (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022 BM ()
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Reference to Letter of Credit Definition and Pricing Task
    LetterofCreditDefinitionandPricing:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        LetterOfCreditTransactionReference:
          $ref: '#/components/schemas/transaction'
        LetterofCreditDefinitionandPricingTaskReference:
          $ref: '#/components/schemas/task'
        LetterofCreditDefinitionandPricingTaskType:
          $ref: '#/components/schemas/text'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    CustomerCollateralAllocation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        LetterOfCreditTransactionReference:
          $ref: '#/components/schemas/transaction'
        CustomerCollateralAllocationTaskReference:
          $ref: '#/components/schemas/task'
        CustomerCollateralAllocationTaskType:
          $ref: '#/components/schemas/text'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Details related to the amount of the undertaking (Letter of Credit).  CurrencyAndAmount|CurrencyAndAmount (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022  ()
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
        - SortCodeAndAccountNumber
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n* `SortCodeAndAccountNumber` - Sort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (UK Open Banking)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetimetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
        - RenewalDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n* `RenewalDate` - \r\n"
    accountdatetime:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetimetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
        - IndividualAccount
        - JointAccount
        - LiquidationAccount
        - ProvisionAccount
        - PartnershipAccount
        - InvestmentAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n* `IndividualAccount` - \r\n* `JointAccount` - \r\n* `LiquidationAccount` - \r\n* `ProvisionAccount` - \r\n* `PartnershipAccount` - \r\n* `InvestmentAccount` - \r\n"
    balancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - CurrentBalance
        - AvailableBalance
        - LedgerBalance
        - ReserveBalance
        - FreeBalance
        - PrincipalBalance
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - PreviouslyClosedBooked
        - Expected
      type: string
      description: ">\r\n* `OpeningBalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `ClosingBalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `CurrentBalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `AvailableBalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `LedgerBalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `ReserveBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n* `ClosingAvailable` - Closing balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `ClosingBooked` - Balance of the account at the end of the pre-agreed account reporting period. It is the sum of the opening booked balance at the beginning of the period and all entries booked to the account during the pre-agreed account reporting period.\r\n* `ForwardAvailable` - Forward available balance of money that is at the disposal of the account owner on the date specified.\r\n* `Information` - Balance for informational purposes.\r\n* `InterimAvailable` - Available balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `InterimBooked` - Balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `OpeningAvailable` - Opening balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `OpeningBooked` - Book balance of the account at the beginning of the account reporting period. It always equals the closing book balance from the previous report.\r\n* `PreviouslyClosedBooked` - Balance of the account at the previously closed account reporting period. The opening booked balance for the new period has to be equal to this balance.\nUsage: the previously booked closing balance should equal (inclusive date) the booked closing balance of the date it references and equal the actual booked opening balance of the current date.\r\n* `Expected` - Balance, composed of booked entries and pending items known at the time of calculation, which projects the end of day balance if everything is booked on the account and no other entry is posted.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    balancecounterpartytypevalues:
      enum:
        - Bilateral
        - Multilateral
      type: string
      description: ">\r\n* `Bilateral` - Balance calculated regarding one member in the system. (ISO20022)\r\n* `Multilateral` - Balance calculated regarding all members in the system. (ISO20022)\r\n"
    balancesubtypevalues:
      enum:
        - Adjustment
        - Basecurrency
        - Blocked
        - Blockedfunds
        - Daylightoverdraft
        - Eligibleassets
        - Firmcollateralization
        - Amountsthathavebeenusedtoserveasfirmcollateral
        - Securitiesforecast
        - Netfunding
        - Intermediate
        - Localcurrency
        - Limitrelated
        - Reservedliquidity
        - Securitiespending
        - Payinpayout
        - Progressiveaverage
        - Reserve
        - Selfcollateralization
        - Amountsthathavebeenusedtoserveasselfcollateral
        - Threshold
      type: string
      description: ">\r\n* `Adjustment` - Balance to be held in the settlement account in order to comply with the average reserve due, in the event that the bank's balance is equal to the reserve due during the remaining days of the maintenance period.\r\n* `Basecurrency` - Balance representing the amount in the domestic or base accounting currency.\r\n* `Blocked` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes. In some countries, a blocked balance is known as a 'reserve' balance.\r\n* `Blockedfunds` - Balance representing funds that cannot be touched by the account owner.\r\n* `Daylightoverdraft` - Balance representing the intra day overdraft granted by the Central Bank to financial institutions participating in a RTGS system. This balance may vary over time and shall be offset at the end of the day.\r\n* `Eligibleassets` - Balance representing the potential loan a Central Bank would make in cash if the collateral is pledged, eg, securities available and eligible as collateral with the Central Bank.\r\n* `Firmcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral.\r\n* `Amountsthathavebeenusedtoserveasfirmcollateral` - Balance representing the cash equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral and have been used as collateral.\r\n* `Securitiesforecast` - Balance representing the total of all balance types representing the forecast of transactions to settle, blocked items, custody transactions and corporate actions cash disbursements.\r\n* `Netfunding` - Balance representing the net amount to be funded resulting from the difference between the total of all transactions with a cash impact and the existing cash coverage.\r\n* `Intermediate` - Balance representing an intermediate amount such as the opening or closing balance incrementally carried forward from one page to the next in a multi-page statement or report.\r\n* `Localcurrency` - Balance representing the amount in the local market currency for which the asset is held.\r\n* `Limitrelated` - Balance of a specific limit value, eg, a bilateral balance is calculated in relation to a given bilateral limit.\r\n* `Reservedliquidity` - Balance representing the amount that a financial institution has set aside for a specific reason and which is therefore not available. In the context of CSDs, reservation of liquidity made to meet settlement obligations.\r\n* `Securitiespending` - Balance of securities pending delivery, such as orders to sell securities have been executed but settlement of the open transactions has not been confirmed.\r\n* `Payinpayout` - Balance representing the fictive amount of automated direct debits or payment based on standing arrangements between the CSD and the user. Usage: Pay-Ins and Pay-Outs can be different based on individual payment instructions or available funds.\r\n* `Progressiveaverage` - Average of the daily balances on the account used to fulfil the reserve requirements calculated from the beginning of the maintenance period.\r\n* `Reserve` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes.\r\n* `Selfcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of the net incoming balance of securities qualified to serve as collateral for which settlement instructions are held at.\r\n* `Amountsthathavebeenusedtoserveasselfcollateral` - Balance representing the cash-equivalent resulting from evaluation of incoming securities, qualified to serve as collateral and actually used as collateral, which have been settled during the settlement process.\r\n* `Threshold` - Balance representing the amount that will be destined for investment. Difference between available balance and threshold for investment limit.\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceValueDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        BalanceCounterpartyType:
          $ref: '#/components/schemas/balancecounterpartytypevalues'
        BalanceCalculationDate:
          $ref: '#/components/schemas/datetime'
        BalanceSubType:
          $ref: '#/components/schemas/balancesubtypevalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdatetime'
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: "Reference to the account that is involved in the Letter of Credit such as: \n\nLiability Account: Account nominated by the obligor to record the liability amount of the undertaking.\n\nCharge Account: Account nominated by the obligor for the settlement of charges related to the undertaking.\n\n    \nSettlement Account: Account nominated by the obligor for the settlement of the amount claimed under the undertaking. Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()"
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: "Document or template enclosed in the undertaking (Letter of Credit) directly related to the undertaking (Letter of Credit) to be issued. Document _x000D_\n|Document (https://www.iso20022.org/standardsrepository/type/Document)|Standard|ISO20022 BM ()"
    undertakingdemandtypevalues:
      enum:
        - PayOnly
        - PayOrExtend
      type: string
      description: ">\r\n* `PayOnly` - \r\n* `PayOrExtend` - \r\n"
    correspondencetypevalues:
      enum:
        - UnsolicitedMessage
        - Complaint
      type: string
      description: ">\r\n* `UnsolicitedMessage` - \r\n* `Complaint` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: The address for message delivery (needs to match channel selection)
    correspondencecommunicationmethodtypevalues:
      enum:
        - Fax
        - Email
        - Proprietary
        - Online
        - Phone
        - Postalservice
        - File
      type: string
      description: ">\r\n* `Fax` - Transmission by fax.\r\n* `Email` - Transmission by e-mail.\r\n* `Proprietary` - Transmission by proprietary method.\r\n* `Online` - Transmission on line, for example, in a web portal.\r\n* `Phone` - Transmission by telephone.\r\n* `Postalservice` - Transmission by postal service.\r\n* `File` - Transmission by file transfer.\r\n"
    correspondencemediumtypevalues:
      enum:
        - Paper
        - Electronic
        - Paperelectronic
        - Biometric
      type: string
      description: ">\r\n* `Paper` - Presentation is made on paper.\r\n* `Electronic` - Presentation is made electronically.\r\n* `Paperelectronic` - Presentation is made on paper and/or electronically.\r\n* `Biometric` - Biometric medium.\r\n"
    correspondence:
      type: object
      properties:
        CorrespondenceType:
          $ref: '#/components/schemas/correspondencetypevalues'
        CorrespondenceAddress:
          $ref: '#/components/schemas/address'
        CorrespondenceDateTime:
          $ref: '#/components/schemas/datetime'
        CorrespondenceContent:
          $ref: '#/components/schemas/text'
        CorrespondenceTemplate:
          $ref: '#/components/schemas/text'
        CorrespondenceCommunicationMethod:
          $ref: '#/components/schemas/correspondencecommunicationmethodtypevalues'
        CorrespondenceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        CorrespondenceMedium:
          $ref: '#/components/schemas/correspondencemediumtypevalues'
      description: Presentation details related to the undertaking (Letter of Credit) Presentation|Presentation (https://www.iso20022.org/standardsrepository/type/Presentation)|Standard|ISO20022 BM ()
    undertakingtypevalues:
      enum:
        - BankGuarantee
        - LetterOfCredit
        - StandbyLettersOfCredit
        - DemandGuarantee
      type: string
      description: ">\r\n* `BankGuarantee` - \r\n* `LetterOfCredit` - \r\n* `StandbyLettersOfCredit` - Undertaking is a standby letter of credit.(ISO20022)\r\n* `DemandGuarantee` - Undertaking is a demand guarantee.(ISO20022)\r\n"
    undertakingstatustypevalues:
      enum:
        - Acceptedtechnicalvalidation
        - Accepted
        - Pending
        - Received
        - Rejected
        - Nonconfirmation
        - Withdrawn
        - Undertakingamountchange
        - Counterundertakingamountchange
      type: string
      description: ">\r\n* `Acceptedtechnicalvalidation` - Accepted in accordance with technical validation.\r\n* `Accepted` - Accepted.\r\n* `Pending` - Pending further processing.\r\n* `Received` - Received.\r\n* `Rejected` - Rejected.\r\n* `Nonconfirmation` - Undertaking not confirmed.\r\n* `Withdrawn` - Demand has been withdrawn.\r\n* `Undertakingamountchange` - Change to undertaking amount.\r\n* `Counterundertakingamountchange` - Change to counter-undertaking amount.\r\n"
    undertakingstatus:
      type: object
      properties:
        UndertakingStatus:
          $ref: '#/components/schemas/status'
        UndertakingStatusType:
          $ref: '#/components/schemas/undertakingstatustypevalues'
      description: Status of the undertaking.
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Rules and laws governing the undertaking (Letter of Credit) GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()
    communicationchannel:
      type: object
      properties:
        CommunicationChannel:
          type: string
          description: "A pathway established via a communication medium.\nA contact point by which the bank interacts with parties."
          format: class
      description: "Details of communication channel for delivery of the undertaking (Letter of Credit) ||\r\n|"
    undertaking:
      type: object
      properties:
        UndertakingIdentification:
          $ref: '#/components/schemas/identifier'
        UndertakingName:
          $ref: '#/components/schemas/name'
        UndertakingType:
          $ref: '#/components/schemas/undertakingtypevalues'
        UndertakingStatus:
          $ref: '#/components/schemas/undertakingstatus'
        UndertakingPurpose:
          $ref: '#/components/schemas/text'
        UndertakingDocument:
          $ref: '#/components/schemas/document'
        UndertakingCorrespondence:
          $ref: '#/components/schemas/correspondence'
        UndertakingGovernanceRulesAndLaw:
          $ref: '#/components/schemas/ruleset'
        UndertakingDeliveryChannel:
          $ref: '#/components/schemas/communicationchannel'
      description: ' Undertaking|Undertaking (https://www.iso20022.org/standardsrepository/type/Undertaking)|Standard|ISO20022 BM ()'
    paymenttypevalues:
      enum:
        - Cashtransaction
        - Domesticpayment
        - Domestichighvaluepayment
        - Domesticprioritypayment
        - Crossborderpayment
        - Crossborderprioritypayment
        - Crossborderhighvaluepayment
        - Thirdcurrencypayment
        - Thirdcurrencyhighvaluepayment
        - Thirdcurrencyprioritypayment
        - Tradesettlementpayment
        - Foreignexchange
        - Equivalentamount
        - Loan
        - Loanrepayment
        - Securities
        - Lockbox
        - Dividend
        - Crossedcheque
        - Opencheque
        - Ordercheque
        - Circularcheque
        - Travellerscheques
        - Bankdraft
        - Cashletter
        - Documentarycredit
        - Billofexchange
        - Collection
        - Cashmanagementtransfer
        - Sweepaccount
        - Topaccount
        - Zerobalanceaccount
        - Standingfacilities
        - Swiftpayservicelevelcredit
        - Priorityservicelevelcredit
        - Standardservicelevelcredit
        - Liquiditytransfer
        - Advancepayment
        - Valuedateadjustment
        - Dvpgross
        - Dvpnet
        - Netting
        - Limitpayment
        - Backup
        - Expresspayment
        - Centralbankoperation
        - Clspayment
        - Eurodomesticpayment
        - Agriculturaltransfer
        - Alimonypayment
        - Balanceretail
        - Bonuspayment.
        - Brokeragefee
        - Capitalbuilding
        - Charitypayment
        - Childbenefit
        - Commercialcredit
        - Commission
        - Commoditytransfer
        - Costs
        - Copyright
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Insurancepremium
        - Intracompanypayment
        - Interest
        - Licensefee
        - Metals
        - Pensionpayment
        - Purchasesaleofgoods
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Salarypayment
        - Socialsecuritybenefit
        - Standingorder
        - Subscription
        - Treasurystatepayment
        - Unemploymentdisabilitybenefit
        - Valueaddedtaxpayment
        - Withholdingtax
        - Taxpayment
        - Miscellaneous
        - Overnightdeposit
        - Marginallending
        - Other
        - Upfront
        - Unwind
        - Principalexchange
      type: string
      description: ">\r\n* `Cashtransaction` - Transaction is a withdrawal/deposit of cash.\r\n* `Domesticpayment` - Payment has an origin and a destination in the same country, and is made in the currency of that country.\r\n* `Domestichighvaluepayment` - Transaction is a high value payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Domesticprioritypayment` - Transaction is a priority payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Crossborderpayment` - Payment has an origin in one country, a destination in another, and is made in the currency of either the origin or destination country.\r\n* `Crossborderprioritypayment` - Transaction is a priority payment that has an origin in one country and a destination in another and is made in the currency of either the origin or destination country.\r\n* `Crossborderhighvaluepayment` - Transaction is a high value payment that has an origin in one country and a destination in another country and is made in the currency of either the origin or destination country.\r\n* `Thirdcurrencypayment` - Transaction is a payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyhighvaluepayment` - Transaction is a high value payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyprioritypayment` - Payment is made in a third currency to the origin and destination countries. The origin and destination countries may be the same country.\r\n* `Tradesettlementpayment` - Transaction is the settlement of a trade, eg, a securities transaction.\r\n* `Foreignexchange` - Transaction isthe settlement of a foreign exchange deal.\r\n* `Equivalentamount` - Transaction is an equivalent amount relative to a currency conversion.\r\n* `Loan` - Transaction is the payment of a specific amount of money lent by a creditor/lender.\r\n* `Loanrepayment` - Transaction is an amount of money transferred in repayment of loan.\r\n* `Securities` - Transaction is a payment of securities.\r\n* `Lockbox` - Transaction is a payment(s) resulting from a lock box service.\r\n* `Dividend` - Transaction is a payment of dividends.\r\n* `Crossedcheque` - Transaction is a crossed cheque. A crossed check has two parallel lines across its face, indicating that the cheque must be paid into an account and not cashed over the counter.\r\n* `Opencheque` - Transaction is an uncrossed cheque that can be cashed at the bank of origin.\r\n* `Ordercheque` - Transaction is a cheque made payable to a named recipient 'or order' enabling the creditor to either deposit it in an account or endorse it to a third party, ie, transfer the rights to the cheque by signing it on the reverse.\r\n* `Circularcheque` - Transaction is an instruction from a bank to its correspondent bank to pay the creditor a stated sum of money on presentation of a means of identification.\r\n* `Travellerscheques` - Transaction is a payment resulting from travellers cheques.\r\n* `Bankdraft` - Transaction is a cheque drawn by a bank on itself or its agent. A person who owes money to another buys the draft from a bank for cash and hands it to the creditor who need have no fear that it might be dishonoured.\r\n* `Cashletter` - Transaction is a cash letter. A cash letter is a payment instrument in the form of a covering letter, whereby a financial institution, ie, the remitting bank, requests credit for one or more financial documents under usual reserve, ie, subject to final payment.\r\n* `Documentarycredit` - Transaction is a documentary credit from one banker to another, authorising the payment of a specified sum of money to the person named in the document, based on specified conditions.\r\n* `Billofexchange` - Transaction is a written order from a drawer to a drawee to pay a specified sum of money upon demand, or on a specified date, to the drawer or to a third party specified by the drawer. A bill of exchange is also called a draft.\r\n* `Collection` - Transaction is a collection. A collection is the act of sending a cheque, bill of exchange or another financial instrument to the prospective financial institution for payment.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Sweepaccount` - Transaction relates to a cash management instruction, requesting a sweep of the account of the debtor.\r\n* `Topaccount` - Transaction is a cash management instruction, requesting to top the account of the debtor above a certain floor amount. The floor amount, if not pre-agreed by the parties involved, may be specified.\r\n* `Zerobalanceaccount` - Transaction is a cash management instruction, requesting to zero balance the account of the debtor.\r\n* `Standingfacilities` - Payment is linked to overnight deposits and the marginal lending facility.\r\n* `Swiftpayservicelevelcredit` - Transaction is a credit transfer to be processed according to the SWIFTPay Service Level.\r\n* `Priorityservicelevelcredit` - Transaction is a credit transfer to be processed according to the Priority Service Level.\r\n* `Standardservicelevelcredit` - Transaction is a credit transfer to be processed according to the Standard Service Level.\r\n* `Liquiditytransfer` - Payment is made to transfer liquidity to/from the settlement account of a member, to/from the current account held at the central institution or any other institution.\r\n* `Advancepayment` - Transaction is a payment made in advance or as an advance.\r\n* `Valuedateadjustment` - Transaction reverses a previously incorrectly value dated entry.\r\n* `Dvpgross` - Gross cash payment offsetting the amount owed/due for a securities transaction settlement.\r\n* `Dvpnet` - Net payment offsetting the cash balance due/owed for a series of securities transactions settlement.\r\n* `Netting` - Transaction is a netting operation.\r\n* `Limitpayment` - Transaction is a payment that is processed when the pool of liquidity exceeds the minimum value reserved for an express payment in the RTGSPlus system.\r\n* `Backup` - Payment is made under the recovery procedure to move liquidity to/from the settlement account of a member according to the specifications of the system.\r\n* `Expresspayment` - Transaction is a payment that is processed whenever liquidity is available on the settlement account of a member of the RTGSPlus system.\r\n* `Centralbankoperation` - Payment is made to settle an operation made with the central bank.\r\n* `Clspayment` - Payment is linked to CLS activities.\r\n* `Eurodomesticpayment` - Transaction is a credit transfer in Euro with its country of origin and country of destination within the European Union. The origin and destination countries may be one and the same country.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is a payment(s) made by one spouse to the other after a separation or divorce. An alimony payment may be applied to other family relationships.\r\n* `Balanceretail` - Transaction is a payment offsetting the net cash balance owed/due in a retail payment system.\r\n* `Bonuspayment.` - Net cash payment offsetting the balance due/owed in a retail payment system.\r\n* `Brokeragefee` - Transaction is charges levied by a broker.\r\n* `Capitalbuilding` - Transaction is payment into a personal pension scheme for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Childbenefit` - Transaction is a payment made to a parent/guardian to help maintain a child.\r\n* `Commercialcredit` - Transaction is settlement of a commercial credit.\r\n* `Commission` - Transaction is payment of a fee for executing a transaction.\r\n* `Commoditytransfer` - Transaction is a payment of products traded on a commodity exchange.\r\n* `Costs` - Transaction is apayment of costs.\r\n* `Copyright` - Transaction is a payment of copyright.\r\n* `Governmentpayment` - Transaction is apayment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is a payment of an instalment or to the settlement of a hire-purchase agreement.\r\n* `Insurancepremium` - Transaction is a payment of an insurance premium.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Interest` - Transaction is a payment of interest.\r\n* `Licensefee` - Transaction is a payment of a license fee.\r\n* `Metals` - Transaction is a purchase or sale of metals.\r\n* `Pensionpayment` - Transaction is a payment of a pension allowance.\r\n* `Purchasesaleofgoods` - Transaction is a payment for the purchase and sale of goods.\r\n* `Refund` - Transaction is a repayment of funds.\r\n* `Rent` - Transaction is a payment of rent.\r\n* `Royalties` - Transaction is a payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is a payment for the purchase and sale of services.\r\n* `Salarypayment` - Transaction is a payment of salaries.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, a payment made by a government to support individuals.\r\n* `Standingorder` - Transaction is a standing order. A standing order is an instruction given by a party having explicit authority on the account to debit, ie, either debit account owner or originating party, to a first agent to process cash transfers at specified intervals during an implicit or explicit period of time. It is given once, and is valid for an open or closed period of time.\r\n* `Subscription` - Transaction is a payment of a subscription.\r\n* `Treasurystatepayment` - Payment is linked to the Treasury State.\r\n* `Unemploymentdisabilitybenefit` - Transaction is a payment made to an unemployed/disabled person.\r\n* `Valueaddedtaxpayment` - Transaction is apayment of value added tax.\r\n* `Withholdingtax` - Transaction is a payment of withholding tax.\r\n* `Taxpayment` - Transaction is a payment of taxes.\r\n* `Miscellaneous` - Transaction is for an unspecified reason. Miscellaneous is to be used only when no explicit code is available.\r\n* `Overnightdeposit` - Transaction is linked to an overnight deposit.\r\n* `Marginallending` - Transaction is linked to the marginal lending facility.\r\n* `Other` - Specifies that a proprietary code must be indicated.\r\n* `Upfront` - Transaction is an initial payment made by one of the counterparties  either to bring a transaction to fair value or for any other reason that may be the cause of an off-market transaction.\r\n* `Unwind` - Transaction is the final settlement payment made when a transaction is unwound prior to its end date or a payment that may result due to the full termination of derivative transaction(s).\r\n* `Principalexchange` - Transaction is an exchange of notional values for cross-currency swaps.\r\n"
    priorityvaluetypes:
      enum:
        - Urgent
        - High
        - Normal
        - Low
      type: string
      description: ">\r\n* `Urgent` - Priority level is urgent (highest priority possible).\r\n* `High` - Priority level is high.\r\n* `Normal` - Priority level is normal.\r\n* `Low` - Priority level is low.\r\n"
    clearingchanneltypevalues:
      enum:
        - Realtimegrosssettlementsystem
        - Realtimenetsettlementsystem
        - Masspaymentnetsystem
        - Booktransfer
      type: string
      description: ">\r\n* `Realtimegrosssettlementsystem` - Clearing channel is a real-time gross settlement system.\r\n* `Realtimenetsettlementsystem` - Clearing channel is a real-time net settlement system.\r\n* `Masspaymentnetsystem` - Clearing channel is a mass payment net settlement system.\r\n* `Booktransfer` - Payment through internal book transfer.\r\n"
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    paymentinstructionstatus:
      type: object
      properties:
        PaymentInstructionStatus:
          $ref: '#/components/schemas/status'
        PaymentInstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
      description: ''
    paymentdatetimetypevalues:
      enum:
        - RequestedExecutionDate
        - AcceptanceDate
        - CreationDate
        - ValueDate
        - DueDate
        - ExpiryDate
      type: string
      description: ">\r\n* `RequestedExecutionDate` - Date at which the initiating party requests the clearing agent to process the payment. ISO20022\nUsage: This is the date on which the debtor's account is to be debited. If payment by cheque, the date when the cheque must be generated by the bank. \r\n* `AcceptanceDate` - Date and time at which all processing conditions for execution of the payment are met and adequate financial cover is available at the account servicing agent. ISO20022\r\n* `CreationDate` - Date and time at which the payment execution was created by the instructing agent. ISO20022\r\n* `ValueDate` - Date on which a payment must be executed (ISO20022)\r\n* `DueDate` - Due date for the payment. (ISO20022)\r\n* `ExpiryDate` - \r\n"
    paymentdatetime:
      type: object
      properties:
        PaymentDate:
          $ref: '#/components/schemas/datetime'
        PaymentDateType:
          $ref: '#/components/schemas/paymentdatetimetypevalues'
      description: ''
    paymentinstruction:
      type: object
      properties:
        PaymentInstructionDirectionType:
          $ref: '#/components/schemas/text'
        PaymentInstructionType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentInstructionRequestedMechanism:
          $ref: '#/components/schemas/text'
        PaymentInstructionProcessingValidityTime:
          $ref: '#/components/schemas/datetimeperiod'
        PaymentInstructionPriority:
          $ref: '#/components/schemas/priorityvaluetypes'
        PaymentInstructionClearingChannel:
          $ref: '#/components/schemas/clearingchanneltypevalues'
        PaymentCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        PaymentInstructionStatus:
          $ref: '#/components/schemas/paymentinstructionstatus'
        PaymentInstructionAmount:
          $ref: '#/components/schemas/amount'
        PaymentInstructionDatetime:
          $ref: '#/components/schemas/paymentdatetime'
      description: ''
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    paymentpurposevalues:
      enum:
        - Salarypayment
        - Treasurypayment
        - Advancepayment
        - Agriculturaltransfer
        - Alimonypayment
        - Childbenefit
        - Unemploymentdisabilitybenefit
        - Bonuspayment.
        - Cashmanagementtransfer
        - Capitalbuilding
        - Charitypayment
        - Collectionpayment
        - Commoditytransfer
        - Commercialpayment
        - Commission
        - Costs
        - Copyright
        - Dividend
        - Foreignexchange
        - Purchasesaleofgoods
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Intracompanypayment
        - Insurancepremium
        - Interest
        - Licensefee
        - Loan
        - Loanrepayment
        - Netting
        - Payroll
        - Pensionpayment
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Securities
        - Socialsecuritybenefit
        - Subscription
        - Taxpayment
        - Valueaddedtaxpayment
        - Consumerthirdpartyconsolidatedpayment
        - Debitcollectionpayment
        - Supplierpayment
        - Hedging
        - Multipleservicetypes
        - Nototherwisespecified
        - Cardpayment
        - Creditcardbill
        - Ferry
        - Air
        - Bus
        - Railway
        - Convalescentcarefacility
        - Dentalservices
        - Anesthesiaservices
        - Homehealthcare
        - Hospitalcare
        - Intermediatecarefacility
        - Longtermcarefacility
        - Medicalservices
        - Visioncare
        - Durablemedicaleequipment
        - Cabletvbill
        - Electricitybill
        - Gasbill
        - Telephonebill
        - Othertelecomrelatedbill
        - Waterbill
        - Study
        - Pricepayment
        - Installment
        - Recurringinstallmentpayment
        - Openingfee
        - Cancellationfee
        - Governmentinsurance
        - Insurancepremiumcar
        - Laborinsurance
        - Lifeinsurance
        - Propertyinsurance
        - Healthinsurance
        - Carloanprincipalrepayment
        - Housingloanrepayment
        - Companysocialloanpaymenttobank
        - Estatetax
        - Housingtax
        - Incometax
        - Netincometax
        - Businessexpenses
        - Trustfund
        - Networkcharge
        - Networkcommunication
        - Receiptpayment
        - Paymentterms
        - Other
        - Withholding
      type: string
      description: ">\r\n* `Salarypayment` - Transaction is the payment of salaries.\r\n* `Treasurypayment` - Transaction is related to treasury operations.\r\n* `Advancepayment` - Transaction is an advance payment.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is the payment of alimony.\r\n* `Childbenefit` - Transaction is related to a payment made to assist parent/guardian to maintain child.\r\n* `Unemploymentdisabilitybenefit` - Transaction is related to a payment to a person who is unemployed/disabled.\r\n* `Bonuspayment.` - Transaction is related to payment of a bonus.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Capitalbuilding` - Transaction is related to capital building fringe fortune, ie capital building for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Collectionpayment` - Transaction is a collection of funds initiated via a credit transfer or direct debit.\r\n* `Commoditytransfer` - Transaction is payment of commodities.\r\n* `Commercialpayment` - Transaction is related to a payment of commercial credit or debit. (formerly CommercialCredit).\r\n* `Commission` - Transaction is payment of commission.\r\n* `Costs` - Transaction is related to payment of costs.\r\n* `Copyright` - Transaction is payment of copyright.\r\n* `Dividend` - Transaction is payment of dividends.\r\n* `Foreignexchange` - Transaction is related to a foreign exchange operation.\r\n* `Purchasesaleofgoods` - Transaction is related to purchase and sale of goods.\r\n* `Governmentpayment` - Transaction is a payment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is payment for an installment/hire-purchase agreement.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Insurancepremium` - Transaction is payment of an insurance premium.\r\n* `Interest` - Transaction is payment of interest.\r\n* `Licensefee` - Transaction is payment of a license fee.\r\n* `Loan` - Transaction is related to transfer of loan to borrower.\r\n* `Loanrepayment` - Transaction is related to repayment of loan to lender.\r\n* `Netting` - Transaction is related to a netting operation.\r\n* `Payroll` - Transaction is related to the payment of payroll.\r\n* `Pensionpayment` - Transaction is the payment of pension.\r\n* `Refund` - Transaction is the payment of a refund.\r\n* `Rent` - Transaction is the payment of rent.\r\n* `Royalties` - Transaction is the payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is related to purchase and sale of services.\r\n* `Securities` - Transaction is the payment of securities.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, ie payment made by a government to support individuals.\r\n* `Subscription` - Transaction is related to a payment of information or entertainment services either in printed or electronic form.\r\n* `Taxpayment` - Transaction is the payment of taxes.\r\n* `Valueaddedtaxpayment` - Transaction is the payment of value added tax.\r\n* `Consumerthirdpartyconsolidatedpayment` - Transaction is a payment used by a third party who can collect funds to pay on behalf of consumers, ie credit counseling or bill payment companies.\r\n* `Debitcollectionpayment` - Collection of funds initiated via a debit transfer.\r\n* `Supplierpayment` - Transaction is related to a payment to a supplier.\r\n* `Hedging` - Transaction is related to a hedging operation.\r\n* `Multipleservicetypes` - Transaction is related to a payment for multiple service types.\r\n* `Nototherwisespecified` - Transaction is related to a payment for type of services not specified elsewhere.\r\n* `Cardpayment` - Transaction is related to a payment of credit card account.\r\n* `Creditcardbill` - Transaction is related to a payment of credit card bill.\r\n* `Ferry` - Transaction is a payment for ferry related business.\r\n* `Air` - Transaction is a payment for air transport related business.\r\n* `Bus` - Transaction is a payment for bus transport related business.\r\n* `Railway` - Transaction is a payment for railway transport related business.\r\n* `Convalescentcarefacility` - Transaction is a payment for convalescence care facility services.\r\n* `Dentalservices` - Transaction is a payment for dental services.\r\n* `Anesthesiaservices` - Transaction is a payment for anesthesia services.\r\n* `Homehealthcare` - Transaction is a payment for home health care services.\r\n* `Hospitalcare` - Transaction is a payment for hospital care services.\r\n* `Intermediatecarefacility` - Transaction is a payment for intermediate care facility services.\r\n* `Longtermcarefacility` - Transaction is a payment for long-term care facility services.\r\n* `Medicalservices` - Transaction is a payment for medical care services.\r\n* `Visioncare` - Transaction is a payment for vision care services.\r\n* `Durablemedicaleequipment` - Transaction is a payment is for use of durable medical equipment.\r\n* `Cabletvbill` - Transaction is related to a payment of cable TV bill.\r\n* `Electricitybill` - Transaction is related to a payment of electricity bill.\r\n* `Gasbill` - Transaction is related to a payment of gas bill.\r\n* `Telephonebill` - Transaction is related to a payment of telephone bill.\r\n* `Othertelecomrelatedbill` - Transaction is related to a payment of other telecom related bill.\r\n* `Waterbill` - Transaction is related to a payment of water bill.\r\n* `Study` - Transaction is related to a payment of study/tuition costs.\r\n* `Pricepayment` - Transaction is related to a payment of a price.\r\n* `Installment` - Transaction is related to a payment of an installment.\r\n* `Recurringinstallmentpayment` - Transaction is related to a payment of a recurring installment made at regular intervals.\r\n* `Openingfee` - Transaction is related to a payment of opening fee.\r\n* `Cancellationfee` - Transaction is related to a payment of cancellation fee.\r\n* `Governmentinsurance` - Transaction is related to a payment of government insurance.\r\n* `Insurancepremiumcar` - Transaction is a payment of car insurance premium.\r\n* `Laborinsurance` - Transaction is a payment of labor insurance.\r\n* `Lifeinsurance` - Transaction is a payment of life insurance.\r\n* `Propertyinsurance` - Transaction is a payment of property insurance.\r\n* `Healthinsurance` - Transaction is a payment of health insurance.\r\n* `Carloanprincipalrepayment` - Transaction is a payment of car loan principal payment.\r\n* `Housingloanrepayment` - Transaction is related to a payment of housing loan.\r\n* `Companysocialloanpaymenttobank` - Transaction is a payment by a company to a bank for financing social loans to employees.\r\n* `Estatetax` - Transaction is related to a payment of estate tax.\r\n* `Housingtax` - Transaction is related to a payment of housing tax.\r\n* `Incometax` - Transaction is related to a payment of income tax.\r\n* `Netincometax` - Transaction is related to a payment of net income tax.\r\n* `Businessexpenses` - Transaction is related to a payment of business expenses.\r\n* `Trustfund` - Transaction is related to a payment of a trust fund.\r\n* `Networkcharge` - Transaction is related to a payment of network charges.\r\n* `Networkcommunication` - Transaction is related to a payment of network communication.\r\n* `Receiptpayment` - Transaction is related to a payment of receipt.\r\n* `Paymentterms` - Transaction is related to payment terms specifications.\r\n* `Other` - Other payment purpose.\r\n* `Withholding` - Transaction is related to a payment of withholding tax.\r\n"
    paymenttransactionstatustypevalues:
      enum:
        - Acceptedtechnicalvalidation
        - Received
        - Partiallyaccepted
        - Rejected
        - Pending
        - Acceptedcustomerprofile
        - Acceptedsettlementinprocess
        - Acceptedsettlementcompleted
        - Accepted
        - Acceptedcancellationrequest
        - Rejectedcancellationrequest
        - Acceptedwithchange
        - Partiallyacceptedcancellationrequest
        - Pendingcancellationrequest
        - Acceptedcreditsettlementcompleted
        - Paymentcancelled
        - Nocancellationprocess
      type: string
      description: ">\r\n* `Acceptedtechnicalvalidation` - Authentication and syntactical and semantical validation are successful.\r\n* `Received` - Payment initiation has been received by the receiving agent.\r\n* `Partiallyaccepted` - A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.\r\n* `Rejected` - Payment initiation or individual transaction included in the payment initiation has been rejected.\r\n* `Pending` - Payment initiation or individual transaction included in the payment initiation is pending.  Further checks and status update will be performed.\r\n* `Acceptedcustomerprofile` - Preceding check of technical validation was successful. Customer profile check was also successful.\r\n* `Acceptedsettlementinprocess` - All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\r\n* `Acceptedsettlementcompleted` - Settlement on the debtor's account has been completed.\r\n* `Accepted` - Request is accepted.\r\n* `Acceptedcancellationrequest` - Cancellation is accepted.\r\n* `Rejectedcancellationrequest` - Cancellation request is rejected\r\n* `Acceptedwithchange` - Instruction is accepted but a change will be made, such as date or remittance not sent.\r\n* `Partiallyacceptedcancellationrequest` - Cancellation is partially accepted.\r\n* `Pendingcancellationrequest` - Cancellation request is pending.\r\n* `Acceptedcreditsettlementcompleted` - Settlement on the creditor's account has been completed.\r\n* `Paymentcancelled` - Payment is cancelled.\r\n* `Nocancellationprocess` - There is no cancellation process ongoing\r\n"
    paymenttransactionstatus:
      type: object
      properties:
        PaymentTransactionStatus:
          $ref: '#/components/schemas/status'
        PaymentTransactionStatusType:
          $ref: '#/components/schemas/paymenttransactionstatustypevalues'
      description: "Specifies the status of a payment transaction at a specified time.\nElements"
    paymenttransaction:
      type: object
      properties:
        PaymentTransactionType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentTransactionAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionIdentification:
          $ref: '#/components/schemas/identifier'
        PaymentTransactionUsedMechanism:
          $ref: '#/components/schemas/text'
        PaymentTransactionDatetime:
          $ref: '#/components/schemas/paymentdatetime'
        PaymentTransactionPurpose:
          $ref: '#/components/schemas/paymentpurposevalues'
        PaymentTransactionStatus:
          $ref: '#/components/schemas/paymenttransactionstatus'
        PaymentTransactionAppliedFeeAmount:
          $ref: '#/components/schemas/amount'
        PaymentTransactionCurrency:
          $ref: '#/components/schemas/currencytypevalues'
        PaymentCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: ''
    paymentservicetypevalues:
      enum:
        - CreditTransferService
        - StandingOrderService
        - DirectDebitService
        - CardPaymentService
        - WithdrawService
        - DepositService
        - OverdraftService
        - MoneyRemittanceService
        - StatementService
      type: string
      description: ">\r\n* `CreditTransferService` - A payment service allowing a payer to transfer fund to a beneficiary. (a proposed definition for BIAN BOM adapted from ECB)\r\n* `StandingOrderService` - A credit transfer service to make regular transfers on given dates to a named beneﬁciary. (a proposed definition for BIAN BOM adapted from ISO20022)\r\n* `DirectDebitService` - A payment service for debiting a payer's payment account, where a payment transaction is initiated by the payee on the basis of the payer's consent given to the payee, to the payee's payment service provider or to the payer's own payment service provider. (a proposed definition for BIAN BOM adapted from PSD)\r\n* `CardPaymentService` - A payment service to execute payment transactions through a payment card, including online payments. (a proposed definition for BIAN BOM adapted from PSD)\r\n* `WithdrawService` - A payment service to take fund out of an account. (a proposed definition for BIAN BOM)\r\n* `DepositService` - A payment service to place funds into an account for safekeeping. (a proposed definition for BIAN BOM)\r\n* `OverdraftService` - A payment service that allows fund transfer even if there is no provision on the account. (a proposed definition for BIAN BOM)\r\n* `MoneyRemittanceService` - A payment service where funds are received from a payer, without any payment accounts being created in the name of the payer or the payee, for the sole purpose of transferring a corresponding amount to a payee or to another payment service provider acting on behalf of the payee, and/or where such funds are received on behalf of and made available to the payee. (a proposed definition for BIAN BOM adapted from PSD)\r\n* `StatementService` - A reporting service on payment transactions registered on an account. (a proposed definition for BIAN BOM)\r\n"
    paymentmethodtypevalues:
      enum:
        - Cheque
        - Credittransfer
        - Directdebit
        - Transferadvice
        - Direct
        - Classical
      type: string
      description: ">\r\n* `Cheque` - Written order to a bank to pay a certain amount of money from one person to another person.\r\n* `Credittransfer` - Transfer of an amount of money in the books of the account servicer.\r\n* `Directdebit` - Collection of an amount of money from the debtor's bank account by the creditor. The amount of money and dates of collections may vary.\r\n* `Transferadvice` - Transfer of an amount of money in the books of the account servicer. An advice should be sent back to the account owner.\r\n* `Direct` - Direct method.\r\n* `Classical` - Classical method.\r\n"
    paymenttimevalues:
      enum:
        - Paymentondelivery
        - Endofmonthofdelivery
        - Endofperiodafterdelivery
        - Endofperiodafterendofdeliverymonth
        - Paymentonreceiptofinvoice
        - Endofperiodafterendofreceiptmonth
        - Endofperiodafterreceipt
        - Endofmonthofreceipt
        - Endofperiodaftermatch
        - Endofperiodaftershipmentdate
        - Endofperiodafterpurchaseorderdate
        - Endofperiodafterbaselineestablishment
        - Endofperiodafterinvoicedate
      type: string
      description: ">\r\n* `Paymentondelivery` - Code for payment on delivery.\r\n* `Endofmonthofdelivery` - Code for payment at end of month of delivery.\r\n* `Endofperiodafterdelivery` - Code for payment at end of period after delivery.\r\n* `Endofperiodafterendofdeliverymonth` - Code for payment at end of period after end of month of delivery.\r\n* `Paymentonreceiptofinvoice` - Code for payment on receipt of invoice.\r\n* `Endofperiodafterendofreceiptmonth` - Code for payment at end of period after end of month of receipt of invoice.\r\n* `Endofperiodafterreceipt` - Code for payment at end of period after receipt of invoice.\r\n* `Endofmonthofreceipt` - Code for payment at end of month of receipt of invoice.\r\n* `Endofperiodaftermatch` - Code for payment at end of period after match or mismatch acceptance.\r\n* `Endofperiodaftershipmentdate` - Payment at end of period after shipment date.\r\n* `Endofperiodafterpurchaseorderdate` - Payment at end of period after purchase order date.\r\n* `Endofperiodafterbaselineestablishment` - Payment at end of period after baseline establishment date.\r\n* `Endofperiodafterinvoicedate` - Payment at end of period after invoice date.\r\n"
    remittancedeliverymethodtypevalues:
      enum:
        - Fax
        - Electronicdatainterchange
        - Uniformresourceidentifier
        - Email
        - Post
        - SMS
      type: string
      description: ">\r\n* `Fax` - Remittance advice information must be faxed.\r\n* `Electronicdatainterchange` - Remittance advice information must be sent through Electronic Data Interchange (EDI).\r\n* `Uniformresourceidentifier` - Remittance advice information needs to be sent to a Uniform Resource Identifier (URI). URI is a compact string of characters that uniquely identify an abstract or physical resource. URI's are the super-set of identifiers, such as URLs, email addresses, ftp sites, etc, and as such, provide the syntax for all of the identification schemes.\r\n* `Email` - Remittance advice information must be sent through e-mail.\r\n* `Post` - Remittance advice information must be sent through postal services.\r\n* `SMS` - Remittance advice information must be sent through by phone as a short message service (SMS).\r\n"
    contactpointtypevalues:
      enum:
        - ElectronicAddress
        - PostalAddress
        - PhoneNumber
        - Socialnetworkaddress
      type: string
      description: ">\r\n* `ElectronicAddress` - Address which is accessed by electronic means. ISO20022\r\n* `PostalAddress` - Information that locates and identifies a specific address. ISO20022\r\n* `PhoneNumber` - Collection of information that identifies a phone address. ISO20022\r\n* `Socialnetworkaddress` - A social network such as Facebook, Twitter, etc.\r\n"
    contactpoint:
      type: object
      properties:
        ContactPointType:
          $ref: '#/components/schemas/contactpointtypevalues'
      description: ''
    paymentarrangement:
      type: object
      properties:
        ServiceType:
          $ref: '#/components/schemas/paymentservicetypevalues'
        PaymentDate:
          $ref: '#/components/schemas/paymentdatetime'
        PaymentPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PaymentPurpose:
          $ref: '#/components/schemas/paymentpurposevalues'
        PaymentAmount:
          $ref: '#/components/schemas/amount'
        PaymentMethod:
          $ref: '#/components/schemas/paymentmethodtypevalues'
        PaymentType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentTime:
          $ref: '#/components/schemas/paymenttimevalues'
        RemittanceDeliveryMethod:
          $ref: '#/components/schemas/remittancedeliverymethodtypevalues'
        RemittanceLocation:
          $ref: '#/components/schemas/contactpoint'
      description: Arrangements for the debtor to pay the creditor an amount of cash.
    undertakingdemandpaymentarrangement:
      type: object
      properties:
        DemandSubmissionDate:
          $ref: '#/components/schemas/datetime'
        DemandAmount:
          $ref: '#/components/schemas/amount'
        DemandType:
          $ref: '#/components/schemas/undertakingdemandtypevalues'
        DemandPaymentArrangement:
          $ref: '#/components/schemas/paymentarrangement'
        DemantDocument:
          $ref: '#/components/schemas/document'
      description: Details related to terms and conditions for demanding payment under a demand guarantee or standby letter of credit.
    LetterofCreditDemandPayment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        LetterOfCreditTransactionReference:
          $ref: '#/components/schemas/transaction'
        LetterofCreditPayoutTaskReference:
          $ref: '#/components/schemas/task'
        LetterofCreditPayoutTaskType:
          $ref: '#/components/schemas/text'
        DemandAmount:
          $ref: '#/components/schemas/amount'
        ConfirmerReferenceNumber:
          $ref: '#/components/schemas/identifier'
        AdvisingPartyReferenceNumber:
          $ref: '#/components/schemas/identifier'
        SettlementAccount:
          $ref: '#/components/schemas/account'
        DemandDocumentation:
          $ref: '#/components/schemas/document'
        DemandType:
          $ref: '#/components/schemas/undertakingdemandtypevalues'
        PresentationDetails:
          $ref: '#/components/schemas/correspondence'
        AdditionalInformation:
          $ref: '#/components/schemas/text'
        DemandIdentification:
          $ref: '#/components/schemas/identifier'
        UndertakingReference:
          $ref: '#/components/schemas/undertaking'
        DemandPaymentInstruction:
          $ref: '#/components/schemas/paymentinstruction'
        SecondAdvisingPartyReferenceNumber:
          $ref: '#/components/schemas/identifier'
        DemandPaymentTransactionType:
          $ref: '#/components/schemas/actiontypevalues'
        DemandPaymentTransaction:
          $ref: '#/components/schemas/paymenttransaction'
        RequestedExpiryDate:
          $ref: '#/components/schemas/datetime'
        DemandPaymentTermsandConditions:
          $ref: '#/components/schemas/undertakingdemandpaymentarrangement'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    CustomerPayment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        LetterOfCreditTransactionReference:
          $ref: '#/components/schemas/transaction'
        CustomerPaymentTaskReference:
          $ref: '#/components/schemas/task'
        CustomerPaymentTaskType:
          $ref: '#/components/schemas/text'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    undertakingissuancetypevalues:
      enum:
        - Counterundertakingrequestforlocalundertaking
        - Counterundertakingrequestforcounterundertaking
        - Undertakingissueddirect
        - Undertakingissuedviaconfirmingparty
        - Undertakingviaadvisingparty
      type: string
      description: ">\r\n* `Counterundertakingrequestforlocalundertaking` - Counter-undertaking issued to a correspondent with a request to issue a local undertaking.\r\n* `Counterundertakingrequestforcounterundertaking` - Counter-undertaking issued to a correspondent with a request to issue another counter-undertaking.\r\n* `Undertakingissueddirect` - Undertaking issued direct to the beneficiary.\r\n* `Undertakingissuedviaconfirmingparty` - Undertaking issued to the beneficiary via a confirming party.\r\n* `Undertakingviaadvisingparty` - Undertaking issued to the beneficiary via an advising party.\r\n"
    undertakingissuancearrangement:
      type: object
      properties:
        Issuancetype:
          $ref: '#/components/schemas/undertakingissuancetypevalues'
        IssuanceDate:
          $ref: '#/components/schemas/datetime'
        PlaceOfIssue:
          $ref: '#/components/schemas/location'
      description: "Details related to the issuance terms of the undertaking (Letter of Credit) ||\r\n|"
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: ''
    LetterofCreditIssuance:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        LetterOfCreditTransactionReference:
          $ref: '#/components/schemas/transaction'
        LetterofCreditIssuanceandBookingTaskReference:
          $ref: '#/components/schemas/task'
        LetterofCreditIssuanceandBookingTaskType:
          $ref: '#/components/schemas/text'
        PlaceofIssue:
          $ref: '#/components/schemas/address'
        DateofIssuance:
          $ref: '#/components/schemas/datetime'
        IssuanceTermandConditions:
          $ref: '#/components/schemas/undertakingissuancearrangement'
        UndertakingReference:
          $ref: '#/components/schemas/undertaking'
        IssuanceTransactionType:
          $ref: '#/components/schemas/actiontypevalues'
        IssuanceTransaction:
          $ref: '#/components/schemas/transaction'
        IssuanceInstruction:
          $ref: '#/components/schemas/instruction'
        IssuanceType:
          $ref: '#/components/schemas/undertakingissuancetypevalues'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    SellerObligationConfirmation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        LetterOfCreditTransactionReference:
          $ref: '#/components/schemas/transaction'
        SellerObligationConfirmationTaskReference:
          $ref: '#/components/schemas/task'
        SellerObligationConfirmationTaskType:
          $ref: '#/components/schemas/text'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    undertakingterminationarrangement:
      type: object
      properties:
        TerminationDate:
          $ref: '#/components/schemas/datetime'
      description: "Details related to the termination terms of the undertaking (Letter of Credit) ||\r\n|"
    undertakingexpiryarrangement:
      type: object
      properties:
        ExpiryDateTime:
          $ref: '#/components/schemas/datetime'
        ExpiryCondition:
          $ref: '#/components/schemas/condition'
        ExpiryPlace:
          $ref: '#/components/schemas/location'
      description: Details related to the expiry terms of the undertaking (Letter of Credit) Expiry|Expiry (https://www.iso20022.org/standardsrepository/type/Expiry)|Standard|ISO20022 BM ()
    undertakingarrangementtypevalues:
      enum:
        - PricingArrangement
        - DemandPaymentArrangement
        - CollateralArrangement
        - PayoutArrangement
        - DeliveryArrangement
        - AmendmentArrangement
        - ExpiryArrangement
        - TerminationArrangement
        - IssuanceArrangement
      type: string
      description: ">\r\n* `PricingArrangement` - \r\n* `DemandPaymentArrangement` - \r\n* `CollateralArrangement` - \r\n* `PayoutArrangement` - \r\n* `DeliveryArrangement` - \r\n* `AmendmentArrangement` - \r\n* `ExpiryArrangement` - \r\n* `TerminationArrangement` - \r\n* `IssuanceArrangement` - \r\n"
    feetypevalues:
      enum:
        - Accountingfee
        - Adrfee
        - Advisoryfee
        - Airwaybillfee
        - Backendload
        - Brokeragefee
        - Clearanceandhandlingatdestination
        - Clearanceandhandlingatorigin
        - Collectfreight
        - Commission
        - Contingencydeferredsalescharge
        - Correspondentbankcharge
        - Custodyfee
        - Dangerousgoodsfee
        - Dilutionlevy
        - Discount
        - Equalisation
        - Frontendload
        - Initial
        - Insurancepremium
        - Issuancecancellationfee
        - Issuancefee
        - Managementfee
        - Matchingfees
        - Miscellaneousfee
        - Other
        - Packaging
        - Partacquis
        - Penalty
        - Pickup
        - Postagecharge
        - Premium
        - Publicationfee
        - Regulatoryfee
        - Securitycharge
        - Serviceprovisionfee
        - Shippingcharge
        - Signatureservice
        - Specialconcessions
        - Speciallyagreedfrontendload
        - Storageatdestination
        - Storageatorigin
        - Switch
        - Transferfee
        - Transportcharges
        - Ucitscommission
        - ChequeRelatedFee
      type: string
      description: ">\r\n* `Accountingfee` - Fee paid for accounting services rendered.\r\n* `Adrfee` - Charge linked to an ADR (American Depositary Receipt).\r\n* `Advisoryfee` - Fee paid for advisory services rendered.\r\n* `Airwaybillfee` - Charge is an airway bill fee.\r\n* `Backendload` - Sales charge paid by the investor when redeeming an investment such as an investment fund.\r\n* `Brokeragefee` - Fee paid to a broker for services provided.\r\n* `Clearanceandhandlingatdestination` - Charge is for clearance and handling of goods at destination.\r\n* `Clearanceandhandlingatorigin` - Charge is for clearance and handling of goods at origin.\r\n* `Collectfreight` - Charge is for the collection of the freight.\r\n* `Commission` - Fee paid for services provided.\r\n* `Contingencydeferredsalescharge` - Deferred sales charge.\r\n* `Correspondentbankcharge` - In investment funds, the charge of the correspondent bank for transferring money.\r\n* `Custodyfee` - Fee paid to a custodian in respect of custodial services.\r\n* `Dangerousgoodsfee` - Charge is for dangerous goods.\r\n* `Dilutionlevy` - In investment funds, a charge payable by the investor covering bid-offer spreads and dealing charges for the underlying investments. The dilution levy is paid to the fund for the benefit of other unit holders.\r\n* `Discount` - Charge that has been reduced from the standard initial charge levied by a fund, eg, during a launch period or as negotiated by a funds supermarket / discount broker.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive or performance fees at the end of the fiscal year.\r\n* `Frontendload` - Sales charge paid immediately by the investor when subscribing to an investment such as an investment fund.\r\n* `Initial` - Charge paid at the time of the first subscription.\r\n* `Insurancepremium` - Charge is a premium for insurance.\r\n* `Issuancecancellationfee` - Fee linked to the cancellation of an issuance.\r\n* `Issuancefee` - Charge linked to the issuance of security.\r\n* `Managementfee` - Fee paid to an investment manager for services. The fee usually includes fund administration costs and investor relationship management. Typically, the amount paid is a percentage of the assets under management.\r\n* `Matchingfees` - Fee charged for matching and/or confirmation.\r\n* `Miscellaneousfee` - Miscellaneous fee.\r\n* `Other` - Another type of charge.\r\n* `Packaging` - Charge is for packaging of goods.\r\n* `Partacquis` - Portion of charge that the fund is entitled to receive, that cannot be reduced by an intermediary.\r\n* `Penalty` - Fee charged to the investor for early redemption of the fund.\r\n* `Pickup` - Charge is for pick-up of goods.\r\n* `Postagecharge` - Charge paid for the postage.\r\n* `Premium` - In investment funds, pre-arranged addition to the trade amount based on the published net asset value.\r\n* `Publicationfee` - Fee paid in respect of publications made.\r\n* `Regulatoryfee` - Fee charged by a regulatory authority, eg, Securities and Exchange fees.\r\n* `Securitycharge` - Charge is for security.\r\n* `Serviceprovisionfee` - Fee paid for the provision of financial services.\r\n* `Shippingcharge` - Charge for shipping, including the insurance of securities.\r\n* `Signatureservice` - Charge is for signature services.\r\n* `Specialconcessions` - Charges, drawdown, or other reduction from or in addition to the deal price.\r\n* `Speciallyagreedfrontendload` - Specially agreed front-end load.\r\n* `Storageatdestination` - Charge is for storage of goods at destination.\r\n* `Storageatorigin` - Charge is for storage of goods at origin.\r\n* `Switch` - In investment funds, charge related to a switch transaction.\r\n* `Transferfee` - In investment funds, a fee charged for the transfer of ownership of an investment fund.\r\n* `Transportcharges` - Charge is for transport.\r\n* `Ucitscommission` - Charges paid by the investor to the Fund Company for subscription and redemption orders.\r\n* `ChequeRelatedFee` - \r\n"
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: 'Rate used to calculate the amount of the adjustment, allowance, charge or fee. (ISO20022)'
    feeplantypevalues:
      enum:
        - StandardFeePlan
        - FinalFeePlan
      type: string
      description: ">\r\n* `StandardFeePlan` - \r\n* `FinalFeePlan` - \r\n"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: ''
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
        - DevelopmentPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n* `DevelopmentPlan` - \r\n"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: ''
    feeplan:
      type: object
      properties:
        FeePlanName:
          $ref: '#/components/schemas/name'
        FeePlanType:
          $ref: '#/components/schemas/feeplantypevalues'
        FeePlan:
          $ref: '#/components/schemas/plan'
      description: "An arranged FeeRatePlan\n"
    adjustmentdirectiontypevalues:
      enum:
        - Added
        - Substracted
      type: string
      description: ">\r\n* `Added` - Adjustment amount must be added to the total amount.\r\n* `Substracted` - Adjustment amount must be substracted from the total amount.\r\n"
    chargebearertypevalues:
      enum:
        - Bornebydebtor
        - Bornebycreditor
        - Shared
        - Followingservicelevel
      type: string
      description: ">\r\n* `Bornebydebtor` - All transaction charges are to be borne by the debtor.\r\n* `Bornebycreditor` - All transaction charges are to be borne by the creditor.\r\n* `Shared` - In a credit transfer context, means that transaction charges on the sender side are to be borne by the debtor, transaction charges on the receiver side are to be borne by the creditor. In a direct debit context, means that transaction charges on the sender side are to be borne by the creditor, transaction charges on the receiver side are to be borne by the debtor.\r\n* `Followingservicelevel` - Charges are to be applied following the rules agreed in the service level and/or scheme.\r\n"
    feearrangement:
      type: object
      properties:
        FeeType:
          $ref: '#/components/schemas/feetypevalues'
        FeeAmount:
          $ref: '#/components/schemas/amount'
        FeeRate:
          $ref: '#/components/schemas/rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/datetime'
        FeePlan:
          $ref: '#/components/schemas/feeplan'
        FeeCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        FeeReason:
          $ref: '#/components/schemas/text'
        FeeDirection:
          $ref: '#/components/schemas/adjustmentdirectiontypevalues'
        FeeBearerType:
          $ref: '#/components/schemas/chargebearertypevalues'
      description: ''
    undertakingdatetypevalues:
      enum:
        - UndertakingTerminationDate
        - UndertakingAdviceDate
        - UndertakingExpiryDate
        - UndertakingIssuanceDate
      type: string
      description: ">\r\n* `UndertakingTerminationDate` - Date when the undertaking terminates. (ISO20022)\r\n* `UndertakingAdviceDate` - Date on which the undertaking or its amendment is advised. (ISO20022)\r\n* `UndertakingExpiryDate` - Date and time when the expiry of the undertaking takes effect. (ISO20022)\r\n* `UndertakingIssuanceDate` - Date on which the undertaking is issued. (ISO20022)\r\n"
    undertakingarrangement:
      type: object
      properties:
        UndertakingArrangementType:
          $ref: '#/components/schemas/undertakingarrangementtypevalues'
        UndertakingAmount:
          $ref: '#/components/schemas/amount'
        UndertakingFee:
          $ref: '#/components/schemas/feearrangement'
        UndertakingTermAndCondition:
          $ref: '#/components/schemas/condition'
        UndertakingDate:
          $ref: '#/components/schemas/datetime'
        UndertakingDateType:
          $ref: '#/components/schemas/undertakingdatetypevalues'
      description: ' Undertaking|Undertaking (https://www.iso20022.org/standardsrepository/type/Undertaking)|Standard|ISO20022 BM ()'
    yesnoindicator:
      type: object
      properties:
        Yesnoindicator:
          type: string
          description: "Indicates a \"Yes\" or \"No\" type of answer for an element. (ISO20022)\ntrue: Yes\nfalse: No"
          format: datatype
      description: Indicates whether or not consent is requested from the beneficiary.
    undertakingamendmentarrangement:
      type: object
      properties:
        AmendmentIssueDate:
          $ref: '#/components/schemas/datetime'
        ChangeOfAmount:
          $ref: '#/components/schemas/amount'
        AmendmentIdentification:
          $ref: '#/components/schemas/identifier'
      description: Details related to terms and conditions for modification of an undertaking
    LetterofCreditAmendment:
      type: object
      properties:
        AmendmentIdentification:
          $ref: '#/components/schemas/identifier'
        AmendmentSequenceNumber:
          $ref: '#/components/schemas/text'
        AmendmentIssuanceDate:
          $ref: '#/components/schemas/datetime'
        UndertakingAmountAdjustment:
          $ref: '#/components/schemas/amount'
        AdvisingParty:
          $ref: '#/components/schemas/involvedparty'
        SecondAdvisingParty:
          $ref: '#/components/schemas/involvedparty'
        TerminationDetails:
          $ref: '#/components/schemas/undertakingterminationarrangement'
        NewExpiryDetails:
          $ref: '#/components/schemas/undertakingexpiryarrangement'
        NewBeneficiary:
          $ref: '#/components/schemas/involvedparty'
        NewUndertakingTermsAndConditions:
          $ref: '#/components/schemas/undertakingarrangement'
        LocalUndertaking:
          $ref: '#/components/schemas/undertaking'
        BeneficiaryConsentRequestIndicator:
          $ref: '#/components/schemas/yesnoindicator'
        DeliveryChannel:
          $ref: '#/components/schemas/communicationchannel'
        EnclosedFile:
          $ref: '#/components/schemas/document'
        AdditionalInformation:
          $ref: '#/components/schemas/text'
        AmendmentTermsandConditions:
          $ref: '#/components/schemas/undertakingamendmentarrangement'
        AmendmentInstruction:
          $ref: '#/components/schemas/instruction'
        AmendmentTransaction:
          $ref: '#/components/schemas/transaction'
        AmendmentTransactionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    LetterofCreditTermination:
      type: object
      properties:
        TerminationEffectiveDate:
          $ref: '#/components/schemas/datetime'
        TerminationReason:
          $ref: '#/components/schemas/text'
        TerminationTermandCondition:
          $ref: '#/components/schemas/undertakingterminationarrangement'
        UndertakingReference:
          $ref: '#/components/schemas/undertaking'
        TerminationTransaction:
          $ref: '#/components/schemas/transaction'
        TerminationInstruction:
          $ref: '#/components/schemas/instruction'
        TerminationTransactionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    calendartypevalues:
      enum:
        - UKCalendar
        - ChineseCalendar
      type: string
      description: ">\r\n* `UKCalendar` - \r\n* `ChineseCalendar` - \r\n"
    calendar:
      type: object
      properties:
        CalendarType:
          $ref: '#/components/schemas/calendartypevalues'
        CalendarName:
          $ref: '#/components/schemas/name'
      description: ''
    feetransaction:
      type: object
      properties:
        AppliedFeeType:
          $ref: '#/components/schemas/feetypevalues'
        AccruedFeeAmount:
          $ref: '#/components/schemas/amount'
        AppliedFeeAmount:
          $ref: '#/components/schemas/amount'
      description: ''
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    interesttypevalues:
      enum:
        - Fixed
        - Floatingratenote
        - Dualbasis
        - Index
        - Discounted
        - Zerocoupon
        - Exinterest
        - Cuminterest
      type: string
      description: ">\r\n* `Fixed` - Indicates that the type of interest is fixed.\r\n* `Floatingratenote` - Indicates that the type of interest is a floating rate note.\r\n* `Dualbasis` - Indicates that the type of interest is a dual basis.\r\n* `Index` - Indicates that the type of interest is index.\r\n* `Discounted` - Indicates that the type of interest is discounted.\r\n* `Zerocoupon` - Indicates that the type of interest is a zero coupon.\r\n* `Exinterest` - Indicates deal price excluding accrued interest.\r\n* `Cuminterest` - Indicates deal price including accrued interest.\r\n"
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          $ref: '#/components/schemas/amount'
        InterestTransactionDescription:
          $ref: '#/components/schemas/text'
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        AppliedInterestRate:
          $ref: '#/components/schemas/rate'
        AppliedInteretType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: ''
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    LetterofCreditOutcome:
      type: object
      properties:
        LetterofCreditCalendar:
          $ref: '#/components/schemas/calendar'
        LetterofCreditCounterparty:
          $ref: '#/components/schemas/involvedparty'
        LetterofCreditDividend:
          $ref: '#/components/schemas/text'
        LetterofCreditFees:
          $ref: '#/components/schemas/feetransaction'
        LetterofCreditInterest:
          $ref: '#/components/schemas/interesttransaction'
        LetterofCreditMargining:
          $ref: '#/components/schemas/text'
        LetterofCreditNotionalPrincipal:
          $ref: '#/components/schemas/text'
        LetterofCreditOptions:
          $ref: '#/components/schemas/text'
        LetterofCreditRates:
          $ref: '#/components/schemas/rate'
        LetterofCreditSettlement:
          $ref: '#/components/schemas/text'
        LetterofCreditWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Letter of Credit Definition and Pricing Task is a discrete action or task that is required in the execution of the Letter of Credit Definition and Pricing Task
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between business service transaction within Letter Of Credit Transaction ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: "A selected optional business service as subject matter of Letter Of Credit Transaction ||\r\n|"
    undertakingtransactiontypevalues:
      enum:
        - PaymentTransaction
        - IssuingTransaction
        - BookingTransaction
        - CollateralAllocationTransaction
        - TerminationTransaction
        - AmendmentTransaction
      type: string
      description: "A Classification value that specifies type of transaction for this  Letter Of Credit Transaction ||\r\n|"
    undertakingtransaction:
      type: object
      properties:
        UndertakingTransactionType:
          $ref: '#/components/schemas/undertakingtransactiontypevalues'
      description: "An unique reference to an item or an occurrence of Letter Of Credit Transaction ||\r\n|"
    undertakinginvolvementtypevalues:
      enum:
        - UndertakingAdvisingParty
        - UndertakingApplicant
        - UndertakingBeneficiary
        - UndertakingConfirmer
        - UndertakingInstructingParty
        - UndertakingIssuer
        - UndertakingPresenter
        - UndertakingObligor
      type: string
      description: " ||\r\n|"
    undertakinginvolvement:
      type: object
      properties:
        UndertakingInvolvementType:
          $ref: '#/components/schemas/undertakinginvolvementtypevalues'
        PartyReference:
          $ref: '#/components/schemas/party'
        LetterOfCreditReference:
          $ref: '#/components/schemas/undertaking'
      description: ' UndertakingPartyRole|UndertakingPartyRole (https://www.iso20022.org/standardsrepository/type/UndertakingPartyRole)|Standard|ISO20022 BM ()'
    letterofcredittypevalues:
      enum:
        - CommercialLettersOfCredit
        - StandbyLettersOfCredit
        - RevocableLettersOfCredit
        - IrrevocableLettersOfCredit
        - RevolvingLettersOfCredit
      type: string
      description: "Type of undertaking (Letter of Credit)\n ||\r\n|"
    letterofcredit:
      type: object
      properties:
        LetterOfCreditType:
          $ref: '#/components/schemas/letterofcredittypevalues'
      description: " ||\r\n|"
    LetterOfCreditTransaction:
      type: object
      properties:
        LetterOfCreditTransactionParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        LetterOfCreditTransactionSelectedOption:
          $ref: '#/components/schemas/service'
        LetterOfCreditTransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        LetterOfCreditTransactionType:
          $ref: '#/components/schemas/undertakingtransactiontypevalues'
        LetterOfCreditTransactionReference:
          $ref: '#/components/schemas/undertakingtransaction'
        LetterOfCreditAgreementReference:
          $ref: '#/components/schemas/undertaking'
        LetterOfCreditAdditionalInvolvedPartyReference:
          $ref: '#/components/schemas/undertakinginvolvement'
        LetterOfCreditInvolvementType:
          $ref: '#/components/schemas/undertakinginvolvementtypevalues'
        LetterOfCreditArrangementReference:
          $ref: '#/components/schemas/undertakingarrangement'
        LetterofCreditFinancialInstrumentReference:
          $ref: '#/components/schemas/letterofcredit'
        LetterofCreditIdentification:
          $ref: '#/components/schemas/identifier'
        LetterofCreditName:
          $ref: '#/components/schemas/name'
        LetterofCreditPurpose:
          $ref: '#/components/schemas/text'
        LetterofCreditType:
          $ref: '#/components/schemas/letterofcredittypevalues'
        LetterofCreditAmount:
          $ref: '#/components/schemas/amount'
        LetterofCreditExpiryTermsandConditions:
          $ref: '#/components/schemas/undertakingexpiryarrangement'
        LetterofCreditGovernanceRulesandLaw:
          $ref: '#/components/schemas/ruleset'
        LetterofCreditUnderlyingTransaction:
          $ref: '#/components/schemas/transaction'
        LetterofCreditPresentationDetails:
          $ref: '#/components/schemas/correspondence'
        LetterofCreditEnclosedFile:
          $ref: '#/components/schemas/document'
        LetterofCreditInvolvedAccountReference:
          $ref: '#/components/schemas/account'
        LetterofCreditObligor:
          $ref: '#/components/schemas/involvedparty'
        LetterofCreditApplicant:
          $ref: '#/components/schemas/involvedparty'
        LetterofCreditIssuer:
          $ref: '#/components/schemas/involvedparty'
        LetterofCreditBeneficiary:
          $ref: '#/components/schemas/involvedparty'
        LetterofCreditAdvisingParty:
          $ref: '#/components/schemas/involvedparty'
        LetterofCreditTerminationTermsandConditions:
          $ref: '#/components/schemas/undertakingterminationarrangement'
        LetterofCreditIssuanceTermsandConditions:
          $ref: '#/components/schemas/undertakingissuancearrangement'
        LetterofCreditDeliveryChannel:
          $ref: '#/components/schemas/communicationchannel'
      description: 'Execute a well-bounded financial transaction/task, typically involving largely automated/structured fulfillment processing within Letter of Credit. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    LetterOfCreditTransaction:
      description: LetterOfCreditTransaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterOfCreditTransaction'
    CustomerCollateralAllocation:
      description: CustomerCollateralAllocation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCollateralAllocation'
    CustomerPayment:
      description: CustomerPayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPayment'
    LetterofCreditDefinitionandPricing:
      description: LetterofCreditDefinitionandPricing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterofCreditDefinitionandPricing'
    LetterofCreditIssuance:
      description: LetterofCreditIssuance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterofCreditIssuance'
    LetterofCreditDemandPayment:
      description: LetterofCreditDemandPayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterofCreditDemandPayment'
    SellerObligationConfirmation:
      description: SellerObligationConfirmation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SellerObligationConfirmation'
  parameters:
    letterofcreditid:
      name: letterofcreditid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customercollateralallocationid:
      name: customercollateralallocationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customerpaymentid:
      name: customerpaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    letterofcreditdefinitionandpricingid:
      name: letterofcreditdefinitionandpricingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    letterofcreditissuanceid:
      name: letterofcreditissuanceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    letterofcreditdemandpaymentid:
      name: letterofcreditdemandpaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    sellerobligationconfirmationid:
      name: sellerobligationconfirmationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    LetterOfCreditTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterOfCreditTransaction'
      required: true
    CustomerCollateralAllocation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCollateralAllocation'
      required: true
    CustomerPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPayment'
      required: true
    LetterofCreditDefinitionandPricing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterofCreditDefinitionandPricing'
      required: true
    LetterofCreditIssuance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterofCreditIssuance'
      required: true
    LetterofCreditDemandPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LetterofCreditDemandPayment'
      required: true
    SellerObligationConfirmation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SellerObligationConfirmation'
      required: true