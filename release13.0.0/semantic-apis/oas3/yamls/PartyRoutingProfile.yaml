openapi: 3.0.1
info:
  title: Party Routing Profile
  description: 'This service domain maintains a small profile of key indicators for a customer that is referenced during customer interactions to facilitate routing, servicing and product/service fulfillment decisions. This can include status (such as account in arrears), ratings (such as high value customer) and alerts (such possible fraud activity detected)'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PartyRoutingProfile/13.0.0
paths:
  /PartyRoutingProfile/Initiate:
    post:
      tags:
        - CR - PartyState
      summary: InCR Initiate profile state monitoring for a party
      description: InCR Initiate profile state monitoring for a party
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Update':
    put:
      tags:
        - CR - PartyState
      summary: UpCR Update monitoring for a party
      description: UpCR Update monitoring for a party
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Control':
    put:
      tags:
        - CR - PartyState
      summary: CoCR Control the party monitoring (e.g. suspend)
      description: CoCR Control the party monitoring (e.g. suspend)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Execute':
    put:
      tags:
        - CR - PartyState
      summary: ExCR Execute an automated action for a monitored party (e.g. refresh)
      description: ExCR Execute an automated action for a monitored party (e.g. refresh)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Request':
    put:
      tags:
        - CR - PartyState
      summary: RqCR Request manual intervention for a monitored party (e.g. review settings)
      description: RqCR Request manual intervention for a monitored party (e.g. review settings)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/PartyState'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Retrieve':
    get:
      tags:
        - CR - PartyState
      summary: ReCR Retrieve details about the monitored party state
      description: ReCR Retrieve details about the monitored party state
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      responses:
        '200':
          $ref: '#/components/responses/PartyState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/{statusid}/Update':
    put:
      tags:
        - BQ - Status
      summary: UpBQ Update status measures for a monitored party
      description: UpBQ Update status measures for a monitored party
      operationId: UpdateStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/statusid'
      requestBody:
        $ref: '#/components/requestBodies/Status'
      responses:
        '200':
          $ref: '#/components/responses/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/{statusid}/Capture':
    put:
      tags:
        - BQ - Status
      summary: CaBQ Capture status measures for a monitored party
      description: CaBQ Capture status measures for a monitored party
      operationId: CaptureStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/statusid'
      requestBody:
        $ref: '#/components/requestBodies/Status'
      responses:
        '200':
          $ref: '#/components/responses/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/{statusid}/Retrieve':
    get:
      tags:
        - BQ - Status
      summary: ReBQ Retrieve details about status measures for a party
      description: ReBQ Retrieve details about status measures for a party
      operationId: RetrieveStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/statusid'
      responses:
        '200':
          $ref: '#/components/responses/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Rating/{ratingid}/Update':
    put:
      tags:
        - BQ - Rating
      summary: UpBQ Update rating measures for a monitored party
      description: UpBQ Update rating measures for a monitored party
      operationId: UpdateRating
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/ratingid'
      requestBody:
        $ref: '#/components/requestBodies/Rating'
      responses:
        '200':
          $ref: '#/components/responses/Rating'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Rating/{ratingid}/Capture':
    put:
      tags:
        - BQ - Rating
      summary: CaBQ Capture rating measures for a monitored party
      description: CaBQ Capture rating measures for a monitored party
      operationId: CaptureRating
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/ratingid'
      requestBody:
        $ref: '#/components/requestBodies/Rating'
      responses:
        '200':
          $ref: '#/components/responses/Rating'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Rating/{ratingid}/Retrieve':
    get:
      tags:
        - BQ - Rating
      summary: ReBQ Retrieve details about rating measures for a party
      description: ReBQ Retrieve details about rating measures for a party
      operationId: RetrieveRating
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/ratingid'
      responses:
        '200':
          $ref: '#/components/responses/Rating'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Alert/{alertid}/Update':
    put:
      tags:
        - BQ - Alert
      summary: UpBQ Update alerts for a monitored party
      description: UpBQ Update alerts for a monitored party
      operationId: UpdateAlert
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/alertid'
      requestBody:
        $ref: '#/components/requestBodies/Alert'
      responses:
        '200':
          $ref: '#/components/responses/Alert'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Alert/{alertid}/Exchange':
    put:
      tags:
        - BQ - Alert
      summary: 'EcBQ Accept, verify etc. an alert for a monitored party'
      description: 'EcBQ Accept, verify etc. an alert for a monitored party'
      operationId: ExchangeAlert
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/alertid'
      requestBody:
        $ref: '#/components/requestBodies/Alert'
      responses:
        '200':
          $ref: '#/components/responses/Alert'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Alert/{alertid}/Capture':
    put:
      tags:
        - BQ - Alert
      summary: CaBQ Capture alerts for a monitored party
      description: CaBQ Capture alerts for a monitored party
      operationId: CaptureAlert
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/alertid'
      requestBody:
        $ref: '#/components/requestBodies/Alert'
      responses:
        '200':
          $ref: '#/components/responses/Alert'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Alert/{alertid}/Retrieve':
    get:
      tags:
        - BQ - Alert
      summary: ReBQ Retrieve details about alerts for a party
      description: ReBQ Retrieve details about alerts for a party
      operationId: RetrieveAlert
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/alertid'
      responses:
        '200':
          $ref: '#/components/responses/Alert'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/{statusid}/Notify':
    get:
      tags:
        - BQ - Status
      summary: Notify Status
      description: Notify Status
      operationId: NotifyStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
        - $ref: '#/components/parameters/statusid'
      responses:
        '200':
          $ref: '#/components/responses/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PartyRoutingProfile/{partyroutingprofileid}/Status/Evaluate':
    post:
      tags:
        - BQ - Status
      summary: Evaluate status measures for a monitored party
      description: Evaluate status measures for a monitored party
      operationId: EvaluateStatus
      parameters:
        - $ref: '#/components/parameters/partyroutingprofileid'
      requestBody:
        $ref: '#/components/requestBodies/Status'
      responses:
        '200':
          $ref: '#/components/responses/Status'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: Defines the type of alert (e.g. detected potential fraud)
    customerrelationshipalert:
      type: object
      properties:
        CustomerRelationshipAlert:
          type: string
          description: An event to notify the issue related to a specific customer relationship.
          format: class
      description: The maintained alert value (historical values may be retained as appropriate)
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Indication when the alert value is updated and time until given value applies/is relevant as appropriate
    Alert:
      type: object
      properties:
        CustomerRelationshipAlertType:
          $ref: '#/components/schemas/text'
        CustomerRelationshipAlert:
          $ref: '#/components/schemas/customerrelationshipalert'
        CustomerRelationshipAlertNarrative:
          $ref: '#/components/schemas/text'
        CustomerRelationshipAlertValidFromToDate:
          $ref: '#/components/schemas/datetime'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    customerrelationshipstatus:
      type: object
      properties:
        CustomerRelationshipStatusType:
          type: string
          description: ''
          format: string
        CustomerRelationshipStatusDescription:
          type: string
          description: ''
          format: string
        CustomerRelationshipStatusValue:
          type: string
          description: ''
          format: string
        CustomerRelationshipStatusValidityPeriod:
          type: string
          description: ''
          format: string
      description: The maintained state value (historical values may be retained as appropriate)
    Status:
      type: object
      properties:
        CustomerRelationshipStatusType:
          $ref: '#/components/schemas/text'
        CustomerRelationshipStatus:
          $ref: '#/components/schemas/customerrelationshipstatus'
        CustomerRelationshipStatusNarrative:
          $ref: '#/components/schemas/text'
        CustomerRelationshipStatusValidFromToDate:
          $ref: '#/components/schemas/datetime'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    Rating:
      type: object
      properties:
        CustomerRelationshipRatingType:
          $ref: '#/components/schemas/text'
        CustomerRelationshipRating:
          $ref: '#/components/schemas/text'
        CustomerRelationshipRatingNarrative:
          $ref: '#/components/schemas/text'
        CustomerRelationshipRatingValidFromToDate:
          $ref: '#/components/schemas/datetime'
      description: "A collection of information feeds/measures that can be used to track the status of one or more items/entitites\n\nExamples: Composite position, Customer alert"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer for the profile ||\r\n|"
    PartyState:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
      description: 'Monitor and define the status/rating of some entity within Customer Profile. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    PartyState:
      description: PartyState
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyState'
    Status:
      description: Status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
    Rating:
      description: Rating
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rating'
    Alert:
      description: Alert
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Alert'
  parameters:
    partyroutingprofileid:
      name: partyroutingprofileid
      in: path
      required: true
      style: simple
      schema:
        type: string
    statusid:
      name: statusid
      in: path
      required: true
      style: simple
      schema:
        type: string
    ratingid:
      name: ratingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    alertid:
      name: alertid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    PartyState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyState'
      required: true
    Status:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
      required: true
    Rating:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rating'
      required: true
    Alert:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Alert'
      required: true