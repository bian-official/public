openapi: 3.0.1
info:
  title: Market Information Management
  description: Market information management consolidates and improves market information from multiple sources in order to build up a bank knowledge base in targeted areas
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/MarketInformationManagement/13.0.0
paths:
  /MarketInformationManagement/Create:
    post:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: CrCR Create an administrative plan for market information management
      description: CrCR Create an administrative plan for market information management
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/FinancialMarketInformationAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Update':
    put:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: UpCR Update details of the administrative plan
      description: UpCR Update details of the administrative plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialMarketInformationAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Control':
    put:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: CoCR Control the execution of the administrative plan
      description: CoCR Control the execution of the administrative plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialMarketInformationAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Exchange':
    put:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: EcCR Accept/reject etc. aspects of the administrative plan
      description: EcCR Accept/reject etc. aspects of the administrative plan
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialMarketInformationAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Execute':
    put:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: ExCR Execute an automated action of the plan
      description: ExCR Execute an automated action of the plan
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialMarketInformationAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Request':
    put:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: RqCR Request manual intervention to activities covered by the plan
      description: RqCR Request manual intervention to activities covered by the plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialMarketInformationAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Grant':
    put:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: GrCR Grant specific use of bank managed market information
      description: GrCR Grant specific use of bank managed market information
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/FinancialMarketInformationAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Retrieve':
    get:
      tags:
        - CR - FinancialMarketInformationAdministrativePlan
      summary: ReCR Retrieve details about the financial market information management activity
      description: ReCR Retrieve details about the financial market information management activity
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/FinancialMarketInformationAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Consolidation/{consolidationid}/Retrieve':
    get:
      tags:
        - BQ - Consolidation
      summary: ReBQ Retrieve details about the consolidation of source data
      description: ReBQ Retrieve details about the consolidation of source data
      operationId: RetrieveConsolidation
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
        - $ref: '#/components/parameters/consolidationid'
      responses:
        '200':
          $ref: '#/components/responses/Consolidation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Improvement/{improvementid}/Retrieve':
    get:
      tags:
        - BQ - Improvement
      summary: ReBQ Retrieve details about the data improvement activities
      description: ReBQ Retrieve details about the data improvement activities
      operationId: RetrieveImprovement
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
        - $ref: '#/components/parameters/improvementid'
      responses:
        '200':
          $ref: '#/components/responses/Improvement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Reporting/Create':
    post:
      tags:
        - BQ - Reporting
      summary: CrBQ Create a specific report view of the financial market information
      description: CrBQ Create a specific report view of the financial market information
      operationId: CreateReporting
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/Reporting'
      responses:
        '200':
          $ref: '#/components/responses/Reporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Reporting/{reportingid}/Update':
    put:
      tags:
        - BQ - Reporting
      summary: UpBQ Update properties of a structured view/report
      description: UpBQ Update properties of a structured view/report
      operationId: UpdateReporting
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
        - $ref: '#/components/parameters/reportingid'
      requestBody:
        $ref: '#/components/requestBodies/Reporting'
      responses:
        '200':
          $ref: '#/components/responses/Reporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Reporting/{reportingid}/Capture':
    put:
      tags:
        - BQ - Reporting
      summary: CaBQ Capture usage details for the managed financial information/reports
      description: CaBQ Capture usage details for the managed financial information/reports
      operationId: CaptureReporting
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
        - $ref: '#/components/parameters/reportingid'
      requestBody:
        $ref: '#/components/requestBodies/Reporting'
      responses:
        '200':
          $ref: '#/components/responses/Reporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Reporting/{reportingid}/Execute':
    put:
      tags:
        - BQ - Reporting
      summary: ExBQ Execute an automated action for a report
      description: ExBQ Execute an automated action for a report
      operationId: ExecuteReporting
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
        - $ref: '#/components/parameters/reportingid'
      requestBody:
        $ref: '#/components/requestBodies/Reporting'
      responses:
        '200':
          $ref: '#/components/responses/Reporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Reporting/{reportingid}/Request':
    put:
      tags:
        - BQ - Reporting
      summary: RqBQ Request manual intervention
      description: RqBQ Request manual intervention
      operationId: RequestReporting
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
        - $ref: '#/components/parameters/reportingid'
      requestBody:
        $ref: '#/components/requestBodies/Reporting'
      responses:
        '200':
          $ref: '#/components/responses/Reporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketInformationManagement/{marketinformationmanagementid}/Reporting/{reportingid}/Retrieve':
    get:
      tags:
        - BQ - Reporting
      summary: ReBQ Retrieve details about managed financial market reporting activity
      description: ReBQ Retrieve details about managed financial market reporting activity
      operationId: RetrieveReporting
      parameters:
        - $ref: '#/components/parameters/marketinformationmanagementid'
        - $ref: '#/components/parameters/reportingid'
      responses:
        '200':
          $ref: '#/components/responses/Reporting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - \r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A record of the update history of the content ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Date and time at which the range starts. (ISO20022)
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: 'Is the report itself, including historical versions as appropriate'
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "Sets out the delivery schedule for content ||\r\n|"
    Reporting:
      type: object
      properties:
        FinancialMarketInformationReport:
          $ref: '#/components/schemas/report'
        FinancialMarketInformationReportType:
          $ref: '#/components/schemas/reporttypevalues'
        FinancialMarketInformationReportDescription:
          $ref: '#/components/schemas/text'
        FinancialMarketInformationReportSchedule:
          $ref: '#/components/schemas/schedule'
        FinancialMarketInformationReportAccessHistory:
          type: string
          description: Is a log/record of access made to the report by bank users
          format: object
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "The external agency/source of financial market information ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Work documentation, forms and schedules produced and referenced during the enquiry'
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Output of the improvement task that is recorded back to the Financial Market Information Database
    Improvement:
      type: object
      properties:
        FinancialMarketInformationImprovementTaskType:
          $ref: '#/components/schemas/text'
        FinancialMarketInformationImprovementTaskSources:
          type: string
          description: References to the different sources of financial market information used to improve the content (can be primary source and comparison data)
          format: object
        FinancialMarketInformationImprovementTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        FinancialMarketInformationImprovementTaskResult:
          $ref: '#/components/schemas/task'
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: ">\r\n* `FeeFeature` - This refers to the functionality in a system or platform that manages, calculates, or displays fees associated with specific transactions or services.\r\n* `InterestFeature` - This feature calculates and tracks interest earnings or charges on accounts, loans, or investments over time.\r\n* `WithdrawalFeature` - The withdraw feature typically refers to an option or functionality that allows users to retrieve or remove something from a system or platform.\r\n* `DepositFeature` - This refers to a functionality that allows users to add funds to an account or system, often by transferring money from another source.\r\n* `SweepFeature` - \r\n* `LienFeature` - \r\n* `PaymentFeature` - This refers to the functionality that facilitates or tracks the transfer of funds for a purchase or settlement of dues.\r\n* `RepaymentFeature` - This feature facilitates or manages the process of paying back borrowed funds, such as loans, credit card balances, or advances.\r\n* `LimitFeature` - This feature sets, monitors, or enforces restrictions on the maximum amount that can be accessed, spent, or transacted within a system.\r\n* `OverdraftFeature` - This functionality allows users to withdraw more money than what is available in their account balance, often up to a predefined limit.\r\n* `StatementFeature` - The statement feature refers to a functionality in banking, finance, or digital platforms that provides users with a detailed record of their transactions or activities over a specific period.\r\n* `CurrencyExchangeFeature` - This feature enables users to convert funds from one currency to another at prevailing exchange rates, often within financial or payment platforms.\r\n* `PriceFeature` - This feature involves displaying or managing the price of goods, services, or financial instruments within a platform.\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: 'Key properties of the report used in its improvement (e.g. date created, qualifications of integrity)'
    Consolidation:
      type: object
      properties:
        FinancialMarketInformationServiceReport:
          $ref: '#/components/schemas/report'
        FinancialMarketInformationServiceReportProperties:
          $ref: '#/components/schemas/feature'
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    financialmarketinformationservice:
      type: object
      properties:
        FinancialMarketInformationService:
          type: string
          description: An information service to consolidate market information from multiple sources and in any suitable media/format in order to build a bank financial market knowledge-base.
          format: class
      description: "Reference to the external sources of financial market information. Can be an ongoing service or some form of report ||\r\n|"
    informationservicetypevalues:
      enum:
        - AdvisoryService
        - ReportingService
        - FinancialInformationService
      type: string
      description: "Defines the type of information service (e.g. a regular feed, periodic report) ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: ''
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementstatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementstatus:
      type: object
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/status'
        AgreementStatusType:
          $ref: '#/components/schemas/agreementstatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: ''
    serviceagreement:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/text'
        ServiceReference:
          $ref: '#/components/schemas/service'
        AgreementReference:
          $ref: '#/components/schemas/agreement'
      description: "Reference to any agreement covering access to the external service ||\r\n|"
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: "The consolidated improved information, includes current and past historical records as necessary ||\r\n|"
    FinancialMarketInformationAdministrativePlan:
      type: object
      properties:
        FinancialMarketInformationService:
          $ref: '#/components/schemas/financialmarketinformationservice'
        FinancialMarketInformationProvider:
          $ref: '#/components/schemas/involvedparty'
        FinancialMarketinformationDescription:
          $ref: '#/components/schemas/text'
        FinancialMarketInformationServiceType:
          $ref: '#/components/schemas/informationservicetypevalues'
        FinancialMarketInformationServiceSchedule:
          $ref: '#/components/schemas/schedule'
        FinancialMarketInformationServiceAgreement:
          $ref: '#/components/schemas/serviceagreement'
        FinancialMarketInformationDatabase:
          type: string
          description: Refers to the consolidated financial market information that is enhanced/improved by the bank for internal reference. This is a collection of different subject areas for which a bank perspective is maintained
          format: object
        FinancialMarketInformationSubjectArea:
          $ref: '#/components/schemas/subject'
        FinancialMarketInformationSubjectAreaDescription:
          $ref: '#/components/schemas/text'
        FinancialMarketInformationSubjectAreaUpdateHistory:
          $ref: '#/components/schemas/text'
        FinancialMarketInformationSubjectAreaRecord:
          $ref: '#/components/schemas/subject'
      description: "Handle and assign the day to day activities, capture time, costs and income for an operational unit within Market Information Management. \n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    FinancialMarketInformationAdministrativePlan:
      description: FinancialMarketInformationAdministrativePlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialMarketInformationAdministrativePlan'
    Consolidation:
      description: Consolidation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consolidation'
    Improvement:
      description: Improvement
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Improvement'
    Reporting:
      description: Reporting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reporting'
  parameters:
    marketinformationmanagementid:
      name: marketinformationmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    consolidationid:
      name: consolidationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    improvementid:
      name: improvementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    reportingid:
      name: reportingid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    FinancialMarketInformationAdministrativePlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialMarketInformationAdministrativePlan'
      required: true
    Reporting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reporting'
      required: true