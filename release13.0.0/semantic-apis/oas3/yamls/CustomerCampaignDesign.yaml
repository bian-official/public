openapi: 3.0.1
info:
  title: Customer Campaign Design
  description: Design and refine customer campaign specifications based on their impact
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerCampaignDesign/13.0.0
paths:
  /CustomerCampaignDesign/Create:
    post:
      tags:
        - CR - CustomerCampaignSpecification
      summary: CrCR Create or register an imported customer campaign design
      description: CrCR Create or register an imported customer campaign design
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignSpecification'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignDesign/{customercampaigndesignid}/Update':
    put:
      tags:
        - CR - CustomerCampaignSpecification
      summary: UpCr Update details of a customer campaign specification or usage record
      description: UpCr Update details of a customer campaign specification or usage record
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customercampaigndesignid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignSpecification'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignDesign/{customercampaigndesignid}/Control':
    put:
      tags:
        - CR - CustomerCampaignSpecification
      summary: CoCr Control the use of a customer campaign specification
      description: CoCr Control the use of a customer campaign specification
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customercampaigndesignid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignSpecification'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignDesign/{customercampaigndesignid}/Exchange':
    put:
      tags:
        - CR - CustomerCampaignSpecification
      summary: 'EcCR Accept, reject, etc. a customer campaign specification'
      description: 'EcCR Accept, reject, etc. a customer campaign specification'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/customercampaigndesignid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignSpecification'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignDesign/{customercampaigndesignid}/Capture':
    put:
      tags:
        - CR - CustomerCampaignSpecification
      summary: CaCR Capture impact feedback against a customer campaign specification
      description: CaCR Capture impact feedback against a customer campaign specification
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/customercampaigndesignid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignSpecification'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignDesign/{customercampaigndesignid}/Execute':
    put:
      tags:
        - CR - CustomerCampaignSpecification
      summary: ExCR Execute an automated action for a customer campaign specification
      description: ExCR Execute an automated action for a customer campaign specification
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/customercampaigndesignid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignSpecification'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignDesign/{customercampaigndesignid}/Request':
    put:
      tags:
        - CR - CustomerCampaignSpecification
      summary: RqCR Request manual intervention with a customer campaign specification
      description: RqCR Request manual intervention with a customer campaign specification
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customercampaigndesignid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignSpecification'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignDesign/{customercampaigndesignid}/Retrieve':
    get:
      tags:
        - CR - CustomerCampaignSpecification
      summary: ReCR Retrieve details about a customer campaign specification
      description: ReCR Retrieve details about a customer campaign specification
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customercampaigndesignid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignSpecification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    designspecificationinvolvementtypevalues:
      enum:
        - Designer
        - Owner
        - Manager
        - Responsibleparty
      type: string
      description: ">\r\n* `Designer` - \r\n* `Owner` - \r\n* `Manager` - \r\n* `Responsibleparty` - \r\n"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The result/impact of the overall customer campaign event (that can include multiple identified leads/opportunities) ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the business unit responsible for the campaign execution ||\r\n|"
    designspecificationstatustypevalues:
      enum:
        - UnderDevelopment
        - InUse
        - UnderReview
        - Available
        - In-Force
        - Suspended
      type: string
      description: ">\r\n* `UnderDevelopment` - \r\n* `InUse` - \r\n* `UnderReview` - \r\n* `Available` - \r\n* `In-Force` - \r\n* `Suspended` - \r\n"
    designspecificationtypevalues:
      enum:
        - CampaignDesignSpecification
        - ProductDesignSpecification
        - ModelDesignSpecification
        - StandardDesignSpecification
      type: string
      description: ">\r\n* `CampaignDesignSpecification` - \r\n* `ProductDesignSpecification` - \r\n* `ModelDesignSpecification` - \r\n* `StandardDesignSpecification` - \r\n"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The schedule and timing of the definition and update/revisions of the specification aspect
    designspecification:
      type: object
      properties:
        DesignSpecificationStatus:
          $ref: '#/components/schemas/designspecificationstatustypevalues'
        DesignSpecificationVersion:
          $ref: '#/components/schemas/text'
        DesignSpecificationType:
          $ref: '#/components/schemas/designspecificationtypevalues'
        DesignSpecificationDescription:
          $ref: '#/components/schemas/text'
        DesignSpecificationSchedule:
          $ref: '#/components/schemas/schedule'
      description: Reference to Design Specification
    designspecificationaspecttypevalues:
      enum:
        - Testing
        - Production
        - FunctionalRequirement
      type: string
      description: ">\r\n* `Testing` - \r\n* `Production` - \r\n* `FunctionalRequirement` - \r\n"
    designspecificationaspect:
      type: object
      properties:
        DesignSpecificationAspectType:
          $ref: '#/components/schemas/designspecificationaspecttypevalues'
      description: 'Reference to Design Specification Aspect '
    customercampaigntypevalues:
      enum:
        - ProductLaunchCampaign
        - BrandAwarenessCampaign
        - CustomerRetentionCampaign
        - ReferralCampaign
        - ReactivationCampaign
        - Cross-SellingAndUpsellingCampaign
      type: string
      description: "The type or category of customer campaign (e.g. cross-sell, up-sell, retention) ||\r\n|"
    customercampaign:
      type: object
      properties:
        CustomerCampaignType:
          $ref: '#/components/schemas/customercampaigntypevalues'
      description: 'Reference to Customer Campaign which is going to be designed '
    SupportCapabilities:
      type: object
      properties:
        DesignSpecificationInvolvedPartyType:
          $ref: '#/components/schemas/designspecificationinvolvementtypevalues'
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/designspecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/designspecificationaspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/customercampaign'
      description: "The main design elements/views making up the overall specification\n\n*Content/Media Creation - inventory for deployment\n*Systems Deployment - e.g. resource/finance admin, analysis and reporting systems,"
    RequirementsDefinition:
      type: object
      properties:
        DesignSpecificationInvolvedPartyType:
          $ref: '#/components/schemas/designspecificationinvolvementtypevalues'
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/designspecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/designspecificationaspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/customercampaign'
      description: "The main design elements/views making up the overall specification\n\n*Content/Media Creation - inventory for deployment\n*Systems Deployment - e.g. resource/finance admin, analysis and reporting systems,"
    EngagementModel:
      type: object
      properties:
        DesignSpecificationInvolvedPartyType:
          $ref: '#/components/schemas/designspecificationinvolvementtypevalues'
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/designspecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/designspecificationaspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/customercampaign'
      description: "The main design elements/views making up the overall specification\n\n*Content/Media Creation - inventory for deployment\n*Systems Deployment - e.g. resource/finance admin, analysis and reporting systems,"
    ExecutionApproach:
      type: object
      properties:
        DesignSpecificationInvolvedPartyType:
          $ref: '#/components/schemas/designspecificationinvolvementtypevalues'
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/designspecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/designspecificationaspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/customercampaign'
      description: "The main design elements/views making up the overall specification\n\n*Content/Media Creation - inventory for deployment\n*Systems Deployment - e.g. resource/finance admin, analysis and reporting systems,"
    customercampaignmetrictypevalues:
      enum:
        - Click-ThroughRates(CTR)
        - ConversionRate
        - CustomerAcquisitionCost(CAC)
        - ReturnOnInvestment(ROI)
        - CustomerLifetimeValue(CLV)
        - EngagementRate
        - BounceRate
        - RepeatPurchaseRate
        - ChurnRate
      type: string
      description: ">\r\n* `Click-ThroughRates(CTR)` - Formula: (Number of Clicks / Number of Impressions) x 100\nIndicates the effectiveness of an ad in generating interest.\r\n* `ConversionRate` - Formula: (Number of Conversions / Number of Total Visitors) x 100\nMeasures the percentage of users who take the desired action (e.g., make a purchase).\r\n* `CustomerAcquisitionCost(CAC)` - Formula: Total Campaign Costs / Number of New Customers Acquired\nIndicates the cost to acquire a new customer.\r\n* `ReturnOnInvestment(ROI)` - Formula: (Net Profit / Campaign Cost) x 100\nMeasures the profitability of the campaign.\r\n* `CustomerLifetimeValue(CLV)` - Estimates the total revenue a business can expect from a single customer account.\r\n* `EngagementRate` - Formula: (Total Engagements / Total Impressions) x 100\nMeasures how actively users are engaging with the campaign content.\r\n* `BounceRate` - Formula: (Single Page Sessions / Total Sessions) x 100\nIndicates the percentage of visitors who leave the site after viewing only one page.\r\n* `RepeatPurchaseRate` - Formula: (Number of Returning Customers / Total Number of Customers) x 100\nIndicates the percentage of customers who make more than one purchase\r\n* `ChurnRate` - Formula: (Number of Customers Lost / Total Number of Customers at Start of Period) x 100\nMeasures the rate at which customers stop doing business with the company.\r\n"
    customercampaignmetric:
      type: object
      properties:
        CustomerCampaignMetricType:
          $ref: '#/components/schemas/customercampaignmetrictypevalues'
      description: "Metrics that are defined to assess the target and actual impact of the campaign ||\r\n|"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "A description of the target performance for the metric that can be defined for different usage scenarios as appropriate ||\r\n|"
    campaigndesignspecificationaspecttypevalues:
      enum:
        - RequirementsDefinition
        - ExecutionApproach
        - SupportCapabilities
        - EngagementModel
      type: string
      description: ">\r\n* `RequirementsDefinition` - To meet Coverage Planning Goals set by Management\n*Research Insights – prevailing customer demographics, psychographics, behaviors, needs and preferences by product and service\n*Applicable Goals – i.e. brand, sales, leads, behaviors, etc.\n*Target Segments – by demographics, behavior, engagement history etc.\n*Persona Definition – one or more to be targeted\r\n* `ExecutionApproach` - *Campaign Procedure – work steps/milestones, messages, value proposition, selling points\n*Chanel Usage (email, social media, direct mail, events, etc.)\n*Content/Media Development – design creative assets including embedded ‘calls to action’\n*Compliance Assurance – including data privacy requirements and ethical practices\r\n* `SupportCapabilities` - *Content/Media Creation – inventory for deployment\n*Systems Deployment – e.g. resource/finance admin, analysis and reporting systems,\r\n* `EngagementModel` - *Resource Plan - organization, budget, consumables & systems \n*Performance Reporting – tracking, analysis & reporting requirements\r\n"
    campaigndesignspecification:
      type: object
      properties:
        CampaignDesignSpecificationType:
          $ref: '#/components/schemas/campaigndesignspecificationaspecttypevalues'
      description: "The precise make-up of the campaign. Note that all customer campaign specifications are subject to versioning as the campaign is refined over time. ||\r\n|"
    yesnoindicator:
      type: object
      properties:
        Yesnoindicator:
          type: string
          description: "Indicates a \"Yes\" or \"No\" type of answer for an element. (ISO20022)\ntrue: Yes\nfalse: No"
          format: datatype
      description: 'An indicator specifying if the whether the customer has bought  the banking product or not. '
    productusage:
      type: object
      properties:
        ProductUsageDateTime:
          $ref: '#/components/schemas/datetime'
        ProductUsageVolume:
          $ref: '#/components/schemas/text'
        ProductUsageIndicator:
          $ref: '#/components/schemas/yesnoindicator'
      description: "Details how the campaign aligns with selected products and services, including pricing considerations ||\r\n|"
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: The type or category of product or service included in the campaign (e.g. current account) OBExternalProductType1Code| ()|Standard|UK Open Banking ()
    customercampaignarrangement:
      type: object
      properties:
        CustomerCampaignArrangement:
          type: string
          description: "An arrangement to fulfill the Customer Campaign. \n\nArrangements for a customer campaign refer to the various setups and configurations that help plan, execute, and manage the campaign effectively. These arrangements encompass several aspects, including strategic planning, organizational structure, execution tactics, and evaluation methods. \n\nFor example: \n\n\"Engagement Arrangement\" to specify how the product or service is adapted in the context of the campaign (e.g. discounted pricing/preferential rates, waived service fees, gifts or incentives) \n\n\"Transfer Pricing Arrangement\" to specify how any discounted costs are to be accounted for by the product fulfillment function (e.g. borne by fulfillment business unit, compensated by campaign budget)\n\n\n"
          format: class
      description: "A description of how the product or service is adapted in the context of the campaign (e.g. discounted pricing/preferential rates, waived service fees, gifts or incentives) ||\r\n|"
    customercampaignruleset:
      type: object
      properties:
        CustomerCampaignRuleSet:
          type: string
          description: "A set of rules to guide and direct the Customer Campaign. \n\nCustomer campaign rule sets refer to the guidelines and parameters that govern how a campaign is executed and managed. These rules ensure that the campaign is consistent, targeted, and effective. \n\nFor example:\n\n\"Execution Guideline\": The guideline for the execution of the campaign.\n\n\"Eligibility Criteria\": The eligibility criteria to be applied to select suitable candidates for the customer campaign. (Note candidate lists are developed by Campaign Execution)\n\n\"Interaction Guide\": The guideline that provides the structured narrative and any pricing/negotiating frameworks which are used in the execution of the campaign. \n\nRule sets involved in customer campaigns are the predefined guidelines and criteria used to design, implement, and measure the effectiveness of marketing efforts"
          format: class
      description: "Provides the structured narrative and any pricing/negotiating frameworks that are used in the execution of the campaign ||\r\n|"
    customercampaignrequirement:
      type: object
      properties:
        CustomerCampaignRequirement:
          type: string
          description: ''
          format: class
      description: "Defines any qualifications or credentials required of the bank unit or employees to execute the campaign (e.g. product certified, sign-off authority level) ||\r\n|"
    iteminventory:
      type: object
      properties:
        ItemInventoryType:
          $ref: '#/components/schemas/text'
      description: "Design specification of any consumables that are to be used in the execution of the campaign (e.g. brochures) ||\r\n|"
    worksteptypevalues:
      type: object
      properties:
        Worksteptypevalues:
          type: string
          description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    workstep:
      type: object
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/text'
        WorkstepType:
          $ref: '#/components/schemas/worksteptypevalues'
        WorkstepDescription:
          $ref: '#/components/schemas/text'
        WorkstepDateTime:
          $ref: '#/components/schemas/datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/workproduct'
      description: A workstep to execute the campaign
    campaignprocedureworksteptypevalues:
      enum:
        - CandidateSelection
        - Execution
        - AnalysisFeedback
      type: string
      description: ">\r\n* `CandidateSelection` - The initial selection and confirmation of active customers that are to be included in the campaign\r\n* `Execution` - Execution of the customer interaction, presenting the campaign details, recording the customer response\r\n* `AnalysisFeedback` - Analyzing the impact of the campaign and providing feedback to help refine/recalibrate the campaign specification\r\n"
    customercampaignprocedure:
      type: object
      properties:
        CustomerCampaignProcedureWorkstep:
          $ref: '#/components/schemas/workstep'
        CustomerCampaignProcedureWorkstepType:
          $ref: '#/components/schemas/campaignprocedureworksteptypevalues'
      description: "Reference to the customer campaign execution event ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Details of the deployment set-up/configuration of the campaign for reference Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    CustomerCampaignSpecification:
      type: object
      properties:
        CustomerCampaignType:
          $ref: '#/components/schemas/customercampaigntypevalues'
        CustomerCampaignDescription:
          $ref: '#/components/schemas/text'
        CustomerCampaignMetrics:
          $ref: '#/components/schemas/customercampaignmetric'
        CustomerCampaignMetricDefinition:
          $ref: '#/components/schemas/text'
        CustomerCampaignMetricGoal:
          $ref: '#/components/schemas/goal'
        CustomerCampaignSpecification:
          $ref: '#/components/schemas/campaigndesignspecification'
        CustomerCampaignProductandServiceUsage:
          $ref: '#/components/schemas/productusage'
        CustomerCampaignProductandServiceType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductandServiceCampaignEngagementDescription:
          $ref: '#/components/schemas/customercampaignarrangement'
        ProductandServiceCampaignTransferPricingArrangement:
          type: string
          description: 'Describes how any discounted costs are to be accounted for by the product fulfillment function (e.g. borne by fulfillment business unit, compensated by campaign budget)'
          format: customercampaignmanagement
        CustomerCampaignExecutionGuidelines:
          $ref: '#/components/schemas/customercampaignruleset'
        CustomerCampaignEligibility:
          $ref: '#/components/schemas/customercampaignruleset'
        CustomerCampaignQualifications:
          $ref: '#/components/schemas/customercampaignrequirement'
        CustomerCampaignInteractionGuide:
          $ref: '#/components/schemas/customercampaignruleset'
        CustomerCampaignConsumables:
          $ref: '#/components/schemas/iteminventory'
        CustomerCampaignConsumableType:
          $ref: '#/components/schemas/text'
        CustomerCampaignConsumableDescription:
          $ref: '#/components/schemas/text'
        CustomerCampaignPerformanceRecord:
          $ref: '#/components/schemas/text'
        CustomerCampaignProcedureInstanceReference:
          $ref: '#/components/schemas/customercampaignprocedure'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerCampaignProcedureSet-up:
          $ref: '#/components/schemas/arrangement'
        CustomerCampaignProcedureVersionNumber:
          $ref: '#/components/schemas/text'
        CustomerCampaignProcedureResult:
          $ref: '#/components/schemas/text'
      description: "Create and maintain a design for a procedure, product/service model or other such entity  within Customer Campaign Design. \nExample: Create and maintain product designs and analytical models."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerCampaignSpecification:
      description: CustomerCampaignSpecification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCampaignSpecification'
  parameters:
    customercampaigndesignid:
      name: customercampaigndesignid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerCampaignSpecification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCampaignSpecification'
      required: true