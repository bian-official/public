openapi: 3.0.1
info:
  title: Market Data Switch Operation
  description: This service domain operates the internal information distribution facility/switch in compliance with administered external subscription information feed service access rights. Note the content is retrieved by the Market Feed Operation service domain from the various external feed services. Internal information can also be published over the switch from various bank sources (such as bank rates provided by treasury).
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/MarketDataSwitchOperation/13.0.0
paths:
  /MarketDataSwitchOperation/Initiate:
    post:
      tags:
        - CR - InformationFeedSwitchOperatingSession
      summary: InCR Initiate a market data switch operating session
      description: InCR Initiate a market data switch operating session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InformationFeedSwitchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/InformationFeedSwitchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Update':
    put:
      tags:
        - CR - InformationFeedSwitchOperatingSession
      summary: UpCR Update details for the market data switch operating session
      description: UpCR Update details for the market data switch operating session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
      requestBody:
        $ref: '#/components/requestBodies/InformationFeedSwitchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/InformationFeedSwitchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Control':
    put:
      tags:
        - CR - InformationFeedSwitchOperatingSession
      summary: CoCR Control the operating session (e.g. suspend)
      description: CoCR Control the operating session (e.g. suspend)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
      requestBody:
        $ref: '#/components/requestBodies/InformationFeedSwitchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/InformationFeedSwitchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Execute':
    put:
      tags:
        - CR - InformationFeedSwitchOperatingSession
      summary: ExCR Execute an automated task in the session (e.g. refresh data)
      description: ExCR Execute an automated task in the session (e.g. refresh data)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
      requestBody:
        $ref: '#/components/requestBodies/InformationFeedSwitchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/InformationFeedSwitchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Request':
    put:
      tags:
        - CR - InformationFeedSwitchOperatingSession
      summary: RqCR Request manual intervention in the session (e.g. change the service make-up)
      description: RqCR Request manual intervention in the session (e.g. change the service make-up)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
      requestBody:
        $ref: '#/components/requestBodies/InformationFeedSwitchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/InformationFeedSwitchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Retrieve':
    get:
      tags:
        - CR - InformationFeedSwitchOperatingSession
      summary: ReCR Retrieve details about the market data switch operating session
      description: ReCR Retrieve details about the market data switch operating session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
      responses:
        '200':
          $ref: '#/components/responses/InformationFeedSwitchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/FeedUpload/{feeduploadid}/Update':
    put:
      tags:
        - BQ - FeedUpload
      summary: UpBQ Update details for the feed upload
      description: UpBQ Update details for the feed upload
      operationId: UpdateFeedUpload
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/feeduploadid'
      requestBody:
        $ref: '#/components/requestBodies/FeedUpload'
      responses:
        '200':
          $ref: '#/components/responses/FeedUpload'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/FeedUpload/{feeduploadid}/Exchange':
    put:
      tags:
        - BQ - FeedUpload
      summary: 'EcBQ Accept, reject, etc. the feed upload'
      description: 'EcBQ Accept, reject, etc. the feed upload'
      operationId: ExchangeFeedUpload
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/feeduploadid'
      requestBody:
        $ref: '#/components/requestBodies/FeedUpload'
      responses:
        '200':
          $ref: '#/components/responses/FeedUpload'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/FeedUpload/{feeduploadid}/Retrieve':
    get:
      tags:
        - BQ - FeedUpload
      summary: ReBQ Retrieve details about the feed upload activity
      description: ReBQ Retrieve details about the feed upload activity
      operationId: RetrieveFeedUpload
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/feeduploadid'
      responses:
        '200':
          $ref: '#/components/responses/FeedUpload'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/InternalPublication/Initiate':
    post:
      tags:
        - BQ - InternalPublication
      summary: InBQ Initiate internal publication of information
      description: InBQ Initiate internal publication of information
      operationId: InitiateInternalPublication
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
      requestBody:
        $ref: '#/components/requestBodies/InternalPublication'
      responses:
        '200':
          $ref: '#/components/responses/InternalPublication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/InternalPublication/{internalpublicationid}/Update':
    put:
      tags:
        - BQ - InternalPublication
      summary: UpBQ Update details of internal publication
      description: UpBQ Update details of internal publication
      operationId: UpdateInternalPublication
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/internalpublicationid'
      requestBody:
        $ref: '#/components/requestBodies/InternalPublication'
      responses:
        '200':
          $ref: '#/components/responses/InternalPublication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/InternalPublication/{internalpublicationid}/Exchange':
    put:
      tags:
        - BQ - InternalPublication
      summary: 'EcBQ Accept, reject, etc. the internal upload'
      description: 'EcBQ Accept, reject, etc. the internal upload'
      operationId: ExchangeInternalPublication
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/internalpublicationid'
      requestBody:
        $ref: '#/components/requestBodies/InternalPublication'
      responses:
        '200':
          $ref: '#/components/responses/InternalPublication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/InternalPublication/{internalpublicationid}/Retrieve':
    get:
      tags:
        - BQ - InternalPublication
      summary: ReBQ Retrieve details about the internal publication task
      description: ReBQ Retrieve details about the internal publication task
      operationId: RetrieveInternalPublication
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/internalpublicationid'
      responses:
        '200':
          $ref: '#/components/responses/InternalPublication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Distribution/Initiate':
    post:
      tags:
        - BQ - Distribution
      summary: InBQ User subscription to the switch
      description: InBQ User subscription to the switch
      operationId: InitiateDistribution
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Distribution/{distributionid}/Update':
    put:
      tags:
        - BQ - Distribution
      summary: UpBQ User subscription details
      description: UpBQ User subscription details
      operationId: UpdateDistribution
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/distributionid'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Distribution/{distributionid}/Execute':
    put:
      tags:
        - BQ - Distribution
      summary: ExBQ Execute an automated action to the service (e.g. select content)
      description: ExBQ Execute an automated action to the service (e.g. select content)
      operationId: ExecuteDistribution
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/distributionid'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Distribution/{distributionid}/Request':
    put:
      tags:
        - BQ - Distribution
      summary: RqBQ Request manual intervention for  the service (e.g. request a usage profile change)
      description: RqBQ Request manual intervention for  the service (e.g. request a usage profile change)
      operationId: RequestDistribution
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/distributionid'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/MarketDataSwitchOperation/{marketdataswitchoperationid}/Distribution/{distributionid}/Retrieve':
    get:
      tags:
        - BQ - Distribution
      summary: ReBQ Retrieve details about the user switch session
      description: ReBQ Retrieve details about the user switch session
      operationId: RetrieveDistribution
      parameters:
        - $ref: '#/components/parameters/marketdataswitchoperationid'
        - $ref: '#/components/parameters/distributionid'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: 'The name of service. '
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: A detailed explanation or commentary of service
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of service.
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'A characteristic of service which refers to the lifecycle of service (e.g., initiated, active, de-active, etc.) '
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: ">\r\n* `FeeFeature` - This refers to the functionality in a system or platform that manages, calculates, or displays fees associated with specific transactions or services.\r\n* `InterestFeature` - This feature calculates and tracks interest earnings or charges on accounts, loans, or investments over time.\r\n* `WithdrawalFeature` - The withdraw feature typically refers to an option or functionality that allows users to retrieve or remove something from a system or platform.\r\n* `DepositFeature` - This refers to a functionality that allows users to add funds to an account or system, often by transferring money from another source.\r\n* `SweepFeature` - \r\n* `LienFeature` - \r\n* `PaymentFeature` - This refers to the functionality that facilitates or tracks the transfer of funds for a purchase or settlement of dues.\r\n* `RepaymentFeature` - This feature facilitates or manages the process of paying back borrowed funds, such as loans, credit card balances, or advances.\r\n* `LimitFeature` - This feature sets, monitors, or enforces restrictions on the maximum amount that can be accessed, spent, or transacted within a system.\r\n* `OverdraftFeature` - This functionality allows users to withdraw more money than what is available in their account balance, often up to a predefined limit.\r\n* `StatementFeature` - The statement feature refers to a functionality in banking, finance, or digital platforms that provides users with a detailed record of their transactions or activities over a specific period.\r\n* `CurrencyExchangeFeature` - This feature enables users to convert funds from one currency to another at prevailing exchange rates, often within financial or payment platforms.\r\n* `PriceFeature` - This feature involves displaying or managing the price of goods, services, or financial instruments within a platform.\r\n"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security
    service:
      type: object
      properties:
        ServiceName:
          $ref: '#/components/schemas/name'
        ServiceDescription:
          $ref: '#/components/schemas/text'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ServiceIdentification:
          $ref: '#/components/schemas/identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/status'
        ServiceFeature:
          $ref: '#/components/schemas/feature'
      description: "Refers to the market feed service - Note: the service operated by SD Information Provider Operation actually extracts the feed content ||\r\n|"
    FeedUpload:
      type: object
      properties:
        MarketInformationFeedServiceRecordReference:
          type: string
          description: 'Reference to packets of information/records provided, perhaps with real-time updates'
          format: object
        MarketInformationFeedServiceRecord:
          $ref: '#/components/schemas/service'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    profile:
      type: object
      properties:
        Profile:
          type: string
          description: A brief description of the characteristics of something or someone. (Business Dictionary)
          format: class
      description: "Sets out the range of information services/pages available - possibly with some form of selection menu ||\r\n|"
    InternalPublication:
      type: object
      properties:
        InternalInformationFeedServiceReference:
          $ref: '#/components/schemas/service'
        InternalInformationFeedServiceProfile:
          $ref: '#/components/schemas/profile'
        InternalInformationFeedServiceRecordReference:
          type: string
          description: Reference to 'live' internal pages of information that is published
          format: object
        InternalInformationFeedServiceRecord:
          $ref: '#/components/schemas/service'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The users are registered to access different services/information made available through the switch - it is used to control information distribution
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The time the session was active
    sessiontypevalues:
      enum:
        - ContactHandlingSession
        - CustomerDialogueSession
        - ChannelOperatingSession
        - GatewayOperatingSession
        - SwitchOperatingSession
        - DeviceOperatingSession
        - InterbankTransactionOperatingSession
        - CorrespondenceOperatingSession
        - InteractiveHelpOperatingSession
        - ACHOperatingSession
      type: string
      description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - \r\n"
    sessiontype:
      type: object
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/name'
        SessionType:
          $ref: '#/components/schemas/sessiontypevalues'
      description: 'Specifies the classification of session like Customer Contact Session, Channel Operating Session, Device Operating Session, etc.'
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: ''
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
      description: This tracks the switch service content that the user will receive for this session - reflecting their user access rights
    Distribution:
      type: object
      properties:
        MarketDataSwitchUserAccessRightsRecordReference:
          type: string
          description: Reference to a user's switch service access rights
          format: object
        MarketDataSwitchUserAccessRightsRecord:
          $ref: '#/components/schemas/arrangement'
        MarketDataSwitchServiceUserSessionRecord:
          $ref: '#/components/schemas/session'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    InformationFeedSwitchOperatingSession:
      type: object
      properties:
        MarketInformationFeedServiceReference:
          $ref: '#/components/schemas/service'
        MarketInformationFeedServiceProfile:
          $ref: '#/components/schemas/profile'
      description: 'Operate equipment and/or a largely automated facility within Market Data Switch Operation. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InformationFeedSwitchOperatingSession:
      description: InformationFeedSwitchOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InformationFeedSwitchOperatingSession'
    FeedUpload:
      description: FeedUpload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeedUpload'
    InternalPublication:
      description: InternalPublication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalPublication'
    Distribution:
      description: Distribution
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Distribution'
  parameters:
    marketdataswitchoperationid:
      name: marketdataswitchoperationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    feeduploadid:
      name: feeduploadid
      in: path
      required: true
      style: simple
      schema:
        type: string
    internalpublicationid:
      name: internalpublicationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    distributionid:
      name: distributionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    InformationFeedSwitchOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InformationFeedSwitchOperatingSession'
      required: true
    FeedUpload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeedUpload'
      required: true
    InternalPublication:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalPublication'
      required: true
    Distribution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Distribution'
      required: true