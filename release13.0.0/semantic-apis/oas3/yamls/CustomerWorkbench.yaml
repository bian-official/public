openapi: 3.0.1
info:
  title: Customer Workbench
  description: This service domain represents customer side devices. Most commonly providing a customer access portal to the banks products and services through any suitable channel and device
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerWorkbench/13.0.0
paths:
  /CustomerWorkbench/Initiate:
    post:
      tags:
        - CR - CustomerWorkbenchOperatingSession
      summary: InCR Initiate a customer workbench operating session
      description: InCR Initiate a customer workbench operating session
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CustomerWorkbenchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CustomerWorkbenchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Update':
    put:
      tags:
        - CR - CustomerWorkbenchOperatingSession
      summary: UpCR Update details of a workbench session
      description: UpCR Update details of a workbench session
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerWorkbenchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CustomerWorkbenchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Control':
    put:
      tags:
        - CR - CustomerWorkbenchOperatingSession
      summary: CoCR Control a workbench session (e.g. terminate)
      description: CoCR Control a workbench session (e.g. terminate)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerWorkbenchOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CustomerWorkbenchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Retrieve':
    get:
      tags:
        - CR - CustomerWorkbenchOperatingSession
      summary: ReCR Retrieve details about the workbench session
      description: ReCR Retrieve details about the workbench session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerWorkbenchOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/SWUpdate/Initiate':
    post:
      tags:
        - BQ - SWUpdate
      summary: InBQ Initiate a SW update
      description: InBQ Initiate a SW update
      operationId: InitiateSWUpdate
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/SWUpdate'
      responses:
        '200':
          $ref: '#/components/responses/SWUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/SWUpdate/{swupdateid}/Exchange':
    put:
      tags:
        - BQ - SWUpdate
      summary: 'EcBQ Accept, reject etc a SW update'
      description: 'EcBQ Accept, reject etc a SW update'
      operationId: ExchangeSWUpdate
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/swupdateid'
      requestBody:
        $ref: '#/components/requestBodies/SWUpdate'
      responses:
        '200':
          $ref: '#/components/responses/SWUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/SWUpdate/{swupdateid}/Retrieve':
    get:
      tags:
        - BQ - SWUpdate
      summary: ReBQ Retrieve details about a SW update
      description: ReBQ Retrieve details about a SW update
      operationId: RetrieveSWUpdate
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/swupdateid'
      responses:
        '200':
          $ref: '#/components/responses/SWUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Broadcast/Initiate':
    post:
      tags:
        - BQ - Broadcast
      summary: InBQ Initiate a workstation broadcast
      description: InBQ Initiate a workstation broadcast
      operationId: InitiateBroadcast
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/Broadcast'
      responses:
        '200':
          $ref: '#/components/responses/Broadcast'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Broadcast/{broadcastid}/Request':
    put:
      tags:
        - BQ - Broadcast
      summary: ReBQ Retrieve details about a workstation broadcast
      description: ReBQ Retrieve details about a workstation broadcast
      operationId: RequestBroadcast
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/broadcastid'
      requestBody:
        $ref: '#/components/requestBodies/Broadcast'
      responses:
        '200':
          $ref: '#/components/responses/Broadcast'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Browsing/Initiate':
    post:
      tags:
        - BQ - Browsing
      summary: InBQ Initiate a browsing session
      description: InBQ Initiate a browsing session
      operationId: InitiateBrowsing
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/Browsing'
      responses:
        '200':
          $ref: '#/components/responses/Browsing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Browsing/{browsingid}/Execute':
    put:
      tags:
        - BQ - Browsing
      summary: ExBQ Execute tasks within a browsing session
      description: ExBQ Execute tasks within a browsing session
      operationId: ExecuteBrowsing
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/browsingid'
      requestBody:
        $ref: '#/components/requestBodies/Browsing'
      responses:
        '200':
          $ref: '#/components/responses/Browsing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Browsing/{browsingid}/Retrieve':
    get:
      tags:
        - BQ - Browsing
      summary: ReBQ Retrieve details about a browsing session
      description: ReBQ Retrieve details about a browsing session
      operationId: RetrieveBrowsing
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/browsingid'
      responses:
        '200':
          $ref: '#/components/responses/Browsing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Contact/Initiate':
    post:
      tags:
        - BQ - Contact
      summary: InBQ Initiate a contact with the bank
      description: InBQ Initiate a contact with the bank
      operationId: InitiateContact
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Contact/{contactid}/Update':
    put:
      tags:
        - BQ - Contact
      summary: UpBQ Update details for the contact
      description: UpBQ Update details for the contact
      operationId: UpdateContact
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/contactid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Contact/{contactid}/Execute':
    put:
      tags:
        - BQ - Contact
      summary: ExBQ Execute an automated action within the contact (e.g. self serve)
      description: ExBQ Execute an automated action within the contact (e.g. self serve)
      operationId: ExecuteContact
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/contactid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Contact/{contactid}/Request':
    put:
      tags:
        - BQ - Contact
      summary: RqBQ Request manual intervention in a contact (e.g. request service)
      description: RqBQ Request manual intervention in a contact (e.g. request service)
      operationId: RequestContact
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/contactid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Contact/{contactid}/Retrieve':
    get:
      tags:
        - BQ - Contact
      summary: ReBQ Retrieve details about a contact
      description: ReBQ Retrieve details about a contact
      operationId: RetrieveContact
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/contactid'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/ProductandServiceAccess/Initiate':
    post:
      tags:
        - BQ - ProductandServiceAccess
      summary: InBQ Initiate product/service access within the contact
      description: InBQ Initiate product/service access within the contact
      operationId: InitiateProductandServiceAccess
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceAccess'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/ProductandServiceAccess/{productandserviceaccessid}/Update':
    put:
      tags:
        - BQ - ProductandServiceAccess
      summary: UpBQ Update details for the product/service access
      description: UpBQ Update details for the product/service access
      operationId: UpdateProductandServiceAccess
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/productandserviceaccessid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceAccess'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/ProductandServiceAccess/{productandserviceaccessid}/Execute':
    put:
      tags:
        - BQ - ProductandServiceAccess
      summary: ExBQ Execute an automated action with the product/service access (e.g. self serve)
      description: ExBQ Execute an automated action with the product/service access (e.g. self serve)
      operationId: ExecuteProductandServiceAccess
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/productandserviceaccessid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceAccess'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/ProductandServiceAccess/{productandserviceaccessid}/Request':
    put:
      tags:
        - BQ - ProductandServiceAccess
      summary: RqBQ Request manual intervention in a product/service access (e.g. request service)
      description: RqBQ Request manual intervention in a product/service access (e.g. request service)
      operationId: RequestProductandServiceAccess
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/productandserviceaccessid'
      requestBody:
        $ref: '#/components/requestBodies/ProductandServiceAccess'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/ProductandServiceAccess/{productandserviceaccessid}/Retrieve':
    get:
      tags:
        - BQ - ProductandServiceAccess
      summary: ReBQ Retrieve details about product/service access
      description: ReBQ Retrieve details about product/service access
      operationId: RetrieveProductandServiceAccess
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
        - $ref: '#/components/parameters/productandserviceaccessid'
      responses:
        '200':
          $ref: '#/components/responses/ProductandServiceAccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerWorkbench/{customerworkbenchid}/Contact/Evaluate':
    post:
      tags:
        - BQ - Contact
      summary: Capture information to pass through the session
      description: Capture information to pass through the session
      operationId: EvaluateContact
      parameters:
        - $ref: '#/components/parameters/customerworkbenchid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The last update date time stamp for local bank software ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Date and time at which the range starts. (ISO20022)
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "The customer running the workbench device ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: Locally record of product/service screen access
    ProductandServiceAccess:
      type: object
      properties:
        CustomerDetailsPreferences:
          $ref: '#/components/schemas/text'
        ProductandServiceMenu:
          type: string
          description: Locally maintained structured dialogue to access bank services as appropriate
          format: object
        ProductandServiceMenuAccessLog:
          $ref: '#/components/schemas/log'
        AccessStartEndTime:
          $ref: '#/components/schemas/datetime'
        CustomerResidentFiles:
          type: string
          description: 'Local copies of requested information, application forms etc.'
          format: object
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    Contact:
      type: object
      properties:
        ContactStartEndTime:
          $ref: '#/components/schemas/datetime'
        ContactActivityLog:
          $ref: '#/components/schemas/log'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    SWUpdate:
      type: object
      properties:
        SWUpdateApplication:
          $ref: '#/components/schemas/text'
        SWUpdateVersion:
          $ref: '#/components/schemas/text'
        SWUpdateImage:
          $ref: '#/components/schemas/text'
        Date:
          $ref: '#/components/schemas/datetime'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    Browsing:
      type: object
      properties:
        CustomerURL:
          type: string
          description: The device URL can be used to detect known and repeat customer access
          format: object
        BankWebsiteURL:
          type: string
          description: The access URL to the public web based bank information
          format: object
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    Broadcast:
      type: object
      properties:
        CustomerWorkbenchBroadcastRecord:
          type: string
          description: Text of the broadcast message
          format: object
        CustomerWorkbenchBroadcastRecordDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    devicetypevalues:
      enum:
        - Securecardreader
        - Nonsecurecardreader
        - Mobile
        - Tablet
        - Personalcomputer
        - Othernational
        - Otherprivate
        - Wearable
        - Vehicle
        - Embedded
        - Keyfob
        - Jewellery
        - Sticker
        - Gamingdevice
        - Watch
        - Unknown
        - BiometricDevice
      type: string
      description: 'The type of user device (e.g. mobile, laptop, workstation ) CustomerDeviceTypeCode|CustomerDeviceTypeCode (https://www.iso20022.org/standardsrepository/type/CustomerDeviceTypeCode)|Standard|ISO20022 BM ()'
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: 'The bank''s access permissions (e.g. local storage access, administrator permissions, system download permission) Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()'
    CustomerWorkbenchOperatingSession:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerWorkbenchDeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        CustomerWorkbenchDeviceRegistration:
          type: string
          description: 'Reference to device properties used to identify the device  (e.g. URL, ANI, serial number)'
          format: object
        CustomerWorkbenchDeviceManufacturer:
          type: string
          description: The make of the device if known
          format: object
        CustomerWorkbenchDeviceOperatingSystemVersionNumber:
          type: string
          description: The operating system type and version (use to match downloaded software)
          format: number
        CustomerWorkbenchDeviceAccessPermissions:
          $ref: '#/components/schemas/arrangement'
        InstalledBankApplicationType:
          $ref: '#/components/schemas/text'
        InstalledBankApplicationVersionNumber:
          type: string
          description: The version number(s) of device resident bank software
          format: number
        LastUpdateDateandTime:
          $ref: '#/components/schemas/text'
      description: 'Operate equipment and/or a largely automated facility within Customer Workbench. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerWorkbenchOperatingSession:
      description: CustomerWorkbenchOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerWorkbenchOperatingSession'
    SWUpdate:
      description: SWUpdate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SWUpdate'
    Broadcast:
      description: Broadcast
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Broadcast'
    Browsing:
      description: Browsing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Browsing'
    Contact:
      description: Contact
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
    ProductandServiceAccess:
      description: ProductandServiceAccess
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductandServiceAccess'
  parameters:
    customerworkbenchid:
      name: customerworkbenchid
      in: path
      required: true
      style: simple
      schema:
        type: string
    swupdateid:
      name: swupdateid
      in: path
      required: true
      style: simple
      schema:
        type: string
    broadcastid:
      name: broadcastid
      in: path
      required: true
      style: simple
      schema:
        type: string
    browsingid:
      name: browsingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    contactid:
      name: contactid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productandserviceaccessid:
      name: productandserviceaccessid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerWorkbenchOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerWorkbenchOperatingSession'
      required: true
    SWUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SWUpdate'
      required: true
    Broadcast:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Broadcast'
      required: true
    Browsing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Browsing'
      required: true
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
      required: true
    ProductandServiceAccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductandServiceAccess'
      required: true