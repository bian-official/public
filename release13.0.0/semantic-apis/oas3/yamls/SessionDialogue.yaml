openapi: 3.0.1
info:
  title: Session Dialogue
  description: 'This service domain handles/structures the customer narrative during an interactive session. It consolidates and presents pertinent customer information and provides servicing guidelines with standard dialogue/scripting as appropriate. It can include the capability to provoke questions to capture key relationship and sales triggers. It also ensures the correct sequencing, dialogue content and actions are performed/initiated during the customer interaction. It may further leverage the session by passing on customer notifications, status updates and triggering sales/marketing efforts.'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/SessionDialogue/13.0.0
paths:
  /SessionDialogue/Initiate:
    post:
      tags:
        - CR - CustomerContactSessionProcedure
      summary: InCR Initiate a customer dialogue
      description: InCR Initiate a customer dialogue
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactSessionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerContactSessionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Update':
    put:
      tags:
        - CR - CustomerContactSessionProcedure
      summary: UpCR Update details of a customer dialogue
      description: UpCR Update details of a customer dialogue
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactSessionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerContactSessionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Control':
    put:
      tags:
        - CR - CustomerContactSessionProcedure
      summary: CoCR Control the processing of a dialogue (e.g. suspend)
      description: CoCR Control the processing of a dialogue (e.g. suspend)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactSessionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerContactSessionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Exchange':
    put:
      tags:
        - CR - CustomerContactSessionProcedure
      summary: 'EcCR Accept, verify, etc. a customer dialogue (e.g. accept proposal)'
      description: 'EcCR Accept, verify, etc. a customer dialogue (e.g. accept proposal)'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactSessionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerContactSessionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Execute':
    put:
      tags:
        - CR - CustomerContactSessionProcedure
      summary: ExCR Execute an automated task (e.g. self service offer process)
      description: ExCR Execute an automated task (e.g. self service offer process)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactSessionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerContactSessionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Request':
    put:
      tags:
        - CR - CustomerContactSessionProcedure
      summary: RqCR Request manual intervention (e.g. request servicing support)
      description: RqCR Request manual intervention (e.g. request servicing support)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerContactSessionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/CustomerContactSessionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Retrieve':
    get:
      tags:
        - CR - CustomerContactSessionProcedure
      summary: ReCR Retrieve details about a customer dialogue
      description: ReCR Retrieve details about a customer dialogue
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerContactSessionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Query/Initiate':
    post:
      tags:
        - BQ - Query
      summary: InBQ Initiate customer query handling
      description: InBQ Initiate customer query handling
      operationId: InitiateQuery
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/Query'
      responses:
        '200':
          $ref: '#/components/responses/Query'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Query/{queryid}/Update':
    put:
      tags:
        - BQ - Query
      summary: UpBQ Update details for query handling
      description: UpBQ Update details for query handling
      operationId: UpdateQuery
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/queryid'
      requestBody:
        $ref: '#/components/requestBodies/Query'
      responses:
        '200':
          $ref: '#/components/responses/Query'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Query/{queryid}/Retrieve':
    get:
      tags:
        - BQ - Query
      summary: ReBQ Retrieve details about query handling
      description: ReBQ Retrieve details about query handling
      operationId: RetrieveQuery
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/queryid'
      responses:
        '200':
          $ref: '#/components/responses/Query'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Authentication/{authenticationid}/Update':
    put:
      tags:
        - BQ - Authentication
      summary: UpBQ Update details for authentication processing
      description: UpBQ Update details for authentication processing
      operationId: UpdateAuthentication
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/authenticationid'
      requestBody:
        $ref: '#/components/requestBodies/Authentication'
      responses:
        '200':
          $ref: '#/components/responses/Authentication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Authentication/{authenticationid}/Retrieve':
    get:
      tags:
        - BQ - Authentication
      summary: ReBQ Retrieve details about authentication processing
      description: ReBQ Retrieve details about authentication processing
      operationId: RetrieveAuthentication
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/authenticationid'
      responses:
        '200':
          $ref: '#/components/responses/Authentication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Sales/Initiate':
    post:
      tags:
        - BQ - Sales
      summary: InBQ Initiate customer sales handling
      description: InBQ Initiate customer sales handling
      operationId: InitiateSales
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/Sales'
      responses:
        '200':
          $ref: '#/components/responses/Sales'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Sales/{salesid}/Update':
    put:
      tags:
        - BQ - Sales
      summary: UpBQ Update details for sales handling
      description: UpBQ Update details for sales handling
      operationId: UpdateSales
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/salesid'
      requestBody:
        $ref: '#/components/requestBodies/Sales'
      responses:
        '200':
          $ref: '#/components/responses/Sales'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Sales/{salesid}/Retrieve':
    get:
      tags:
        - BQ - Sales
      summary: ReBQ Retrieve details about sales handling
      description: ReBQ Retrieve details about sales handling
      operationId: RetrieveSales
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/salesid'
      responses:
        '200':
          $ref: '#/components/responses/Sales'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Offer/Initiate':
    post:
      tags:
        - BQ - Offer
      summary: InBQ Initiate customer offer handling
      description: InBQ Initiate customer offer handling
      operationId: InitiateOffer
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/Offer'
      responses:
        '200':
          $ref: '#/components/responses/Offer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Offer/{offerid}/Update':
    put:
      tags:
        - BQ - Offer
      summary: UpBQ Update details for offer handling
      description: UpBQ Update details for offer handling
      operationId: UpdateOffer
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/offerid'
      requestBody:
        $ref: '#/components/requestBodies/Offer'
      responses:
        '200':
          $ref: '#/components/responses/Offer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Offer/{offerid}/Retrieve':
    get:
      tags:
        - BQ - Offer
      summary: ReBQ Retrieve details about offer handling
      description: ReBQ Retrieve details about offer handling
      operationId: RetrieveOffer
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/offerid'
      responses:
        '200':
          $ref: '#/components/responses/Offer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/ProductorService/Initiate':
    post:
      tags:
        - BQ - ProductorService
      summary: InBQ Initiate customer product/service handling
      description: InBQ Initiate customer product/service handling
      operationId: InitiateProductorService
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/ProductorService'
      responses:
        '200':
          $ref: '#/components/responses/ProductorService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/ProductorService/{productorserviceid}/Update':
    put:
      tags:
        - BQ - ProductorService
      summary: UpBQ Update details for product/service handling
      description: UpBQ Update details for product/service handling
      operationId: UpdateProductorService
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/productorserviceid'
      requestBody:
        $ref: '#/components/requestBodies/ProductorService'
      responses:
        '200':
          $ref: '#/components/responses/ProductorService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/ProductorService/{productorserviceid}/Retrieve':
    get:
      tags:
        - BQ - ProductorService
      summary: ReBQ Retrieve details about product/service handling
      description: ReBQ Retrieve details about product/service handling
      operationId: RetrieveProductorService
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/productorserviceid'
      responses:
        '200':
          $ref: '#/components/responses/ProductorService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Case/Initiate':
    post:
      tags:
        - BQ - Case
      summary: InBQ Initiate customer case handling
      description: InBQ Initiate customer case handling
      operationId: InitiateCase
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/Case'
      responses:
        '200':
          $ref: '#/components/responses/Case'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Case/{caseid}/Update':
    put:
      tags:
        - BQ - Case
      summary: UpBQ Update details for case handling
      description: UpBQ Update details for case handling
      operationId: UpdateCase
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/caseid'
      requestBody:
        $ref: '#/components/requestBodies/Case'
      responses:
        '200':
          $ref: '#/components/responses/Case'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Case/{caseid}/Retrieve':
    get:
      tags:
        - BQ - Case
      summary: ReBQ Retrieve details about case handling
      description: ReBQ Retrieve details about case handling
      operationId: RetrieveCase
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/caseid'
      responses:
        '200':
          $ref: '#/components/responses/Case'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Order/Initiate':
    post:
      tags:
        - BQ - Order
      summary: InBQ Initiate customer order handling
      description: InBQ Initiate customer order handling
      operationId: InitiateOrder
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        '200':
          $ref: '#/components/responses/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Order/{orderid}/Update':
    put:
      tags:
        - BQ - Order
      summary: UpBQ Update details for order handling
      description: UpBQ Update details for order handling
      operationId: UpdateOrder
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/orderid'
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        '200':
          $ref: '#/components/responses/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Order/{orderid}/Retrieve':
    get:
      tags:
        - BQ - Order
      summary: ReBQ Retrieve details about order handling
      description: ReBQ Retrieve details about order handling
      operationId: RetrieveOrder
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/orderid'
      responses:
        '200':
          $ref: '#/components/responses/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Intelligence/Initiate':
    post:
      tags:
        - BQ - Intelligence
      summary: InBQ Initiate customer insight capture
      description: InBQ Initiate customer insight capture
      operationId: InitiateIntelligence
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateIntelligenceRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateIntelligenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Intelligence/{intelligenceid}/Update':
    put:
      tags:
        - BQ - Intelligence
      summary: UpBQ Update details for customer insight capture
      description: UpBQ Update details for customer insight capture
      operationId: UpdateIntelligence
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/intelligenceid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateIntelligenceRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateIntelligenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Intelligence/{intelligenceid}/Retrieve':
    get:
      tags:
        - BQ - Intelligence
      summary: ReBQ Retrieve details about customer insight capture
      description: ReBQ Retrieve details about customer insight capture
      operationId: RetrieveIntelligence
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/intelligenceid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveIntelligenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/History/{historyid}/Update':
    put:
      tags:
        - BQ - History
      summary: UpBQ Update details for customer history recording
      description: UpBQ Update details for customer history recording
      operationId: UpdateHistory
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/historyid'
      requestBody:
        $ref: '#/components/requestBodies/History'
      responses:
        '200':
          $ref: '#/components/responses/History'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/History/{historyid}/Retrieve':
    get:
      tags:
        - BQ - History
      summary: ReBQ Retrieve details about customer history recording
      description: ReBQ Retrieve details about customer history recording
      operationId: RetrieveHistory
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/historyid'
      responses:
        '200':
          $ref: '#/components/responses/History'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/ProductorService/{productorserviceid}/Execute':
    put:
      tags:
        - BQ - ProductorService
      summary: Capture details for product/service handling
      description: Capture details for product/service handling
      operationId: ExecuteProductorService
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/productorserviceid'
      requestBody:
        $ref: '#/components/requestBodies/ProductorService'
      responses:
        '200':
          $ref: '#/components/responses/ProductorService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/ProductorService/{productorserviceid}/Exchange':
    put:
      tags:
        - BQ - ProductorService
      summary: Exchange customer product/service requirements or acceptance
      description: Exchange customer product/service requirements or acceptance
      operationId: ExchangeProductorService
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/productorserviceid'
      requestBody:
        $ref: '#/components/requestBodies/ProductorService'
      responses:
        '200':
          $ref: '#/components/responses/ProductorService'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SessionDialogue/{sessiondialogueid}/Order/{orderid}/Exchange':
    put:
      tags:
        - BQ - Order
      summary: Exchange Order
      description: Exchange Order
      operationId: ExchangeOrder
      parameters:
        - $ref: '#/components/parameters/sessiondialogueid'
        - $ref: '#/components/parameters/orderid'
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        '200':
          $ref: '#/components/responses/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The general type of customer exchange (e.g. verified customer, anonymous contact, topic - used to structure/script dialogue) ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: 'The result of the invoked offer procedure (e.g. abandoned, in process/pending, offer accepted)'
    Offer:
      type: object
      properties:
        ProductandServiceType:
          $ref: '#/components/schemas/text'
        OfferTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    Authentication:
      type: object
      properties:
        RequiredAuthenticationLevel:
          type: string
          description: The target level of authentication required
          format: object
        AuthenticationTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: ">\r\n* `FeeFeature` - This refers to the functionality in a system or platform that manages, calculates, or displays fees associated with specific transactions or services.\r\n* `InterestFeature` - This feature calculates and tracks interest earnings or charges on accounts, loans, or investments over time.\r\n* `WithdrawalFeature` - The withdraw feature typically refers to an option or functionality that allows users to retrieve or remove something from a system or platform.\r\n* `DepositFeature` - This refers to a functionality that allows users to add funds to an account or system, often by transferring money from another source.\r\n* `SweepFeature` - \r\n* `LienFeature` - \r\n* `PaymentFeature` - This refers to the functionality that facilitates or tracks the transfer of funds for a purchase or settlement of dues.\r\n* `RepaymentFeature` - This feature facilitates or manages the process of paying back borrowed funds, such as loans, credit card balances, or advances.\r\n* `LimitFeature` - This feature sets, monitors, or enforces restrictions on the maximum amount that can be accessed, spent, or transacted within a system.\r\n* `OverdraftFeature` - This functionality allows users to withdraw more money than what is available in their account balance, often up to a predefined limit.\r\n* `StatementFeature` - The statement feature refers to a functionality in banking, finance, or digital platforms that provides users with a detailed record of their transactions or activities over a specific period.\r\n* `CurrencyExchangeFeature` - This feature enables users to convert funds from one currency to another at prevailing exchange rates, often within financial or payment platforms.\r\n* `PriceFeature` - This feature involves displaying or managing the price of goods, services, or financial instruments within a platform.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: The start and duration of the dialogue ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer (can be extracted from Contact Record or provided by customer) ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: A description of the selected product's features and options desired
    Sales:
      type: object
      properties:
        ProductandServiceType:
          $ref: '#/components/schemas/text'
        ProductandServiceProperties:
          $ref: '#/components/schemas/feature'
        SalesTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: Reference to a specific product instance provided by the customer
    ProductorService:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        ProductandServiceTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    Query:
      type: object
      properties:
        QueryType:
          $ref: '#/components/schemas/text'
        QueryTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    customerinsighttypevalues:
      enum:
        - CustomerBehavioralInsight
        - CustomerDemographicInsight
        - CustomerPsychographicInsight
        - CustomerTransactionalInsight
        - CustomerFeedbackAndSentimentInsight
        - CustomerJourneyInsight
        - CustomerRetentionAndChurnInsight
        - CustomerFinancialInsight
      type: string
      description: ">\r\n* `CustomerBehavioralInsight` - Understanding how customers interact with products, services, and brands.\r\n* `CustomerDemographicInsight` - Analyzing customer characteristics such as age, gender, income, education, and location.\r\n* `CustomerPsychographicInsight` - Exploring customers' lifestyles, values, interests, and attitudes.\r\n* `CustomerTransactionalInsight` - Examining purchase history, order frequency, average transaction value, and payment methods\r\n* `CustomerFeedbackAndSentimentInsight` - Gathering and analyzing customer feedback through surveys, reviews, social media, and customer support interactions\r\n* `CustomerJourneyInsight` - Mapping the entire customer journey from awareness to purchase and beyond\r\n* `CustomerRetentionAndChurnInsight` - Understanding the factors that influence customer retention and attrition\r\n* `CustomerFinancialInsight` - Customer financial insights refer to the analysis and understanding of the financial aspects related to customer interactions and behaviors. \r\n"
    customerinsight:
      type: object
      properties:
        CustomerInsightType:
          $ref: '#/components/schemas/customerinsighttypevalues'
        CustomerInsightValue:
          $ref: '#/components/schemas/value'
        CustomerInsightCalculationDate:
          $ref: '#/components/schemas/datetime'
        CustomerInsightDescription:
          $ref: '#/components/schemas/text'
        CustomerInsightIdentification:
          $ref: '#/components/schemas/identifier'
      description: The derived value of the specific insight for the customer and past values if appropriate
    Intelligence:
      type: object
      properties:
        IntelligenceRecord:
          type: string
          description: An optional interaction within the session - to capture customer insights such as detected life events and or product and service preferences or concerns
          format: object
        CustomerInsightType:
          $ref: '#/components/schemas/customerinsighttypevalues'
        CustomerInsight:
          $ref: '#/components/schemas/customerinsight'
        InsightTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: Forms and actions agreed and registered during the order
    Order:
      type: object
      properties:
        OrderType:
          $ref: '#/components/schemas/text'
        OrderTaskRecord:
          $ref: '#/components/schemas/task'
        OrderTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        OrderTaskWorkResult:
          $ref: '#/components/schemas/text'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    History:
      type: object
      properties:
        HistoryTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    casetypevalues:
      enum:
        - Card
        - Loan
        - Fraud
        - Payment
        - Market
        - Security
        - Other
      type: string
      description: ">\r\n* `Card` - \r\n* `Loan` - \r\n* `Fraud` - \r\n* `Payment` - \r\n* `Market` - \r\n* `Security` - \r\n* `Other` - \r\n"
    Case:
      type: object
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        CustomerCaseType:
          $ref: '#/components/schemas/casetypevalues'
        CaseTaskResult:
          $ref: '#/components/schemas/task'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    employee:
      type: object
      properties:
        Employee:
          type: string
          description: 'Party who is employed by an employer. '
          format: class
      description: "Reference to the servicing agent ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    position:
      type: object
      properties:
        PositionValue:
          $ref: '#/components/schemas/value'
        PositionQuantity:
          type: string
          description: ''
          format: number
        PositionDate:
          $ref: '#/components/schemas/datetime'
        PositionAmount:
          $ref: '#/components/schemas/amount'
      description: Reference to the servicing location/desk for assisted customer exchanges Position |Position  (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022 BM ()
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The time the session was active
    sessiontypevalues:
      enum:
        - ContactHandlingSession
        - CustomerDialogueSession
        - ChannelOperatingSession
        - GatewayOperatingSession
        - SwitchOperatingSession
        - DeviceOperatingSession
        - InterbankTransactionOperatingSession
        - CorrespondenceOperatingSession
        - InteractiveHelpOperatingSession
        - ACHOperatingSession
      type: string
      description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - \r\n"
    sessiontype:
      type: object
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/name'
        SessionType:
          $ref: '#/components/schemas/sessiontypevalues'
      description: 'Specifies the classification of session like Customer Contact Session, Channel Operating Session, Device Operating Session, etc.'
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: ''
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
      description: "The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up) ||\r\n|"
    sessiondialoguelog:
      type: object
      properties:
        SessionDialogueLog:
          type: string
          description: A record of contact dialogue log entries.
          format: class
      description: "The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording) ||\r\n|"
    CustomerContactSessionProcedure:
      type: object
      properties:
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        EmployeeReference:
          $ref: '#/components/schemas/employee'
        ServicingPositionReference:
          $ref: '#/components/schemas/position'
        SessionMechanism:
          $ref: '#/components/schemas/session'
        SessionStartEndTime:
          $ref: '#/components/schemas/datetime'
        SessionDialogueRecord:
          $ref: '#/components/schemas/session'
        SessionDialogueType:
          $ref: '#/components/schemas/text'
        SessionDialogueScript:
          type: string
          description: In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions
          format: object
        SessionDialogueLogReference:
          $ref: '#/components/schemas/sessiondialoguelog'
        SessionDialogueLog:
          $ref: '#/components/schemas/sessiondialoguelog'
        SessionDialogueResult:
          $ref: '#/components/schemas/session'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Session Dialogue. '
    InitiateIntelligenceRequest:
      type: object
      properties:
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
              description: An optional interaction within the session - to capture customer insights such as detected life events and or product and service preferences or concerns
              format: object
            CustomerInsightType:
              $ref: '#/components/schemas/customerinsighttypevalues'
            CustomerInsight:
              $ref: '#/components/schemas/customerinsight'
            InsightTaskResult:
              $ref: '#/components/schemas/task'
      description: 'Input: InBQ Initiate customer insight capture'
    InitiateIntelligenceResponse:
      type: object
      properties:
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
              description: An optional interaction within the session - to capture customer insights such as detected life events and or product and service preferences or concerns
              format: object
            CustomerInsightType:
              $ref: '#/components/schemas/customerinsighttypevalues'
            CustomerInsight:
              $ref: '#/components/schemas/customerinsight'
            InsightTaskResult:
              $ref: '#/components/schemas/task'
      description: 'Output: InBQ Initiate customer insight capture'
    UpdateIntelligenceRequest:
      type: object
      properties:
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
              description: An optional interaction within the session - to capture customer insights such as detected life events and or product and service preferences or concerns
              format: object
            CustomerInsightType:
              $ref: '#/components/schemas/customerinsighttypevalues'
            CustomerInsight:
              $ref: '#/components/schemas/customerinsight'
            InsightTaskResult:
              $ref: '#/components/schemas/task'
      description: 'Input: UpBQ Update details for customer insight capture'
    UpdateIntelligenceResponse:
      type: object
      properties:
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
              description: An optional interaction within the session - to capture customer insights such as detected life events and or product and service preferences or concerns
              format: object
            CustomerInsightType:
              $ref: '#/components/schemas/customerinsighttypevalues'
            CustomerInsight:
              $ref: '#/components/schemas/customerinsight'
            InsightTaskResult:
              $ref: '#/components/schemas/task'
      description: 'Output: UpBQ Update details for customer insight capture'
    RetrieveIntelligenceRequest:
      type: object
      properties:
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
              description: An optional interaction within the session - to capture customer insights such as detected life events and or product and service preferences or concerns
              format: object
            CustomerInsightType:
              $ref: '#/components/schemas/customerinsighttypevalues'
            CustomerInsight:
              $ref: '#/components/schemas/customerinsight'
            InsightTaskResult:
              $ref: '#/components/schemas/task'
      description: 'Input: ReBQ Retrieve details about customer insight capture'
    RetrieveIntelligenceResponse:
      type: object
      properties:
        Intelligence:
          type: object
          properties:
            BQIntelligenceRecord:
              type: string
              description: An optional interaction within the session - to capture customer insights such as detected life events and or product and service preferences or concerns
              format: object
            CustomerInsightType:
              $ref: '#/components/schemas/customerinsighttypevalues'
            CustomerInsight:
              $ref: '#/components/schemas/customerinsight'
            InsightTaskResult:
              $ref: '#/components/schemas/task'
      description: 'Output: ReBQ Retrieve details about customer insight capture'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerContactSessionProcedure:
      description: CustomerContactSessionProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerContactSessionProcedure'
    Query:
      description: Query
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Query'
    Authentication:
      description: Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authentication'
    Sales:
      description: Sales
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sales'
    Offer:
      description: Offer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Offer'
    ProductorService:
      description: ProductorService
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductorService'
    Case:
      description: Case
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Case'
    Order:
      description: Order
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    InitiateIntelligenceResponse:
      description: InitiateIntelligenceResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateIntelligenceResponse'
    UpdateIntelligenceResponse:
      description: UpdateIntelligenceResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIntelligenceResponse'
    RetrieveIntelligenceResponse:
      description: RetrieveIntelligenceResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveIntelligenceResponse'
    History:
      description: History
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/History'
  parameters:
    sessiondialogueid:
      name: sessiondialogueid
      in: path
      required: true
      style: simple
      schema:
        type: string
    queryid:
      name: queryid
      in: path
      required: true
      style: simple
      schema:
        type: string
    authenticationid:
      name: authenticationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    salesid:
      name: salesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    offerid:
      name: offerid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productorserviceid:
      name: productorserviceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    caseid:
      name: caseid
      in: path
      required: true
      style: simple
      schema:
        type: string
    orderid:
      name: orderid
      in: path
      required: true
      style: simple
      schema:
        type: string
    intelligenceid:
      name: intelligenceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    historyid:
      name: historyid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerContactSessionProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerContactSessionProcedure'
      required: true
    Query:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Query'
      required: true
    Authentication:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authentication'
      required: true
    Sales:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Sales'
      required: true
    Offer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Offer'
      required: true
    ProductorService:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductorService'
      required: true
    Case:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Case'
      required: true
    Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
      required: true
    InitiateIntelligenceRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateIntelligenceRequest'
      required: true
    UpdateIntelligenceRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateIntelligenceRequest'
      required: true
    History:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/History'
      required: true