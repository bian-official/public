openapi: 3.0.1
info:
  title: Interbank Relationship Management
  description: 'Manage the bank''s relationship with other banks, covering any specific agreements that may be in place and overseeing operational issues.'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/InterbankRelationshipManagement/13.0.0
paths:
  /InterbankRelationshipManagement/Create:
    post:
      tags:
        - CR - BankRelationshipManagementPlan
      summary: CrCR Create an initial bank relationship management plan
      description: CrCR Create an initial bank relationship management plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/BankRelationshipManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BankRelationshipManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Update':
    put:
      tags:
        - CR - BankRelationshipManagementPlan
      summary: UpCR Update details of an active bank relationship plan
      description: UpCR Update details of an active bank relationship plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BankRelationshipManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BankRelationshipManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Control':
    put:
      tags:
        - CR - BankRelationshipManagementPlan
      summary: CoCR Control the processing of a bank relationship plan
      description: CoCR Control the processing of a bank relationship plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BankRelationshipManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BankRelationshipManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Exchange':
    put:
      tags:
        - CR - BankRelationshipManagementPlan
      summary: 'EcCR Accept, verify, reject aspects of the bank relationship plan'
      description: 'EcCR Accept, verify, reject aspects of the bank relationship plan'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BankRelationshipManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BankRelationshipManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Request':
    put:
      tags:
        - CR - BankRelationshipManagementPlan
      summary: RqCR Request intervention with a bank relationship plan
      description: RqCR Request intervention with a bank relationship plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BankRelationshipManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BankRelationshipManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Grant':
    put:
      tags:
        - CR - BankRelationshipManagementPlan
      summary: GrCR Grant authorization for actions that impact the bank plan
      description: GrCR Grant authorization for actions that impact the bank plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/BankRelationshipManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/BankRelationshipManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Retrieve':
    get:
      tags:
        - CR - BankRelationshipManagementPlan
      summary: ReCR Retrieve details about a bank relationship plan and associated activity
      description: ReCR Retrieve details about a bank relationship plan and associated activity
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/BankRelationshipManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Contact/Create':
    post:
      tags:
        - BQ - Contact
      summary: CrBQ Create a bank contact
      description: CrBQ Create a bank contact
      operationId: CreateContact
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Contact/{contactid}/Update':
    put:
      tags:
        - BQ - Contact
      summary: UpBQ Update details about the bank contact schedule or a contact record
      description: UpBQ Update details about the bank contact schedule or a contact record
      operationId: UpdateContact
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
        - $ref: '#/components/parameters/contactid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Contact/{contactid}/Request':
    put:
      tags:
        - BQ - Contact
      summary: RqBQ Request manual intervention with the bank relationship
      description: RqBQ Request manual intervention with the bank relationship
      operationId: RequestContact
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
        - $ref: '#/components/parameters/contactid'
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InterbankRelationshipManagement/{interbankrelationshipmanagementid}/Contact/{contactid}/Retrieve':
    get:
      tags:
        - BQ - Contact
      summary: ReBQ Retrieve details about the contact schedule or specific contacts
      description: ReBQ Retrieve details about the contact schedule or specific contacts
      operationId: RetrieveContact
      parameters:
        - $ref: '#/components/parameters/interbankrelationshipmanagementid'
        - $ref: '#/components/parameters/contactid'
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Defines the role and contact details for bank representatives ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The schedule of past and planned customer contacts
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: The date time and location of the contact
    employee:
      type: object
      properties:
        Employee:
          type: string
          description: 'Party who is employed by an employer. '
          format: class
      description: Reference to the employee(s) in attendance
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: Reference to associated documents
    Contact:
      type: object
      properties:
        BankRelationshipContactHistory:
          type: string
          description: 'Records the timing, purpose, details and impact of customer contacts'
          format: object
        BankRelationshipContactSchedule:
          $ref: '#/components/schemas/schedule'
        BankRelationshipContactRecord:
          type: string
          description: The record of a customer contact
          format: object
        BankRelationshipContactDate:
          $ref: '#/components/schemas/datetime'
        EmployeeReference:
          $ref: '#/components/schemas/employee'
        BankRelationshipContactType:
          $ref: '#/components/schemas/text'
        BankRelationshipContactResult:
          type: string
          description: 'The result of the contact, including follow up tasks'
          format: object
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    organisationidentificationtypevalues:
      enum:
        - LEI
        - ELF
        - MIC
        - BICFI
        - Bankpartyidentification
        - Centralbankidentificationnumber
        - Clearingidentificationnumber
        - Certificateofincorporationnumber
        - Countryidentificationcode
        - Customernumber
        - Datauniversalnumberingsystem
        - Employeridentificationnumber
        - Gs1glnidentifier
        - SIREN
        - SIRET
        - Taxidentificationnumber
        - EANGLN
      type: string
      description: ">\r\n* `LEI` - Legal Entity Identifier is a code allocated to a party as described in ISO 17442 \"Financial Services - Legal Entity Identifier (LEI)\".\r\n* `ELF` - Entity Legal Forms is a code allocated to a party as described in ISO 20275 \"Financial services  Entity legal forms (ELF)\". \r\n* `MIC` - Market Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383 \"Codes for exchanges and market identifications\".\r\n* `BICFI` - Code allocated to a financial institution by the ISO 9362 Registration Authority as described in ISO 9362 \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".\r\n* `Bankpartyidentification` - Unique and unambiguous assignment made by a specific bank or similar financial institution to identify a relationship as defined between the bank and its client.\r\n* `Centralbankidentificationnumber` - A unique identification number assigned by a central bank to identify an organisation.\r\n* `Clearingidentificationnumber` - A unique identification number assigned by a clearing house to identify an organisation\r\n* `Certificateofincorporationnumber` - A unique identification number assigned by a designated authority to a certificate of incorporation and used to identify an organisation.\r\n* `Countryidentificationcode` - Country authority given organisation identification (e.g., corporate registration number)\r\n* `Customernumber` - Number assigned by an issuer to identify a customer.\nNumber assigned by a party to identify a creditor or debtor relationship.\r\n* `Datauniversalnumberingsystem` - A unique identification number provided by Dun & Bradstreet to identify an organisation.\r\n* `Employeridentificationnumber` - Number assigned by a registration authority to an employer.\r\n* `Gs1glnidentifier` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to GS1 numbering scheme rules.The number is used to retrieve detailed information that is linked to it.\r\n* `SIREN` - The SIREN number is a 9 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation in France.\r\n* `SIRET` - The SIRET number is a 14 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation unit in France. It consists of the SIREN number, followed by a five digit classification number, to identify the local geographical unit of that entity\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to identify an organisation.\r\n* `EANGLN` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to the European Association for Numbering (EAN) numbering scheme rules. The number is used to retrieve detailed information that is linked to it. (iso20022)\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "The assigned individual or business unit for the relationship ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    organisationidentification:
      type: object
      properties:
        OrganisationIdentificationType:
          $ref: '#/components/schemas/organisationidentificationtypevalues'
        OrganisationIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    organisationdatetimetypevalues:
      enum:
        - RegistrationDate
        - EstablishmentDate
        - EntityExpirationDate
      type: string
      description: ">\r\n* `RegistrationDate` - Date and time at which a given organisation was officially registered. (ISO20022)\r\n* `EstablishmentDate` - Date when the organisation was established. ISO20022\r\n* `EntityExpirationDate` - The date the Legal Entity ceased operation or was merged. ISO20022\r\n"
    organisationdatetime:
      type: object
      properties:
        OrganisatioDate:
          $ref: '#/components/schemas/datetime'
        OrganisatioDateType:
          $ref: '#/components/schemas/organisationdatetimetypevalues'
      description: ''
    organisationtypevalues:
      enum:
        - LegalEntity
        - Authority
        - OrganisationUnit
        - FinancialInstitution
        - Charity
        - GovernmentBody
      type: string
      description: ">\r\n* `LegalEntity` - \r\n* `Authority` - \r\n* `OrganisationUnit` - \r\n* `FinancialInstitution` - \r\n* `Charity` - \r\n* `GovernmentBody` - \r\n"
    organisationnametypevalues:
      enum:
        - ShortName
        - TradingName
        - LegalName
      type: string
      description: ">\r\n* `ShortName` - \r\n* `TradingName` - \r\n* `LegalName` - \r\n"
    organisationname:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/name'
        NameType:
          $ref: '#/components/schemas/organisationnametypevalues'
      description: ''
    organisationlegalstructuretypevalues:
      enum:
        - Corporation
        - Individual
        - Supranational
        - Sovereign
        - Municipal
        - Province
        - State
        - County
        - Partnership
        - Financialinstitution
        - National
      type: string
      description: ">\r\n* `Corporation` - Legal structure is a corporation.\r\n* `Individual` - Legal structure is an individual.\r\n* `Supranational` - Legal structure is a supranational.\r\n* `Sovereign` - Legal structure is a sovereign.\r\n* `Municipal` - Legal structure is a municipal.\r\n* `Province` - Legal structure is a province.\r\n* `State` - Legal structure is a state.\r\n* `County` - Legal structure is a county.\r\n* `Partnership` - Legal structure is a partnership.\r\n* `Financialinstitution` - Legal structure is a financial institution.\r\n* `National` - Legal structure is a state.\r\n"
    organisation:
      type: object
      properties:
        OrganisationStructureHierarchy:
          $ref: '#/components/schemas/text'
        OrganisationIdentification:
          $ref: '#/components/schemas/organisationidentification'
        OrganisationSector:
          $ref: '#/components/schemas/text'
        LegalEntityIndicator:
          type: string
          description: ''
          format: string
        OrganisationDate:
          $ref: '#/components/schemas/organisationdatetime'
        OrganisationType:
          $ref: '#/components/schemas/organisationtypevalues'
        OrganisationName:
          $ref: '#/components/schemas/organisationname'
        OrganisationLegalStructure:
          $ref: '#/components/schemas/organisationlegalstructuretypevalues'
      description: "Reference to the associated bank Organisation _x000D_\n|Organisation  (https://www.iso20022.org/standardsrepository/type/Organisation)|Standard|ISO20022 BM ()"
    bankrelationshiptypevalues:
      enum:
        - Jointventure
        - Tradingpartner
      type: string
      description: "The type of relationship with the bank (e.g. trading partner, joint venture partner) ||\r\n|"
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: "The target and actual budget covering expenditures and reciprocal business activity as appropriate ||\r\n|"
    BankRelationshipManagementPlan:
      type: object
      properties:
        BankReference:
          $ref: '#/components/schemas/organisation'
        BankDetails:
          $ref: '#/components/schemas/text'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        BankRelationshipType:
          $ref: '#/components/schemas/bankrelationshiptypevalues'
        BankRelationshipDescription:
          $ref: '#/components/schemas/text'
        BankRelationshipBudget:
          $ref: '#/components/schemas/budgetarrangement'
        BankContactDetails:
          $ref: '#/components/schemas/text'
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Interbank Relationship Management.'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BankRelationshipManagementPlan:
      description: BankRelationshipManagementPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankRelationshipManagementPlan'
    Contact:
      description: Contact
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
  parameters:
    interbankrelationshipmanagementid:
      name: interbankrelationshipmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    contactid:
      name: contactid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    BankRelationshipManagementPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankRelationshipManagementPlan'
      required: true
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
      required: true