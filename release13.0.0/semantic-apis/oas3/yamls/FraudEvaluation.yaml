openapi: 3.0.1
info:
  title: Fraud Evaluation
  description: The service domain executes fraud behavioral pattern tests to detect possible fraudulent transactions/activity
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/FraudEvaluation/13.0.0
paths:
  /FraudEvaluation/Evaluate:
    post:
      tags:
        - CR - FraudEvaluationAssessment
      summary: EvCR Start a fraud evaluation for a production transaction set
      description: EvCR Start a fraud evaluation for a production transaction set
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/FraudEvaluationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FraudEvaluationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudEvaluation/{fraudevaluationid}/Exchange':
    put:
      tags:
        - CR - FraudEvaluationAssessment
      summary: 'EcCR Accept, verify, reject a fraud evaluation'
      description: 'EcCR Accept, verify, reject a fraud evaluation'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/fraudevaluationid'
      requestBody:
        $ref: '#/components/requestBodies/FraudEvaluationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FraudEvaluationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudEvaluation/{fraudevaluationid}/Execute':
    put:
      tags:
        - CR - FraudEvaluationAssessment
      summary: ExCR Perform an automated action to an active evaluation (e.g. upload additional data)
      description: ExCR Perform an automated action to an active evaluation (e.g. upload additional data)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/fraudevaluationid'
      requestBody:
        $ref: '#/components/requestBodies/FraudEvaluationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FraudEvaluationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudEvaluation/{fraudevaluationid}/Request':
    put:
      tags:
        - CR - FraudEvaluationAssessment
      summary: RqCR Request manual intervention to an active assessment (e.g. change test make-up)
      description: RqCR Request manual intervention to an active assessment (e.g. change test make-up)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/fraudevaluationid'
      requestBody:
        $ref: '#/components/requestBodies/FraudEvaluationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FraudEvaluationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudEvaluation/{fraudevaluationid}/Grant':
    put:
      tags:
        - CR - FraudEvaluationAssessment
      summary: GrCR Obtain permission to act on/apply the assessment (if appropriate)
      description: GrCR Obtain permission to act on/apply the assessment (if appropriate)
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/fraudevaluationid'
      requestBody:
        $ref: '#/components/requestBodies/FraudEvaluationAssessment'
      responses:
        '200':
          $ref: '#/components/responses/FraudEvaluationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudEvaluation/{fraudevaluationid}/Retrieve':
    get:
      tags:
        - CR - FraudEvaluationAssessment
      summary: ReCr Retrieve details about a fraud evaluation assessment
      description: ReCr Retrieve details about a fraud evaluation assessment
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/fraudevaluationid'
      responses:
        '200':
          $ref: '#/components/responses/FraudEvaluationAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudEvaluation/{fraudevaluationid}/RuleSetsandDecisionTrees/{rulesetsanddecisiontreesid}/Retrieve':
    get:
      tags:
        - BQ - RuleSetsandDecisionTrees
      summary: ReBQ Retrieve details about rule set or decision tree based tests applied
      description: ReBQ Retrieve details about rule set or decision tree based tests applied
      operationId: RetrieveRuleSetsandDecisionTrees
      parameters:
        - $ref: '#/components/parameters/fraudevaluationid'
        - $ref: '#/components/parameters/rulesetsanddecisiontreesid'
      responses:
        '200':
          $ref: '#/components/responses/RuleSetsandDecisionTrees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/FraudEvaluation/{fraudevaluationid}/Models/{modelsid}/Retrieve':
    get:
      tags:
        - BQ - Models
      summary: ReBQ Retrieve details about model based tests applied
      description: ReBQ Retrieve details about model based tests applied
      operationId: RetrieveModels
      parameters:
        - $ref: '#/components/parameters/fraudevaluationid'
        - $ref: '#/components/parameters/modelsid'
      responses:
        '200':
          $ref: '#/components/responses/Models'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The definition of how the constituent rule set/decision tree and model test are combined to compete the assessment ||\r\n|"
    testtypevalues:
      enum:
        - ProductEligibilityTest
        - NextBestProductTest
        - IssuedDeviceTest
        - CardHolderAuthenticationTest
        - CardFundsAvailableTest
        - CardTransactionFraudTest
        - CardStand-InAuthorizationTest
        - ExternalAccessRequestTest
        - SuitabilityTest
        - LegalComplianceTest
        - RegulatoryComplianceTest
        - SystemFunctionalTest
        - SystemProductionTest
        - SystemBusinessRiskTest
        - SystemOperationsTest
        - CreditPolicyComplianceTest
        - RuleSetAndDecisionTreeTest
        - ModelBasedTests
        - AssetAndLiabilityValuationTest
        - LiquidityAndCashFlowTest
        - RiskTest
        - SensitivityTest
      type: string
      description: ">\r\n* `ProductEligibilityTest` - \r\n* `NextBestProductTest` - \r\n* `IssuedDeviceTest` - \r\n* `CardHolderAuthenticationTest` - \r\n* `CardFundsAvailableTest` - \r\n* `CardTransactionFraudTest` - \r\n* `CardStand-InAuthorizationTest` - \r\n* `ExternalAccessRequestTest` - \r\n* `SuitabilityTest` - \r\n* `LegalComplianceTest` - \r\n* `RegulatoryComplianceTest` - \r\n* `SystemFunctionalTest` - \r\n* `SystemProductionTest` - \r\n* `SystemBusinessRiskTest` - \r\n* `SystemOperationsTest` - \r\n* `CreditPolicyComplianceTest` - \r\n* `RuleSetAndDecisionTreeTest` - \r\n* `ModelBasedTests` - \r\n* `AssetAndLiabilityValuationTest` - \r\n* `LiquidityAndCashFlowTest` - \r\n* `RiskTest` - \r\n* `SensitivityTest` - \r\n"
    test:
      type: object
      properties:
        TestResult:
          $ref: '#/components/schemas/text'
        TestGuidance:
          $ref: '#/components/schemas/text'
        TestType:
          $ref: '#/components/schemas/testtypevalues'
        TestDescription:
          $ref: '#/components/schemas/text'
      description: 'The production transaction assessment test results, including reference to any potential fraud transactions - note this can be a real-time dataset'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Work documentation, forms and schedules produced and referenced during the assessment task'
    RuleSetsandDecisionTrees:
      type: object
      properties:
        RuleSetsAndDecisionTreesTestResult:
          $ref: '#/components/schemas/test'
        RuleSetsAndDecisionTreesTestWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "All kind of verifications \n\nExamples: Password verification"
    Models:
      type: object
      properties:
        ModelsTestResult:
          $ref: '#/components/schemas/test'
        ModelsTestWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "All kind of verifications \n\nExamples: Password verification"
    duration:
      type: object
      properties:
        Duration:
          type: string
          description: 'A duration is the specification of a length of time without a fixed start or end time, expressed in Gregorian calendar time units (Year, Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT)'
          format: datatype
      description: The time the session was active
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    sessiontypevalues:
      enum:
        - ContactHandlingSession
        - CustomerDialogueSession
        - ChannelOperatingSession
        - GatewayOperatingSession
        - SwitchOperatingSession
        - DeviceOperatingSession
        - InterbankTransactionOperatingSession
        - CorrespondenceOperatingSession
        - InteractiveHelpOperatingSession
        - ACHOperatingSession
      type: string
      description: ">\r\n* `ContactHandlingSession` - \r\n* `CustomerDialogueSession` - \r\n* `ChannelOperatingSession` - \r\n* `GatewayOperatingSession` - \r\n* `SwitchOperatingSession` - \r\n* `DeviceOperatingSession` - \r\n* `InterbankTransactionOperatingSession` - \r\n* `CorrespondenceOperatingSession` - \r\n* `InteractiveHelpOperatingSession` - \r\n* `ACHOperatingSession` - \r\n"
    sessiontype:
      type: object
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/name'
        SessionType:
          $ref: '#/components/schemas/sessiontypevalues'
      description: 'Specifies the classification of session like Customer Contact Session, Channel Operating Session, Device Operating Session, etc.'
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: ''
    session:
      type: object
      properties:
        SessionDuration:
          $ref: '#/components/schemas/duration'
        SessionDateTime:
          $ref: '#/components/schemas/datetime'
        SessionStatus:
          $ref: '#/components/schemas/status'
        SessionType:
          $ref: '#/components/schemas/sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/schedule'
      description: "Reference to the product fulfillment production session for which on-line fraud evaluation is performed ||\r\n|"
    profile:
      type: object
      properties:
        Profile:
          type: string
          description: A brief description of the characteristics of something or someone. (Business Dictionary)
          format: class
      description: "Details the types of fraud evaluation tests applied ||\r\n|"
    productiontransaction:
      type: object
      properties:
        ProductionTransaction:
          type: string
          description: 'A transaction to fulfill the product''s arrangement. '
          format: class
      description: "Reference to the one or more production transactions isolated by the fraud evaluation tests ||\r\n|"
    FraudEvaluationAssessment:
      type: object
      properties:
        ProductProductionSessionReference:
          $ref: '#/components/schemas/session'
        FraudEvaluationTestProfile:
          $ref: '#/components/schemas/profile'
        FraudEvaluationEnsembleTechniqueType:
          $ref: '#/components/schemas/text'
        FraudEvaluationEnsembleTechniqueDefinition:
          $ref: '#/components/schemas/text'
        FraudEvaluationTransactionConsolidationRecord:
          type: string
          description: The production transaction details that are submitted for fraud evaluation - note this will typically be a real-time dataset
          format: object
        FraudEvaluationProductionAnomalyRecord:
          type: string
          description: Details of detected out of pattern production activity that could be fraud
          format: object
        FraudEvaluationProductionAnomalyProductionTransactionReference:
          $ref: '#/components/schemas/productiontransaction'
      description: 'To test or assess an entity, possibly against some formal qualification or certification requirement within Fraud Evaluation. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    FraudEvaluationAssessment:
      description: FraudEvaluationAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FraudEvaluationAssessment'
    RuleSetsandDecisionTrees:
      description: RuleSetsandDecisionTrees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleSetsandDecisionTrees'
    Models:
      description: Models
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Models'
  parameters:
    fraudevaluationid:
      name: fraudevaluationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    rulesetsanddecisiontreesid:
      name: rulesetsanddecisiontreesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    modelsid:
      name: modelsid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    FraudEvaluationAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FraudEvaluationAssessment'
      required: true