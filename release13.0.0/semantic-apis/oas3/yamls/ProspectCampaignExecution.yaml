openapi: 3.0.1
info:
  title: Prospect Campaign Execution
  description: Execute a prospect campaign (version) and track and respond to impact
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProspectCampaignExecution/13.0.0
paths:
  /ProspectCampaignExecution/Initiate:
    post:
      tags:
        - CR - ProspectCampaignProcedure
      summary: InCR Initiate prospect campaign processing
      description: InCR Initiate prospect campaign processing
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignProcedure'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Update':
    put:
      tags:
        - CR - ProspectCampaignProcedure
      summary: UpCR Update details of an active prospect campaign
      description: UpCR Update details of an active prospect campaign
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignProcedure'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Control':
    put:
      tags:
        - CR - ProspectCampaignProcedure
      summary: CoCR Control the execution of a prospect campaign
      description: CoCR Control the execution of a prospect campaign
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignProcedure'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Exchange':
    put:
      tags:
        - CR - ProspectCampaignProcedure
      summary: 'EcCR Accept, reject, etc. a prospect campaign procedure'
      description: 'EcCR Accept, reject, etc. a prospect campaign procedure'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignProcedure'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Execute':
    put:
      tags:
        - CR - ProspectCampaignProcedure
      summary: ExCR Execute an automated action against an active prospect campaign
      description: ExCR Execute an automated action against an active prospect campaign
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignProcedure'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Request':
    put:
      tags:
        - CR - ProspectCampaignProcedure
      summary: RqCR Request manual intervention in a campaign
      description: RqCR Request manual intervention in a campaign
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignProcedure'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Retrieve':
    get:
      tags:
        - CR - ProspectCampaignProcedure
      summary: ReCR Retrieve details about an active prospect campaign
      description: ReCR Retrieve details about an active prospect campaign
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/CandidateSelection/{candidateselectionid}/Update':
    put:
      tags:
        - BQ - CandidateSelection
      summary: UpBQ Update a campaign candidate list
      description: UpBQ Update a campaign candidate list
      operationId: UpdateCandidateSelection
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/candidateselectionid'
      requestBody:
        $ref: '#/components/requestBodies/CandidateSelection'
      responses:
        '200':
          $ref: '#/components/responses/CandidateSelection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/CandidateSelection/{candidateselectionid}/Exchange':
    put:
      tags:
        - BQ - CandidateSelection
      summary: 'EcBQ Accept, reject, etc a candidate list entry'
      description: 'EcBQ Accept, reject, etc a candidate list entry'
      operationId: ExchangeCandidateSelection
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/candidateselectionid'
      requestBody:
        $ref: '#/components/requestBodies/CandidateSelection'
      responses:
        '200':
          $ref: '#/components/responses/CandidateSelection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/CandidateSelection/{candidateselectionid}/Retrieve':
    get:
      tags:
        - BQ - CandidateSelection
      summary: ReBQ Retrieve details about a campaign candidate list
      description: ReBQ Retrieve details about a campaign candidate list
      operationId: RetrieveCandidateSelection
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/candidateselectionid'
      responses:
        '200':
          $ref: '#/components/responses/CandidateSelection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Execution/Initiate':
    post:
      tags:
        - BQ - Execution
      summary: InBQ Initiate a campaign execution task
      description: InBQ Initiate a campaign execution task
      operationId: InitiateExecution
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/Execution'
      responses:
        '200':
          $ref: '#/components/responses/Execution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Execution/{executionid}/Update':
    put:
      tags:
        - BQ - Execution
      summary: UpBQ Update details of a campaign execution task
      description: UpBQ Update details of a campaign execution task
      operationId: UpdateExecution
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/executionid'
      requestBody:
        $ref: '#/components/requestBodies/Execution'
      responses:
        '200':
          $ref: '#/components/responses/Execution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Execution/{executionid}/Request':
    put:
      tags:
        - BQ - Execution
      summary: RqBQ Request manual intervention in a campaign execution task
      description: RqBQ Request manual intervention in a campaign execution task
      operationId: RequestExecution
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/executionid'
      requestBody:
        $ref: '#/components/requestBodies/Execution'
      responses:
        '200':
          $ref: '#/components/responses/Execution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/Execution/{executionid}/Retrieve':
    get:
      tags:
        - BQ - Execution
      summary: ReBQ Retrieve details about a campaign execution task
      description: ReBQ Retrieve details about a campaign execution task
      operationId: RetrieveExecution
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/executionid'
      responses:
        '200':
          $ref: '#/components/responses/Execution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/AnalysisFeedback/Initiate':
    post:
      tags:
        - BQ - AnalysisFeedback
      summary: InBQ Initiate campaign execution analysis
      description: InBQ Initiate campaign execution analysis
      operationId: InitiateAnalysisFeedback
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/AnalysisFeedback'
      responses:
        '200':
          $ref: '#/components/responses/AnalysisFeedback'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/AnalysisFeedback/{analysisfeedbackid}/Update':
    put:
      tags:
        - BQ - AnalysisFeedback
      summary: UpBQ Update details of campaign execution activity/performance analysis
      description: UpBQ Update details of campaign execution activity/performance analysis
      operationId: UpdateAnalysisFeedback
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/analysisfeedbackid'
      requestBody:
        $ref: '#/components/requestBodies/AnalysisFeedback'
      responses:
        '200':
          $ref: '#/components/responses/AnalysisFeedback'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/AnalysisFeedback/{analysisfeedbackid}/Request':
    put:
      tags:
        - BQ - AnalysisFeedback
      summary: ReBQ Request manual intervention in campaign analysis
      description: ReBQ Request manual intervention in campaign analysis
      operationId: RequestAnalysisFeedback
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/analysisfeedbackid'
      requestBody:
        $ref: '#/components/requestBodies/AnalysisFeedback'
      responses:
        '200':
          $ref: '#/components/responses/AnalysisFeedback'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignExecution/{prospectcampaignexecutionid}/AnalysisFeedback/{analysisfeedbackid}/Retrieve':
    get:
      tags:
        - BQ - AnalysisFeedback
      summary: ReBQ Retrieve details about prospect campaign analysis activity
      description: ReBQ Retrieve details about prospect campaign analysis activity
      operationId: RetrieveAnalysisFeedback
      parameters:
        - $ref: '#/components/parameters/prospectcampaignexecutionid'
        - $ref: '#/components/parameters/analysisfeedbackid'
      responses:
        '200':
          $ref: '#/components/responses/AnalysisFeedback'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The type of consumable item associated with the campaign (e.g. gift, brochure) ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: "Key dates associated with the campaign process (e.g. initiation date, version revision date, completion date) ||\r\n|"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Value of the date type ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the business unit responsible for the campaign execution ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the prospect on-boarding task as handled by the Party Lifecycle Management Service Domain GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, forms and documents for the work task'
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: Reference to associated documents
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Details of the outcome or result of the work task - can be the identification of prospects that have expressed an interest in becoming a customer
    Execution:
      type: object
      properties:
        ProspectCampaignProcedureWorkTaskType:
          $ref: '#/components/schemas/text'
        ProspectCampaignProcedureWorkTaskDescription:
          $ref: '#/components/schemas/text'
        ProspectCampaignProcedureWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        ProspectCampaignProcedureWorkTaskResult:
          $ref: '#/components/schemas/task'
        ProspectCampaignProcedureWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n* `RevenueAnalysis` - \r\n* `CostAnalysis` - \r\n* `PredictiveAnalysis` - \r\n* `BehavioralAnalysis` - \r\n* `ProfitabilityAnalysis` - \r\n* `CompetitiveAnalysis` - \r\n* `CohortAnalysis` - \r\n* `SegmentAnalysis` - \r\n* `SWOTAnalysis` - \r\n* `Benchmarking` - \r\n* `PositioningAnalysis` - \r\n* `ScenarioAnalysis` - \r\n* `IntelligenceGathering` - \r\n* `Profiling` - \r\n"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The campaign processing schedule, covering prospect list selection/verification, execution, follow-up and analysis activities. Note this can be an ongoing campaign where worksteps continue in parallel ||\r\n|"
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
        AnalysisSchedule:
          $ref: '#/components/schemas/schedule'
      description: The result of the analysis of the performance of the campaign for the current cycle
    AnalysisFeedback:
      type: object
      properties:
        ProspectCampaignProcedureAnalysisResult:
          $ref: '#/components/schemas/analysis'
        ProspectCampaignProcedureAnalysisFeedbackResult:
          type: string
          description: Description of the feedback provided to the campaign design team
          format: object
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Details the selection criteria used to identify candidate prospects
    CandidateSelection:
      type: object
      properties:
        ProspectCampaignSelectionCriteria:
          $ref: '#/components/schemas/ruleset'
        ProspectCampaignCandidateEmployeeBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        ProspectCampaignCandidateReference:
          $ref: '#/components/schemas/text'
      description: "The main worsteps to be followed in th eexecution of the procedure\n\nExamples: Invoice generation"
    campaigntypevalues:
      enum:
        - MarketingCampaign
        - SocialCampaign
        - PoliticalCampaign
      type: string
      description: "The type or category of prospect campaign (e.g. acquisition, product discount incentive) ||\r\n|"
    iteminventory:
      type: object
      properties:
        ItemInventoryType:
          $ref: '#/components/schemas/text'
      description: "Inventory record of any consumables that are to be used in the execution of the campaign (e.g. brochures) ||\r\n|"
    iteminventorytypevalues:
      enum:
        - Non-CashInventory
        - CashInventory
      type: string
      description: "The tracked inventory of the consumable item ||\r\n|"
    prospectcampaignprocedure:
      type: object
      properties:
        ProspectCampaignProcedure:
          type: string
          description: 'A procedure to handle the deployment, execution and on-going refinement of a prospect campaign.'
          format: class
      description: "The result/impact of the overall prospect campaign event (that can include multiple identified prospects for on-boarding) ||\r\n|"
    prospect:
      type: object
      properties:
        Prospect:
          type: string
          description: "A potential customer\n\n"
          format: class
      description: "A reference to prospects generated by the prospect campaign ||\r\n|"
    ProspectCampaignProcedure:
      type: object
      properties:
        ProspectCampaignType:
          $ref: '#/components/schemas/campaigntypevalues'
        ProspectCampaignDescription:
          $ref: '#/components/schemas/text'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        ProspectCampaignProcedureSet-up:
          type: string
          description: Details of the deployment set-up/configuration of the campaign for reference
          format: object
        ProspectCampaignProcedureVersionNumber:
          type: string
          description: The prospect campaign version number used in the event
          format: number
        ProspectCampaignSchedule:
          $ref: '#/components/schemas/schedule'
        ProspectCampaignConsumablesInventory:
          $ref: '#/components/schemas/iteminventory'
        ProspectCampaignConsumableType:
          $ref: '#/components/schemas/text'
        ProspectCampaignConsumableHolding:
          $ref: '#/components/schemas/iteminventorytypevalues'
        DateType:
          $ref: '#/components/schemas/datetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
        ProspectCampaignProcedureResult:
          $ref: '#/components/schemas/prospectcampaignprocedure'
        ProspectCampaignProcedureProspectIdentification:
          $ref: '#/components/schemas/prospect'
        PartyLifecycleManagementProcedureInstanceReference:
          $ref: '#/components/schemas/identifier'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Prospect Campaign Execution. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProspectCampaignProcedure:
      description: ProspectCampaignProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProspectCampaignProcedure'
    CandidateSelection:
      description: CandidateSelection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CandidateSelection'
    Execution:
      description: Execution
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Execution'
    AnalysisFeedback:
      description: AnalysisFeedback
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnalysisFeedback'
  parameters:
    prospectcampaignexecutionid:
      name: prospectcampaignexecutionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    candidateselectionid:
      name: candidateselectionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    executionid:
      name: executionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    analysisfeedbackid:
      name: analysisfeedbackid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProspectCampaignProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProspectCampaignProcedure'
      required: true
    CandidateSelection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CandidateSelection'
      required: true
    Execution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Execution'
      required: true
    AnalysisFeedback:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnalysisFeedback'
      required: true