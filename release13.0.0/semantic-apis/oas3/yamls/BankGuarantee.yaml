openapi: 3.0.1
info:
  title: Bank Guarantee
  description: This Service Domain handles the pricing and issuance of a broad range of bank guarantee instruments
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/BankGuarantee/13.0.0
paths:
  '/BankGuarantee/{bankguaranteeid}/Control':
    put:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Control Bank Guarantee Transaction
      description: Control Bank Guarantee Transaction
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/Exchange':
    put:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Exchange Bank Guarantee Transaction
      description: Exchange Bank Guarantee Transaction
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/Notify':
    get:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Notify Bank Guarantee Transaction
      description: Notify Bank Guarantee Transaction
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/Request':
    put:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Request Bank Guarantee Transaction
      description: Request Bank Guarantee Transaction
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/Retrieve':
    get:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Retrieve Bank Guarantee
      description: Retrieve Bank Guarantee
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/Update':
    put:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Update Bank Guarantee
      description: Update Bank Guarantee
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /BankGuarantee/Initiate:
    post:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Initiate Bank Guarantee
      description: Initiate Bank Guarantee
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/Execute':
    put:
      tags:
        - CR - BankGuaranteeTransaction
      summary: Execute Bank Guarantee Transaction
      description: Execute Bank Guarantee Transaction
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeTransaction'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeTransaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeCollections/{bankguaranteecollectionsid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteeCollections
      summary: Exchange Bank Guarantee Collections Task
      description: Exchange Bank Guarantee Collections Task
      operationId: ExchangeBankGuaranteeCollections
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteecollectionsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeCollections'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeCollections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeDefinitionandPricing/{bankguaranteedefinitionandpricingid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteeDefinitionandPricing
      summary: Exchange Bank Guarantee Definition and Pricing Task
      description: Exchange Bank Guarantee Definition and Pricing Task
      operationId: ExchangeBankGuaranteeDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteedefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeIssuanceandBooking/{bankguaranteeissuanceandbookingid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteeIssuanceandBooking
      summary: Exchange Bank Guarantee Issuance and Booking Task
      description: Exchange Bank Guarantee Issuance and Booking Task
      operationId: ExchangeBankGuaranteeIssuanceandBooking
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteeissuanceandbookingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeIssuanceandBooking'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeIssuanceandBooking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteePayout/{bankguaranteepayoutid}/Exchange':
    put:
      tags:
        - BQ - BankGuaranteePayout
      summary: Exchange Bank Guarantee Payout Task
      description: Exchange Bank Guarantee Payout Task
      operationId: ExchangeBankGuaranteePayout
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteepayoutid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteePayout'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteePayout'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerCollateralAllocation/{customercollateralallocationid}/Exchange':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Exchange Customer Collateral Allocation Task
      description: Exchange Customer Collateral Allocation Task
      operationId: ExchangeCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerPayment/{customerpaymentid}/Exchange':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Exchange Customer Payment Task
      description: Exchange Customer Payment Task
      operationId: ExchangeCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeCollections/{bankguaranteecollectionsid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteeCollections
      summary: Execute Bank Guarantee Collections Task
      description: Execute Bank Guarantee Collections Task
      operationId: ExecuteBankGuaranteeCollections
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteecollectionsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeCollections'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeCollections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeDefinitionandPricing/{bankguaranteedefinitionandpricingid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteeDefinitionandPricing
      summary: Execute Bank Guarantee Definition and Pricing Task
      description: Execute Bank Guarantee Definition and Pricing Task
      operationId: ExecuteBankGuaranteeDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteedefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeIssuanceandBooking/{bankguaranteeissuanceandbookingid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteeIssuanceandBooking
      summary: Execute Bank Guarantee Issuance and Booking Task
      description: Execute Bank Guarantee Issuance and Booking Task
      operationId: ExecuteBankGuaranteeIssuanceandBooking
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteeissuanceandbookingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeIssuanceandBooking'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeIssuanceandBooking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteePayout/{bankguaranteepayoutid}/Execute':
    put:
      tags:
        - BQ - BankGuaranteePayout
      summary: Execute Bank Guarantee Payout Task
      description: Execute Bank Guarantee Payout Task
      operationId: ExecuteBankGuaranteePayout
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteepayoutid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteePayout'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteePayout'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerCollateralAllocation/{customercollateralallocationid}/Execute':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Execute Customer Collateral Allocation Task
      description: Execute Customer Collateral Allocation Task
      operationId: ExecuteCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerPayment/{customerpaymentid}/Execute':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Execute Customer Payment Task
      description: Execute Customer Payment Task
      operationId: ExecuteCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeCollections/Initiate':
    post:
      tags:
        - BQ - BankGuaranteeCollections
      summary: Initiate Bank Guarantee Collections Task
      description: Initiate Bank Guarantee Collections Task
      operationId: InitiateBankGuaranteeCollections
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeCollections'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeCollections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeDefinitionandPricing/Initiate':
    post:
      tags:
        - BQ - BankGuaranteeDefinitionandPricing
      summary: Initiate Bank Guarantee Definition and Pricing Task
      description: Initiate Bank Guarantee Definition and Pricing Task
      operationId: InitiateBankGuaranteeDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeIssuanceandBooking/Initiate':
    post:
      tags:
        - BQ - BankGuaranteeIssuanceandBooking
      summary: Initiate Bank Guarantee Issuance and Booking Task
      description: Initiate Bank Guarantee Issuance and Booking Task
      operationId: InitiateBankGuaranteeIssuanceandBooking
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeIssuanceandBooking'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeIssuanceandBooking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteePayout/Initiate':
    post:
      tags:
        - BQ - BankGuaranteePayout
      summary: Initiate Bank Guarantee Payout Task
      description: Initiate Bank Guarantee Payout Task
      operationId: InitiateBankGuaranteePayout
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteePayout'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteePayout'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerCollateralAllocation/Initiate':
    post:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Initiate Customer Collateral Allocation Task
      description: Initiate Customer Collateral Allocation Task
      operationId: InitiateCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerPayment/Initiate':
    post:
      tags:
        - BQ - CustomerPayment
      summary: Initiate Customer Payment Task
      description: Initiate Customer Payment Task
      operationId: InitiateCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeCollections/{bankguaranteecollectionsid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteeCollections
      summary: Notify Bank Guarantee Collections Task
      description: Notify Bank Guarantee Collections Task
      operationId: NotifyBankGuaranteeCollections
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteecollectionsid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeCollections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeDefinitionandPricing/{bankguaranteedefinitionandpricingid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteeDefinitionandPricing
      summary: Notify Bank Guarantee Definition and Pricing Task
      description: Notify Bank Guarantee Definition and Pricing Task
      operationId: NotifyBankGuaranteeDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteedefinitionandpricingid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeIssuanceandBooking/{bankguaranteeissuanceandbookingid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteeIssuanceandBooking
      summary: Notify Bank Guarantee Issuance and Booking Task
      description: Notify Bank Guarantee Issuance and Booking Task
      operationId: NotifyBankGuaranteeIssuanceandBooking
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteeissuanceandbookingid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeIssuanceandBooking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteePayout/{bankguaranteepayoutid}/Notify':
    get:
      tags:
        - BQ - BankGuaranteePayout
      summary: Notify Bank Guarantee Payout Task
      description: Notify Bank Guarantee Payout Task
      operationId: NotifyBankGuaranteePayout
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteepayoutid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteePayout'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerCollateralAllocation/{customercollateralallocationid}/Notify':
    get:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Notify Customer Collateral Allocation Task
      description: Notify Customer Collateral Allocation Task
      operationId: NotifyCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerPayment/{customerpaymentid}/Notify':
    get:
      tags:
        - BQ - CustomerPayment
      summary: Notify Customer Payment Task
      description: Notify Customer Payment Task
      operationId: NotifyCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customerpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeCollections/{bankguaranteecollectionsid}/Request':
    put:
      tags:
        - BQ - BankGuaranteeCollections
      summary: Request Bank Guarantee Collections Task
      description: Request Bank Guarantee Collections Task
      operationId: RequestBankGuaranteeCollections
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteecollectionsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeCollections'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeCollections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeDefinitionandPricing/{bankguaranteedefinitionandpricingid}/Request':
    put:
      tags:
        - BQ - BankGuaranteeDefinitionandPricing
      summary: Request Bank Guarantee Definition and Pricing Task
      description: Request Bank Guarantee Definition and Pricing Task
      operationId: RequestBankGuaranteeDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteedefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeIssuanceandBooking/{bankguaranteeissuanceandbookingid}/Request':
    put:
      tags:
        - BQ - BankGuaranteeIssuanceandBooking
      summary: Request Bank Guarantee Issuance and Booking Task
      description: Request Bank Guarantee Issuance and Booking Task
      operationId: RequestBankGuaranteeIssuanceandBooking
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteeissuanceandbookingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeIssuanceandBooking'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeIssuanceandBooking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteePayout/{bankguaranteepayoutid}/Request':
    put:
      tags:
        - BQ - BankGuaranteePayout
      summary: Request Bank Guarantee Payout Task
      description: Request Bank Guarantee Payout Task
      operationId: RequestBankGuaranteePayout
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteepayoutid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteePayout'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteePayout'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerCollateralAllocation/{customercollateralallocationid}/Request':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Request Customer Collateral Allocation Task
      description: Request Customer Collateral Allocation Task
      operationId: RequestCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerPayment/{customerpaymentid}/Request':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Request Customer Payment Task
      description: Request Customer Payment Task
      operationId: RequestCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeCollections/{bankguaranteecollectionsid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteeCollections
      summary: Retrieve Bank Guarantee Collections Task
      description: Retrieve Bank Guarantee Collections Task
      operationId: RetrieveBankGuaranteeCollections
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteecollectionsid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeCollections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeDefinitionandPricing/{bankguaranteedefinitionandpricingid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteeDefinitionandPricing
      summary: Retrieve Bank Guarantee Definition and Pricing Task
      description: Retrieve Bank Guarantee Definition and Pricing Task
      operationId: RetrieveBankGuaranteeDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteedefinitionandpricingid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeIssuanceandBooking/{bankguaranteeissuanceandbookingid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteeIssuanceandBooking
      summary: Retrieve Bank Guarantee Issuance and Booking Task
      description: Retrieve Bank Guarantee Issuance and Booking Task
      operationId: RetrieveBankGuaranteeIssuanceandBooking
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteeissuanceandbookingid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeIssuanceandBooking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteePayout/{bankguaranteepayoutid}/Retrieve':
    get:
      tags:
        - BQ - BankGuaranteePayout
      summary: Retrieve Bank Guarantee Payout Task
      description: Retrieve Bank Guarantee Payout Task
      operationId: RetrieveBankGuaranteePayout
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteepayoutid'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteePayout'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerCollateralAllocation/{customercollateralallocationid}/Retrieve':
    get:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Retrieve Customer Collateral Allocation Task
      description: Retrieve Customer Collateral Allocation Task
      operationId: RetrieveCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerPayment/{customerpaymentid}/Retrieve':
    get:
      tags:
        - BQ - CustomerPayment
      summary: Retrieve Customer Payment Task
      description: Retrieve Customer Payment Task
      operationId: RetrieveCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customerpaymentid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeCollections/{bankguaranteecollectionsid}/Update':
    put:
      tags:
        - BQ - BankGuaranteeCollections
      summary: Update Bank Guarantee Collections Task
      description: Update Bank Guarantee Collections Task
      operationId: UpdateBankGuaranteeCollections
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteecollectionsid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeCollections'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeCollections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeDefinitionandPricing/{bankguaranteedefinitionandpricingid}/Update':
    put:
      tags:
        - BQ - BankGuaranteeDefinitionandPricing
      summary: Update Bank Guarantee Definition and Pricing Task
      description: Update Bank Guarantee Definition and Pricing Task
      operationId: UpdateBankGuaranteeDefinitionandPricing
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteedefinitionandpricingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeDefinitionandPricing'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeDefinitionandPricing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteeIssuanceandBooking/{bankguaranteeissuanceandbookingid}/Update':
    put:
      tags:
        - BQ - BankGuaranteeIssuanceandBooking
      summary: Update Bank Guarantee Issuance and Booking Task
      description: Update Bank Guarantee Issuance and Booking Task
      operationId: UpdateBankGuaranteeIssuanceandBooking
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteeissuanceandbookingid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteeIssuanceandBooking'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteeIssuanceandBooking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/BankGuaranteePayout/{bankguaranteepayoutid}/Update':
    put:
      tags:
        - BQ - BankGuaranteePayout
      summary: Update Bank Guarantee Payout Task
      description: Update Bank Guarantee Payout Task
      operationId: UpdateBankGuaranteePayout
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/bankguaranteepayoutid'
      requestBody:
        $ref: '#/components/requestBodies/BankGuaranteePayout'
      responses:
        '200':
          $ref: '#/components/responses/BankGuaranteePayout'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerCollateralAllocation/{customercollateralallocationid}/Update':
    put:
      tags:
        - BQ - CustomerCollateralAllocation
      summary: Update Customer Collateral Allocation Task
      description: Update Customer Collateral Allocation Task
      operationId: UpdateCustomerCollateralAllocation
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customercollateralallocationid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCollateralAllocation'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCollateralAllocation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BankGuarantee/{bankguaranteeid}/CustomerPayment/{customerpaymentid}/Update':
    put:
      tags:
        - BQ - CustomerPayment
      summary: Update Customer Payment Task
      description: Update Customer Payment Task
      operationId: UpdateCustomerPayment
      parameters:
        - $ref: '#/components/parameters/bankguaranteeid'
        - $ref: '#/components/parameters/customerpaymentid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPayment'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: Name of the beneficiary of the bank guarantee Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Record of customer contacts, correspondence, feedback ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Date on which the bank guarantee will expire ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: Reference to the Party Reference Data Directory entry of the associated party Party|Party (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM ()
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the Party Reference Data Directory entry of the bank of the beneficiary of the bank guarantee ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Identifier of a SWIFT message that has been sent or is received for this guarantee GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'Status of the bank guarantee. Values are Pending for approval, Issued, Expired, Ended, Claimed, more… Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()'
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation prior to the execution of the task
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The timing and key actions/milestones involved in completing the transaction task
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Customer Collateral Allocation Task specific Business Service
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to Customer Collateral Allocation Task
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Reference to Customer Collateral Allocation Task
    CustomerCollateralAllocation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BankGuaranteeTransactionReference:
          $ref: '#/components/schemas/transaction'
        CustomerCollateralAllocationTaskReference:
          $ref: '#/components/schemas/task'
        CustomerCollateralAllocationTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Collateral Allocation Task is a discrete action or task that is required in the execution of the Customer Collateral Allocation Task
    BankGuaranteeCollections:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BankGuaranteeTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteeCollectionsTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteeCollectionsTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Collateral Allocation Task is a discrete action or task that is required in the execution of the Customer Collateral Allocation Task
    BankGuaranteeDefinitionandPricing:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BankGuaranteeTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteeDefinitionandPricingTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteeDefinitionandPricingTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Collateral Allocation Task is a discrete action or task that is required in the execution of the Customer Collateral Allocation Task
    BankGuaranteePayout:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BankGuaranteeTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteePayoutTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteePayoutTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Collateral Allocation Task is a discrete action or task that is required in the execution of the Customer Collateral Allocation Task
    CustomerPayment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BankGuaranteeTransactionReference:
          $ref: '#/components/schemas/transaction'
        CustomerPaymentTaskReference:
          $ref: '#/components/schemas/task'
        CustomerPaymentTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Collateral Allocation Task is a discrete action or task that is required in the execution of the Customer Collateral Allocation Task
    BankGuaranteeIssuanceandBooking:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        BankGuaranteeTransactionReference:
          $ref: '#/components/schemas/transaction'
        BankGuaranteeIssuanceandBookingTaskReference:
          $ref: '#/components/schemas/task'
        BankGuaranteeIssuanceandBookingTaskType:
          $ref: '#/components/schemas/text'
      description: The Customer Collateral Allocation Task is a discrete action or task that is required in the execution of the Customer Collateral Allocation Task
    calendartypevalues:
      enum:
        - UKCalendar
        - ChineseCalendar
      type: string
      description: ">\r\n* `UKCalendar` - \r\n* `ChineseCalendar` - \r\n"
    calendar:
      type: object
      properties:
        CalendarType:
          $ref: '#/components/schemas/calendartypevalues'
        CalendarName:
          $ref: '#/components/schemas/name'
      description: ''
    feetypevalues:
      enum:
        - Accountingfee
        - Adrfee
        - Advisoryfee
        - Airwaybillfee
        - Backendload
        - Brokeragefee
        - Clearanceandhandlingatdestination
        - Clearanceandhandlingatorigin
        - Collectfreight
        - Commission
        - Contingencydeferredsalescharge
        - Correspondentbankcharge
        - Custodyfee
        - Dangerousgoodsfee
        - Dilutionlevy
        - Discount
        - Equalisation
        - Frontendload
        - Initial
        - Insurancepremium
        - Issuancecancellationfee
        - Issuancefee
        - Managementfee
        - Matchingfees
        - Miscellaneousfee
        - Other
        - Packaging
        - Partacquis
        - Penalty
        - Pickup
        - Postagecharge
        - Premium
        - Publicationfee
        - Regulatoryfee
        - Securitycharge
        - Serviceprovisionfee
        - Shippingcharge
        - Signatureservice
        - Specialconcessions
        - Speciallyagreedfrontendload
        - Storageatdestination
        - Storageatorigin
        - Switch
        - Transferfee
        - Transportcharges
        - Ucitscommission
        - ChequeRelatedFee
      type: string
      description: ">\r\n* `Accountingfee` - Fee paid for accounting services rendered.\r\n* `Adrfee` - Charge linked to an ADR (American Depositary Receipt).\r\n* `Advisoryfee` - Fee paid for advisory services rendered.\r\n* `Airwaybillfee` - Charge is an airway bill fee.\r\n* `Backendload` - Sales charge paid by the investor when redeeming an investment such as an investment fund.\r\n* `Brokeragefee` - Fee paid to a broker for services provided.\r\n* `Clearanceandhandlingatdestination` - Charge is for clearance and handling of goods at destination.\r\n* `Clearanceandhandlingatorigin` - Charge is for clearance and handling of goods at origin.\r\n* `Collectfreight` - Charge is for the collection of the freight.\r\n* `Commission` - Fee paid for services provided.\r\n* `Contingencydeferredsalescharge` - Deferred sales charge.\r\n* `Correspondentbankcharge` - In investment funds, the charge of the correspondent bank for transferring money.\r\n* `Custodyfee` - Fee paid to a custodian in respect of custodial services.\r\n* `Dangerousgoodsfee` - Charge is for dangerous goods.\r\n* `Dilutionlevy` - In investment funds, a charge payable by the investor covering bid-offer spreads and dealing charges for the underlying investments. The dilution levy is paid to the fund for the benefit of other unit holders.\r\n* `Discount` - Charge that has been reduced from the standard initial charge levied by a fund, eg, during a launch period or as negotiated by a funds supermarket / discount broker.\r\n* `Equalisation` - The part of an investor's subscription amount that is held by the fund in order to pay incentive or performance fees at the end of the fiscal year.\r\n* `Frontendload` - Sales charge paid immediately by the investor when subscribing to an investment such as an investment fund.\r\n* `Initial` - Charge paid at the time of the first subscription.\r\n* `Insurancepremium` - Charge is a premium for insurance.\r\n* `Issuancecancellationfee` - Fee linked to the cancellation of an issuance.\r\n* `Issuancefee` - Charge linked to the issuance of security.\r\n* `Managementfee` - Fee paid to an investment manager for services. The fee usually includes fund administration costs and investor relationship management. Typically, the amount paid is a percentage of the assets under management.\r\n* `Matchingfees` - Fee charged for matching and/or confirmation.\r\n* `Miscellaneousfee` - Miscellaneous fee.\r\n* `Other` - Another type of charge.\r\n* `Packaging` - Charge is for packaging of goods.\r\n* `Partacquis` - Portion of charge that the fund is entitled to receive, that cannot be reduced by an intermediary.\r\n* `Penalty` - Fee charged to the investor for early redemption of the fund.\r\n* `Pickup` - Charge is for pick-up of goods.\r\n* `Postagecharge` - Charge paid for the postage.\r\n* `Premium` - In investment funds, pre-arranged addition to the trade amount based on the published net asset value.\r\n* `Publicationfee` - Fee paid in respect of publications made.\r\n* `Regulatoryfee` - Fee charged by a regulatory authority, eg, Securities and Exchange fees.\r\n* `Securitycharge` - Charge is for security.\r\n* `Serviceprovisionfee` - Fee paid for the provision of financial services.\r\n* `Shippingcharge` - Charge for shipping, including the insurance of securities.\r\n* `Signatureservice` - Charge is for signature services.\r\n* `Specialconcessions` - Charges, drawdown, or other reduction from or in addition to the deal price.\r\n* `Speciallyagreedfrontendload` - Specially agreed front-end load.\r\n* `Storageatdestination` - Charge is for storage of goods at destination.\r\n* `Storageatorigin` - Charge is for storage of goods at origin.\r\n* `Switch` - In investment funds, charge related to a switch transaction.\r\n* `Transferfee` - In investment funds, a fee charged for the transfer of ownership of an investment fund.\r\n* `Transportcharges` - Charge is for transport.\r\n* `Ucitscommission` - Charges paid by the investor to the Fund Company for subscription and redemption orders.\r\n* `ChequeRelatedFee` - \r\n"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: Reference to the currency of the amount of the bank guarantee CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Amount of the bank guarantee CurrencyAndAmount|CurrencyAndAmount (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022  ()
    feetransaction:
      type: object
      properties:
        AppliedFeeType:
          $ref: '#/components/schemas/feetypevalues'
        AccruedFeeAmount:
          $ref: '#/components/schemas/amount'
        AppliedFeeAmount:
          $ref: '#/components/schemas/amount'
      description: ''
    interesttransactiontypevalues:
      enum:
        - InterestAllocationTransaction
        - InterestPaymentTransaction
        - InterestAdjustmentTransaction
      type: string
      description: ">\r\n* `InterestAllocationTransaction` - \r\n* `InterestPaymentTransaction` - \r\n* `InterestAdjustmentTransaction` - \r\n"
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: The actual interest rate used for the payment of the interest for the specified interest period. (ISO20022)
    interesttypevalues:
      enum:
        - Fixed
        - Floatingratenote
        - Dualbasis
        - Index
        - Discounted
        - Zerocoupon
        - Exinterest
        - Cuminterest
      type: string
      description: ">\r\n* `Fixed` - Indicates that the type of interest is fixed.\r\n* `Floatingratenote` - Indicates that the type of interest is a floating rate note.\r\n* `Dualbasis` - Indicates that the type of interest is a dual basis.\r\n* `Index` - Indicates that the type of interest is index.\r\n* `Discounted` - Indicates that the type of interest is discounted.\r\n* `Zerocoupon` - Indicates that the type of interest is a zero coupon.\r\n* `Exinterest` - Indicates deal price excluding accrued interest.\r\n* `Cuminterest` - Indicates deal price including accrued interest.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    interesttransaction:
      type: object
      properties:
        InterestTransactionAmount:
          $ref: '#/components/schemas/amount'
        InterestTransactionDescription:
          $ref: '#/components/schemas/text'
        InterestTransactionType:
          $ref: '#/components/schemas/interesttransactiontypevalues'
        AppliedInterestRate:
          $ref: '#/components/schemas/rate'
        AppliedInteretType:
          $ref: '#/components/schemas/interesttypevalues'
        InterestCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
      description: ''
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    BankGuaranteeOutcome:
      type: object
      properties:
        BankGuaranteeCalendar:
          $ref: '#/components/schemas/calendar'
        BankGuaranteeCounterparty:
          $ref: '#/components/schemas/involvedparty'
        BankGuaranteeDividend:
          $ref: '#/components/schemas/text'
        BankGuaranteeFees:
          $ref: '#/components/schemas/feetransaction'
        BankGuaranteeInterest:
          $ref: '#/components/schemas/interesttransaction'
        BankGuaranteeMargining:
          $ref: '#/components/schemas/text'
        BankGuaranteeNotionalPrincipal:
          $ref: '#/components/schemas/text'
        BankGuaranteeOptions:
          $ref: '#/components/schemas/text'
        BankGuaranteeRates:
          $ref: '#/components/schemas/rate'
        BankGuaranteeSettlement:
          $ref: '#/components/schemas/text'
        BankGuaranteeWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The Customer Collateral Allocation Task is a discrete action or task that is required in the execution of the Customer Collateral Allocation Task
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: ''
    branch:
      type: object
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/identifier'
        BranchAddress:
          $ref: '#/components/schemas/address'
        BranchName:
          $ref: '#/components/schemas/name'
      description: "Reference to the branch that manages the customer ||\r\n|"
    creditfacilitytypevalues:
      enum:
        - Revolving
        - FixedAmount
        - Decreasing
      type: string
      description: ">\r\n* `Revolving` - \r\n* `FixedAmount` - \r\n* `Decreasing` - \r\n"
    creditfacility:
      type: object
      properties:
        CreditFacilityType:
          $ref: '#/components/schemas/creditfacilitytypevalues'
      description: "Reference to the credit facility under which the bank guarantee is issued; if the guarantee is issued directly against collateral, this will be recorded by Collateral Allocation Management ||\r\n|"
    allocationstatustypevalues:
      enum:
        - Fullyallocated
        - Partiallyallocated
        - Earmarked
      type: string
      description: ">\r\n* `Fullyallocated` - \r\n* `Partiallyallocated` - \r\n* `Earmarked` - Not allocated, merely earmarked\r\n"
    collateralassetallocation:
      type: object
      properties:
        CollateralAssetAllocationStatus:
          $ref: '#/components/schemas/allocationstatustypevalues'
      description: "Reference to the Collateral Allocation Management instances that link collateral to the bank guarantee ||\r\n|"
    documentdirectory:
      type: object
      properties:
        DocumentDirectory:
          type: string
          description: 'A directory to record the document. '
          format: class
      description: "Reference to the Document Directory entry of a document related to this guarantee ||\r\n|"
    bankguaranteeagreement:
      type: object
      properties:
        BankGuaranteeAgreement:
          type: string
          description: "An agreement made by a bank or other financial instituation, where the bank assures or guarantees a beneficiary to pay a debt in case the actual customer who owes the money cannot pay.\n\n\nBank Guarantee vs Letter of Credit \n\n- A bank guarantee is a promise from a lending institution that ensures the bank will step up if a debtor can't cover a debt.\n\n- Letters of credit are also financial promises on behalf of one party in a transaction and are especially significant in international trade.\n\nLetter of credit is an financial document for assured payments, i.e. an undertaking of the buyer's bank to make payment to seller, against the documents stated. A bank guarantee is a guarantee given by the bank to the beneficiary on behalf of the applicant, to effect payment, if the applicant defaults in payment."
          format: class
      description: Reference to the Sales Product Agreement for this Bank Guarantee Undertaking |Undertaking  (https://www.iso20022.org/standardsrepository/type/Undertaking)|Standard|ISO20022 BM ()
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    modalitytypevalues:
      enum:
        - AllocationModality
        - CalculationModality
        - DerivationModality
        - PaymentModality
        - ProcessingModality
        - ApplicationModality
        - DeliveryModality
      type: string
      description: ">\r\n* `AllocationModality` - \r\n* `CalculationModality` - \r\n* `DerivationModality` - \r\n* `PaymentModality` - \r\n* `ProcessingModality` - \r\n* `ApplicationModality` - \r\n* `DeliveryModality` - \r\n"
    servicearrangementmodality:
      type: object
      properties:
        ServiceArrangementModalityType:
          $ref: '#/components/schemas/modalitytypevalues'
      description: ''
    partyobligationorentitlement:
      type: object
      properties:
        ObligationOrEntitlementSubject:
          $ref: '#/components/schemas/subject'
        ObligationOrEntitlementType:
          $ref: '#/components/schemas/arrangementtypevalues'
        ObligationOrEntitlementModality:
          $ref: '#/components/schemas/servicearrangementmodality'
        ObligationOrEntitlementDefinition:
          $ref: '#/components/schemas/text'
      description: "Description of the role, obligations or entitlements of the associated party ||\r\n|"
    accountrestrictionstatustypevalues:
      enum:
        - Active
        - Inactive
      type: string
      description: ">\r\n* `Active` - Status of the restriction is active.\r\n* `Inactive` - Status of the restriction is inactive.\r\n"
    accountrestrictionstatus:
      type: object
      properties:
        AccountRestrictionStatus:
          $ref: '#/components/schemas/status'
        AccountRestrictionStatusType:
          $ref: '#/components/schemas/accountrestrictionstatustypevalues'
      description: Status of the restriction.
    accountrestriction:
      type: object
      properties:
        AccountRestrictionIdentifier:
          $ref: '#/components/schemas/identifier'
        AccountRestrictionType:
          $ref: '#/components/schemas/text'
        AccountRestrictionDescription:
          $ref: '#/components/schemas/text'
        AccountRestrictionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AccountRestrictionStatus:
          $ref: '#/components/schemas/accountrestrictionstatus'
        AccountRestrictionRegulator:
          $ref: '#/components/schemas/involvedparty'
      description: "Setting of an applicable restriction option AccountRestriction_x000D_\n|AccountRestriction (https://www.iso20022.org/standardsrepository/type/AccountRestriction)|Standard|ISO20022 BM  ()"
    bankguaranteeinvolvementtypevalues:
      enum:
        - Applicant
        - Beneficiary
        - Bank
        - Guarantor
      type: string
      description: "Type of association, e.g. co-signer ||\r\n|"
    BankGuaranteeTransaction:
      type: object
      properties:
        BankGuaranteeCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        BankGuaranteeCustomerName:
          $ref: '#/components/schemas/name'
        BankGuaranteeCustomerBranchReference:
          $ref: '#/components/schemas/branch'
        BankGuaranteeBeneficiaryReference:
          $ref: '#/components/schemas/involvedparty'
        BankGuaranteeBeneficiaryName:
          $ref: '#/components/schemas/name'
        BankGuaranteeBeneficiaryBankReference:
          $ref: '#/components/schemas/involvedparty'
        BankGuaranteeStartDate:
          $ref: '#/components/schemas/datetime'
        BankGuaranteeExpiryDate:
          $ref: '#/components/schemas/datetime'
        CustomerTaxIdentifier:
          $ref: '#/components/schemas/identifier'
        BankGuaranteeAmount:
          $ref: '#/components/schemas/amount'
        BankGuaranteeCurrencyReference:
          $ref: '#/components/schemas/currencycode'
        BankGuaranteePurpose:
          $ref: '#/components/schemas/text'
        CreditFacilityReference:
          $ref: '#/components/schemas/creditfacility'
        CollateralAllocationManagementReference:
          $ref: '#/components/schemas/collateralassetallocation'
        SWIFTMessageID:
          $ref: '#/components/schemas/identifier'
        DocumentDirectoryReference:
          $ref: '#/components/schemas/documentdirectory'
        SalesProductAgreementReference:
          $ref: '#/components/schemas/bankguaranteeagreement'
        EntitlementOptionDefinition:
          $ref: '#/components/schemas/partyobligationorentitlement'
        EntitlementOptionSetting:
          $ref: '#/components/schemas/partyobligationorentitlement'
        RestrictionOptionDefinition:
          $ref: '#/components/schemas/accountrestriction'
        RestrictionOptionSetting:
          $ref: '#/components/schemas/accountrestriction'
        CustomerCommentary:
          $ref: '#/components/schemas/text'
        AssociationType:
          $ref: '#/components/schemas/bankguaranteeinvolvementtypevalues'
        AssociationObligation:
          $ref: '#/components/schemas/partyobligationorentitlement'
        AssociationReference:
          $ref: '#/components/schemas/party'
        BankGuaranteeStatus:
          $ref: '#/components/schemas/status'
      description: 'Execute a well-bounded financial transaction/task, typically involving largely automated/structured fulfillment processing within Bank Guarantee. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BankGuaranteeTransaction:
      description: BankGuaranteeTransaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeTransaction'
    BankGuaranteeCollections:
      description: BankGuaranteeCollections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeCollections'
    BankGuaranteeDefinitionandPricing:
      description: BankGuaranteeDefinitionandPricing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeDefinitionandPricing'
    BankGuaranteeIssuanceandBooking:
      description: BankGuaranteeIssuanceandBooking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeIssuanceandBooking'
    BankGuaranteePayout:
      description: BankGuaranteePayout
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteePayout'
    CustomerCollateralAllocation:
      description: CustomerCollateralAllocation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCollateralAllocation'
    CustomerPayment:
      description: CustomerPayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPayment'
  parameters:
    bankguaranteeid:
      name: bankguaranteeid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteecollectionsid:
      name: bankguaranteecollectionsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteedefinitionandpricingid:
      name: bankguaranteedefinitionandpricingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteeissuanceandbookingid:
      name: bankguaranteeissuanceandbookingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    bankguaranteepayoutid:
      name: bankguaranteepayoutid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customercollateralallocationid:
      name: customercollateralallocationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    customerpaymentid:
      name: customerpaymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    BankGuaranteeTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeTransaction'
      required: true
    BankGuaranteeCollections:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeCollections'
      required: true
    BankGuaranteeDefinitionandPricing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeDefinitionandPricing'
      required: true
    BankGuaranteeIssuanceandBooking:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteeIssuanceandBooking'
      required: true
    BankGuaranteePayout:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankGuaranteePayout'
      required: true
    CustomerCollateralAllocation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCollateralAllocation'
      required: true
    CustomerPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPayment'
      required: true