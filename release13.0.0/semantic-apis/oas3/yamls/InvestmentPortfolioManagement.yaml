openapi: 3.0.1
info:
  title: Investment Portfolio Management
  description: 'Manage an investment portfolio, initiating trading to leverage market opportunities, remaining within portfolio trading policies'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/InvestmentPortfolioManagement/13.0.0
paths:
  /InvestmentPortfolioManagement/Initiate:
    post:
      tags:
        - CR - ManagedInvestmentPortfolioFacility
      summary: InCR Initiate investment portfolio management activity for a customer
      description: InCR Initiate investment portfolio management activity for a customer
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioFacility'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/Update':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioFacility
      summary: UpCR Update details of an active investment portfolio management arrangement
      description: UpCR Update details of an active investment portfolio management arrangement
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioFacility'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/Control':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioFacility
      summary: CoCR Control the handling of an investment portfolio
      description: CoCR Control the handling of an investment portfolio
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioFacility'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/Exchange':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioFacility
      summary: 'EcCR Approve, reject etc. actions performed for investment portfolio management'
      description: 'EcCR Approve, reject etc. actions performed for investment portfolio management'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioFacility'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/Execute':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioFacility
      summary: ExCR Execute an automated service
      description: ExCR Execute an automated service
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioFacility'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/Request':
    put:
      tags:
        - CR - ManagedInvestmentPortfolioFacility
      summary: RqCR Request manual intervention
      description: RqCR Request manual intervention
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ManagedInvestmentPortfolioFacility'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/Retrieve':
    get:
      tags:
        - CR - ManagedInvestmentPortfolioFacility
      summary: ReCR Retrieve details about a managed investment portfolio
      description: ReCR Retrieve details about a managed investment portfolio
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
      responses:
        '200':
          $ref: '#/components/responses/ManagedInvestmentPortfolioFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/Track/{trackid}/Retrieve':
    get:
      tags:
        - BQ - Track
      summary: ReBQ Retrieve details about tracking insights for the portfolio
      description: ReBQ Retrieve details about tracking insights for the portfolio
      operationId: RetrieveTrack
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
        - $ref: '#/components/parameters/trackid'
      responses:
        '200':
          $ref: '#/components/responses/Track'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/MarketOpportunities/{marketopportunitiesid}/Retrieve':
    get:
      tags:
        - BQ - MarketOpportunities
      summary: ReBQ Retrieve details about a related market opportunity
      description: ReBQ Retrieve details about a related market opportunity
      operationId: RetrieveMarketOpportunities
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
        - $ref: '#/components/parameters/marketopportunitiesid'
      responses:
        '200':
          $ref: '#/components/responses/MarketOpportunities'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/TradeInitiation/Initiate':
    post:
      tags:
        - BQ - TradeInitiation
      summary: InBQ Initiate a trade against the investment portfolio holdings
      description: InBQ Initiate a trade against the investment portfolio holdings
      operationId: InitiateTradeInitiation
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
      requestBody:
        $ref: '#/components/requestBodies/TradeInitiation'
      responses:
        '200':
          $ref: '#/components/responses/TradeInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/TradeInitiation/{tradeinitiationid}/Update':
    put:
      tags:
        - BQ - TradeInitiation
      summary: UpBQ Update a market trade request
      description: UpBQ Update a market trade request
      operationId: UpdateTradeInitiation
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
        - $ref: '#/components/parameters/tradeinitiationid'
      requestBody:
        $ref: '#/components/requestBodies/TradeInitiation'
      responses:
        '200':
          $ref: '#/components/responses/TradeInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/TradeInitiation/{tradeinitiationid}/Exchange':
    put:
      tags:
        - BQ - TradeInitiation
      summary: 'EcBQ Accept, reject etc. a market trade proposed for the portfolio'
      description: 'EcBQ Accept, reject etc. a market trade proposed for the portfolio'
      operationId: ExchangeTradeInitiation
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
        - $ref: '#/components/parameters/tradeinitiationid'
      requestBody:
        $ref: '#/components/requestBodies/TradeInitiation'
      responses:
        '200':
          $ref: '#/components/responses/TradeInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/TradeInitiation/{tradeinitiationid}/Request':
    put:
      tags:
        - BQ - TradeInitiation
      summary: ReBQ Request manual intervention to a related market trade
      description: ReBQ Request manual intervention to a related market trade
      operationId: RequestTradeInitiation
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
        - $ref: '#/components/parameters/tradeinitiationid'
      requestBody:
        $ref: '#/components/requestBodies/TradeInitiation'
      responses:
        '200':
          $ref: '#/components/responses/TradeInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/InvestmentPortfolioManagement/{investmentportfoliomanagementid}/TradeInitiation/{tradeinitiationid}/Retrieve':
    get:
      tags:
        - BQ - TradeInitiation
      summary: ReBQ Retrieve details about a related market trade request
      description: ReBQ Retrieve details about a related market trade request
      operationId: RetrieveTradeInitiation
      parameters:
        - $ref: '#/components/parameters/investmentportfoliomanagementid'
        - $ref: '#/components/parameters/tradeinitiationid'
      responses:
        '200':
          $ref: '#/components/responses/TradeInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A narrative explaining the interpretation of the portfolio policies as they govern trading decisions ||\r\n|"
    MarketOpportunities:
      type: object
      properties:
        MarketOpportunityDescription:
          $ref: '#/components/schemas/text'
        SecuritiesComparison:
          type: string
          description: Evaluation of the comparative performance of identified security and that in the investment portfolio that would be replaced/adjusted
          format: object
      description: The product features/services available with a financical facility
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the investment portfolio record of all holdings GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Party who plays a  specific role in the context of assigning a status.
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: The trading request record used to initiate and track the trade
    securitytypevalues:
      enum:
        - Equity
        - Warrant
        - Entitlement
      type: string
      description: "The type of security held in the portfolio ||\r\n|"
    TradeInitiation:
      type: object
      properties:
        InvestmentPortfolioTradeRequest:
          $ref: '#/components/schemas/instruction'
        InvestmentPortfolioTradeSecurityType:
          $ref: '#/components/schemas/securitytypevalues'
        InvestmentPortfolioTradeSecurityTradeDescription:
          $ref: '#/components/schemas/text'
      description: The product features/services available with a financical facility
    Track:
      type: object
      properties:
        InvestmentPortfolioSecuritySensitivity:
          type: string
          description: The sensitivity viewpoint for a held security position
          format: object
        ProjectedValuation:
          type: string
          description: The expected value movement
          format: object
        ProjectedPortfolioImpact:
          type: string
          description: An impact assessment of the projected movement on the investment portfolio - includes possible policy limit breaches
          format: object
      description: The product features/services available with a financical facility
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Interpretation of the investment portfolio policies as they impact securities selection and investment decisioning GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()
    policytypevalues:
      enum:
        - SecurityPolicy
        - AdministrativePolicy
        - SocialPolicy
        - RegulatoryPolicy
      type: string
      description: "The type of policy applied to the portfolio (e.g. risk appetite, allowed sectors/instrument types, timeframes) ||\r\n|"
    assetholding:
      type: object
      properties:
        AssetHolding:
          type: string
          description: Specifies in terms of value and quantity the assets. (ISO20022)
          format: class
      description: "Record of past and projected and current holding for the security ||\r\n|"
    ManagedInvestmentPortfolioFacility:
      type: object
      properties:
        InvestmentPortfolioTradingPolicies:
          $ref: '#/components/schemas/ruleset'
        InvestmentPortfolioPolicyType:
          $ref: '#/components/schemas/policytypevalues'
        InvestmentPortfolioPolicyDescription:
          $ref: '#/components/schemas/text'
        InvestmentPortfolioPolicyLimitsandConstraints:
          type: string
          description: Specific trading constraints (e.g. stocks or sectors that are out of bounds and acceptable risk levels)
          format: object
        InvestmentPortfolioInstanceReference:
          $ref: '#/components/schemas/identifier'
        InvestmentPortfolioHoldings:
          $ref: '#/components/schemas/assetholding'
        InvestmentPortfolioSecurityType:
          $ref: '#/components/schemas/securitytypevalues'
        InvestmentPortfolioSecurityHolding:
          $ref: '#/components/schemas/assetholding'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within Investment Portfolio Management. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ManagedInvestmentPortfolioFacility:
      description: ManagedInvestmentPortfolioFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManagedInvestmentPortfolioFacility'
    Track:
      description: Track
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Track'
    MarketOpportunities:
      description: MarketOpportunities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketOpportunities'
    TradeInitiation:
      description: TradeInitiation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradeInitiation'
  parameters:
    investmentportfoliomanagementid:
      name: investmentportfoliomanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    trackid:
      name: trackid
      in: path
      required: true
      style: simple
      schema:
        type: string
    marketopportunitiesid:
      name: marketopportunitiesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    tradeinitiationid:
      name: tradeinitiationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ManagedInvestmentPortfolioFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManagedInvestmentPortfolioFacility'
      required: true
    TradeInitiation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradeInitiation'
      required: true