openapi: 3.0.1
info:
  title: Trade Clearing
  description: This Service Domain handles the back office processes that confirm and notify interested parties that securities and funds are available as traded in anticipation of settlement processing
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/TradeClearing/13.0.0
paths:
  '/TradeClearing/{tradeclearingid}/Control':
    put:
      tags:
        - CR - TradeClearingProcedure
      summary: Control Trade Clearing Procedure
      description: Control Trade Clearing Procedure
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/TradeClearingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/Exchange':
    put:
      tags:
        - CR - TradeClearingProcedure
      summary: Exchange Trade Clearing Procedure
      description: Exchange Trade Clearing Procedure
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/TradeClearingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/Execute':
    put:
      tags:
        - CR - TradeClearingProcedure
      summary: Execute Trade Clearing Procedure
      description: Execute Trade Clearing Procedure
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/TradeClearingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /TradeClearing/Initiate:
    post:
      tags:
        - CR - TradeClearingProcedure
      summary: Initiate Trade Clearing Procedure
      description: Initiate Trade Clearing Procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/TradeClearingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/Notify':
    get:
      tags:
        - CR - TradeClearingProcedure
      summary: Notify Trade Clearing Procedure
      description: Notify Trade Clearing Procedure
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/Request':
    put:
      tags:
        - CR - TradeClearingProcedure
      summary: Request Trade Clearing Procedure
      description: Request Trade Clearing Procedure
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/TradeClearingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/Retrieve':
    get:
      tags:
        - CR - TradeClearingProcedure
      summary: Retrieve Trade Clearing Procedure
      description: Retrieve Trade Clearing Procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/Update':
    put:
      tags:
        - CR - TradeClearingProcedure
      summary: Update Trade Clearing Procedure
      description: Update Trade Clearing Procedure
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/TradeClearingProcedure'
      responses:
        '200':
          $ref: '#/components/responses/TradeClearingProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeConfirmation/{markettradeconfirmationid}/Exchange':
    put:
      tags:
        - BQ - MarketTradeConfirmation
      summary: Exchange Market Trade Confirmation Workstep
      description: Exchange Market Trade Confirmation Workstep
      operationId: ExchangeMarketTradeConfirmation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeFundsandSecurityAvailabilityAssurance/{markettradefundsandsecurityavailabilityassuranceid}/Exchange':
    put:
      tags:
        - BQ - MarketTradeFundsandSecurityAvailabilityAssurance
      summary: Exchange Market Trade Funds and Security Availability Assurance Workstep
      description: Exchange Market Trade Funds and Security Availability Assurance Workstep
      operationId: ExchangeMarketTradeFundsandSecurityAvailabilityAssurance
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradefundsandsecurityavailabilityassuranceid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeFundsandSecurityAvailabilityAssurance'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeFundsandSecurityAvailabilityAssurance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeMatching/{markettradematchingid}/Exchange':
    put:
      tags:
        - BQ - MarketTradeMatching
      summary: Exchange Market Trade Matching Workstep
      description: Exchange Market Trade Matching Workstep
      operationId: ExchangeMarketTradeMatching
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradematchingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeMatching'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeMatching'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeOutTradeResolution/{markettradeouttraderesolutionid}/Exchange':
    put:
      tags:
        - BQ - MarketTradeOutTradeResolution
      summary: Exchange Market Trade Out Trade Resolution Workstep
      description: Exchange Market Trade Out Trade Resolution Workstep
      operationId: ExchangeMarketTradeOutTradeResolution
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeouttraderesolutionid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeOutTradeResolution'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeOutTradeResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeSettlementInitiation/{markettradesettlementinitiationid}/Exchange':
    put:
      tags:
        - BQ - MarketTradeSettlementInitiation
      summary: Exchange Market Trade Settlement Initiation Workstep
      description: Exchange Market Trade Settlement Initiation Workstep
      operationId: ExchangeMarketTradeSettlementInitiation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradesettlementinitiationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeSettlementInitiation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeSettlementInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeConfirmation/{markettradeconfirmationid}/Execute':
    put:
      tags:
        - BQ - MarketTradeConfirmation
      summary: Execute Market Trade Confirmation Workstep
      description: Execute Market Trade Confirmation Workstep
      operationId: ExecuteMarketTradeConfirmation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeFundsandSecurityAvailabilityAssurance/{markettradefundsandsecurityavailabilityassuranceid}/Execute':
    put:
      tags:
        - BQ - MarketTradeFundsandSecurityAvailabilityAssurance
      summary: Execute Market Trade Funds and Security Availability Assurance Workstep
      description: Execute Market Trade Funds and Security Availability Assurance Workstep
      operationId: ExecuteMarketTradeFundsandSecurityAvailabilityAssurance
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradefundsandsecurityavailabilityassuranceid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeFundsandSecurityAvailabilityAssurance'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeFundsandSecurityAvailabilityAssurance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeMatching/{markettradematchingid}/Execute':
    put:
      tags:
        - BQ - MarketTradeMatching
      summary: Execute Market Trade Matching Workstep
      description: Execute Market Trade Matching Workstep
      operationId: ExecuteMarketTradeMatching
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradematchingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeMatching'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeMatching'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeOutTradeResolution/{markettradeouttraderesolutionid}/Execute':
    put:
      tags:
        - BQ - MarketTradeOutTradeResolution
      summary: Execute Market Trade Out Trade Resolution Workstep
      description: Execute Market Trade Out Trade Resolution Workstep
      operationId: ExecuteMarketTradeOutTradeResolution
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeouttraderesolutionid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeOutTradeResolution'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeOutTradeResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeSettlementInitiation/{markettradesettlementinitiationid}/Execute':
    put:
      tags:
        - BQ - MarketTradeSettlementInitiation
      summary: Execute Market Trade Settlement Initiation Workstep
      description: Execute Market Trade Settlement Initiation Workstep
      operationId: ExecuteMarketTradeSettlementInitiation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradesettlementinitiationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeSettlementInitiation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeSettlementInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeConfirmation/Initiate':
    post:
      tags:
        - BQ - MarketTradeConfirmation
      summary: Initiate Market Trade Confirmation Workstep
      description: Initiate Market Trade Confirmation Workstep
      operationId: InitiateMarketTradeConfirmation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeFundsandSecurityAvailabilityAssurance/Initiate':
    post:
      tags:
        - BQ - MarketTradeFundsandSecurityAvailabilityAssurance
      summary: Initiate Market Trade Funds and Security Availability Assurance Workstep
      description: Initiate Market Trade Funds and Security Availability Assurance Workstep
      operationId: InitiateMarketTradeFundsandSecurityAvailabilityAssurance
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeFundsandSecurityAvailabilityAssurance'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeFundsandSecurityAvailabilityAssurance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeMatching/Initiate':
    post:
      tags:
        - BQ - MarketTradeMatching
      summary: Initiate Market Trade Matching Workstep
      description: Initiate Market Trade Matching Workstep
      operationId: InitiateMarketTradeMatching
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeMatching'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeMatching'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeOutTradeResolution/Initiate':
    post:
      tags:
        - BQ - MarketTradeOutTradeResolution
      summary: Initiate Market Trade Out Trade Resolution Workstep
      description: Initiate Market Trade Out Trade Resolution Workstep
      operationId: InitiateMarketTradeOutTradeResolution
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeOutTradeResolution'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeOutTradeResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeSettlementInitiation/Initiate':
    post:
      tags:
        - BQ - MarketTradeSettlementInitiation
      summary: Initiate Market Trade Settlement Initiation Workstep
      description: Initiate Market Trade Settlement Initiation Workstep
      operationId: InitiateMarketTradeSettlementInitiation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeSettlementInitiation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeSettlementInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeConfirmation/{markettradeconfirmationid}/Notify':
    get:
      tags:
        - BQ - MarketTradeConfirmation
      summary: Notify Market Trade Confirmation Workstep
      description: Notify Market Trade Confirmation Workstep
      operationId: NotifyMarketTradeConfirmation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeconfirmationid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeFundsandSecurityAvailabilityAssurance/{markettradefundsandsecurityavailabilityassuranceid}/Notify':
    get:
      tags:
        - BQ - MarketTradeFundsandSecurityAvailabilityAssurance
      summary: Notify Market Trade Funds and Security Availability Assurance Workstep
      description: Notify Market Trade Funds and Security Availability Assurance Workstep
      operationId: NotifyMarketTradeFundsandSecurityAvailabilityAssurance
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradefundsandsecurityavailabilityassuranceid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeFundsandSecurityAvailabilityAssurance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeMatching/{markettradematchingid}/Notify':
    get:
      tags:
        - BQ - MarketTradeMatching
      summary: Notify Market Trade Matching Workstep
      description: Notify Market Trade Matching Workstep
      operationId: NotifyMarketTradeMatching
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradematchingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeMatching'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeOutTradeResolution/{markettradeouttraderesolutionid}/Notify':
    get:
      tags:
        - BQ - MarketTradeOutTradeResolution
      summary: Notify Market Trade Out Trade Resolution Workstep
      description: Notify Market Trade Out Trade Resolution Workstep
      operationId: NotifyMarketTradeOutTradeResolution
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeouttraderesolutionid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeOutTradeResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeSettlementInitiation/{markettradesettlementinitiationid}/Notify':
    get:
      tags:
        - BQ - MarketTradeSettlementInitiation
      summary: Notify Market Trade Settlement Initiation Workstep
      description: Notify Market Trade Settlement Initiation Workstep
      operationId: NotifyMarketTradeSettlementInitiation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradesettlementinitiationid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeSettlementInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeConfirmation/{markettradeconfirmationid}/Request':
    put:
      tags:
        - BQ - MarketTradeConfirmation
      summary: Request Market Trade Confirmation Workstep
      description: Request Market Trade Confirmation Workstep
      operationId: RequestMarketTradeConfirmation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeFundsandSecurityAvailabilityAssurance/{markettradefundsandsecurityavailabilityassuranceid}/Request':
    put:
      tags:
        - BQ - MarketTradeFundsandSecurityAvailabilityAssurance
      summary: Request Market Trade Funds and Security Availability Assurance Workstep
      description: Request Market Trade Funds and Security Availability Assurance Workstep
      operationId: RequestMarketTradeFundsandSecurityAvailabilityAssurance
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradefundsandsecurityavailabilityassuranceid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeFundsandSecurityAvailabilityAssurance'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeFundsandSecurityAvailabilityAssurance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeMatching/{markettradematchingid}/Request':
    put:
      tags:
        - BQ - MarketTradeMatching
      summary: Request Market Trade Matching Workstep
      description: Request Market Trade Matching Workstep
      operationId: RequestMarketTradeMatching
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradematchingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeMatching'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeMatching'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeOutTradeResolution/{markettradeouttraderesolutionid}/Request':
    put:
      tags:
        - BQ - MarketTradeOutTradeResolution
      summary: Request Market Trade Out Trade Resolution Workstep
      description: Request Market Trade Out Trade Resolution Workstep
      operationId: RequestMarketTradeOutTradeResolution
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeouttraderesolutionid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeOutTradeResolution'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeOutTradeResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeSettlementInitiation/{markettradesettlementinitiationid}/Request':
    put:
      tags:
        - BQ - MarketTradeSettlementInitiation
      summary: Request Market Trade Settlement Initiation Workstep
      description: Request Market Trade Settlement Initiation Workstep
      operationId: RequestMarketTradeSettlementInitiation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradesettlementinitiationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeSettlementInitiation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeSettlementInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeConfirmation/{markettradeconfirmationid}/Retrieve':
    get:
      tags:
        - BQ - MarketTradeConfirmation
      summary: Retrieve Market Trade Confirmation Workstep
      description: Retrieve Market Trade Confirmation Workstep
      operationId: RetrieveMarketTradeConfirmation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeconfirmationid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeFundsandSecurityAvailabilityAssurance/{markettradefundsandsecurityavailabilityassuranceid}/Retrieve':
    get:
      tags:
        - BQ - MarketTradeFundsandSecurityAvailabilityAssurance
      summary: Retrieve Market Trade Funds and Security Availability Assurance Workstep
      description: Retrieve Market Trade Funds and Security Availability Assurance Workstep
      operationId: RetrieveMarketTradeFundsandSecurityAvailabilityAssurance
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradefundsandsecurityavailabilityassuranceid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeFundsandSecurityAvailabilityAssurance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeMatching/{markettradematchingid}/Retrieve':
    get:
      tags:
        - BQ - MarketTradeMatching
      summary: Retrieve Market Trade Matching Workstep
      description: Retrieve Market Trade Matching Workstep
      operationId: RetrieveMarketTradeMatching
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradematchingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeMatching'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeOutTradeResolution/{markettradeouttraderesolutionid}/Retrieve':
    get:
      tags:
        - BQ - MarketTradeOutTradeResolution
      summary: Retrieve Market Trade Out Trade Resolution Workstep
      description: Retrieve Market Trade Out Trade Resolution Workstep
      operationId: RetrieveMarketTradeOutTradeResolution
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeouttraderesolutionid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeOutTradeResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeSettlementInitiation/{markettradesettlementinitiationid}/Retrieve':
    get:
      tags:
        - BQ - MarketTradeSettlementInitiation
      summary: Retrieve Market Trade Settlement Initiation Workstep
      description: Retrieve Market Trade Settlement Initiation Workstep
      operationId: RetrieveMarketTradeSettlementInitiation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradesettlementinitiationid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeSettlementInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeConfirmation/{markettradeconfirmationid}/Update':
    put:
      tags:
        - BQ - MarketTradeConfirmation
      summary: Update Market Trade Confirmation Workstep
      description: Update Market Trade Confirmation Workstep
      operationId: UpdateMarketTradeConfirmation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeconfirmationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeConfirmation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeConfirmation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeFundsandSecurityAvailabilityAssurance/{markettradefundsandsecurityavailabilityassuranceid}/Update':
    put:
      tags:
        - BQ - MarketTradeFundsandSecurityAvailabilityAssurance
      summary: Update Market Trade Funds and Security Availability Assurance Workstep
      description: Update Market Trade Funds and Security Availability Assurance Workstep
      operationId: UpdateMarketTradeFundsandSecurityAvailabilityAssurance
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradefundsandsecurityavailabilityassuranceid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeFundsandSecurityAvailabilityAssurance'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeFundsandSecurityAvailabilityAssurance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeMatching/{markettradematchingid}/Update':
    put:
      tags:
        - BQ - MarketTradeMatching
      summary: Update Market Trade Matching Workstep
      description: Update Market Trade Matching Workstep
      operationId: UpdateMarketTradeMatching
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradematchingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeMatching'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeMatching'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeOutTradeResolution/{markettradeouttraderesolutionid}/Update':
    put:
      tags:
        - BQ - MarketTradeOutTradeResolution
      summary: Update Market Trade Out Trade Resolution Workstep
      description: Update Market Trade Out Trade Resolution Workstep
      operationId: UpdateMarketTradeOutTradeResolution
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradeouttraderesolutionid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeOutTradeResolution'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeOutTradeResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/TradeClearing/{tradeclearingid}/MarketTradeSettlementInitiation/{markettradesettlementinitiationid}/Update':
    put:
      tags:
        - BQ - MarketTradeSettlementInitiation
      summary: Update Market Trade Settlement Initiation Workstep
      description: Update Market Trade Settlement Initiation Workstep
      operationId: UpdateMarketTradeSettlementInitiation
      parameters:
        - $ref: '#/components/parameters/tradeclearingid'
        - $ref: '#/components/parameters/markettradesettlementinitiationid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTradeSettlementInitiation'
      responses:
        '200':
          $ref: '#/components/responses/MarketTradeSettlementInitiation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer who is involved in Trade Clearing Procedure ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Trade Clearing Procedure Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation and or tasks that need to be completed prior to the initiation of the workstep
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule according to which the service provider will process the Trade Clearing Procedure ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Market Trade Settlement Initiation Workstep specific Business Service
    proceduretypevalues:
      type: object
      properties:
        Proceduretypevalues:
          type: string
          description: A Classification value that distinguishes between the type of process undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of process undertaken within Procedure
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: "Request to process Trade Clearing Procedure ||\r\n|"
    procedure:
      type: object
      properties:
        ProcedureType:
          $ref: '#/components/schemas/proceduretypevalues'
        ProcedureDateTime:
          $ref: '#/components/schemas/datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/status'
      description: "An unique reference to an item or an occurrence of Trade Clearing Procedure ||\r\n|"
    worksteptypevalues:
      type: object
      properties:
        Worksteptypevalues:
          type: string
          description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    workstep:
      type: object
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/text'
        WorkstepType:
          $ref: '#/components/schemas/worksteptypevalues'
        WorkstepDescription:
          $ref: '#/components/schemas/text'
        WorkstepDateTime:
          $ref: '#/components/schemas/datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/workproduct'
      description: Reference to Market Trade Settlement Initiation Workstep
    MarketTradeSettlementInitiation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        TradeClearingProcedureReference:
          $ref: '#/components/schemas/procedure'
        MarketTradeSettlementInitiationWorkstepReference:
          $ref: '#/components/schemas/workstep'
        MarketTradeSettlementInitiationWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Market Trade Settlement Initiation Workstep in the context of executing the Market Trade Settlement Initiation Workstep
    MarketTradeConfirmation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        TradeClearingProcedureReference:
          $ref: '#/components/schemas/procedure'
        MarketTradeConfirmationWorkstepReference:
          $ref: '#/components/schemas/workstep'
        MarketTradeConfirmationWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Market Trade Settlement Initiation Workstep in the context of executing the Market Trade Settlement Initiation Workstep
    MarketTradeMatching:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        TradeClearingProcedureReference:
          $ref: '#/components/schemas/procedure'
        MarketTradeMatchingWorkstepReference:
          $ref: '#/components/schemas/workstep'
        MarketTradeMatchingWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Market Trade Settlement Initiation Workstep in the context of executing the Market Trade Settlement Initiation Workstep
    MarketTradeFundsandSecurityAvailabilityAssurance:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        TradeClearingProcedureReference:
          $ref: '#/components/schemas/procedure'
        MarketTradeFundsandSecurityAvailabilityAssuranceWorkstepReference:
          $ref: '#/components/schemas/workstep'
        MarketTradeFundsandSecurityAvailabilityAssuranceWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Market Trade Settlement Initiation Workstep in the context of executing the Market Trade Settlement Initiation Workstep
    MarketTradeOutTradeResolution:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        TradeClearingProcedureReference:
          $ref: '#/components/schemas/procedure'
        MarketTradeOutTradeResolutionWorkstepReference:
          $ref: '#/components/schemas/workstep'
        MarketTradeOutTradeResolutionWorkstepType:
          $ref: '#/components/schemas/text'
      description: A course of action for doing Market Trade Settlement Initiation Workstep in the context of executing the Market Trade Settlement Initiation Workstep
    TradeClearingOutcome:
      type: object
      properties:
        TradeClearingWorkProduct:
          $ref: '#/components/schemas/workproduct'
        TradeClearingProcedure:
          $ref: '#/components/schemas/procedure'
      description: A course of action for doing Market Trade Settlement Initiation Workstep in the context of executing the Market Trade Settlement Initiation Workstep
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between Procedures according to the type of business services and/or type of concern defined within Trade Clearing Procedure ||\r\n|"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: "A selected optional business service as subject matter of Trade Clearing Procedure ||\r\n|"
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: "Reference to the Financial Facility related to Trade Clearing Procedure ||\r\n|"
    proceduretype:
      type: object
      properties:
        ProcedureTypeName:
          $ref: '#/components/schemas/name'
        ProcedureType:
          $ref: '#/components/schemas/proceduretypevalues'
      description: "A Classification value that distinguishes between the type of process undertaken within Trade Clearing Procedure ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: ">\r\n* `ITService` - \r\n* `AdministrativeService` - \r\n* `SystemService` - \r\n* `FinancialService` - \r\n* `InformationService` - \r\n* `BusinessService` - \r\n"
    servicetype:
      type: object
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/name'
        ServiceType:
          $ref: '#/components/schemas/servicetypevalues'
      description: "A Classification value that distinguishes between the type of services in Trade Clearing Procedure ||\r\n|"
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    bankingproducttype:
      type: object
      properties:
        ProductTypeDefinition:
          type: string
          description: ''
          format: string
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductClassificationIssuingAuthority:
          type: string
          description: ''
          format: string
      description: "A Classification value that distinguishes between the type of products/services related to Trade Clearing Procedure ||\r\n|"
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    productstatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productstatus:
      type: object
      properties:
        ProductStatus:
          $ref: '#/components/schemas/status'
        ProductStatusType:
          $ref: '#/components/schemas/productstatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productstatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: "Reference to the product or service that is related to Trade Clearing Procedure Product_x000D_\n|Product (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022 BM ()"
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: ">\r\n* `FinancialTransaction` - \r\n* `BusinessTransaction` - \r\n* `BankingTransaction` - \r\n* `AccountingTransaction` - \r\n* `BookingTransaction` - \r\n* `AllocationTransaction` - \r\n* `DeliveryTransaction` - \r\n* `ProductionTransaction` - \r\n"
    transactiontype:
      type: object
      properties:
        TransactionTypeName:
          $ref: '#/components/schemas/name'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
      description: "A Classification value that distinguishes between the type of transactions in Trade Clearing Procedure ||\r\n|"
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to the transaction that is related to Trade Clearing Procedure ObligationFulfilment|ObligationFulfilment (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022 BM ()
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Reference to the Financial Transaction Arrangement that is related to Trade Clearing Procedure Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: Date on which the agreement was signed by all parties. (ISO20022)
    agreementtypevalues:
      enum:
        - CustomerAgreement
        - SupplierAgreement
        - BrokerAgreement
        - SalesAgreement
        - PurchaseAgreement
        - MaintenanceAgreement
        - ProductAgreement
        - ProductSalesAgreement
        - ResourceAgreement
      type: string
      description: ">\r\n* `CustomerAgreement` - \r\n* `SupplierAgreement` - \r\n* `BrokerAgreement` - \r\n* `SalesAgreement` - \r\n* `PurchaseAgreement` - \r\n* `MaintenanceAgreement` - \r\n* `ProductAgreement` - \r\n* `ProductSalesAgreement` - \r\n* `ResourceAgreement` - \r\n"
    agreementstatustypevalues:
      enum:
        - Offered
        - Confirmed
        - Completed
        - Signed
        - Terminated
        - Rejected
      type: string
      description: ">\r\n* `Offered` - \r\n* `Confirmed` - \r\n* `Completed` - \r\n* `Signed` - \r\n* `Terminated` - \r\n* `Rejected` - \r\n"
    agreementstatus:
      type: object
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/status'
        AgreementStatusType:
          $ref: '#/components/schemas/agreementstatustypevalues'
      description: 'A characteristic of agreement which refers to the LifecycleStatus of agreement (e.g., potential, offered, confirmed, completed, signed, terminated).'
    agreement:
      type: object
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/date'
        AgreementType:
          $ref: '#/components/schemas/agreementtypevalues'
        AgreementValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/text'
        AgreementStatus:
          $ref: '#/components/schemas/agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/text'
        AgreementIdentification:
          $ref: '#/components/schemas/identifier'
        AgreementDate:
          $ref: '#/components/schemas/datetime'
        AgreementDescription:
          $ref: '#/components/schemas/text'
      description: "Reference to the Customer Agreement that is related to Trade Clearing Procedure Agreement_x000D_\n|Agreement (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022 BM ()"
    TradeClearingProcedure:
      type: object
      properties:
        TradeClearingProcedureParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        TradeClearingProcedureSelectedOption:
          $ref: '#/components/schemas/feature'
        TradeClearingProcedureRequest:
          $ref: '#/components/schemas/instruction'
        TradeClearingProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        TradeClearingProcedureStatus:
          $ref: '#/components/schemas/status'
        TradeClearingProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        TradeClearingProcedureBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        TradeClearingProcedureServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        TradeClearingProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        TradeClearingProcedureEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        TradeClearingProcedureCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        TradeClearingProcedureType:
          $ref: '#/components/schemas/proceduretype'
        TradeClearingProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        TradeClearingProcedureServiceType:
          $ref: '#/components/schemas/servicetype'
        TradeClearingProcedureProductandServiceType:
          $ref: '#/components/schemas/bankingproducttype'
        TradeClearingProcedureProductandServiceInstance:
          $ref: '#/components/schemas/bankingproduct'
        TradeClearingProcedureTransactionType:
          $ref: '#/components/schemas/transactiontype'
        TradeClearingProcedureTransaction:
          $ref: '#/components/schemas/transaction'
        TradeClearingProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/arrangement'
        TradeClearingProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/agreement'
        TradeClearingProcedureReference:
          $ref: '#/components/schemas/procedure'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Trade Clearing. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TradeClearingProcedure:
      description: TradeClearingProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradeClearingProcedure'
    MarketTradeConfirmation:
      description: MarketTradeConfirmation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeConfirmation'
    MarketTradeFundsandSecurityAvailabilityAssurance:
      description: MarketTradeFundsandSecurityAvailabilityAssurance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeFundsandSecurityAvailabilityAssurance'
    MarketTradeMatching:
      description: MarketTradeMatching
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeMatching'
    MarketTradeOutTradeResolution:
      description: MarketTradeOutTradeResolution
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeOutTradeResolution'
    MarketTradeSettlementInitiation:
      description: MarketTradeSettlementInitiation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeSettlementInitiation'
  parameters:
    tradeclearingid:
      name: tradeclearingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettradeconfirmationid:
      name: markettradeconfirmationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettradefundsandsecurityavailabilityassuranceid:
      name: markettradefundsandsecurityavailabilityassuranceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettradematchingid:
      name: markettradematchingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettradeouttraderesolutionid:
      name: markettradeouttraderesolutionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettradesettlementinitiationid:
      name: markettradesettlementinitiationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    TradeClearingProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradeClearingProcedure'
      required: true
    MarketTradeConfirmation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeConfirmation'
      required: true
    MarketTradeFundsandSecurityAvailabilityAssurance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeFundsandSecurityAvailabilityAssurance'
      required: true
    MarketTradeMatching:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeMatching'
      required: true
    MarketTradeOutTradeResolution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeOutTradeResolution'
      required: true
    MarketTradeSettlementInitiation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTradeSettlementInitiation'
      required: true