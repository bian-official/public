openapi: 3.0.1
info:
  title: Branch Currency Management
  description: 'Track cash inventory, project demand and ensure all cash is accounted for within the branch'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/BranchCurrencyManagement/13.0.0
paths:
  '/BranchCurrencyManagement/{branchcurrencymanagementid}/Capture':
    put:
      tags:
        - CR - BranchCashAllocation
      summary: CaCR Capture Branch Cash Allocation activity or event related information
      description: CaCR Capture Branch Cash Allocation activity or event related information
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/branchcurrencymanagementid'
      requestBody:
        $ref: '#/components/requestBodies/CaptureBranchCashAllocationRequest'
      responses:
        '200':
          $ref: '#/components/responses/CaptureBranchCashAllocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BranchCurrencyManagement/{branchcurrencymanagementid}/Control':
    put:
      tags:
        - CR - BranchCashAllocation
      summary: CoCR Control the processing of Branch Cash Allocation
      description: CoCR Control the processing of Branch Cash Allocation
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/branchcurrencymanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ControlBranchCashAllocationRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlBranchCashAllocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BranchCurrencyManagement/{branchcurrencymanagementid}/Exchange':
    put:
      tags:
        - CR - BranchCashAllocation
      summary: 'EcCR Accept, verify, etc. aspects of Branch Cash Allocation processing'
      description: 'EcCR Accept, verify, etc. aspects of Branch Cash Allocation processing'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/branchcurrencymanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeBranchCashAllocationRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeBranchCashAllocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /BranchCurrencyManagement/Initiate:
    post:
      tags:
        - CR - BranchCashAllocation
      summary: InCR Instantiate a new Branch Cash Allocation
      description: InCR Instantiate a new Branch Cash Allocation
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateBranchCashAllocationRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateBranchCashAllocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BranchCurrencyManagement/{branchcurrencymanagementid}/Retrieve':
    get:
      tags:
        - CR - BranchCashAllocation
      summary: ReCR Retrieve details about any aspect of Branch Cash Allocation
      description: ReCR Retrieve details about any aspect of Branch Cash Allocation
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/branchcurrencymanagementid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveBranchCashAllocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/BranchCurrencyManagement/{branchcurrencymanagementid}/Update':
    put:
      tags:
        - CR - BranchCashAllocation
      summary: UpCR Update details relating to Branch Cash Allocation
      description: UpCR Update details relating to Branch Cash Allocation
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/branchcurrencymanagementid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateBranchCashAllocationRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateBranchCashAllocationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Documentation of Branch Cash Allocation ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer who is involved in Branch Cash Allocation ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Branch Cash Allocation Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation before the allocation can be made
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "Timetable to allocate BranchCash ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Inventory Allocation specific  Business Service
    InventoryAllocation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        AllocationSchedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
      description: "Set of rules for the purpose of deciding if or if not something is applicable\n\nExamples: Staff assignment, Facility allocation."
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    BranchCurrencyManagementOutcome:
      type: object
      properties:
        BranchCurrencyManagementAllocation:
          type: string
          description: ''
          format: object
        BranchCurrencyManagementWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: "Set of rules for the purpose of deciding if or if not something is applicable\n\nExamples: Staff assignment, Facility allocation."
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between allocation Options according to the optional business services defined within Branch Cash Allocation ||\r\n|"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: "A selected optional business service for which resources are allocated ||\r\n|"
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: "Request to allocate BranchCash ||\r\n|"
    cashallocation:
      type: object
      properties:
        CashAllocation:
          type: string
          description: The allocation of cash
          format: class
      description: "Reference to Branch Cash Allocation Instance ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The curreny which is arranged/used for Branch Cash Allocation CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    regulation:
      type: object
      properties:
        RegulationDefinition:
          $ref: '#/components/schemas/text'
      description: "Reference to the regulation which is defined for Branch Cash Allocation ||\r\n|"
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: "A Classification that distinguishes between the regularity domains of Branch Cash Allocation ||\r\n|"
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: Reference to the jurisdiction that is assigned to Branch Cash Allocation in case of legal dispute. Jurisdiction|Jurisdiction (https://www.iso20022.org/standardsrepository/type/Jurisdiction)|Standard|ISO20022 BM ()
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: 'The financial accounting unit into which the financial events, with regard to the origination and fulfillment of the agreement, are entered. Location/Address|Location/Address (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022 BM ()'
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
        - IndividualAccount
        - JointAccount
        - LiquidationAccount
        - ProvisionAccount
        - PartnershipAccount
        - InvestmentAccount
      type: string
      description: The type of account which is linked to Branch Cash Allocation OBExternalAccountSubType1Code| ()|Standard|UK Open Banking ()
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
        - SortCodeAndAccountNumber
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n* `SortCodeAndAccountNumber` - Sort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (UK Open Banking)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetimetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
        - RenewalDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n* `RenewalDate` - \r\n"
    accountdatetime:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetimetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    balancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - CurrentBalance
        - AvailableBalance
        - LedgerBalance
        - ReserveBalance
        - FreeBalance
        - PrincipalBalance
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - PreviouslyClosedBooked
        - Expected
      type: string
      description: ">\r\n* `OpeningBalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `ClosingBalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `CurrentBalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `AvailableBalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `LedgerBalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `ReserveBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n* `ClosingAvailable` - Closing balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `ClosingBooked` - Balance of the account at the end of the pre-agreed account reporting period. It is the sum of the opening booked balance at the beginning of the period and all entries booked to the account during the pre-agreed account reporting period.\r\n* `ForwardAvailable` - Forward available balance of money that is at the disposal of the account owner on the date specified.\r\n* `Information` - Balance for informational purposes.\r\n* `InterimAvailable` - Available balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `InterimBooked` - Balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `OpeningAvailable` - Opening balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `OpeningBooked` - Book balance of the account at the beginning of the account reporting period. It always equals the closing book balance from the previous report.\r\n* `PreviouslyClosedBooked` - Balance of the account at the previously closed account reporting period. The opening booked balance for the new period has to be equal to this balance.\nUsage: the previously booked closing balance should equal (inclusive date) the booked closing balance of the date it references and equal the actual booked opening balance of the current date.\r\n* `Expected` - Balance, composed of booked entries and pending items known at the time of calculation, which projects the end of day balance if everything is booked on the account and no other entry is posted.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    balancecounterpartytypevalues:
      enum:
        - Bilateral
        - Multilateral
      type: string
      description: ">\r\n* `Bilateral` - Balance calculated regarding one member in the system. (ISO20022)\r\n* `Multilateral` - Balance calculated regarding all members in the system. (ISO20022)\r\n"
    balancesubtypevalues:
      enum:
        - Adjustment
        - Basecurrency
        - Blocked
        - Blockedfunds
        - Daylightoverdraft
        - Eligibleassets
        - Firmcollateralization
        - Amountsthathavebeenusedtoserveasfirmcollateral
        - Securitiesforecast
        - Netfunding
        - Intermediate
        - Localcurrency
        - Limitrelated
        - Reservedliquidity
        - Securitiespending
        - Payinpayout
        - Progressiveaverage
        - Reserve
        - Selfcollateralization
        - Amountsthathavebeenusedtoserveasselfcollateral
        - Threshold
      type: string
      description: ">\r\n* `Adjustment` - Balance to be held in the settlement account in order to comply with the average reserve due, in the event that the bank's balance is equal to the reserve due during the remaining days of the maintenance period.\r\n* `Basecurrency` - Balance representing the amount in the domestic or base accounting currency.\r\n* `Blocked` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes. In some countries, a blocked balance is known as a 'reserve' balance.\r\n* `Blockedfunds` - Balance representing funds that cannot be touched by the account owner.\r\n* `Daylightoverdraft` - Balance representing the intra day overdraft granted by the Central Bank to financial institutions participating in a RTGS system. This balance may vary over time and shall be offset at the end of the day.\r\n* `Eligibleassets` - Balance representing the potential loan a Central Bank would make in cash if the collateral is pledged, eg, securities available and eligible as collateral with the Central Bank.\r\n* `Firmcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral.\r\n* `Amountsthathavebeenusedtoserveasfirmcollateral` - Balance representing the cash equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral and have been used as collateral.\r\n* `Securitiesforecast` - Balance representing the total of all balance types representing the forecast of transactions to settle, blocked items, custody transactions and corporate actions cash disbursements.\r\n* `Netfunding` - Balance representing the net amount to be funded resulting from the difference between the total of all transactions with a cash impact and the existing cash coverage.\r\n* `Intermediate` - Balance representing an intermediate amount such as the opening or closing balance incrementally carried forward from one page to the next in a multi-page statement or report.\r\n* `Localcurrency` - Balance representing the amount in the local market currency for which the asset is held.\r\n* `Limitrelated` - Balance of a specific limit value, eg, a bilateral balance is calculated in relation to a given bilateral limit.\r\n* `Reservedliquidity` - Balance representing the amount that a financial institution has set aside for a specific reason and which is therefore not available. In the context of CSDs, reservation of liquidity made to meet settlement obligations.\r\n* `Securitiespending` - Balance of securities pending delivery, such as orders to sell securities have been executed but settlement of the open transactions has not been confirmed.\r\n* `Payinpayout` - Balance representing the fictive amount of automated direct debits or payment based on standing arrangements between the CSD and the user. Usage: Pay-Ins and Pay-Outs can be different based on individual payment instructions or available funds.\r\n* `Progressiveaverage` - Average of the daily balances on the account used to fulfil the reserve requirements calculated from the beginning of the maintenance period.\r\n* `Reserve` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes.\r\n* `Selfcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of the net incoming balance of securities qualified to serve as collateral for which settlement instructions are held at.\r\n* `Amountsthathavebeenusedtoserveasselfcollateral` - Balance representing the cash-equivalent resulting from evaluation of incoming securities, qualified to serve as collateral and actually used as collateral, which have been settled during the settlement process.\r\n* `Threshold` - Balance representing the amount that will be destined for investment. Difference between available balance and threshold for investment limit.\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceValueDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        BalanceCounterpartyType:
          $ref: '#/components/schemas/balancecounterpartytypevalues'
        BalanceCalculationDate:
          $ref: '#/components/schemas/datetime'
        BalanceSubType:
          $ref: '#/components/schemas/balancesubtypevalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdatetime'
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Reference to the account which is linked to Branch Cash Allocation Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()
    BranchCashAllocation:
      type: object
      properties:
        BranchCashAllocationParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        BranchCashAllocationSelectedOption:
          $ref: '#/components/schemas/feature'
        BranchCashAllocation<SubjectArea>Type:
          $ref: '#/components/schemas/text'
        BranchCashAllocationDescription:
          $ref: '#/components/schemas/text'
        BranchCashAllocationRequest:
          $ref: '#/components/schemas/instruction'
        BranchCashAllocationSchedule:
          $ref: '#/components/schemas/schedule'
        BranchCashAllocationStatus:
          $ref: '#/components/schemas/status'
        BranchCashAllocationReference:
          $ref: '#/components/schemas/cashallocation'
        BranchCashAllocationCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        BranchCashAllocationCurrency:
          $ref: '#/components/schemas/currencycode'
        BranchCashAllocationRegulationReference:
          $ref: '#/components/schemas/regulation'
        BranchCashAllocationRegulationType:
          $ref: '#/components/schemas/rulesettypevalues'
        BranchCashAllocationJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        BranchCashAllocationBookingLocation:
          $ref: '#/components/schemas/address'
        BranchCashAllocationAccountType:
          $ref: '#/components/schemas/accounttypevalues'
        BranchCashAllocationAccountReference:
          $ref: '#/components/schemas/account'
        BranchCashAllocationInstance:
          $ref: '#/components/schemas/cashallocation'
      description: "Maintain an inventory or holding of some resource and make assignments/allocations as requested  within Branch Currency Management. \nExample: Track the inventory and administer the distribution of central cash holdings throughout the branch & ATM network."
    CaptureBranchCashAllocationRequest:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocation<SubjectArea>Type:
              $ref: '#/components/schemas/text'
            BranchCashAllocationDescription:
              $ref: '#/components/schemas/text'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationReference:
              $ref: '#/components/schemas/cashallocation'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            BranchCashAllocationCurrency:
              $ref: '#/components/schemas/currencycode'
            BranchCashAllocationRegulationReference:
              $ref: '#/components/schemas/regulation'
            BranchCashAllocationRegulationType:
              $ref: '#/components/schemas/rulesettypevalues'
            BranchCashAllocationJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            BranchCashAllocationBookingLocation:
              $ref: '#/components/schemas/address'
            BranchCashAllocationAccountType:
              $ref: '#/components/schemas/accounttypevalues'
            BranchCashAllocationAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: CaCR Capture Branch Cash Allocation activity or event related information'
    CaptureBranchCashAllocationResponse:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Output: CaCR Capture Branch Cash Allocation activity or event related information'
    ControlBranchCashAllocationRequest:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocation<SubjectArea>Type:
              $ref: '#/components/schemas/text'
            BranchCashAllocationDescription:
              $ref: '#/components/schemas/text'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationReference:
              $ref: '#/components/schemas/cashallocation'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            BranchCashAllocationCurrency:
              $ref: '#/components/schemas/currencycode'
            BranchCashAllocationRegulationReference:
              $ref: '#/components/schemas/regulation'
            BranchCashAllocationRegulationType:
              $ref: '#/components/schemas/rulesettypevalues'
            BranchCashAllocationJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            BranchCashAllocationBookingLocation:
              $ref: '#/components/schemas/address'
            BranchCashAllocationAccountType:
              $ref: '#/components/schemas/accounttypevalues'
            BranchCashAllocationAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: CoCR Control the processing of Branch Cash Allocation'
    ControlBranchCashAllocationResponse:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Output: CoCR Control the processing of Branch Cash Allocation'
    ExchangeBranchCashAllocationRequest:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocation<SubjectArea>Type:
              $ref: '#/components/schemas/text'
            BranchCashAllocationDescription:
              $ref: '#/components/schemas/text'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationReference:
              $ref: '#/components/schemas/cashallocation'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            BranchCashAllocationCurrency:
              $ref: '#/components/schemas/currencycode'
            BranchCashAllocationRegulationReference:
              $ref: '#/components/schemas/regulation'
            BranchCashAllocationRegulationType:
              $ref: '#/components/schemas/rulesettypevalues'
            BranchCashAllocationJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            BranchCashAllocationBookingLocation:
              $ref: '#/components/schemas/address'
            BranchCashAllocationAccountType:
              $ref: '#/components/schemas/accounttypevalues'
            BranchCashAllocationAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: EcCR Accept, verify, etc. aspects of Branch Cash Allocation processing'
    ExchangeBranchCashAllocationResponse:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Output: EcCR Accept, verify, etc. aspects of Branch Cash Allocation processing'
    InitiateBranchCashAllocationRequest:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocation<SubjectArea>Type:
              $ref: '#/components/schemas/text'
            BranchCashAllocationDescription:
              $ref: '#/components/schemas/text'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationReference:
              $ref: '#/components/schemas/cashallocation'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            BranchCashAllocationCurrency:
              $ref: '#/components/schemas/currencycode'
            BranchCashAllocationRegulationReference:
              $ref: '#/components/schemas/regulation'
            BranchCashAllocationRegulationType:
              $ref: '#/components/schemas/rulesettypevalues'
            BranchCashAllocationJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            BranchCashAllocationBookingLocation:
              $ref: '#/components/schemas/address'
            BranchCashAllocationAccountType:
              $ref: '#/components/schemas/accounttypevalues'
            BranchCashAllocationAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: InCR Instantiate a new Branch Cash Allocation'
    InitiateBranchCashAllocationResponse:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Output: InCR Instantiate a new Branch Cash Allocation'
    RetrieveBranchCashAllocationResponse:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocation<SubjectArea>Type:
              $ref: '#/components/schemas/text'
            BranchCashAllocationDescription:
              $ref: '#/components/schemas/text'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationReference:
              $ref: '#/components/schemas/cashallocation'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            BranchCashAllocationCurrency:
              $ref: '#/components/schemas/currencycode'
            BranchCashAllocationRegulationReference:
              $ref: '#/components/schemas/regulation'
            BranchCashAllocationRegulationType:
              $ref: '#/components/schemas/rulesettypevalues'
            BranchCashAllocationJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            BranchCashAllocationBookingLocation:
              $ref: '#/components/schemas/address'
            BranchCashAllocationAccountType:
              $ref: '#/components/schemas/accounttypevalues'
            BranchCashAllocationAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Output: ReCR Retrieve details about any aspect of Branch Cash Allocation'
    UpdateBranchCashAllocationRequest:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocation<SubjectArea>Type:
              $ref: '#/components/schemas/text'
            BranchCashAllocationDescription:
              $ref: '#/components/schemas/text'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationReference:
              $ref: '#/components/schemas/cashallocation'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            BranchCashAllocationCurrency:
              $ref: '#/components/schemas/currencycode'
            BranchCashAllocationRegulationReference:
              $ref: '#/components/schemas/regulation'
            BranchCashAllocationRegulationType:
              $ref: '#/components/schemas/rulesettypevalues'
            BranchCashAllocationJurisdiction:
              $ref: '#/components/schemas/jurisdiction'
            BranchCashAllocationBookingLocation:
              $ref: '#/components/schemas/address'
            BranchCashAllocationAccountType:
              $ref: '#/components/schemas/accounttypevalues'
            BranchCashAllocationAccountReference:
              $ref: '#/components/schemas/account'
      description: 'Input: UpCR Update details relating to Branch Cash Allocation'
    UpdateBranchCashAllocationResponse:
      type: object
      properties:
        BranchCashAllocation:
          type: object
          properties:
            BranchCashAllocationParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            BranchCashAllocationSelectedOption:
              $ref: '#/components/schemas/feature'
            BranchCashAllocationRequest:
              $ref: '#/components/schemas/instruction'
            BranchCashAllocationSchedule:
              $ref: '#/components/schemas/schedule'
            BranchCashAllocationStatus:
              $ref: '#/components/schemas/status'
            BranchCashAllocationCustomerReference:
              $ref: '#/components/schemas/involvedparty'
      description: 'Output: UpCR Update details relating to Branch Cash Allocation'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CaptureBranchCashAllocationResponse:
      description: CaptureBranchCashAllocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureBranchCashAllocationResponse'
    ControlBranchCashAllocationResponse:
      description: ControlBranchCashAllocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlBranchCashAllocationResponse'
    ExchangeBranchCashAllocationResponse:
      description: ExchangeBranchCashAllocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeBranchCashAllocationResponse'
    InitiateBranchCashAllocationResponse:
      description: InitiateBranchCashAllocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateBranchCashAllocationResponse'
    RetrieveBranchCashAllocationResponse:
      description: RetrieveBranchCashAllocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveBranchCashAllocationResponse'
    UpdateBranchCashAllocationResponse:
      description: UpdateBranchCashAllocationResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBranchCashAllocationResponse'
  parameters:
    branchcurrencymanagementid:
      name: branchcurrencymanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CaptureBranchCashAllocationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CaptureBranchCashAllocationRequest'
      required: true
    ControlBranchCashAllocationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlBranchCashAllocationRequest'
      required: true
    ExchangeBranchCashAllocationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeBranchCashAllocationRequest'
      required: true
    InitiateBranchCashAllocationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateBranchCashAllocationRequest'
      required: true
    UpdateBranchCashAllocationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBranchCashAllocationRequest'
      required: true