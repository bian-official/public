openapi: 3.0.1
info:
  title: Contact Center Operations
  description: Administer the day to day activity in the contact center - allocate positions and track staff availability and performance
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ContactCenterOperations/13.0.0
paths:
  /ContactCenterOperations/Create:
    post:
      tags:
        - CR - ContactCenterAdministrativePlan
      summary: CrCR Create the administrative plan for the contact center
      description: CrCR Create the administrative plan for the contact center
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/ContactCenterAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ContactCenterAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Update':
    put:
      tags:
        - CR - ContactCenterAdministrativePlan
      summary: UpCR Update aspects of the administrative plan
      description: UpCR Update aspects of the administrative plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ContactCenterAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ContactCenterAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Control':
    put:
      tags:
        - CR - ContactCenterAdministrativePlan
      summary: CoCR Control the execution of the contact center administrative plan
      description: CoCR Control the execution of the contact center administrative plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ContactCenterAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ContactCenterAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Execute':
    put:
      tags:
        - CR - ContactCenterAdministrativePlan
      summary: ExCR Execute an automated action against the plan
      description: ExCR Execute an automated action against the plan
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ContactCenterAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ContactCenterAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Request':
    put:
      tags:
        - CR - ContactCenterAdministrativePlan
      summary: RqCR Request manual intervention to the plan
      description: RqCR Request manual intervention to the plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/ContactCenterAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ContactCenterAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Retrieve':
    get:
      tags:
        - CR - ContactCenterAdministrativePlan
      summary: ReCR Retrieve details about the execution of the administrative plan
      description: ReCR Retrieve details about the execution of the administrative plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
      responses:
        '200':
          $ref: '#/components/responses/ContactCenterAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Assignment/Create':
    post:
      tags:
        - BQ - Assignment
      summary: CrBQ Create an assignment request
      description: CrBQ Create an assignment request
      operationId: CreateAssignment
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/Assignment'
      responses:
        '200':
          $ref: '#/components/responses/Assignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Assignment/{assignmentid}/Update':
    put:
      tags:
        - BQ - Assignment
      summary: UpBQ Update details of a servicing representatives assignment
      description: UpBQ Update details of a servicing representatives assignment
      operationId: UpdateAssignment
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/assignmentid'
      requestBody:
        $ref: '#/components/requestBodies/Assignment'
      responses:
        '200':
          $ref: '#/components/responses/Assignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Assignment/{assignmentid}/Control':
    put:
      tags:
        - BQ - Assignment
      summary: CoBQ Control the servicing representatives assignment
      description: CoBQ Control the servicing representatives assignment
      operationId: ControlAssignment
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/assignmentid'
      requestBody:
        $ref: '#/components/requestBodies/Assignment'
      responses:
        '200':
          $ref: '#/components/responses/Assignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Assignment/{assignmentid}/Request':
    put:
      tags:
        - BQ - Assignment
      summary: RqBQ Request changes to the servicing representative's assignment
      description: RqBQ Request changes to the servicing representative's assignment
      operationId: RequestAssignment
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/assignmentid'
      requestBody:
        $ref: '#/components/requestBodies/Assignment'
      responses:
        '200':
          $ref: '#/components/responses/Assignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Assignment/{assignmentid}/Retrieve':
    get:
      tags:
        - BQ - Assignment
      summary: ReBQ Retrieve details about a contact center assignment
      description: ReBQ Retrieve details about a contact center assignment
      operationId: RetrieveAssignment
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/assignmentid'
      responses:
        '200':
          $ref: '#/components/responses/Assignment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/PeakLoad/{peakloadid}/Update':
    put:
      tags:
        - BQ - PeakLoad
      summary: UpBQ Update details or the response to a peak load situation
      description: UpBQ Update details or the response to a peak load situation
      operationId: UpdatePeakLoad
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/peakloadid'
      requestBody:
        $ref: '#/components/requestBodies/PeakLoad'
      responses:
        '200':
          $ref: '#/components/responses/PeakLoad'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/PeakLoad/{peakloadid}/Request':
    put:
      tags:
        - BQ - PeakLoad
      summary: RqBQ Request manual intervention due to peak loading
      description: RqBQ Request manual intervention due to peak loading
      operationId: RequestPeakLoad
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/peakloadid'
      requestBody:
        $ref: '#/components/requestBodies/PeakLoad'
      responses:
        '200':
          $ref: '#/components/responses/PeakLoad'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/PeakLoad/{peakloadid}/Retrieve':
    get:
      tags:
        - BQ - PeakLoad
      summary: ReBQ Retrieve details about peak load response activity
      description: ReBQ Retrieve details about peak load response activity
      operationId: RetrievePeakLoad
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/peakloadid'
      responses:
        '200':
          $ref: '#/components/responses/PeakLoad'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Troubleshooting/Create':
    post:
      tags:
        - BQ - Troubleshooting
      summary: CrBQ Create a troubleshooting response task
      description: CrBQ Create a troubleshooting response task
      operationId: CreateTroubleshooting
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Troubleshooting/{troubleshootingid}/Update':
    put:
      tags:
        - BQ - Troubleshooting
      summary: UpBQ Update aspects of a troubleshooting task
      description: UpBQ Update aspects of a troubleshooting task
      operationId: UpdateTroubleshooting
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/troubleshootingid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Troubleshooting/{troubleshootingid}/Request':
    put:
      tags:
        - BQ - Troubleshooting
      summary: RqBQ request manual intervention in troubleshooting activity
      description: RqBQ request manual intervention in troubleshooting activity
      operationId: RequestTroubleshooting
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/troubleshootingid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ContactCenterOperations/{contactcenteroperationsid}/Troubleshooting/{troubleshootingid}/Retrieve':
    get:
      tags:
        - BQ - Troubleshooting
      summary: ReBQ Retrieve details about troubleshooting activity
      description: ReBQ Retrieve details about troubleshooting activity
      operationId: RetrieveTroubleshooting
      parameters:
        - $ref: '#/components/parameters/contactcenteroperationsid'
        - $ref: '#/components/parameters/troubleshootingid'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    productionissue:
      type: object
      properties:
        ProductionIssueType:
          type: string
          description: "The Type of production problem (error)\n"
          format: string
        ProductionIssueDescription:
          type: string
          description: Description of the production problem
          format: string
        ProductionIssueDiagnosis:
          type: string
          description: Evaluation of the production problem cause and impact assessment
          format: string
        ProductionIssueResolutionTask:
          type: string
          description: Description of corrective action proposed and taken
          format: string
        ProductionIssueStatus:
          type: string
          description: The state of resolution of a reported production problem
          format: string
      description: A record of any production issues arising during the session (see Advanced Voice Channel Operations for detailed content)
    Troubleshooting:
      type: object
      properties:
        ContactCenterProductionIssueRecord:
          $ref: '#/components/schemas/productionissue'
        ContactCenterIssueAnalysisAndRecommendedResponse:
          type: string
          description: A record of the root cause analysis for recurring issues and suggested remedial action
          format: object
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Details about a registered customer servicing representative ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    position:
      type: object
      properties:
        PositionValue:
          $ref: '#/components/schemas/value'
        PositionQuantity:
          type: string
          description: ''
          format: number
        PositionDate:
          $ref: '#/components/schemas/datetime'
        PositionAmount:
          $ref: '#/components/schemas/amount'
      description: Reference to the assigned servicing position/desk within the contact center
    profile:
      type: object
      properties:
        Profile:
          type: string
          description: A brief description of the characteristics of something or someone. (Business Dictionary)
          format: class
      description: "Details the qualification, expertise and level of experience of the servicing representative ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "Details the time the customer servicing representative plans to be and is actually available for assignments which covers times for shift working and temporary/overtime assignments as may be necessary ||\r\n|"
    Assignment:
      type: object
      properties:
        AssignmentCustomerServicingRepresentative:
          $ref: '#/components/schemas/involvedparty'
        AssignmentCustomerServicingPositionReference:
          $ref: '#/components/schemas/position'
        AssignmentCustomerServicingPositionProfile:
          $ref: '#/components/schemas/profile'
        AssignmentCustomerServicingPositionSchedule:
          $ref: '#/components/schemas/schedule'
        CustomerContactSessionProcedureInstanceReference:
          $ref: '#/components/schemas/identifier'
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: The task undertaken to address a detected peak load condition
    PeakLoad:
      type: object
      properties:
        ContactCenterServiceStatistics:
          type: string
          description: Tracked activity and performance statistics used to manage the contact center resource assignments and menu configuration
          format: object
        ContactCenterServiceStatisticType:
          $ref: '#/components/schemas/text'
        PeakLoadResponseTask:
          $ref: '#/components/schemas/task'
        PeakLoadResponseTaskType:
          $ref: '#/components/schemas/text'
        PeakLoadResponseDescription:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: Tracks the current status indicating availability for assignment to a servicing position (where  the representative will coordinate with contact routing for customer contacts) Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The default contact center operational configuration as defined by Contact Center Management (Note this can include some latitude for position assignment changes to be made during day to day operations by this service domain) Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: Reference to the locations the customer servicing representative can work from (can include remote working arrangements and time zone availability) Location/Address|Location/Address (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022 BM ()
    assignment:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
        SubjectMatter:
          type: string
          description: ''
          format: object
      description: "Reference to a consolidated record of assignments. This is used to track utilization and performance ||\r\n|"
    ContactCenterAdministrativePlan:
      type: object
      properties:
        ContactCenterServiceOperatingConfiguration:
          $ref: '#/components/schemas/arrangement'
        CustomerServicingRepresentativeAllocationSchedule:
          $ref: '#/components/schemas/schedule'
        CustomerServicingRepresentativeReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerServicingRepresentativeRecord:
          $ref: '#/components/schemas/involvedparty'
        CustomerServicingRepresentativeQualificationProfile:
          $ref: '#/components/schemas/profile'
        CustomerServicingRepresentativeLocation:
          $ref: '#/components/schemas/address'
        CustomerServicingRepresentativeAvailabilitySchedule:
          $ref: '#/components/schemas/schedule'
        CustomerServicingRepresentativeStatus:
          $ref: '#/components/schemas/status'
        CustomerServicingRepresentativeAssignmentRecord:
          $ref: '#/components/schemas/assignment'
      description: "Handle and assign the day to day activities, capture time, costs and income for an operational unit within Contact Center Operations. \n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ContactCenterAdministrativePlan:
      description: ContactCenterAdministrativePlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactCenterAdministrativePlan'
    Assignment:
      description: Assignment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Assignment'
    PeakLoad:
      description: PeakLoad
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeakLoad'
    Troubleshooting:
      description: Troubleshooting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Troubleshooting'
  parameters:
    contactcenteroperationsid:
      name: contactcenteroperationsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    assignmentid:
      name: assignmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    peakloadid:
      name: peakloadid
      in: path
      required: true
      style: simple
      schema:
        type: string
    troubleshootingid:
      name: troubleshootingid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ContactCenterAdministrativePlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactCenterAdministrativePlan'
      required: true
    Assignment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Assignment'
      required: true
    PeakLoad:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeakLoad'
      required: true
    Troubleshooting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Troubleshooting'
      required: true