openapi: 3.0.1
info:
  title: Correspondence
  description: This service domain orchestrates the production of pre-formatted correspondence and batches of correspondence (e.g. mail shots).
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/Correspondence/13.0.0
paths:
  /Correspondence/Initiate:
    post:
      tags:
        - CR - CorrespondenceOperatingSession
      summary: InCR Initiate the correspondence operational facility
      description: InCR Initiate the correspondence operational facility
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/CorrespondenceOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CorrespondenceOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Update':
    put:
      tags:
        - CR - CorrespondenceOperatingSession
      summary: UpCR Update settings and details of the operating session (e.g. change priorities)
      description: UpCR Update settings and details of the operating session (e.g. change priorities)
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondenceOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CorrespondenceOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Control':
    put:
      tags:
        - CR - CorrespondenceOperatingSession
      summary: CoCR Control the session (e.g. suspend incoming mail)
      description: CoCR Control the session (e.g. suspend incoming mail)
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondenceOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CorrespondenceOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Execute':
    put:
      tags:
        - CR - CorrespondenceOperatingSession
      summary: ExCR Execute an automated task (e.g. statistical analysis)
      description: ExCR Execute an automated task (e.g. statistical analysis)
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondenceOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CorrespondenceOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Request':
    put:
      tags:
        - CR - CorrespondenceOperatingSession
      summary: 'RqCR Request manual intervention (e.g. handle lost, wrongly addressed correspondence)'
      description: 'RqCR Request manual intervention (e.g. handle lost, wrongly addressed correspondence)'
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/CorrespondenceOperatingSession'
      responses:
        '200':
          $ref: '#/components/responses/CorrespondenceOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Retrieve':
    get:
      tags:
        - CR - CorrespondenceOperatingSession
      summary: ReCR Retrieve details about the correspondence session
      description: ReCR Retrieve details about the correspondence session
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      responses:
        '200':
          $ref: '#/components/responses/CorrespondenceOperatingSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Outbound/Initiate':
    post:
      tags:
        - BQ - Outbound
      summary: InBQ Initiate processing an outbound correspondence item
      description: InBQ Initiate processing an outbound correspondence item
      operationId: InitiateOutbound
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/Outbound'
      responses:
        '200':
          $ref: '#/components/responses/Outbound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Outbound/{outboundid}/Update':
    put:
      tags:
        - BQ - Outbound
      summary: UpBQ Update details of an outbound correspondence item
      description: UpBQ Update details of an outbound correspondence item
      operationId: UpdateOutbound
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/outboundid'
      requestBody:
        $ref: '#/components/requestBodies/Outbound'
      responses:
        '200':
          $ref: '#/components/responses/Outbound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Outbound/{outboundid}/Retrieve':
    get:
      tags:
        - BQ - Outbound
      summary: ReBQ Retrieve details about an outbound correspondence item
      description: ReBQ Retrieve details about an outbound correspondence item
      operationId: RetrieveOutbound
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/outboundid'
      responses:
        '200':
          $ref: '#/components/responses/Outbound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/OutboundWithResponse/Initiate':
    post:
      tags:
        - BQ - OutboundWithResponse
      summary: InBQ Initiate processing outbound correspondence with tracked response
      description: InBQ Initiate processing outbound correspondence with tracked response
      operationId: InitiateOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundWithResponse'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/OutboundWithResponse/{outboundwithresponseid}/Update':
    put:
      tags:
        - BQ - OutboundWithResponse
      summary: UpBQ Update details of an outbound correspondence with tracked response
      description: UpBQ Update details of an outbound correspondence with tracked response
      operationId: UpdateOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      requestBody:
        $ref: '#/components/requestBodies/OutboundWithResponse'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/OutboundWithResponse/{outboundwithresponseid}/Retrieve':
    get:
      tags:
        - BQ - OutboundWithResponse
      summary: ReBQ Retrieve details about an outbound correspondence with tracked response
      description: ReBQ Retrieve details about an outbound correspondence with tracked response
      operationId: RetrieveOutboundWithResponse
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/outboundwithresponseid'
      responses:
        '200':
          $ref: '#/components/responses/OutboundWithResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Inbound/Initiate':
    post:
      tags:
        - BQ - Inbound
      summary: InBQ Initiate processing of an inbound correspondence item
      description: InBQ Initiate processing of an inbound correspondence item
      operationId: InitiateInbound
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/Inbound'
      responses:
        '200':
          $ref: '#/components/responses/Inbound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Inbound/{inboundid}/Update':
    put:
      tags:
        - BQ - Inbound
      summary: UpBQ Update details of an inbound correspondence item
      description: UpBQ Update details of an inbound correspondence item
      operationId: UpdateInbound
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/inboundid'
      requestBody:
        $ref: '#/components/requestBodies/Inbound'
      responses:
        '200':
          $ref: '#/components/responses/Inbound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/Inbound/{inboundid}/Retrieve':
    get:
      tags:
        - BQ - Inbound
      summary: ReBQ Retrieve details about an inbound correspondence item
      description: ReBQ Retrieve details about an inbound correspondence item
      operationId: RetrieveInbound
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/inboundid'
      responses:
        '200':
          $ref: '#/components/responses/Inbound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/BlockMailing/Initiate':
    post:
      tags:
        - BQ - BlockMailing
      summary: InBQ Initiate processing an outbound correspondence block
      description: InBQ Initiate processing an outbound correspondence block
      operationId: InitiateBlockMailing
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
      requestBody:
        $ref: '#/components/requestBodies/BlockMailing'
      responses:
        '200':
          $ref: '#/components/responses/BlockMailing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/BlockMailing/{blockmailingid}/Update':
    put:
      tags:
        - BQ - BlockMailing
      summary: UpBQ Update details of an outbound correspondence block
      description: UpBQ Update details of an outbound correspondence block
      operationId: UpdateBlockMailing
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/blockmailingid'
      requestBody:
        $ref: '#/components/requestBodies/BlockMailing'
      responses:
        '200':
          $ref: '#/components/responses/BlockMailing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/Correspondence/{correspondenceid}/BlockMailing/{blockmailingid}/Retrieve':
    get:
      tags:
        - BQ - BlockMailing
      summary: ReBQ Retrieve details about an outbound correspondence block
      description: ReBQ Retrieve details about an outbound correspondence block
      operationId: RetrieveBlockMailing
      parameters:
        - $ref: '#/components/parameters/correspondenceid'
        - $ref: '#/components/parameters/blockmailingid'
      responses:
        '200':
          $ref: '#/components/responses/BlockMailing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Key dates and times for the session ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the inbound correspondence item
    correspondencetypevalues:
      enum:
        - UnsolicitedMessage
        - Complaint
      type: string
      description: ">\r\n* `UnsolicitedMessage` - \r\n* `Complaint` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'The tracked status (e.g. under construction or repair, inhabited, vacant).'
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: The address for message delivery (needs to match channel selection)
    correspondencecommunicationmethodtypevalues:
      enum:
        - Fax
        - Email
        - Proprietary
        - Online
        - Phone
        - Postalservice
        - File
      type: string
      description: ">\r\n* `Fax` - Transmission by fax.\r\n* `Email` - Transmission by e-mail.\r\n* `Proprietary` - Transmission by proprietary method.\r\n* `Online` - Transmission on line, for example, in a web portal.\r\n* `Phone` - Transmission by telephone.\r\n* `Postalservice` - Transmission by postal service.\r\n* `File` - Transmission by file transfer.\r\n"
    correspondencemediumtypevalues:
      enum:
        - Paper
        - Electronic
        - Paperelectronic
        - Biometric
      type: string
      description: ">\r\n* `Paper` - Presentation is made on paper.\r\n* `Electronic` - Presentation is made electronically.\r\n* `Paperelectronic` - Presentation is made on paper and/or electronically.\r\n* `Biometric` - Biometric medium.\r\n"
    correspondence:
      type: object
      properties:
        CorrespondenceType:
          $ref: '#/components/schemas/correspondencetypevalues'
        CorrespondenceAddress:
          $ref: '#/components/schemas/address'
        CorrespondenceDateTime:
          $ref: '#/components/schemas/datetime'
        CorrespondenceContent:
          $ref: '#/components/schemas/text'
        CorrespondenceTemplate:
          $ref: '#/components/schemas/text'
        CorrespondenceCommunicationMethod:
          $ref: '#/components/schemas/correspondencecommunicationmethodtypevalues'
        CorrespondenceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        CorrespondenceMedium:
          $ref: '#/components/schemas/correspondencemediumtypevalues'
      description: The inbound correspondence message
    employee:
      type: object
      properties:
        Employee:
          type: string
          description: 'Party who is employed by an employer. '
          format: class
      description: Identified internal addressee (from reference details extracted from the content where possible)
    Inbound:
      type: object
      properties:
        InboundCorrespondenceInstanceReference:
          $ref: '#/components/schemas/identifier'
        InboundCorrespondenceRecord:
          $ref: '#/components/schemas/correspondence'
        InboundCorrespondenceType:
          $ref: '#/components/schemas/correspondencetypevalues'
        InboundCorrespondenceContent:
          $ref: '#/components/schemas/text'
        InboundCorrespondenceAddressee:
          type: string
          description: The identified source of inbound message (extracted from the content)
          format: object
        InboundCorrespondenceCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        InboundCorrespondenceEmployeeReference:
          $ref: '#/components/schemas/employee'
        DateType:
          $ref: '#/components/schemas/datetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    channeltypevalues:
      enum:
        - CommunicationChannel
        - AuthenticationChannel
      type: string
      description: ">\r\n* `CommunicationChannel` - \r\n* `AuthenticationChannel` - \r\n"
    channel:
      type: object
      properties:
        ChannelType:
          $ref: '#/components/schemas/channeltypevalues'
      description: Identifies the preferred media and channel for delivery of the message
    communicationchannel:
      type: object
      properties:
        CommunicationChannel:
          type: string
          description: "A pathway established via a communication medium.\nA contact point by which the bank interacts with parties."
          format: class
      description: '???'
    devicetypevalues:
      enum:
        - Securecardreader
        - Nonsecurecardreader
        - Mobile
        - Tablet
        - Personalcomputer
        - Othernational
        - Otherprivate
        - Wearable
        - Vehicle
        - Embedded
        - Keyfob
        - Jewellery
        - Sticker
        - Gamingdevice
        - Watch
        - Unknown
        - BiometricDevice
      type: string
      description: ">\r\n* `Securecardreader` - Secure card reader attached to the customer device\r\n* `Nonsecurecardreader` - Non-secure card reader attached to the customer device.\r\n* `Mobile` - Mobile phone\r\n* `Tablet` - Tablet\r\n* `Personalcomputer` - Personal computer\r\n* `Othernational` - Other device defined at national level\r\n* `Otherprivate` - Other device defined in a private way.\r\n* `Wearable` - Wearable device.\r\n* `Vehicle` - Vehicle.\r\n* `Embedded` - Embedded in a device.\r\n* `Keyfob` - Key Fob\r\n* `Jewellery` - Jewellery\r\n* `Sticker` - Sticker\r\n* `Gamingdevice` - Gaming Device\r\n* `Watch` - Watch\r\n* `Unknown` - Device type unknown\r\n* `BiometricDevice` - A biometric device is a security identification and authentication device. Such devices use automated methods of verifying or recognising the identity of a living person based on a physiological or behavioral characteristic.\nhttps://en.wikipedia.org/wiki/Biometric_device\n\r\n"
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: The sending entity within the bank (can be used for responses)
    Outbound:
      type: object
      properties:
        CorrespondenceSourceReference:
          type: string
          description: Internal source reference to the correspondence item passed for delivery (can be used to match responses)
          format: object
        CorrespondenceRecord:
          $ref: '#/components/schemas/correspondence'
        CorrespondenceType:
          $ref: '#/components/schemas/correspondencetypevalues'
        CorrespondenceTemplateReference:
          type: string
          description: Reference to a template used to assemble standard format correspondence (can be supplied with the correspondence or maintained within the Correspondence service domain as appropriate)
          format: object
        CorrespondenceTemplateRecord:
          type: string
          description: The template definition used in correspondence assembly
          format: object
        CorrespondenceContent:
          $ref: '#/components/schemas/text'
        CorrespondenceMediaorChannel:
          $ref: '#/components/schemas/channel'
        CorrespondenceAddressee:
          $ref: '#/components/schemas/address'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        ChannelAccessPreferenceReference:
          $ref: '#/components/schemas/communicationchannel'
        ChannelAccessPreferenceProfile:
          $ref: '#/components/schemas/text'
        ChannelAccessChannelorDeviceType:
          $ref: '#/components/schemas/devicetypevalues'
        ChannelAccessChannelorDeviceTypePreference:
          $ref: '#/components/schemas/text'
        ProductandServiceType:
          $ref: '#/components/schemas/text'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        DateType:
          $ref: '#/components/schemas/datetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    OutboundWithResponse:
      type: object
      properties:
        ResponseDueDate:
          $ref: '#/components/schemas/datetime'
        ResponseCorrespondenceReference:
          $ref: '#/components/schemas/correspondence'
        ResponseCorrespondenceRecord:
          $ref: '#/components/schemas/correspondence'
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    BlockMailing:
      type: object
      properties:
        BlockmailingRecord:
          type: string
          description: Used to track receipt and return of the individual messages making up the block mail
          format: object
      description: "The collection of operational serivces/functions offered by the operational facility\n\nExamples: messages, capture, routines"
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: "Session reports that can be accessed during the session (e.g. real-time status, session statistics) ||\r\n|"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: "The session activity report ||\r\n|"
    CorrespondenceOperatingSession:
      type: object
      properties:
        CorrespondenceServiceSessionStatistics:
          type: string
          description: Service activity statistics that are maintained during the session
          format: object
        CorrespondenceServiceSessionReportType:
          $ref: '#/components/schemas/reporttypevalues'
        CorrespondenceServiceSessionReport:
          $ref: '#/components/schemas/report'
        CorrespondenceServiceSessionDate:
          $ref: '#/components/schemas/datetime'
      description: 'Operate equipment and/or a largely automated facility within Correspondence. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CorrespondenceOperatingSession:
      description: CorrespondenceOperatingSession
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorrespondenceOperatingSession'
    Outbound:
      description: Outbound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Outbound'
    OutboundWithResponse:
      description: OutboundWithResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutboundWithResponse'
    Inbound:
      description: Inbound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Inbound'
    BlockMailing:
      description: BlockMailing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockMailing'
  parameters:
    correspondenceid:
      name: correspondenceid
      in: path
      required: true
      style: simple
      schema:
        type: string
    outboundid:
      name: outboundid
      in: path
      required: true
      style: simple
      schema:
        type: string
    outboundwithresponseid:
      name: outboundwithresponseid
      in: path
      required: true
      style: simple
      schema:
        type: string
    inboundid:
      name: inboundid
      in: path
      required: true
      style: simple
      schema:
        type: string
    blockmailingid:
      name: blockmailingid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CorrespondenceOperatingSession:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorrespondenceOperatingSession'
      required: true
    Outbound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Outbound'
      required: true
    OutboundWithResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutboundWithResponse'
      required: true
    Inbound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Inbound'
      required: true
    BlockMailing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockMailing'
      required: true