openapi: 3.0.1
info:
  title: eBranch Management
  description: Oversee the configuration and operation of the e-branch channel facilities
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/eBranchManagement/13.0.0
paths:
  /eBranchManagement/Create:
    post:
      tags:
        - CR - eBranchChannelManagementPlan
      summary: CrCR Create the management plan for the eBranch channel
      description: CrCR Create the management plan for the eBranch channel
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/eBranchChannelManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/eBranchChannelManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/Update':
    put:
      tags:
        - CR - eBranchChannelManagementPlan
      summary: UpCR Update aspects of the eBranch channel management plan
      description: UpCR Update aspects of the eBranch channel management plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/eBranchChannelManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/eBranchChannelManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/Exchange':
    put:
      tags:
        - CR - eBranchChannelManagementPlan
      summary: 'EcCR Accept, reject, etc. aspects of the eBranch channel management plan'
      description: 'EcCR Accept, reject, etc. aspects of the eBranch channel management plan'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/eBranchChannelManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/eBranchChannelManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/Request':
    put:
      tags:
        - CR - eBranchChannelManagementPlan
      summary: RqCR Request manual intervention with the plan
      description: RqCR Request manual intervention with the plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/eBranchChannelManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/eBranchChannelManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/Retrieve':
    get:
      tags:
        - CR - eBranchChannelManagementPlan
      summary: ReCR Retrieve details about the eBranch channel management plan
      description: ReCR Retrieve details about the eBranch channel management plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/eBranchChannelManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/CapacityPlanning/{capacityplanningid}/Update':
    put:
      tags:
        - BQ - CapacityPlanning
      summary: UpBQ Update details of the capacity management plan for the channel
      description: UpBQ Update details of the capacity management plan for the channel
      operationId: UpdateCapacityPlanning
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/capacityplanningid'
      requestBody:
        $ref: '#/components/requestBodies/CapacityPlanning'
      responses:
        '200':
          $ref: '#/components/responses/CapacityPlanning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/CapacityPlanning/{capacityplanningid}/Request':
    put:
      tags:
        - BQ - CapacityPlanning
      summary: RqBQ Request manual intervention in the capacity plan
      description: RqBQ Request manual intervention in the capacity plan
      operationId: RequestCapacityPlanning
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/capacityplanningid'
      requestBody:
        $ref: '#/components/requestBodies/CapacityPlanning'
      responses:
        '200':
          $ref: '#/components/responses/CapacityPlanning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/CapacityPlanning/{capacityplanningid}/Retrieve':
    get:
      tags:
        - BQ - CapacityPlanning
      summary: ReBQ Retrieve details about the channel capacity plan
      description: ReBQ Retrieve details about the channel capacity plan
      operationId: RetrieveCapacityPlanning
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/capacityplanningid'
      responses:
        '200':
          $ref: '#/components/responses/CapacityPlanning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/MaintenanceAndUpgrades/Create':
    post:
      tags:
        - BQ - MaintenanceAndUpgrades
      summary: CrBQ Create a maintenance or upgrade task plan item for the channel
      description: CrBQ Create a maintenance or upgrade task plan item for the channel
      operationId: CreateMaintenanceAndUpgrades
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/MaintenanceAndUpgrades'
      responses:
        '200':
          $ref: '#/components/responses/MaintenanceAndUpgrades'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/MaintenanceAndUpgrades/{maintenanceandupgradesid}/Update':
    put:
      tags:
        - BQ - MaintenanceAndUpgrades
      summary: UpBQ Update details of a maintenance or upgrade management plan item
      description: UpBQ Update details of a maintenance or upgrade management plan item
      operationId: UpdateMaintenanceAndUpgrades
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/maintenanceandupgradesid'
      requestBody:
        $ref: '#/components/requestBodies/MaintenanceAndUpgrades'
      responses:
        '200':
          $ref: '#/components/responses/MaintenanceAndUpgrades'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/MaintenanceAndUpgrades/{maintenanceandupgradesid}/Request':
    put:
      tags:
        - BQ - MaintenanceAndUpgrades
      summary: RqBQ Request manual intervention to a maintenance or upgrade action
      description: RqBQ Request manual intervention to a maintenance or upgrade action
      operationId: RequestMaintenanceAndUpgrades
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/maintenanceandupgradesid'
      requestBody:
        $ref: '#/components/requestBodies/MaintenanceAndUpgrades'
      responses:
        '200':
          $ref: '#/components/responses/MaintenanceAndUpgrades'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/MaintenanceAndUpgrades/{maintenanceandupgradesid}/Retrieve':
    get:
      tags:
        - BQ - MaintenanceAndUpgrades
      summary: ReBQ Retrieve details about a maintenance or upgrade management plan
      description: ReBQ Retrieve details about a maintenance or upgrade management plan
      operationId: RetrieveMaintenanceAndUpgrades
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/maintenanceandupgradesid'
      responses:
        '200':
          $ref: '#/components/responses/MaintenanceAndUpgrades'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/Troubleshooting/{troubleshootingid}/Update':
    put:
      tags:
        - BQ - Troubleshooting
      summary: 'UpBQ Update details of a production issue, root cause or remedial action recommendation'
      description: 'UpBQ Update details of a production issue, root cause or remedial action recommendation'
      operationId: UpdateTroubleshooting
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/troubleshootingid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/Troubleshooting/{troubleshootingid}/Request':
    put:
      tags:
        - BQ - Troubleshooting
      summary: RqBQ Request manual intervention in troubleshooting tasks
      description: RqBQ Request manual intervention in troubleshooting tasks
      operationId: RequestTroubleshooting
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/troubleshootingid'
      requestBody:
        $ref: '#/components/requestBodies/Troubleshooting'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/eBranchManagement/{ebranchmanagementid}/Troubleshooting/{troubleshootingid}/Retrieve':
    get:
      tags:
        - BQ - Troubleshooting
      summary: 'ReBQ Retrieve details about troubleshooting tasks, root cause and proposed remedial actions'
      description: 'ReBQ Retrieve details about troubleshooting tasks, root cause and proposed remedial actions'
      operationId: RetrieveTroubleshooting
      parameters:
        - $ref: '#/components/parameters/ebranchmanagementid'
        - $ref: '#/components/parameters/troubleshootingid'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshooting'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    productionissue:
      type: object
      properties:
        ProductionIssueType:
          type: string
          description: "The Type of production problem (error)\n"
          format: string
        ProductionIssueDescription:
          type: string
          description: Description of the production problem
          format: string
        ProductionIssueDiagnosis:
          type: string
          description: Evaluation of the production problem cause and impact assessment
          format: string
        ProductionIssueResolutionTask:
          type: string
          description: Description of corrective action proposed and taken
          format: string
        ProductionIssueStatus:
          type: string
          description: The state of resolution of a reported production problem
          format: string
      description: A record of any production issues arising during the session (see E-Branch Operations for detailed content)
    Troubleshooting:
      type: object
      properties:
        eBranchChannelProductionIssueRecord:
          $ref: '#/components/schemas/productionissue'
        eBranchChannelIssueAnalysisAndRecommendedResponse:
          type: string
          description: A record of the root cause analysis for recurring issues and suggested remedial action
          format: object
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: ''
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The target and actual channel service schedule - recording planned and actual service availability and outages (includes any partial service access constraints or restrictions for a 24/7 service) ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: 'The make-up of the channel platform task performed, includes work plan, assignments, effort/expenditures and deliverables as appropriate'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: The time period addressed by the management plan DateTimePeriod|DateTimePeriod (https://www.iso20022.org/standardsrepository/type/DateTimePeriod)|Standard|ISO20022 BM ()
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated work notes, testing results, agreements etc. for the work task'
    MaintenanceAndUpgrades:
      type: object
      properties:
        eBranchChannelMaintenanceandUpgradeSchedule:
          $ref: '#/components/schemas/schedule'
        eBranchChannelMaintenanceandUpgradeWorkTaskType:
          $ref: '#/components/schemas/text'
        eBranchChannelMaintenanceandUpgradeWorkTask:
          $ref: '#/components/schemas/task'
        eBranchChannelMaintenanceandUpgradeWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        eBranchChannelMaintenanceandUpgradeWorkTaskResult:
          $ref: '#/components/schemas/task'
        eBranchChannelMaintenanceandUpgradeWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    CapacityPlanning:
      type: object
      properties:
        eBranchChannelPlatformUtilization:
          type: string
          description: Record of the channel resource utilization and loading
          format: object
        eBranchChannelLoadingProjections:
          type: string
          description: Estimated projected resource utilization and loading based on historical patterns and anticipated activity - used to identify the need for capacity upgrades
          format: object
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: The channel policies and guidelines for service users GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The default channel service configuration (Note this can be updated during operations with service calls to the channel operations service domain) Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "The target and actual service performance goals that are tracked by channel management ||\r\n|"
    eBranchChannelManagementPlan:
      type: object
      properties:
        eBranchChannelManagementPlanPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        eBranchChannelUsagePoliciesAndGuidelines:
          $ref: '#/components/schemas/ruleset'
        eBranchChannelServiceOperatingParameters:
          $ref: '#/components/schemas/arrangement'
        eBranchChannelServicePerformanceGoals:
          $ref: '#/components/schemas/goal'
        eBranchChannelServiceSchedule:
          $ref: '#/components/schemas/schedule'
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within eBranch Management.'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    eBranchChannelManagementPlan:
      description: eBranchChannelManagementPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/eBranchChannelManagementPlan'
    CapacityPlanning:
      description: CapacityPlanning
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CapacityPlanning'
    MaintenanceAndUpgrades:
      description: MaintenanceAndUpgrades
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MaintenanceAndUpgrades'
    Troubleshooting:
      description: Troubleshooting
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Troubleshooting'
  parameters:
    ebranchmanagementid:
      name: ebranchmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    capacityplanningid:
      name: capacityplanningid
      in: path
      required: true
      style: simple
      schema:
        type: string
    maintenanceandupgradesid:
      name: maintenanceandupgradesid
      in: path
      required: true
      style: simple
      schema:
        type: string
    troubleshootingid:
      name: troubleshootingid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    eBranchChannelManagementPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/eBranchChannelManagementPlan'
      required: true
    CapacityPlanning:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CapacityPlanning'
      required: true
    MaintenanceAndUpgrades:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MaintenanceAndUpgrades'
      required: true
    Troubleshooting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Troubleshooting'
      required: true