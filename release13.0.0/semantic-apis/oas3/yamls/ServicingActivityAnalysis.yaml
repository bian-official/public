openapi: 3.0.1
info:
  title: Servicing Activity Analysis
  description: This service domain analyzes servicing activity to support continual service improvement
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ServicingActivityAnalysis/13.0.0
paths:
  /ServicingActivityAnalysis/Initiate:
    post:
      tags:
        - CR - ServicingRootCauseAnalysis
      summary: EvCR Initialize servicing root cause analysis
      description: EvCR Initialize servicing root cause analysis
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ServicingRootCauseAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ServicingRootCauseAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingActivityAnalysis/{servicingactivityanalysisid}/Update':
    put:
      tags:
        - CR - ServicingRootCauseAnalysis
      summary: UpCR Update aspects of servicing root cause analysis
      description: UpCR Update aspects of servicing root cause analysis
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/servicingactivityanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/ServicingRootCauseAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ServicingRootCauseAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingActivityAnalysis/{servicingactivityanalysisid}/Execute':
    put:
      tags:
        - CR - ServicingRootCauseAnalysis
      summary: ExCR Execute an automated aspect of root cause analysis
      description: ExCR Execute an automated aspect of root cause analysis
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/servicingactivityanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/ServicingRootCauseAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ServicingRootCauseAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingActivityAnalysis/{servicingactivityanalysisid}/Request':
    put:
      tags:
        - CR - ServicingRootCauseAnalysis
      summary: RqCR Request manual intervention in servicing root cause analysis
      description: RqCR Request manual intervention in servicing root cause analysis
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/servicingactivityanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/ServicingRootCauseAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/ServicingRootCauseAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingActivityAnalysis/{servicingactivityanalysisid}/Retrieve':
    get:
      tags:
        - CR - ServicingRootCauseAnalysis
      summary: ReCR Retrieve details about servicing root cause analysis
      description: ReCR Retrieve details about servicing root cause analysis
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/servicingactivityanalysisid'
      responses:
        '200':
          $ref: '#/components/responses/ServicingRootCauseAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingActivityAnalysis/{servicingactivityanalysisid}/RootCauseAlgorithm/Initiate':
    post:
      tags:
        - BQ - RootCauseAlgorithm
      summary: EvBQ Initialize application of a specific algorithm for root cause analysis
      description: EvBQ Initialize application of a specific algorithm for root cause analysis
      operationId: InitiateRootCauseAlgorithm
      parameters:
        - $ref: '#/components/parameters/servicingactivityanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/RootCauseAlgorithm'
      responses:
        '200':
          $ref: '#/components/responses/RootCauseAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingActivityAnalysis/{servicingactivityanalysisid}/RootCauseAlgorithm/{rootcausealgorithmid}/Request':
    put:
      tags:
        - BQ - RootCauseAlgorithm
      summary: RqBQ Request manual intervention to the application of a root cause algorithm
      description: RqBQ Request manual intervention to the application of a root cause algorithm
      operationId: RequestRootCauseAlgorithm
      parameters:
        - $ref: '#/components/parameters/servicingactivityanalysisid'
        - $ref: '#/components/parameters/rootcausealgorithmid'
      requestBody:
        $ref: '#/components/requestBodies/RootCauseAlgorithm'
      responses:
        '200':
          $ref: '#/components/responses/RootCauseAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ServicingActivityAnalysis/{servicingactivityanalysisid}/RootCauseAlgorithm/{rootcausealgorithmid}/Retrieve':
    get:
      tags:
        - BQ - RootCauseAlgorithm
      summary: ReBQ Retrieve details about the application of a specific root cause algorithm analysis
      description: ReBQ Retrieve details about the application of a specific root cause algorithm analysis
      operationId: RetrieveRootCauseAlgorithm
      parameters:
        - $ref: '#/components/parameters/servicingactivityanalysisid'
        - $ref: '#/components/parameters/rootcausealgorithmid'
      responses:
        '200':
          $ref: '#/components/responses/RootCauseAlgorithm'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The type of servicing activity for which the analysis is performed (e.g. self service, contact center assisted,  ATM access) ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: The make-up/schedule of the work task performed
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: The period covered by the analysis (from to date time) DateTimePeriod|DateTimePeriod (https://www.iso20022.org/standardsrepository/type/DateTimePeriod)|Standard|ISO20022 BM ()
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, evaluations and findings for the work task'
    RootCauseAlgorithm:
      type: object
      properties:
        ServicingActivityRootCauseAlgorithmSpecification:
          $ref: '#/components/schemas/text'
        ServicingActivityRootCauseAnalysisWorkTaskType:
          $ref: '#/components/schemas/text'
        ServicingActivityRootCauseAnalysisWorkTask:
          $ref: '#/components/schemas/task'
        ServicingActivityRootCauseAnalysisWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        ServicingActivityRootCauseAnalysisWorkTaskResult:
          $ref: '#/components/schemas/task'
        ServicingActivityRootCauseAnalysisWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of models/calculations/algoritms that can be applied to a subject or activity\n\nExamples: Average balance calculation, Propensity to buy"
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: "The type of root cause analysis - defines the scope and type of root cause issue that is being detected (e.g. service dialogue, click-stream, product processing issues, servicing representative performance) ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The schedule and timing of the analysis performed using the algorithm
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
        AnalysisSchedule:
          $ref: '#/components/schemas/schedule'
      description: "The result of the servicing activity analysis - typically the consolidated view from applying multiple underlying root cause algorithms to highlight patterns that indicate potential root cause issues ||\r\n|"
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: "The raw data used in the analysis (retrieved from Servicing Activity History) ||\r\n|"
    ServicingRootCauseAnalysis:
      type: object
      properties:
        ServicingActivityType:
          $ref: '#/components/schemas/text'
        ServicingActivityAnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ServicingActivityAnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        ServicingActivityAnalysisResult:
          $ref: '#/components/schemas/analysis'
        ServicingActivityAnalysisDetermination:
          type: string
          description: An analysis of the root causes for the detected service anomalies
          format: object
        ServicingActivityAnalysisRecommendation:
          type: string
          description: Proposed changes to procedures/organization etc that can mitigate the detected servicing issues
          format: object
        ServicingActivityHistoryReport:
          $ref: '#/components/schemas/report'
      description: "Analyze the performance or behavior of some on-going activity or entity  within Servicing Activity Analysis. \nExamples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks.\n\nAnalyze the performance or behavior of some on-going activity or entity. Examples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ServicingRootCauseAnalysis:
      description: ServicingRootCauseAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServicingRootCauseAnalysis'
    RootCauseAlgorithm:
      description: RootCauseAlgorithm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RootCauseAlgorithm'
  parameters:
    servicingactivityanalysisid:
      name: servicingactivityanalysisid
      in: path
      required: true
      style: simple
      schema:
        type: string
    rootcausealgorithmid:
      name: rootcausealgorithmid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ServicingRootCauseAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServicingRootCauseAnalysis'
      required: true
    RootCauseAlgorithm:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RootCauseAlgorithm'
      required: true