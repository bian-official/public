openapi: 3.0.1
info:
  title: Cash Concentration
  description: 'Cash Concentration is a cash management service aimed at moving a balance, or part of a balance of an account to a different account to meet various requirements.'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CashConcentration/13.0.0
paths:
  '/CashConcentration/{cashconcentrationid}/Control':
    put:
      tags:
        - CR - AccountBalanceSweepingFacility
      summary: Control Account Balance Sweeping Facility
      description: Control Account Balance Sweeping Facility
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      requestBody:
        $ref: '#/components/requestBodies/AccountBalanceSweepingFacility'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalanceSweepingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/Exchange':
    put:
      tags:
        - CR - AccountBalanceSweepingFacility
      summary: Exchange Account Balance Sweeping Facility
      description: Exchange Account Balance Sweeping Facility
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      requestBody:
        $ref: '#/components/requestBodies/AccountBalanceSweepingFacility'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalanceSweepingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/Notify':
    get:
      tags:
        - CR - AccountBalanceSweepingFacility
      summary: Notify Account Balance Sweeping Facility
      description: Notify Account Balance Sweeping Facility
      operationId: Notify
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalanceSweepingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/Request':
    put:
      tags:
        - CR - AccountBalanceSweepingFacility
      summary: Request Account Balance Sweeping Facility
      description: Request Account Balance Sweeping Facility
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      requestBody:
        $ref: '#/components/requestBodies/AccountBalanceSweepingFacility'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalanceSweepingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/Execute':
    put:
      tags:
        - CR - AccountBalanceSweepingFacility
      summary: Execute Account Balance Sweeping Facility
      description: Execute Account Balance Sweeping Facility
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      requestBody:
        $ref: '#/components/requestBodies/AccountBalanceSweepingFacility'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalanceSweepingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/Activate':
    put:
      tags:
        - CR - AccountBalanceSweepingFacility
      summary: Initiate Account Balance Sweeping Facility
      description: Initiate Account Balance Sweeping Facility
      operationId: Activate
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      requestBody:
        $ref: '#/components/requestBodies/AccountBalanceSweepingFacility'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalanceSweepingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/Update':
    put:
      tags:
        - CR - AccountBalanceSweepingFacility
      summary: Update Account Balance Sweeping Facility
      description: Update Account Balance Sweeping Facility
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      requestBody:
        $ref: '#/components/requestBodies/AccountBalanceSweepingFacility'
      responses:
        '200':
          $ref: '#/components/responses/AccountBalanceSweepingFacility'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/CashTransfer/{cashtransferid}/Exchange':
    put:
      tags:
        - BQ - CashTransfer
      summary: Exchange Cash Transfer
      description: Exchange Cash Transfer
      operationId: ExchangeCashTransfer
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
        - $ref: '#/components/parameters/cashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/CashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/CashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/CashTransfer/{cashtransferid}/Execute':
    put:
      tags:
        - BQ - CashTransfer
      summary: Execute Cash Transfer
      description: Execute Cash Transfer
      operationId: ExecuteCashTransfer
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
        - $ref: '#/components/parameters/cashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/CashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/CashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/CashTransfer/Initiate':
    post:
      tags:
        - BQ - CashTransfer
      summary: Initiate Cash Transfer
      description: Initiate Cash Transfer
      operationId: InitiateCashTransfer
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
      requestBody:
        $ref: '#/components/requestBodies/CashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/CashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/CashTransfer/{cashtransferid}/Notify':
    get:
      tags:
        - BQ - CashTransfer
      summary: Notify Cash Transfer
      description: Notify Cash Transfer
      operationId: NotifyCashTransfer
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
        - $ref: '#/components/parameters/cashtransferid'
      responses:
        '200':
          $ref: '#/components/responses/CashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/CashTransfer/{cashtransferid}/Request':
    put:
      tags:
        - BQ - CashTransfer
      summary: Request Cash Transfer
      description: Request Cash Transfer
      operationId: RequestCashTransfer
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
        - $ref: '#/components/parameters/cashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/CashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/CashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/CashTransfer/{cashtransferid}/Retrieve':
    get:
      tags:
        - BQ - CashTransfer
      summary: Retrieve Cash Transfer
      description: Retrieve Cash Transfer
      operationId: RetrieveCashTransfer
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
        - $ref: '#/components/parameters/cashtransferid'
      responses:
        '200':
          $ref: '#/components/responses/CashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CashConcentration/{cashconcentrationid}/CashTransfer/{cashtransferid}/Update':
    put:
      tags:
        - BQ - CashTransfer
      summary: Update Cash Transfer
      description: Update Cash Transfer
      operationId: UpdateCashTransfer
      parameters:
        - $ref: '#/components/parameters/cashconcentrationid'
        - $ref: '#/components/parameters/cashtransferid'
      requestBody:
        $ref: '#/components/requestBodies/CashTransfer'
      responses:
        '200':
          $ref: '#/components/responses/CashTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer who is involved in Account Balance Sweeping Facility ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Account Balance Sweeping Facility Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation prior to the implementation of the feature
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The timing and key actions/milestones involved in completing the fulfillment feature instance
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Cash Position Monitoring and Transfer Fulfillment specific Business Service
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: "An unique reference to an item or an occurrence of Account Balance Sweeping Facility ||\r\n|"
    CashTransfer:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        AccountBalanceSweepingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        CashTransferReference:
          type: string
          description: Reference to Cash Position Monitoring and Transfer Fulfillment
          format: object
        CashTransferType:
          $ref: '#/components/schemas/text'
      description: The configuration and execution of Cash Position Monitoring and Transfer Fulfillment arrangement within the Cash Position Monitoring and Transfer Fulfillment
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    CashConcentrationOutcome:
      type: object
      properties:
        CashConcentrationFinancialFacility:
          $ref: '#/components/schemas/financialfacility'
        CashConcentrationWorkProduct:
          $ref: '#/components/schemas/workproduct'
      description: The configuration and execution of Cash Position Monitoring and Transfer Fulfillment arrangement within the Cash Position Monitoring and Transfer Fulfillment
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between arrangements according to the type of business services within Account Balance Sweeping Facility ||\r\n|"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: "A selected optional product feature as subject matter of Account Balance Sweeping Facility ||\r\n|"
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    bankingproducttype:
      type: object
      properties:
        ProductTypeDefinition:
          type: string
          description: ''
          format: string
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductClassificationIssuingAuthority:
          type: string
          description: ''
          format: string
      description: "The type of Account Balance Sweeping Facility ||\r\n|"
    calendartypevalues:
      enum:
        - UKCalendar
        - ChineseCalendar
      type: string
      description: ">\r\n* `UKCalendar` - \r\n* `ChineseCalendar` - \r\n"
    calendar:
      type: object
      properties:
        CalendarType:
          $ref: '#/components/schemas/calendartypevalues'
        CalendarName:
          $ref: '#/components/schemas/name'
      description: "Reference to the calendar used to fulfill Account Balance Sweeping Facility ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: The curreny which is arranged in Account Balance Sweeping Facility CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Reference to the regulation which is defined in Account Balance Sweeping Facility GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()
    rulesettype:
      type: object
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/name'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
      description: "A Classification that distinguishes between the regularity domains of Account Balance Sweeping Facility ||\r\n|"
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: Reference to the jurisdiction that is assigned to Account Balance Sweeping Facility in case of legal dispute. Jurisdiction|Jurisdiction (https://www.iso20022.org/standardsrepository/type/Jurisdiction)|Standard|ISO20022 BM ()
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: "The financial accounting unit into which the financial events, with regard to the origination and fulfillment of the agreement in the context of Account Balance Sweeping Facility, are entered. ||\r\n|"
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
        - IndividualAccount
        - JointAccount
        - LiquidationAccount
        - ProvisionAccount
        - PartnershipAccount
        - InvestmentAccount
      type: string
      description: The type of account which is linked to Account Balance Sweeping Facility OBExternalAccountSubType1Code| ()|Standard|UK Open Banking ()
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
        - SortCodeAndAccountNumber
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n* `SortCodeAndAccountNumber` - Sort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (UK Open Banking)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetimetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
        - RenewalDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n* `RenewalDate` - \r\n"
    accountdatetime:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetimetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    balancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - CurrentBalance
        - AvailableBalance
        - LedgerBalance
        - ReserveBalance
        - FreeBalance
        - PrincipalBalance
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - PreviouslyClosedBooked
        - Expected
      type: string
      description: ">\r\n* `OpeningBalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `ClosingBalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `CurrentBalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `AvailableBalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `LedgerBalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `ReserveBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n* `ClosingAvailable` - Closing balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `ClosingBooked` - Balance of the account at the end of the pre-agreed account reporting period. It is the sum of the opening booked balance at the beginning of the period and all entries booked to the account during the pre-agreed account reporting period.\r\n* `ForwardAvailable` - Forward available balance of money that is at the disposal of the account owner on the date specified.\r\n* `Information` - Balance for informational purposes.\r\n* `InterimAvailable` - Available balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `InterimBooked` - Balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `OpeningAvailable` - Opening balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `OpeningBooked` - Book balance of the account at the beginning of the account reporting period. It always equals the closing book balance from the previous report.\r\n* `PreviouslyClosedBooked` - Balance of the account at the previously closed account reporting period. The opening booked balance for the new period has to be equal to this balance.\nUsage: the previously booked closing balance should equal (inclusive date) the booked closing balance of the date it references and equal the actual booked opening balance of the current date.\r\n* `Expected` - Balance, composed of booked entries and pending items known at the time of calculation, which projects the end of day balance if everything is booked on the account and no other entry is posted.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    balancecounterpartytypevalues:
      enum:
        - Bilateral
        - Multilateral
      type: string
      description: ">\r\n* `Bilateral` - Balance calculated regarding one member in the system. (ISO20022)\r\n* `Multilateral` - Balance calculated regarding all members in the system. (ISO20022)\r\n"
    balancesubtypevalues:
      enum:
        - Adjustment
        - Basecurrency
        - Blocked
        - Blockedfunds
        - Daylightoverdraft
        - Eligibleassets
        - Firmcollateralization
        - Amountsthathavebeenusedtoserveasfirmcollateral
        - Securitiesforecast
        - Netfunding
        - Intermediate
        - Localcurrency
        - Limitrelated
        - Reservedliquidity
        - Securitiespending
        - Payinpayout
        - Progressiveaverage
        - Reserve
        - Selfcollateralization
        - Amountsthathavebeenusedtoserveasselfcollateral
        - Threshold
      type: string
      description: ">\r\n* `Adjustment` - Balance to be held in the settlement account in order to comply with the average reserve due, in the event that the bank's balance is equal to the reserve due during the remaining days of the maintenance period.\r\n* `Basecurrency` - Balance representing the amount in the domestic or base accounting currency.\r\n* `Blocked` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes. In some countries, a blocked balance is known as a 'reserve' balance.\r\n* `Blockedfunds` - Balance representing funds that cannot be touched by the account owner.\r\n* `Daylightoverdraft` - Balance representing the intra day overdraft granted by the Central Bank to financial institutions participating in a RTGS system. This balance may vary over time and shall be offset at the end of the day.\r\n* `Eligibleassets` - Balance representing the potential loan a Central Bank would make in cash if the collateral is pledged, eg, securities available and eligible as collateral with the Central Bank.\r\n* `Firmcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral.\r\n* `Amountsthathavebeenusedtoserveasfirmcollateral` - Balance representing the cash equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral and have been used as collateral.\r\n* `Securitiesforecast` - Balance representing the total of all balance types representing the forecast of transactions to settle, blocked items, custody transactions and corporate actions cash disbursements.\r\n* `Netfunding` - Balance representing the net amount to be funded resulting from the difference between the total of all transactions with a cash impact and the existing cash coverage.\r\n* `Intermediate` - Balance representing an intermediate amount such as the opening or closing balance incrementally carried forward from one page to the next in a multi-page statement or report.\r\n* `Localcurrency` - Balance representing the amount in the local market currency for which the asset is held.\r\n* `Limitrelated` - Balance of a specific limit value, eg, a bilateral balance is calculated in relation to a given bilateral limit.\r\n* `Reservedliquidity` - Balance representing the amount that a financial institution has set aside for a specific reason and which is therefore not available. In the context of CSDs, reservation of liquidity made to meet settlement obligations.\r\n* `Securitiespending` - Balance of securities pending delivery, such as orders to sell securities have been executed but settlement of the open transactions has not been confirmed.\r\n* `Payinpayout` - Balance representing the fictive amount of automated direct debits or payment based on standing arrangements between the CSD and the user. Usage: Pay-Ins and Pay-Outs can be different based on individual payment instructions or available funds.\r\n* `Progressiveaverage` - Average of the daily balances on the account used to fulfil the reserve requirements calculated from the beginning of the maintenance period.\r\n* `Reserve` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes.\r\n* `Selfcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of the net incoming balance of securities qualified to serve as collateral for which settlement instructions are held at.\r\n* `Amountsthathavebeenusedtoserveasselfcollateral` - Balance representing the cash-equivalent resulting from evaluation of incoming securities, qualified to serve as collateral and actually used as collateral, which have been settled during the settlement process.\r\n* `Threshold` - Balance representing the amount that will be destined for investment. Difference between available balance and threshold for investment limit.\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceValueDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        BalanceCounterpartyType:
          $ref: '#/components/schemas/balancecounterpartytypevalues'
        BalanceCalculationDate:
          $ref: '#/components/schemas/datetime'
        BalanceSubType:
          $ref: '#/components/schemas/balancesubtypevalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdatetime'
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Reference to the account which is linked to Account Balance Sweeping Facility Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()
    position:
      type: object
      properties:
        PositionValue:
          $ref: '#/components/schemas/value'
        PositionQuantity:
          type: string
          description: ''
          format: number
        PositionDate:
          $ref: '#/components/schemas/datetime'
        PositionAmount:
          $ref: '#/components/schemas/amount'
      description: The position of Account Balance Sweeping Facility Position |Position  (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022 BM ()
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    productstatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productstatus:
      type: object
      properties:
        ProductStatus:
          $ref: '#/components/schemas/status'
        ProductStatusType:
          $ref: '#/components/schemas/productstatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productstatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: "Reference to the product which is linked to Account Balance Sweeping Facility Product_x000D_\n|Product (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022 BM ()"
    limittypevalues:
      enum:
        - Multilateral
        - Bilateral
        - Netbilateral
        - Indirectbilateral
        - Global
        - Mandatorybilateral
        - Discretionarybilateral
        - Directdebit
        - Singlecustomerdirectdebit
        - Singlefinancialinstitutiondirectdebit
        - Totaldailycustomerdirectdebit
        - Totaldailyfinancialinstitutiondirectdebit
        - Autocollateralisation
        - Unsecuredcredit
        - Externalguarantee
      type: string
      description: ">\r\n* `Multilateral` - Limit is a maximum amount value applied to, or by, a participant to a set of counterparties. The multilateral limit is taken into account by the transaction administrator to contain the risk in the system. With the help of the multilateral limit, the direct participant restricts the use of liquidity when clearing payments with all other direct participants for which no bilateral limit is set.\r\n* `Bilateral` - Limit is applied by one party to a specific counterparty, and corresponds to the maximum amount of traffic party setting the limit can send to that counterparty. The limit can be expressed as a debit or a credit limit. With the help of a bilateral limit, the direct participant restricts the use of liquidity when clearing payments with another direct participant.\r\n* `Netbilateral` - Limit is applied by one party to a specific counterparty, and corresponds to the maximum net balance acceptable by the party that is setting the limit. The limit is calculated as an arithmetic sum in value of the bilateral flows exchanged between the two parties. The net bilateral limit can be expressed as a debit or a credit balance.\r\n* `Indirectbilateral` - Limit is a maximum value set by a direct participant with respect to its indirect participant. The limit represents the maximum amount the indirect participant can use to settle its operations.\r\n* `Global` - Maximum value set by either the transaction administrator or by a member for the participation of a member in the system. The global limit may be expressed as a credit or debit maximum value and is taken into account by the transaction administrator when processing transaction inside the system. With the help of the global limit, the direct participant may limit the use of liquidity when clearing specific type of payments.\r\n* `Mandatorybilateral` - Mandatory part of the bilateral limit applied by one party to a specific counterparty, and corresponds to the maximum amount of traffic party setting the limit can send to that counterparty. The limit can be expressed as a debit or a credit limit. With the help of a bilateral limit, the direct participant restricts the use of liquidity when clearing payments with another direct participant.\r\n* `Discretionarybilateral` - Discretionary part of the bilateral limit applied by one party to a specific counterparty, and corresponds to the maximum amount of traffic party setting the limit can send to that counterparty. The limit can be expressed as a debit or a credit limit. With the help of a bilateral limit, the direct participant restricts the use of liquidity when clearing payments with another direct participant.\r\n* `Directdebit` - Limit not to be exceeded for direct debit operations.\r\n* `Singlecustomerdirectdebit` - Single direct debit payment limit not to be exceeded by any single direct debit transaction by a customer.\r\n* `Singlefinancialinstitutiondirectdebit` - Single direct debit payment limit not to be exceeded by any single direct debit transaction initiated by a financial institution.\r\n* `Totaldailycustomerdirectdebit` - Total daily payments limit for customer direct debits not to be exceeded by the total of all direct debit transactions initiated by customers.\r\n* `Totaldailyfinancialinstitutiondirectdebit` - Total daily payments limit for financial institutions direct debits not to be exceeded by the total of all direct debit transactions initiated by financial institutions.\r\n* `Autocollateralisation` - Limit is related to a credit operation that is or can be triggered when a buyer does not have a sufficient amount of money to settle a securities transaction in order to improve its cash position for the next settlement cycle. The credit provided can be secured using securities already held by the buyer (“collateral stocks”) or the securities that are being purchased (“collateral flows”).\r\n* `Unsecuredcredit` - Limit is related to a cap amount granted by a national central bank or a settlement bank, but generally unsecured outside of the market infrastructure.\r\n* `Externalguarantee` - Limit is related to a cap amount granted by a national central bank or a settlement bank.\r\n"
    limitstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Requested
      type: string
      description: ">\r\n* `Enabled` - Limit is currently in effect.\r\n* `Disabled` - Limit is not currently in effect.\r\n* `Deleted` - Limit has been deleted or suspended.\r\n* `Requested` - Limit has been asked for and is not yet enabled.\r\n"
    limitstatus:
      type: object
      properties:
        LimitStatus:
          $ref: '#/components/schemas/status'
        LimitStatusType:
          $ref: '#/components/schemas/limitstatustypevalues'
      description: Current status of the limit.
    rate:
      type: object
      properties:
        RateValue:
          $ref: '#/components/schemas/value'
        RateUnit:
          $ref: '#/components/schemas/text'
        RatePeriod:
          $ref: '#/components/schemas/datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/text'
      description: Specifies that the limit is a percentage of a related amount. (ISO20022)
    frequencytypevalues:
      enum:
        - Annual
        - Monthly
        - Quarterly
        - Semiannual
        - Weekly
        - Daily
        - Adhoc
        - Intraday
        - Overnight
        - Tendays
        - Fortnightly
        - Triggeredbymovement
        - Never
        - Rate
        - Oncreditevent
        - Upfront
        - Onexpiry
        - Hourly
      type: string
      description: ">\r\n* `Annual` - Event takes place every year or once a year.\r\n* `Monthly` - Event takes place every month or once a month.\r\n* `Quarterly` - Event takes place every three months or four times a year.\r\n* `Semiannual` - Event takes place every six months or two times a year.\r\n* `Weekly` - Event takes place once a week.\r\n* `Daily` - Event takes place every day.\r\n* `Adhoc` - Event takes place on request or as necessary.\r\n* `Intraday` - Event takes place several times a day.\r\n* `Overnight` - Event takes place overnight.\r\n* `Tendays` - Event takes place every ten business days.\r\n* `Fortnightly` - Event takes place every two weeks.\r\n* `Triggeredbymovement` - Event takes place at the end of the day if there was a movement on the account, otherwise nothing is sent that day.\r\n* `Never` - Event does never take place.\r\n* `Rate` - Event takes place based on a change of a rate.\r\n* `Oncreditevent` - Event occurs due to a credit event occurring for an issuer.\r\n* `Upfront` - Event that takes place at the initiation of a trade or agreement.\r\n* `Onexpiry` - Event occurs on expiry of a financial contract.\r\n* `Hourly` - Event takes place every hours.\r\n"
    frequency:
      type: object
      properties:
        FrequencyCode:
          $ref: '#/components/schemas/frequencytypevalues'
        FrequencyName:
          $ref: '#/components/schemas/name'
        FrequencyDefinition:
          $ref: '#/components/schemas/text'
      description: Specifies the periodicity linked to a limit for example the periodicity can indicate that the limit can be reached daily or monthly. (ISO20022)
    limitarrangement:
      type: object
      properties:
        LimitType:
          $ref: '#/components/schemas/limittypevalues'
        LimitCurrency:
          $ref: '#/components/schemas/currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/amount'
        LimitStatus:
          $ref: '#/components/schemas/limitstatus'
        LimitRate:
          $ref: '#/components/schemas/rate'
        LimitFrequency:
          $ref: '#/components/schemas/frequency'
        LimitIdentification:
          $ref: '#/components/schemas/identifier'
        LimitStartDatetime:
          $ref: '#/components/schemas/datetime'
        LimitCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        LimitAmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Reference to the limitation related to the position of Account Balance Sweeping Facility Limit|Limit (https://www.iso20022.org/standardsrepository/type/Limit)|Standard|ISO20022 (https://www.iso20022.org/)
    AccountBalanceSweepingFacility:
      type: object
      properties:
        AccountBalanceSweepingFacilityParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        AccountBalanceSweepingFacilitySelectedOption:
          $ref: '#/components/schemas/feature'
        AccountBalanceSweepingFacilityType:
          $ref: '#/components/schemas/bankingproducttype'
        AccountBalanceSweepingFacilityCalendarReference:
          $ref: '#/components/schemas/calendar'
        AccountBalanceSweepingFacilityStatus:
          $ref: '#/components/schemas/status'
        AccountBalanceSweepingFacilityAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        AccountBalanceSweepingFacilityCurrency:
          $ref: '#/components/schemas/currencycode'
        AccountBalanceSweepingFacilityRegulationReference:
          $ref: '#/components/schemas/ruleset'
        AccountBalanceSweepingFacilityRegulationType:
          $ref: '#/components/schemas/rulesettype'
        AccountBalanceSweepingFacilityJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
        AccountBalanceSweepingFacilityBookingLocation:
          $ref: '#/components/schemas/businessunit'
        AccountBalanceSweepingFacilityAccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountBalanceSweepingFacilityAccountReference:
          $ref: '#/components/schemas/account'
        AccountBalanceSweepingFacilityCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        AccountBalanceSweepingFacilityPosition:
          $ref: '#/components/schemas/position'
        AccountBalanceSweepingFacilityProductReference:
          $ref: '#/components/schemas/bankingproduct'
        AccountBalanceSweepingFacilityPositionLimit:
          $ref: '#/components/schemas/limitarrangement'
        AccountBalanceSweepingFacilityReference:
          $ref: '#/components/schemas/financialfacility'
      description: 'Fulfill any scheduled and ad-hoc obligations under a service arrangement, most typically for a financial product or facility within Cash Concentration. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    AccountBalanceSweepingFacility:
      description: AccountBalanceSweepingFacility
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountBalanceSweepingFacility'
    CashTransfer:
      description: CashTransfer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashTransfer'
  parameters:
    cashconcentrationid:
      name: cashconcentrationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    cashtransferid:
      name: cashtransferid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    AccountBalanceSweepingFacility:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountBalanceSweepingFacility'
      required: true
    CashTransfer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashTransfer'
      required: true