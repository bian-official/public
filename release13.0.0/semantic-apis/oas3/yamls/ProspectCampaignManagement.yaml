openapi: 3.0.1
info:
  title: Prospect Campaign Management
  description: Assess the coverage and impact of external/prospect campaigns and redirect campaign development and execution activity accordingly
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProspectCampaignManagement/13.0.0
paths:
  /ProspectCampaignManagement/Create:
    post:
      tags:
        - CR - ProspectCampaignPortfolioManagementPlan
      summary: CrCR Create and invoke the prospect campaign portfolio management plan
      description: CrCR Create and invoke the prospect campaign portfolio management plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/Update':
    put:
      tags:
        - CR - ProspectCampaignPortfolioManagementPlan
      summary: UpBQ Update details of the customer campaign portfolio management plan
      description: UpBQ Update details of the customer campaign portfolio management plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/Request':
    put:
      tags:
        - CR - ProspectCampaignPortfolioManagementPlan
      summary: RqCR Request manual intervention in the campaign plan
      description: RqCR Request manual intervention in the campaign plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/Grant':
    put:
      tags:
        - CR - ProspectCampaignPortfolioManagementPlan
      summary: GrCR Obtain a permission grant against the plan
      description: GrCR Obtain a permission grant against the plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/ProspectCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/Retrieve':
    get:
      tags:
        - CR - ProspectCampaignPortfolioManagementPlan
      summary: ReCR Retrieve details about the prospect campaign portfolio management plan
      description: ReCR Retrieve details about the prospect campaign portfolio management plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/ProspectCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/MarketTracking/{markettrackingid}/Update':
    put:
      tags:
        - BQ - MarketTracking
      summary: UpBQ Update details of the market tracking activity
      description: UpBQ Update details of the market tracking activity
      operationId: UpdateMarketTracking
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/MarketTracking/{markettrackingid}/Execute':
    put:
      tags:
        - BQ - MarketTracking
      summary: ExBQ Execute an automated task for the tracking activity
      description: ExBQ Execute an automated task for the tracking activity
      operationId: ExecuteMarketTracking
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/MarketTracking/{markettrackingid}/Request':
    put:
      tags:
        - BQ - MarketTracking
      summary: RqBQ Request manual intervention in the market tracking
      description: RqBQ Request manual intervention in the market tracking
      operationId: RequestMarketTracking
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/MarketTracking/{markettrackingid}/Retrieve':
    get:
      tags:
        - BQ - MarketTracking
      summary: ReBQ Retrieve details about the market tracking activity
      description: ReBQ Retrieve details about the market tracking activity
      operationId: RetrieveMarketTracking
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/PerformanceAssessment/Create':
    post:
      tags:
        - BQ - PerformanceAssessment
      summary: CrBQ Create a performance assessment of the customer campaign portfolio
      description: CrBQ Create a performance assessment of the customer campaign portfolio
      operationId: CreatePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Update':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: UpBQ Update details of a prospect campaign portfolio assessment
      description: UpBQ Update details of a prospect campaign portfolio assessment
      operationId: UpdatePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Execute':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: ExBQ Execute an automated action for a performance assessment
      description: ExBQ Execute an automated action for a performance assessment
      operationId: ExecutePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Request':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: RqBQ Request manual intervention to a performance assessment
      description: RqBQ Request manual intervention to a performance assessment
      operationId: RequestPerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Retrieve':
    get:
      tags:
        - BQ - PerformanceAssessment
      summary: ReBQ Retrieve details about prospect campaign performance assessment activity
      description: ReBQ Retrieve details about prospect campaign performance assessment activity
      operationId: RetrievePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/CampaignDirection/Create':
    post:
      tags:
        - BQ - CampaignDirection
      summary: CrBQ Create prospect campaign direction schedules
      description: CrBQ Create prospect campaign direction schedules
      operationId: CreateCampaignDirection
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/CampaignDirection/{campaigndirectionid}/Update':
    put:
      tags:
        - BQ - CampaignDirection
      summary: UpBQ Update the prospect campaign design and execution schedules
      description: UpBQ Update the prospect campaign design and execution schedules
      operationId: UpdateCampaignDirection
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/campaigndirectionid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/CampaignDirection/{campaigndirectionid}/Request':
    put:
      tags:
        - BQ - CampaignDirection
      summary: RqBQ Request manual intervention to the schedules
      description: RqBQ Request manual intervention to the schedules
      operationId: RequestCampaignDirection
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/campaigndirectionid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProspectCampaignManagement/{prospectcampaignmanagementid}/CampaignDirection/{campaigndirectionid}/Retrieve':
    get:
      tags:
        - BQ - CampaignDirection
      summary: ReBQ Retrieve details about the campaign design and execution direction and scheduling activity
      description: ReBQ Retrieve details about the campaign design and execution direction and scheduling activity
      operationId: RetrieveCampaignDirection
      parameters:
        - $ref: '#/components/parameters/prospectcampaignmanagementid'
        - $ref: '#/components/parameters/campaigndirectionid'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A description of the metric, defining how it is to be measured in deployment ||\r\n|"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: 'The make-up of the market tracking task performed, includes consolidation and analysis of market research to reach specific insights'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the business unit responsible for the campaign execution ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the prospect campaign execution event GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, evaluations and findings for the work task'
    PerformanceAssessment:
      type: object
      properties:
        PerformanceAssessmentWorkTaskType:
          $ref: '#/components/schemas/text'
        PerformanceAssessmentWorkTask:
          $ref: '#/components/schemas/task'
        PerformanceAssessmentWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        PerformanceAssessmentWorkTaskResult:
          $ref: '#/components/schemas/task'
        PerformanceAssessmentWorkTaskDate-Time:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    MarketTracking:
      type: object
      properties:
        MarketTrackingWorkTaskType:
          $ref: '#/components/schemas/text'
        MarketTrackingWorkTask:
          $ref: '#/components/schemas/task'
        GeneralMarketResearchDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/identifier'
        CompetitorAnalysisInstanceReference:
          $ref: '#/components/schemas/identifier'
        CustomerSurveyProcedureInstanceReference:
          $ref: '#/components/schemas/identifier'
        MarketTrackingWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        MarketTrackingWorkTaskResult:
          $ref: '#/components/schemas/task'
        MarketTrackingWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: Schedule of planned and actual prospect campaign design development and refinement activity
    CampaignDirection:
      type: object
      properties:
        ProspectCampaignDevelopmentSchedule:
          $ref: '#/components/schemas/schedule'
        ProspectCampaignExecutionSchedule:
          $ref: '#/components/schemas/schedule'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    strategy:
      type: object
      properties:
        Strategy:
          type: string
          description: 'A high level plan to achieve one or more goals '
          format: class
      description: Strategy set for the portfolio.(ISO20022)
    portfolio:
      type: object
      properties:
        PortfolioIdentification:
          $ref: '#/components/schemas/identifier'
        PortfolioName:
          $ref: '#/components/schemas/name'
        PortfolioStrategy:
          $ref: '#/components/schemas/strategy'
        PortfolioDescription:
          $ref: '#/components/schemas/text'
      description: The collection/portfolio of available prospect campaigns. The details are used to assess performance and coverage and direct development and execution activity Portfolio|Portfolio (https://www.iso20022.org/standardsrepository/type/Portfolio)|Standard|ISO20022 BM ()
    campaigntypevalues:
      enum:
        - MarketingCampaign
        - SocialCampaign
        - PoliticalCampaign
      type: string
      description: "The type or category of prospect campaign (e.g. mailshot, targeted solicitation, discounted product incentive) ||\r\n|"
    metric:
      type: object
      properties:
        Metric:
          type: string
          description: 'A metric is a standard or system of measurement that quantifies certain characteristics, properties, or performance of a given entity.'
          format: class
      description: "Metrics that are defined to assess the target and actual impact of the campaign ||\r\n|"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "A description of the target performance for the metric that can be defined for different usage scenarios as appropriate ||\r\n|"
    prospectcampaignassessment:
      type: object
      properties:
        ProspectCampaignAssessment:
          type: string
          description: "A evaluation to assess the impact of the prospect campaign. \n"
          format: class
      description: "Maintains a record of the use and impact of prospect campaign versions over the life of the campaign ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Details of the deployment set-up/configuration of the campaign for reference Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    prospectcampaignprocedure:
      type: object
      properties:
        ProspectCampaignProcedure:
          type: string
          description: 'A procedure to handle the deployment, execution and on-going refinement of a prospect campaign.'
          format: class
      description: "The result/impact of the overall prospect campaign event (that can include multiple identified prospects) ||\r\n|"
    ProspectCampaignPortfolioManagementPlan:
      type: object
      properties:
        ProspectCampaignPortfolio:
          $ref: '#/components/schemas/portfolio'
        ProspectCampaignType:
          $ref: '#/components/schemas/campaigntypevalues'
        ProspectCampaignDescription:
          $ref: '#/components/schemas/text'
        ProspectCampaignMetrics:
          $ref: '#/components/schemas/metric'
        ProspectCampaignMetricDefinition:
          $ref: '#/components/schemas/text'
        ProspectCampaignMetricGoal:
          $ref: '#/components/schemas/goal'
        ProspectCampaignPerformanceRecord:
          $ref: '#/components/schemas/prospectcampaignassessment'
        ProspectCampaignProcedureInstanceReference:
          $ref: '#/components/schemas/identifier'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        ProspectCampaignProcedureSet-up:
          $ref: '#/components/schemas/arrangement'
        ProspectCampaignProcedureVersionNumber:
          type: string
          description: The prospect campaign version number used in the event
          format: number
        ProspectCampaignProcedureResult:
          $ref: '#/components/schemas/prospectcampaignprocedure'
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Prospect Campaign Management.'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProspectCampaignPortfolioManagementPlan:
      description: ProspectCampaignPortfolioManagementPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProspectCampaignPortfolioManagementPlan'
    MarketTracking:
      description: MarketTracking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
    PerformanceAssessment:
      description: PerformanceAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAssessment'
    CampaignDirection:
      description: CampaignDirection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
  parameters:
    prospectcampaignmanagementid:
      name: prospectcampaignmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettrackingid:
      name: markettrackingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    performanceassessmentid:
      name: performanceassessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    campaigndirectionid:
      name: campaigndirectionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProspectCampaignPortfolioManagementPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProspectCampaignPortfolioManagementPlan'
      required: true
    MarketTracking:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
      required: true
    PerformanceAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAssessment'
      required: true
    CampaignDirection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
      required: true