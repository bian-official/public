openapi: 3.0.1
info:
  title: Customer Portfolio
  description: Maintain a portfolio of analytical views of the customer base to support customer segment profitability and performance analysis
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerPortfolio/13.0.0
paths:
  /CustomerPortfolio/Evaluate:
    post:
      tags:
        - CR - CustomerPortfolioAnalysis
      summary: EvCR Evaluate customer portfolio performance
      description: EvCR Evaluate customer portfolio performance
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/CustomerPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/Update':
    put:
      tags:
        - CR - CustomerPortfolioAnalysis
      summary: UpCR Update settings or content for customer portfolio analysis activity
      description: UpCR Update settings or content for customer portfolio analysis activity
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/Request':
    put:
      tags:
        - CR - CustomerPortfolioAnalysis
      summary: RqCR Request manual intervention in the customer portfolio analysis activity
      description: RqCR Request manual intervention in the customer portfolio analysis activity
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerPortfolioAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/Retrieve':
    get:
      tags:
        - CR - CustomerPortfolioAnalysis
      summary: ReCR Retrieve details about customer portfolio analysis activity
      description: ReCR Retrieve details about customer portfolio analysis activity
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerPortfolioAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/PerformanceAnalysis/Evaluate':
    post:
      tags:
        - BQ - PerformanceAnalysis
      summary: EvBQ Evaluate customer portfolio performance using a specific type of analysis
      description: EvBQ Evaluate customer portfolio performance using a specific type of analysis
      operationId: EvaluatePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Update':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: UpBQ Update details of a specific customer portfolio performance analysis
      description: UpBQ Update details of a specific customer portfolio performance analysis
      operationId: UpdatePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Exchange':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: 'EcBQ Accept, reject, verify, etc. customer portfolio analysis'
      description: 'EcBQ Accept, reject, verify, etc. customer portfolio analysis'
      operationId: ExchangePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Execute':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: ExBQ Execute an automated action against on-going analysis
      description: ExBQ Execute an automated action against on-going analysis
      operationId: ExecutePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Request':
    put:
      tags:
        - BQ - PerformanceAnalysis
      summary: RqBQ Request manual intervention to on-going analysis
      description: RqBQ Request manual intervention to on-going analysis
      operationId: RequestPerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAnalysis'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerPortfolio/{customerportfolioid}/PerformanceAnalysis/{performanceanalysisid}/Retrieve':
    get:
      tags:
        - BQ - PerformanceAnalysis
      summary: ReBQ Retrieve details about a specific customer portfolio performance analysis
      description: ReBQ Retrieve details about a specific customer portfolio performance analysis
      operationId: RetrievePerformanceAnalysis
      parameters:
        - $ref: '#/components/parameters/customerportfolioid'
        - $ref: '#/components/parameters/performanceanalysisid'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAnalysis'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n* `RevenueAnalysis` - \r\n* `CostAnalysis` - \r\n* `PredictiveAnalysis` - \r\n* `BehavioralAnalysis` - \r\n* `ProfitabilityAnalysis` - \r\n* `CompetitiveAnalysis` - \r\n* `CohortAnalysis` - \r\n* `SegmentAnalysis` - \r\n* `SWOTAnalysis` - \r\n* `Benchmarking` - \r\n* `PositioningAnalysis` - \r\n* `ScenarioAnalysis` - \r\n* `IntelligenceGathering` - \r\n* `Profiling` - \r\n"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: Record of a task to perform a selected type of performance analysis on a customer segment
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The consolidated report of the performance evaluation and comparisons from the analysis ||\r\n|"
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: The descriptive name of the bank defined customer segment/cohort Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: Period of time during which the status is valid.
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer involved in Portfolio ||\r\n|"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    model:
      type: object
      properties:
        ModelType:
          $ref: '#/components/schemas/text'
        ModelPurpose:
          $ref: '#/components/schemas/text'
        ModelVersion:
          $ref: '#/components/schemas/text'
        ModelName:
          $ref: '#/components/schemas/name'
        ModelDateAndTime:
          $ref: '#/components/schemas/datetime'
        ModelStatus:
          $ref: '#/components/schemas/status'
      description: Reference to the performance analysis model used
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: ">\r\n* `FinancialReport` - \r\n* `BusinessReport` - \r\n* `ManagementReport` - \r\n* `Statement` - \r\n* `MaintenanceReport` - \r\n* `RegulatoryReport` - \r\n* `TaxReport` - \r\n* `AnalysisReport` - \r\n"
    report:
      type: object
      properties:
        ReportType:
          $ref: '#/components/schemas/reporttypevalues'
        ReportValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportVersion:
          type: string
          description: ''
          format: number
        ReportDateTime:
          $ref: '#/components/schemas/datetime'
        ReportFormat:
          $ref: '#/components/schemas/text'
      description: 'The data file, report of customer related transaction details used in the analysis'
    marketresearchviewpointtypevalues:
      enum:
        - CustomerViewpoint
        - CompetitorViewpoint
        - MarketDynamicsViewpoint
        - ProductServiceViewpoint
        - GeographicViewpoint
        - EconomicAndPoliticalViewpoint
        - TechnologicalViewpoint
        - EnvironmentalAndSustainabilityViewpoint
        - ChannelAndDistributionViewpoint
        - FinancialViewpoint
      type: string
      description: ">\r\n* `CustomerViewpoint` - \r\n* `CompetitorViewpoint` - \r\n* `MarketDynamicsViewpoint` - \r\n* `ProductServiceViewpoint` - \r\n* `GeographicViewpoint` - \r\n* `EconomicAndPoliticalViewpoint` - \r\n* `TechnologicalViewpoint` - \r\n* `EnvironmentalAndSustainabilityViewpoint` - \r\n* `ChannelAndDistributionViewpoint` - \r\n* `FinancialViewpoint` - \r\n"
    marketresearchreporttypevalues:
      enum:
        - IndustryReport
        - MarketResearchReport
        - ConsumerInsightsReport
        - CompetitiveAnalysisReport
        - TrendAnalysisReport
        - ProductServiceReport
        - BrandAnalysisReport
        - CustomerSatisfactionAndLoyaltyReport
        - FeasibilityStudies
        - EconomicAnalysisReport
        - TechnologyAndInnovationReport
        - GeographicMarketReport
        - EnvironmentalAndSustainabilityReport
      type: string
      description: ">\r\n* `IndustryReport` - \r\n* `MarketResearchReport` - \r\n* `ConsumerInsightsReport` - \r\n* `CompetitiveAnalysisReport` - \r\n* `TrendAnalysisReport` - \r\n* `ProductServiceReport` - \r\n* `BrandAnalysisReport` - \r\n* `CustomerSatisfactionAndLoyaltyReport` - \r\n* `FeasibilityStudies` - \r\n* `EconomicAnalysisReport` - \r\n* `TechnologyAndInnovationReport` - \r\n* `GeographicMarketReport` - \r\n* `EnvironmentalAndSustainabilityReport` - \r\n"
    marketresearchreport:
      type: object
      properties:
        MarketResearchReportContent:
          $ref: '#/components/schemas/text'
        MarketResearchViewpointType:
          $ref: '#/components/schemas/marketresearchviewpointtypevalues'
        MarketResearchReportPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        MarketResearchReportVersion:
          $ref: '#/components/schemas/text'
        MarketResearchReportType:
          $ref: '#/components/schemas/marketresearchreporttypevalues'
      description: The content of selected financial market research report or market transaction database in any suitable form used for comparisons when appropriate
    PerformanceAnalysis:
      type: object
      properties:
        PerformanceAnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        PerformanceAnalysisTask:
          $ref: '#/components/schemas/task'
        PerformanceAnalysisRequestSpecification:
          $ref: '#/components/schemas/text'
        PerformanceAnalysisModelReference:
          $ref: '#/components/schemas/model'
        PerformanceAnalysisProductandServiceActivityReport:
          $ref: '#/components/schemas/report'
        PerformanceAnalysisFinancialMarketResearchReport:
          $ref: '#/components/schemas/marketresearchreport'
        PerformanceAnalysisWorkProducts:
          type: string
          description: 'Work documentation, forms and schedules produced and referenced during the analysis'
          format: workproduct
        PerformanceAnalysisRequestResult:
          $ref: '#/components/schemas/text'
        CustomerPortfolioAnalysisInstanceReference:
          $ref: '#/components/schemas/identifier'
        PerformanceAnalysisInstanceReference:
          $ref: '#/components/schemas/identifier'
      description: "It involves evaluating and understanding how individual customers or customer segments interact with a business's products or services. It focuses on metrics related to customer behavior, satisfaction, engagement, and retention.\n\nPurpose:\n\nTo evaluate and understand customer behavior over time.\nTo track various performance metrics that indicate customer engagement, satisfaction, and retention."
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: Refers to a document used in the analysis
    analysisreport:
      type: object
      properties:
        AnalysisReportDatetime:
          $ref: '#/components/schemas/datetime'
      description: "A consolidated report containing the results of performance analyses applied to the customer segment/cohort ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Refers to work documentation, forms and schedules produced and referenced during the analysis'
    analysismodel:
      type: object
      properties:
        AnalysisModel:
          type: string
          description: 'Model used in the analysis of something. '
          format: class
      description: Refers to a model used in the analysis Like Customer Behavior Model
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: Refers to a log used in the  analysis like Event Log
    ProfitabilityAnalysis:
      type: object
      properties:
        ProfitabilityAnalysisDocumentReference:
          $ref: '#/components/schemas/document'
        ProfitabilityAnalysisReportReference:
          $ref: '#/components/schemas/analysisreport'
        ProfitabilityAnalysisInvolvedPartyReference:
          $ref: '#/components/schemas/involvedparty'
        ProfitabilityAnalysisWorkProduct:
          $ref: '#/components/schemas/workproduct'
        ProfitabilityAnalysisTask:
          $ref: '#/components/schemas/task'
        ProfitabilityAnalysisModelReference:
          $ref: '#/components/schemas/analysismodel'
        ProfitabilityAnalysisLogReference:
          $ref: '#/components/schemas/log'
        ProfitabilityAnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        CustomerPortfolioAnalysisInstanceReference:
          $ref: '#/components/schemas/identifier'
        ProfitabilityAnalysisInstanceReference:
          $ref: '#/components/schemas/identifier'
      description: "It involves evaluating and understanding how individual customers or customer segments interact with a business's products or services. It focuses on metrics related to customer behavior, satisfaction, engagement, and retention.\n\nPurpose:\n\nTo evaluate and understand customer behavior over time.\nTo track various performance metrics that indicate customer engagement, satisfaction, and retention."
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "Definition of the performance goals for defined customer segments/cohorts as defined by senior management functions (target/anticipated and actual as assessed). ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule for performing customer portfolio analysis for the enterprise or division ||\r\n|"
    customerportfolioanalysistypevalues:
      enum:
        - ProfitabilityAnalysis
        - PerformanceAnalysis
      type: string
      description: "Defines a type of performance analysis performed (e.g. scheduled review, specialized analysis, sensitivity assessment/projection) ||\r\n|"
    date:
      type: object
      properties:
        DateContent:
          $ref: '#/components/schemas/text'
      description: The date/time the performance report was completed ISODate|ISODate (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022 BM ()
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: "Reference to associated performance analysis reporting documents ||\r\n|"
    customerportfolioanalysis:
      type: object
      properties:
        CustomerPortfolioAnalysisType:
          $ref: '#/components/schemas/customerportfolioanalysistypevalues'
      description: "Reference to the customer portfolio analysis ||\r\n|"
    customerportfolio:
      type: object
      properties:
        CustomerPortfolio:
          type: string
          description: "A customer portfolio refers to the collection or set of customers that a business serves or interacts with.\n\nA customer portfolio is the collection of customers that a business manages.\n\nA customer portfolio is a segmented list of the various groups of customer. "
          format: class
      description: "Reference to a customer portfolio ||\r\n|"
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Reference to the criteria used to categorize and evaluate the customers within a business's overall customer base GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: "Reference to the customer product involved in Portfolio ||\r\n|"
    CustomerPortfolioAnalysis:
      type: object
      properties:
        CustomerPortfolioType:
          $ref: '#/components/schemas/name'
        CustomerPortfolioTypeDefinition:
          $ref: '#/components/schemas/text'
        CustomerPortfolioPerformanceGoals:
          $ref: '#/components/schemas/goal'
        CustomerPortfolioAnalysisSchedule:
          $ref: '#/components/schemas/schedule'
        CustomerPortfolioAnalysisReport:
          $ref: '#/components/schemas/analysisreport'
        CustomerPortfolioAnalysisType:
          $ref: '#/components/schemas/customerportfolioanalysistypevalues'
        CustomerPortfolioAnalysisResult:
          $ref: '#/components/schemas/text'
        CustomerPortfolioAnalysisReportingDate:
          $ref: '#/components/schemas/date'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        CustomerReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerPortfolioAnalysisReference:
          $ref: '#/components/schemas/customerportfolioanalysis'
        CustomerPortfolioReference:
          $ref: '#/components/schemas/customerportfolio'
        CustomerPortfolioCriteriaReference:
          $ref: '#/components/schemas/ruleset'
        CustomerProductReference:
          $ref: '#/components/schemas/productagreement'
      description: "Analyze the performance or behavior of some on-going activity or entity  within Customer Portfolio. \nExamples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks.\n\nAnalyze the performance or behavior of some on-going activity or entity. Examples: Provide behavioral insights and analysis into customer behavior and analyze financial market activity in order to identify opportunities, define pricing and evaluate risks."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerPortfolioAnalysis:
      description: CustomerPortfolioAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPortfolioAnalysis'
    PerformanceAnalysis:
      description: PerformanceAnalysis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
  parameters:
    customerportfolioid:
      name: customerportfolioid
      in: path
      required: true
      style: simple
      schema:
        type: string
    performanceanalysisid:
      name: performanceanalysisid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerPortfolioAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPortfolioAnalysis'
      required: true
    PerformanceAnalysis:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAnalysis'
      required: true