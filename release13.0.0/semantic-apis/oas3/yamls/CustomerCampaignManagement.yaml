openapi: 3.0.1
info:
  title: Customer Campaign Management
  description: Assess the coverage and impact of internal/customer campaigns and redirect campaign development and execution activity accordingly
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/CustomerCampaignManagement/13.0.0
paths:
  /CustomerCampaignManagement/Create:
    post:
      tags:
        - CR - CustomerCampaignPortfolioManagementPlan
      summary: CrCR Create and invoke the customer campaign portfolio management plan
      description: CrCR Create and invoke the customer campaign portfolio management plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/Update':
    put:
      tags:
        - CR - CustomerCampaignPortfolioManagementPlan
      summary: UpBQ Update details of the customer campaign portfolio management plan
      description: UpBQ Update details of the customer campaign portfolio management plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/Request':
    put:
      tags:
        - CR - CustomerCampaignPortfolioManagementPlan
      summary: RqCR Request manual intervention in the campaign plan
      description: RqCR Request manual intervention in the campaign plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/Grant':
    put:
      tags:
        - CR - CustomerCampaignPortfolioManagementPlan
      summary: GrCR Obtain a permission grant against the plan
      description: GrCR Obtain a permission grant against the plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/CustomerCampaignPortfolioManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/Retrieve':
    get:
      tags:
        - CR - CustomerCampaignPortfolioManagementPlan
      summary: ReCR Retrieve details about the customer campaign portfolio management plan
      description: ReCR Retrieve details about the customer campaign portfolio management plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
      responses:
        '200':
          $ref: '#/components/responses/CustomerCampaignPortfolioManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/MarketTracking/{markettrackingid}/Update':
    put:
      tags:
        - BQ - MarketTracking
      summary: UpBQ Update details of the market tracking activity
      description: UpBQ Update details of the market tracking activity
      operationId: UpdateMarketTracking
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/MarketTracking/{markettrackingid}/Execute':
    put:
      tags:
        - BQ - MarketTracking
      summary: ExBQ Execute an automated task for the tracking activity
      description: ExBQ Execute an automated task for the tracking activity
      operationId: ExecuteMarketTracking
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/MarketTracking/{markettrackingid}/Request':
    put:
      tags:
        - BQ - MarketTracking
      summary: RqBQ Request manual intervention in the market tracking
      description: RqBQ Request manual intervention in the market tracking
      operationId: RequestMarketTracking
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/MarketTracking/{markettrackingid}/Retrieve':
    get:
      tags:
        - BQ - MarketTracking
      summary: ReBQ Retrieve details about the market tracking activity
      description: ReBQ Retrieve details about the market tracking activity
      operationId: RetrieveMarketTracking
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/markettrackingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/PerformanceAssessment/Create':
    post:
      tags:
        - BQ - PerformanceAssessment
      summary: CrBQ Create a performance assessment of the customer campaign portfolio
      description: CrBQ Create a performance assessment of the customer campaign portfolio
      operationId: CreatePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Update':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: UpBQ Update details of a customer campaign portfolio assessment
      description: UpBQ Update details of a customer campaign portfolio assessment
      operationId: UpdatePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Execute':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: ExBQ Execute an automated action for a performance assessment
      description: ExBQ Execute an automated action for a performance assessment
      operationId: ExecutePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Request':
    put:
      tags:
        - BQ - PerformanceAssessment
      summary: RqBQ Request manual intervention to a performance assessment
      description: RqBQ Request manual intervention to a performance assessment
      operationId: RequestPerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/PerformanceAssessment'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/PerformanceAssessment/{performanceassessmentid}/Retrieve':
    get:
      tags:
        - BQ - PerformanceAssessment
      summary: ReBQ Retrieve details about customer campaign performance assessment activity
      description: ReBQ Retrieve details about customer campaign performance assessment activity
      operationId: RetrievePerformanceAssessment
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/performanceassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/PerformanceAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/CampaignDirection/Create':
    post:
      tags:
        - BQ - CampaignDirection
      summary: CrBQ Create customer campaign direction schedules
      description: CrBQ Create customer campaign direction schedules
      operationId: CreateCampaignDirection
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/CampaignDirection/{campaigndirectionid}/Update':
    put:
      tags:
        - BQ - CampaignDirection
      summary: UpBQ Update the customer campaign design and execution schedules
      description: UpBQ Update the customer campaign design and execution schedules
      operationId: UpdateCampaignDirection
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/campaigndirectionid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/CampaignDirection/{campaigndirectionid}/Request':
    put:
      tags:
        - BQ - CampaignDirection
      summary: RqBQ Request manual intervention to the schedules
      description: RqBQ Request manual intervention to the schedules
      operationId: RequestCampaignDirection
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/campaigndirectionid'
      requestBody:
        $ref: '#/components/requestBodies/CampaignDirection'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/CustomerCampaignManagement/{customercampaignmanagementid}/CampaignDirection/{campaigndirectionid}/Retrieve':
    get:
      tags:
        - BQ - CampaignDirection
      summary: ReBQ Retrieve details about the campaign design and execution direction and scheduling activity
      description: ReBQ Retrieve details about the campaign design and execution direction and scheduling activity
      operationId: RetrieveCampaignDirection
      parameters:
        - $ref: '#/components/parameters/customercampaignmanagementid'
        - $ref: '#/components/parameters/campaigndirectionid'
      responses:
        '200':
          $ref: '#/components/responses/CampaignDirection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The result/impact of the overall customer campaign event (that can include multiple identified leads/opportunities) ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the business unit responsible for the campaign execution ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: Refers to the lifecycle of a Condition
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation before the duty/obligation can be met
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The timing and key actions/milestones involved in fulfilling the duty
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Impact Assessment specific Business Service
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "A description of the target performance for the metric that can be defined for different usage scenarios as appropriate ||\r\n|"
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
        - DevelopmentPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n* `DevelopmentPlan` - \r\n"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: Reference to Customer Campaign Portfolio Management Plan
    ImpactAssessment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/plan'
        ImpactAssessmentReference:
          $ref: '#/components/schemas/plannedaction'
        ImpactAssessmentType:
          $ref: '#/components/schemas/text'
      description: "It is is a duty used to evaluate the potential consequences of a proposed action or project on various aspects of the environment, society, and economy\n\nComment: \nFor Customer Campaihn Management: Assess Objective Attainment - by segment (and supporting campaign) - this can trigger an oversight response"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: 'The make-up of the market tracking task performed, includes consolidation and analysis of market research to reach specific insights'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, evaluations and findings for the work task'
    PerformanceAssessment:
      type: object
      properties:
        PerformanceAssessmentWorkTaskType:
          $ref: '#/components/schemas/text'
        PerformanceAssessmentWorkTask:
          $ref: '#/components/schemas/task'
        PerformanceAssessmentWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        PerformanceAssessmentWorkTaskResult:
          $ref: '#/components/schemas/text'
        PerformanceAssessmentWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "It is is a duty used to evaluate the potential consequences of a proposed action or project on various aspects of the environment, society, and economy\n\nComment: \nFor Customer Campaihn Management: Assess Objective Attainment - by segment (and supporting campaign) - this can trigger an oversight response"
    CoveragePlanning:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/plan'
        CoveragePlanningReference:
          $ref: '#/components/schemas/plannedaction'
        CoveragePlanningType:
          $ref: '#/components/schemas/text'
      description: "It is is a duty used to evaluate the potential consequences of a proposed action or project on various aspects of the environment, society, and economy\n\nComment: \nFor Customer Campaihn Management: Assess Objective Attainment - by segment (and supporting campaign) - this can trigger an oversight response"
    marketresearchviewpointtypevalues:
      enum:
        - CustomerViewpoint
        - CompetitorViewpoint
        - MarketDynamicsViewpoint
        - ProductServiceViewpoint
        - GeographicViewpoint
        - EconomicAndPoliticalViewpoint
        - TechnologicalViewpoint
        - EnvironmentalAndSustainabilityViewpoint
        - ChannelAndDistributionViewpoint
        - FinancialViewpoint
      type: string
      description: ">\r\n* `CustomerViewpoint` - \r\n* `CompetitorViewpoint` - \r\n* `MarketDynamicsViewpoint` - \r\n* `ProductServiceViewpoint` - \r\n* `GeographicViewpoint` - \r\n* `EconomicAndPoliticalViewpoint` - \r\n* `TechnologicalViewpoint` - \r\n* `EnvironmentalAndSustainabilityViewpoint` - \r\n* `ChannelAndDistributionViewpoint` - \r\n* `FinancialViewpoint` - \r\n"
    markettypevalues:
      enum:
        - FinancialMarket
        - GeneralMarket
      type: string
      description: ">\r\n* `FinancialMarket` - \r\n* `GeneralMarket` - \r\n"
    country:
      type: object
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/involvedparty'
      description: Country in which a market operates. (ISO20022)
    jurisdiction:
      type: object
      properties:
        Jurisdiction:
          type: string
          description: Jurisdiction that will be assigned in case of legal dispute.
          format: class
      description: "    \nJurisdiction of the governing law for the trades on this market, for example, City of NY, County of NY, State of NY, regulatory SEC.(ISO20022)"
    market:
      type: object
      properties:
        MarketType:
          $ref: '#/components/schemas/markettypevalues'
        MarketIdentification:
          $ref: '#/components/schemas/identifier'
        MarketCountry:
          $ref: '#/components/schemas/country'
        MarketJurisdiction:
          $ref: '#/components/schemas/jurisdiction'
      description: "Market that is subject of the market research\n\n"
    marketresearchaspecttypevalues:
      enum:
        - MarketSize
        - MarktTrends
        - TargetMarket
        - ConsumerBehavior
        - CompetitiveAnalysis
        - ProductOrServiceAnalysis
        - PricingStrategy
        - DistributionChannels
        - MarketingAndAdvertising
        - BrandingAndPositioning
        - CustomerDemographics
        - CustomerPsychographics
        - TechnologyAndInnovation
        - RegulatoryFactors
        - EnvironmentalFactors
        - CustomerJourneyAndExperience
        - MarketEntry
        - MarketExpansion
      type: string
      description: ">\r\n* `MarketSize` - \r\n* `MarktTrends` - \r\n* `TargetMarket` - \r\n* `ConsumerBehavior` - \r\n* `CompetitiveAnalysis` - \r\n* `ProductOrServiceAnalysis` - \r\n* `PricingStrategy` - \r\n* `DistributionChannels` - \r\n* `MarketingAndAdvertising` - \r\n* `BrandingAndPositioning` - \r\n* `CustomerDemographics` - \r\n* `CustomerPsychographics` - \r\n* `TechnologyAndInnovation` - \r\n* `RegulatoryFactors` - \r\n* `EnvironmentalFactors` - \r\n* `CustomerJourneyAndExperience` - \r\n* `MarketEntry` - \r\n* `MarketExpansion` - \r\n"
    marketresearch:
      type: object
      properties:
        MarketResearchSource:
          type: string
          description: "Refers to information (e.g. Market research report) used in the Market Research\n"
          format: object
        MarketResearchViewpoint:
          $ref: '#/components/schemas/marketresearchviewpointtypevalues'
        MarketResearchApproach:
          $ref: '#/components/schemas/text'
        MarketResearchPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ResearchedMarket:
          $ref: '#/components/schemas/market'
        MarketResearchAspectType:
          $ref: '#/components/schemas/marketresearchaspecttypevalues'
        MarketResearchDescription:
          $ref: '#/components/schemas/text'
        MarketResearchDateAndTime:
          $ref: '#/components/schemas/datetime'
      description: Reference to an internally maintained market research viewpoint
    competitoranalysistypevalues:
      enum:
        - PeerCompetitorAnalysis
        - ProductCompetitiveAnalysis
        - CompetitorClusteringOrGrouping
        - CompetitorSWOTAnalysis
        - CompetitiveBenchmarking
      type: string
      description: ">\r\n* `PeerCompetitorAnalysis` - The process of evaluating and comparing a company’s performance, strategies, and market position against those of its direct competitors, often referred to as \"peers.\" These peers typically operate within the same industry, offer similar products or services, and target the same customer segments. Focus: Analyzes businesses offering similar products or services that target the same customer base.\r\n* `ProductCompetitiveAnalysis` - The process of evaluating and comparing a company's product or service against similar offerings from competitors\r\n* `CompetitorClusteringOrGrouping` - Clusters competitors into groups based on similar strategies, market positions, or other characteristics.\r\n* `CompetitorSWOTAnalysis` - Evaluates a competitor's Strengths, Weaknesses, Opportunities, and Threats\r\n* `CompetitiveBenchmarking` - The process of comparing a company's performance, processes, products, or practices against those of its competitors\r\n"
    competitoranalysis:
      type: object
      properties:
        CompetitorAnalysisType:
          $ref: '#/components/schemas/competitoranalysistypevalues'
      description: Reference to an internally maintained competitor analysis viewpoint
    MarketTracking:
      type: object
      properties:
        MarketTrackingWorkTaskType:
          $ref: '#/components/schemas/text'
        MarketTrackingWorkTask:
          $ref: '#/components/schemas/task'
        GeneralMarketResearchDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/marketresearch'
        CompetitorAnalysisInstanceReference:
          $ref: '#/components/schemas/competitoranalysis'
        CustomerSurveyProcedureInstanceReference:
          type: string
          description: Reference to internally maintained customer survey materials
          format: customersurveys
        MarketTrackingWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        MarketTrackingWorkTaskResult:
          $ref: '#/components/schemas/text'
        MarketTrackingWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "It is is a duty used to evaluate the potential consequences of a proposed action or project on various aspects of the environment, society, and economy\n\nComment: \nFor Customer Campaihn Management: Assess Objective Attainment - by segment (and supporting campaign) - this can trigger an oversight response"
    CapabilityOversight:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/plan'
        CapabilityOversightReference:
          $ref: '#/components/schemas/plannedaction'
        CapabilityOversightType:
          $ref: '#/components/schemas/text'
      description: "It is is a duty used to evaluate the potential consequences of a proposed action or project on various aspects of the environment, society, and economy\n\nComment: \nFor Customer Campaihn Management: Assess Objective Attainment - by segment (and supporting campaign) - this can trigger an oversight response"
    CompetitiveAssessment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/plan'
        CompetitiveAssessmentReference:
          $ref: '#/components/schemas/plannedaction'
        CompetitiveAssessmentType:
          $ref: '#/components/schemas/text'
      description: "It is is a duty used to evaluate the potential consequences of a proposed action or project on various aspects of the environment, society, and economy\n\nComment: \nFor Customer Campaihn Management: Assess Objective Attainment - by segment (and supporting campaign) - this can trigger an oversight response"
    CampaignDirection:
      type: object
      properties:
        CustomerCampaignDevelopmentSchedule:
          $ref: '#/components/schemas/schedule'
        CustomerCampaignExecutionSchedule:
          $ref: '#/components/schemas/schedule'
      description: "It is is a duty used to evaluate the potential consequences of a proposed action or project on various aspects of the environment, society, and economy\n\nComment: \nFor Customer Campaihn Management: Assess Objective Attainment - by segment (and supporting campaign) - this can trigger an oversight response"
    customercampaignportfolio:
      type: object
      properties:
        CustomerCampaignPortfolio:
          type: string
          description: A customer campaign portfolio is a collection of customer campaigns that a business uses to target its customers
          format: class
      description: "The collection/portfolio of available customer campaigns. The details are used to assess performance and coverage and direct development and execution activity ||\r\n|"
    customercampaigntypevalues:
      enum:
        - ProductLaunchCampaign
        - BrandAwarenessCampaign
        - CustomerRetentionCampaign
        - ReferralCampaign
        - ReactivationCampaign
        - Cross-SellingAndUpsellingCampaign
      type: string
      description: "The type or category of customer campaign (e.g. cross-sell, up-sell, retention) ||\r\n|"
    customercampaignmetrictypevalues:
      enum:
        - Click-ThroughRates(CTR)
        - ConversionRate
        - CustomerAcquisitionCost(CAC)
        - ReturnOnInvestment(ROI)
        - CustomerLifetimeValue(CLV)
        - EngagementRate
        - BounceRate
        - RepeatPurchaseRate
        - ChurnRate
      type: string
      description: ">\r\n* `Click-ThroughRates(CTR)` - Formula: (Number of Clicks / Number of Impressions) x 100\nIndicates the effectiveness of an ad in generating interest.\r\n* `ConversionRate` - Formula: (Number of Conversions / Number of Total Visitors) x 100\nMeasures the percentage of users who take the desired action (e.g., make a purchase).\r\n* `CustomerAcquisitionCost(CAC)` - Formula: Total Campaign Costs / Number of New Customers Acquired\nIndicates the cost to acquire a new customer.\r\n* `ReturnOnInvestment(ROI)` - Formula: (Net Profit / Campaign Cost) x 100\nMeasures the profitability of the campaign.\r\n* `CustomerLifetimeValue(CLV)` - Estimates the total revenue a business can expect from a single customer account.\r\n* `EngagementRate` - Formula: (Total Engagements / Total Impressions) x 100\nMeasures how actively users are engaging with the campaign content.\r\n* `BounceRate` - Formula: (Single Page Sessions / Total Sessions) x 100\nIndicates the percentage of visitors who leave the site after viewing only one page.\r\n* `RepeatPurchaseRate` - Formula: (Number of Returning Customers / Total Number of Customers) x 100\nIndicates the percentage of customers who make more than one purchase\r\n* `ChurnRate` - Formula: (Number of Customers Lost / Total Number of Customers at Start of Period) x 100\nMeasures the rate at which customers stop doing business with the company.\r\n"
    customercampaignmetric:
      type: object
      properties:
        CustomerCampaignMetricType:
          $ref: '#/components/schemas/customercampaignmetrictypevalues'
      description: "Metrics that are defined to assess the target and actual impact of the campaign ||\r\n|"
    worksteptypevalues:
      type: object
      properties:
        Worksteptypevalues:
          type: string
          description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
    workstep:
      type: object
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/text'
        WorkstepType:
          $ref: '#/components/schemas/worksteptypevalues'
        WorkstepDescription:
          $ref: '#/components/schemas/text'
        WorkstepDateTime:
          $ref: '#/components/schemas/datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/workproduct'
      description: A workstep to execute the campaign
    campaignprocedureworksteptypevalues:
      enum:
        - CandidateSelection
        - Execution
        - AnalysisFeedback
      type: string
      description: ">\r\n* `CandidateSelection` - The initial selection and confirmation of active customers that are to be included in the campaign\r\n* `Execution` - Execution of the customer interaction, presenting the campaign details, recording the customer response\r\n* `AnalysisFeedback` - Analyzing the impact of the campaign and providing feedback to help refine/recalibrate the campaign specification\r\n"
    customercampaignprocedure:
      type: object
      properties:
        CustomerCampaignProcedureWorkstep:
          $ref: '#/components/schemas/workstep'
        CustomerCampaignProcedureWorkstepType:
          $ref: '#/components/schemas/campaignprocedureworksteptypevalues'
      description: "Reference to the customer campaign execution event ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Details of the deployment set-up/configuration of the campaign for reference Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    CustomerCampaignPortfolioManagementPlan:
      type: object
      properties:
        CustomerCampaignPortfolio:
          $ref: '#/components/schemas/customercampaignportfolio'
        CustomerCampaignType:
          $ref: '#/components/schemas/customercampaigntypevalues'
        CustomerCampaignDescription:
          $ref: '#/components/schemas/text'
        CustomerCampaignMetrics:
          $ref: '#/components/schemas/customercampaignmetric'
        CustomerCampaignMetricDefinition:
          $ref: '#/components/schemas/text'
        CustomerCampaignMetricGoal:
          $ref: '#/components/schemas/goal'
        CustomerCampaignPerformanceRecord:
          $ref: '#/components/schemas/text'
        CustomerCampaignProcedureInstanceReference:
          $ref: '#/components/schemas/customercampaignprocedure'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        CustomerCampaignProcedureSet-up:
          $ref: '#/components/schemas/arrangement'
        CustomerCampaignProcedureVersionNumber:
          $ref: '#/components/schemas/text'
        CustomerCampaignProcedureResult:
          $ref: '#/components/schemas/text'
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Customer Campaign Management.'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    CustomerCampaignPortfolioManagementPlan:
      description: CustomerCampaignPortfolioManagementPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCampaignPortfolioManagementPlan'
    MarketTracking:
      description: MarketTracking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
    PerformanceAssessment:
      description: PerformanceAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAssessment'
    CampaignDirection:
      description: CampaignDirection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
  parameters:
    customercampaignmanagementid:
      name: customercampaignmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettrackingid:
      name: markettrackingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    performanceassessmentid:
      name: performanceassessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    campaigndirectionid:
      name: campaigndirectionid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    CustomerCampaignPortfolioManagementPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCampaignPortfolioManagementPlan'
      required: true
    MarketTracking:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
      required: true
    PerformanceAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PerformanceAssessment'
      required: true
    CampaignDirection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDirection'
      required: true