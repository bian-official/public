openapi: 3.0.1
info:
  title: Payment Execution
  description: 'This service domains processes the movement of funds between accounts within the bank or to/from an account held with another bank, selecting the appropriate payment mechanism'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PaymentExecution/13.0.0
paths:
  /PaymentExecution/Initiate:
    post:
      tags:
        - CR - PaymentExecutionProcedure
      summary: InCR Initiate a payment execution procedure
      description: InCR Initiate a payment execution procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/PaymentExecutionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/PaymentExecutionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentExecution/{paymentexecutionid}/Update':
    put:
      tags:
        - CR - PaymentExecutionProcedure
      summary: UpCR Update details of a payment execution instruction
      description: UpCR Update details of a payment execution instruction
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/paymentexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentExecutionProcedure'
      responses:
        '200':
          $ref: '#/components/responses/PaymentExecutionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentExecution/{paymentexecutionid}/Retrieve':
    get:
      tags:
        - CR - PaymentExecutionProcedure
      summary: ReCR Retrieve details about a payment execution instruction
      description: ReCR Retrieve details about a payment execution instruction
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/paymentexecutionid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentExecutionProcedure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentExecution/{paymentexecutionid}/PaymentMechanism/{paymentmechanismid}/Retrieve':
    get:
      tags:
        - BQ - PaymentMechanism
      summary: ReBQ Retrieve details about the payment mechanism selection
      description: ReBQ Retrieve details about the payment mechanism selection
      operationId: RetrievePaymentMechanism
      parameters:
        - $ref: '#/components/parameters/paymentexecutionid'
        - $ref: '#/components/parameters/paymentmechanismid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentMechanism'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentExecution/{paymentexecutionid}/PaymentExecution/{paymentexecutionid}/Control':
    put:
      tags:
        - BQ - PaymentExecution
      summary: CoBQ Control the execution of the gateway transaction
      description: CoBQ Control the execution of the gateway transaction
      operationId: ControlPaymentExecution
      parameters:
        - $ref: '#/components/parameters/paymentexecutionid'
        - $ref: '#/components/parameters/paymentexecutionid'
      requestBody:
        $ref: '#/components/requestBodies/PaymentExecution'
      responses:
        '200':
          $ref: '#/components/responses/PaymentExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PaymentExecution/{paymentexecutionid}/PaymentExecution/{paymentexecutionid}/Retrieve':
    get:
      tags:
        - BQ - PaymentExecution
      summary: ReBQ Retrieve details about the gateway transaction
      description: ReBQ Retrieve details about the gateway transaction
      operationId: RetrievePaymentExecution
      parameters:
        - $ref: '#/components/parameters/paymentexecutionid'
        - $ref: '#/components/parameters/paymentexecutionid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    taskinputoutput:
      type: object
      properties:
        TaskInputOutput:
          type: string
          description: Relationship of a task to its input and output information.
          format: class
      description: Details of the execution transaction
    PaymentExecution:
      type: object
      properties:
        PaymentExecutionTaskResult:
          $ref: '#/components/schemas/taskinputoutput'
      description: "The main worksteps to be followed in the execution of the procedure\n\nExamples: Invoice generation"
    PaymentMechanism:
      type: object
      properties:
        PaymentExecutionTaskResult:
          $ref: '#/components/schemas/taskinputoutput'
      description: "The main worksteps to be followed in the execution of the procedure\n\nExamples: Invoice generation"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: …. ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the payee's bank ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: An identifier that allows to uniquely refer to an instance of an ACH Session.
    achsession:
      type: object
      properties:
        ACHSessionIdentifier:
          $ref: '#/components/schemas/identifier'
      description: "Reference to the ACH financial gateway service used to execute payments ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The published gateway service availability ||\r\n|"
    correspondentservicesession:
      type: object
      properties:
        CorrespondentServiceSessionIdentifier:
          $ref: '#/components/schemas/identifier'
      description: "Reference to the SWIFT gateway service used to execute correspondent payments ||\r\n|"
    paymenttypevalues:
      enum:
        - Cashtransaction
        - Domesticpayment
        - Domestichighvaluepayment
        - Domesticprioritypayment
        - Crossborderpayment
        - Crossborderprioritypayment
        - Crossborderhighvaluepayment
        - Thirdcurrencypayment
        - Thirdcurrencyhighvaluepayment
        - Thirdcurrencyprioritypayment
        - Tradesettlementpayment
        - Foreignexchange
        - Equivalentamount
        - Loan
        - Loanrepayment
        - Securities
        - Lockbox
        - Dividend
        - Crossedcheque
        - Opencheque
        - Ordercheque
        - Circularcheque
        - Travellerscheques
        - Bankdraft
        - Cashletter
        - Documentarycredit
        - Billofexchange
        - Collection
        - Cashmanagementtransfer
        - Sweepaccount
        - Topaccount
        - Zerobalanceaccount
        - Standingfacilities
        - Swiftpayservicelevelcredit
        - Priorityservicelevelcredit
        - Standardservicelevelcredit
        - Liquiditytransfer
        - Advancepayment
        - Valuedateadjustment
        - Dvpgross
        - Dvpnet
        - Netting
        - Limitpayment
        - Backup
        - Expresspayment
        - Centralbankoperation
        - Clspayment
        - Eurodomesticpayment
        - Agriculturaltransfer
        - Alimonypayment
        - Balanceretail
        - Bonuspayment.
        - Brokeragefee
        - Capitalbuilding
        - Charitypayment
        - Childbenefit
        - Commercialcredit
        - Commission
        - Commoditytransfer
        - Costs
        - Copyright
        - Governmentpayment
        - Instalmenthirepurchaseagreement
        - Insurancepremium
        - Intracompanypayment
        - Interest
        - Licensefee
        - Metals
        - Pensionpayment
        - Purchasesaleofgoods
        - Refund
        - Rent
        - Royalties
        - Purchasesaleofservices
        - Salarypayment
        - Socialsecuritybenefit
        - Standingorder
        - Subscription
        - Treasurystatepayment
        - Unemploymentdisabilitybenefit
        - Valueaddedtaxpayment
        - Withholdingtax
        - Taxpayment
        - Miscellaneous
        - Overnightdeposit
        - Marginallending
        - Other
        - Upfront
        - Unwind
        - Principalexchange
      type: string
      description: ">\r\n* `Cashtransaction` - Transaction is a withdrawal/deposit of cash.\r\n* `Domesticpayment` - Payment has an origin and a destination in the same country, and is made in the currency of that country.\r\n* `Domestichighvaluepayment` - Transaction is a high value payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Domesticprioritypayment` - Transaction is a priority payment that has an origin and a destination in the same country and is made in the currency of that country.\r\n* `Crossborderpayment` - Payment has an origin in one country, a destination in another, and is made in the currency of either the origin or destination country.\r\n* `Crossborderprioritypayment` - Transaction is a priority payment that has an origin in one country and a destination in another and is made in the currency of either the origin or destination country.\r\n* `Crossborderhighvaluepayment` - Transaction is a high value payment that has an origin in one country and a destination in another country and is made in the currency of either the origin or destination country.\r\n* `Thirdcurrencypayment` - Transaction is a payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyhighvaluepayment` - Transaction is a high value payment that is made in a third currency to the origin and destination countries. The origin and destination countries may be one and the same country.\r\n* `Thirdcurrencyprioritypayment` - Payment is made in a third currency to the origin and destination countries. The origin and destination countries may be the same country.\r\n* `Tradesettlementpayment` - Transaction is the settlement of a trade, eg, a securities transaction.\r\n* `Foreignexchange` - Transaction isthe settlement of a foreign exchange deal.\r\n* `Equivalentamount` - Transaction is an equivalent amount relative to a currency conversion.\r\n* `Loan` - Transaction is the payment of a specific amount of money lent by a creditor/lender.\r\n* `Loanrepayment` - Transaction is an amount of money transferred in repayment of loan.\r\n* `Securities` - Transaction is a payment of securities.\r\n* `Lockbox` - Transaction is a payment(s) resulting from a lock box service.\r\n* `Dividend` - Transaction is a payment of dividends.\r\n* `Crossedcheque` - Transaction is a crossed cheque. A crossed check has two parallel lines across its face, indicating that the cheque must be paid into an account and not cashed over the counter.\r\n* `Opencheque` - Transaction is an uncrossed cheque that can be cashed at the bank of origin.\r\n* `Ordercheque` - Transaction is a cheque made payable to a named recipient 'or order' enabling the creditor to either deposit it in an account or endorse it to a third party, ie, transfer the rights to the cheque by signing it on the reverse.\r\n* `Circularcheque` - Transaction is an instruction from a bank to its correspondent bank to pay the creditor a stated sum of money on presentation of a means of identification.\r\n* `Travellerscheques` - Transaction is a payment resulting from travellers cheques.\r\n* `Bankdraft` - Transaction is a cheque drawn by a bank on itself or its agent. A person who owes money to another buys the draft from a bank for cash and hands it to the creditor who need have no fear that it might be dishonoured.\r\n* `Cashletter` - Transaction is a cash letter. A cash letter is a payment instrument in the form of a covering letter, whereby a financial institution, ie, the remitting bank, requests credit for one or more financial documents under usual reserve, ie, subject to final payment.\r\n* `Documentarycredit` - Transaction is a documentary credit from one banker to another, authorising the payment of a specified sum of money to the person named in the document, based on specified conditions.\r\n* `Billofexchange` - Transaction is a written order from a drawer to a drawee to pay a specified sum of money upon demand, or on a specified date, to the drawer or to a third party specified by the drawer. A bill of exchange is also called a draft.\r\n* `Collection` - Transaction is a collection. A collection is the act of sending a cheque, bill of exchange or another financial instrument to the prospective financial institution for payment.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Sweepaccount` - Transaction relates to a cash management instruction, requesting a sweep of the account of the debtor.\r\n* `Topaccount` - Transaction is a cash management instruction, requesting to top the account of the debtor above a certain floor amount. The floor amount, if not pre-agreed by the parties involved, may be specified.\r\n* `Zerobalanceaccount` - Transaction is a cash management instruction, requesting to zero balance the account of the debtor.\r\n* `Standingfacilities` - Payment is linked to overnight deposits and the marginal lending facility.\r\n* `Swiftpayservicelevelcredit` - Transaction is a credit transfer to be processed according to the SWIFTPay Service Level.\r\n* `Priorityservicelevelcredit` - Transaction is a credit transfer to be processed according to the Priority Service Level.\r\n* `Standardservicelevelcredit` - Transaction is a credit transfer to be processed according to the Standard Service Level.\r\n* `Liquiditytransfer` - Payment is made to transfer liquidity to/from the settlement account of a member, to/from the current account held at the central institution or any other institution.\r\n* `Advancepayment` - Transaction is a payment made in advance or as an advance.\r\n* `Valuedateadjustment` - Transaction reverses a previously incorrectly value dated entry.\r\n* `Dvpgross` - Gross cash payment offsetting the amount owed/due for a securities transaction settlement.\r\n* `Dvpnet` - Net payment offsetting the cash balance due/owed for a series of securities transactions settlement.\r\n* `Netting` - Transaction is a netting operation.\r\n* `Limitpayment` - Transaction is a payment that is processed when the pool of liquidity exceeds the minimum value reserved for an express payment in the RTGSPlus system.\r\n* `Backup` - Payment is made under the recovery procedure to move liquidity to/from the settlement account of a member according to the specifications of the system.\r\n* `Expresspayment` - Transaction is a payment that is processed whenever liquidity is available on the settlement account of a member of the RTGSPlus system.\r\n* `Centralbankoperation` - Payment is made to settle an operation made with the central bank.\r\n* `Clspayment` - Payment is linked to CLS activities.\r\n* `Eurodomesticpayment` - Transaction is a credit transfer in Euro with its country of origin and country of destination within the European Union. The origin and destination countries may be one and the same country.\r\n* `Agriculturaltransfer` - Transaction is related to the agricultural domain.\r\n* `Alimonypayment` - Transaction is a payment(s) made by one spouse to the other after a separation or divorce. An alimony payment may be applied to other family relationships.\r\n* `Balanceretail` - Transaction is a payment offsetting the net cash balance owed/due in a retail payment system.\r\n* `Bonuspayment.` - Net cash payment offsetting the balance due/owed in a retail payment system.\r\n* `Brokeragefee` - Transaction is charges levied by a broker.\r\n* `Capitalbuilding` - Transaction is payment into a personal pension scheme for retirement.\r\n* `Charitypayment` - Transaction is a payment for charity reasons.\r\n* `Childbenefit` - Transaction is a payment made to a parent/guardian to help maintain a child.\r\n* `Commercialcredit` - Transaction is settlement of a commercial credit.\r\n* `Commission` - Transaction is payment of a fee for executing a transaction.\r\n* `Commoditytransfer` - Transaction is a payment of products traded on a commodity exchange.\r\n* `Costs` - Transaction is apayment of costs.\r\n* `Copyright` - Transaction is a payment of copyright.\r\n* `Governmentpayment` - Transaction is apayment to or from a government department.\r\n* `Instalmenthirepurchaseagreement` - Transaction is a payment of an instalment or to the settlement of a hire-purchase agreement.\r\n* `Insurancepremium` - Transaction is a payment of an insurance premium.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Interest` - Transaction is a payment of interest.\r\n* `Licensefee` - Transaction is a payment of a license fee.\r\n* `Metals` - Transaction is a purchase or sale of metals.\r\n* `Pensionpayment` - Transaction is a payment of a pension allowance.\r\n* `Purchasesaleofgoods` - Transaction is a payment for the purchase and sale of goods.\r\n* `Refund` - Transaction is a repayment of funds.\r\n* `Rent` - Transaction is a payment of rent.\r\n* `Royalties` - Transaction is a payment of royalties.\r\n* `Purchasesaleofservices` - Transaction is a payment for the purchase and sale of services.\r\n* `Salarypayment` - Transaction is a payment of salaries.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, a payment made by a government to support individuals.\r\n* `Standingorder` - Transaction is a standing order. A standing order is an instruction given by a party having explicit authority on the account to debit, ie, either debit account owner or originating party, to a first agent to process cash transfers at specified intervals during an implicit or explicit period of time. It is given once, and is valid for an open or closed period of time.\r\n* `Subscription` - Transaction is a payment of a subscription.\r\n* `Treasurystatepayment` - Payment is linked to the Treasury State.\r\n* `Unemploymentdisabilitybenefit` - Transaction is a payment made to an unemployed/disabled person.\r\n* `Valueaddedtaxpayment` - Transaction is apayment of value added tax.\r\n* `Withholdingtax` - Transaction is a payment of withholding tax.\r\n* `Taxpayment` - Transaction is a payment of taxes.\r\n* `Miscellaneous` - Transaction is for an unspecified reason. Miscellaneous is to be used only when no explicit code is available.\r\n* `Overnightdeposit` - Transaction is linked to an overnight deposit.\r\n* `Marginallending` - Transaction is linked to the marginal lending facility.\r\n* `Other` - Specifies that a proprietary code must be indicated.\r\n* `Upfront` - Transaction is an initial payment made by one of the counterparties  either to bring a transaction to fair value or for any other reason that may be the cause of an off-market transaction.\r\n* `Unwind` - Transaction is the final settlement payment made when a transaction is unwound prior to its end date or a payment that may result due to the full termination of derivative transaction(s).\r\n* `Principalexchange` - Transaction is an exchange of notional values for cross-currency swaps.\r\n"
    priorityvaluetypes:
      enum:
        - Urgent
        - High
        - Normal
        - Low
      type: string
      description: ">\r\n* `Urgent` - Priority level is urgent (highest priority possible).\r\n* `High` - Priority level is high.\r\n* `Normal` - Priority level is normal.\r\n* `Low` - Priority level is low.\r\n"
    clearingchanneltypevalues:
      enum:
        - Realtimegrosssettlementsystem
        - Realtimenetsettlementsystem
        - Masspaymentnetsystem
        - Booktransfer
      type: string
      description: ">\r\n* `Realtimegrosssettlementsystem` - Clearing channel is a real-time gross settlement system.\r\n* `Realtimenetsettlementsystem` - Clearing channel is a real-time net settlement system.\r\n* `Masspaymentnetsystem` - Clearing channel is a mass payment net settlement system.\r\n* `Booktransfer` - Payment through internal book transfer.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    paymentinstructionstatus:
      type: object
      properties:
        PaymentInstructionStatus:
          $ref: '#/components/schemas/status'
        PaymentInstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
      description: ''
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: Currency for the amounts CurrencyCode|CurrencyCode (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022 BM ()
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Key amounts included in the transaction CurrencyAndAmount|CurrencyAndAmount (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022  ()
    paymentdatetimetypevalues:
      enum:
        - RequestedExecutionDate
        - AcceptanceDate
        - CreationDate
        - ValueDate
        - DueDate
        - ExpiryDate
      type: string
      description: "Key dates associated with the transaction (e.g. order, booking, execution, value date, interest bearing) ||\r\n|"
    paymentdatetime:
      type: object
      properties:
        PaymentDate:
          $ref: '#/components/schemas/datetime'
        PaymentDateType:
          $ref: '#/components/schemas/paymentdatetimetypevalues'
      description: ''
    paymentinstruction:
      type: object
      properties:
        PaymentInstructionDirectionType:
          $ref: '#/components/schemas/text'
        PaymentInstructionType:
          $ref: '#/components/schemas/paymenttypevalues'
        PaymentInstructionRequestedMechanism:
          $ref: '#/components/schemas/text'
        PaymentInstructionProcessingValidityTime:
          $ref: '#/components/schemas/datetimeperiod'
        PaymentInstructionPriority:
          $ref: '#/components/schemas/priorityvaluetypes'
        PaymentInstructionClearingChannel:
          $ref: '#/components/schemas/clearingchanneltypevalues'
        PaymentCreditDebitIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        PaymentInstructionStatus:
          $ref: '#/components/schemas/paymentinstructionstatus'
        PaymentInstructionAmount:
          $ref: '#/components/schemas/amount'
        PaymentInstructionDatetime:
          $ref: '#/components/schemas/paymentdatetime'
      description: Reference to the payment order leading to the execution request Payment|Payment (https://www.iso20022.org/standardsrepository/type/Payment)|Standard|ISO20022 BM ()
    productagreementtypevalues:
      enum:
        - CurrentAccountAgreement
        - SavingsAccountAgreement
        - BrokeredProductAgreement
        - ConsumerLoanAgreement
        - MortgageLoanAgreement
        - DirectDebitServiceAgreement
        - TermDepositAgreement
      type: string
      description: ">\r\n* `CurrentAccountAgreement` - \r\n* `SavingsAccountAgreement` - \r\n* `BrokeredProductAgreement` - \r\n* `ConsumerLoanAgreement` - \r\n* `MortgageLoanAgreement` - \r\n* `DirectDebitServiceAgreement` - \r\n* `TermDepositAgreement` - \r\n"
    productagreement:
      type: object
      properties:
        ProductAgreementType:
          $ref: '#/components/schemas/productagreementtypevalues'
      description: "Reference to the payee's account (the target for the funds) ||\r\n|"
    accountstatustypevalues:
      enum:
        - Enabled
        - Disabled
        - Deleted
        - Proforma
        - Pending
      type: string
      description: ">\r\n* `Enabled` - Account can be used for its intended purpose.\r\n* `Disabled` - Account cannot be used for its intended purpose, either temporarily or permanently.\r\n* `Deleted` - Account cannot be used any longer.\r\n* `Proforma` - Account is temporary and can be partially used for its intended purpose. The account will be fully available for use when the account servicer has received all relevant documents.\r\n* `Pending` - Account change is pending approval.\r\n"
    accountstatus:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/status'
        AccountStatusType:
          $ref: '#/components/schemas/accountstatustypevalues'
      description: "A characteristic of account which refers to the LifecycleStatus of account like opened, closed, blocked, etc.\n\nSpecifies the current state of an account. (ISO20022)"
    accountidentificationtypevalues:
      enum:
        - BBAN
        - IBAN
        - UPIC
        - AccountNumber
        - PAN
        - Paym
        - Wallet
        - SortCodeAndAccountNumber
      type: string
      description: ">\r\n* `BBAN` - Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer. (ISO20022)\n\n.\r\n* `IBAN` - International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions. (ISO20022)\n\nAn identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616. \"Banking and related financial services - International Bank Account Number (IBAN)\". (OBExternalAccountIdentification4Code)\r\n* `UPIC` - Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes. (ISO20022)\r\n* `AccountNumber` - String of characters (mainly numbers) used to identify an account.(ISO20022)\n\r\n* `PAN` - Primary Account Number - identifier scheme used to identify a card account. (OBExternalAccountIdentification4Code)\r\n* `Paym` - Paym Scheme to make payments via mobile (OBExternalAccountIdentification4Code)\r\n* `Wallet` - A primary and unique account identifier used to identify a wallet.\nAn ASPSP must document on their developer portal, the payment methods that supports this account identifier.(OBExternalAccountIdentification4Code)\r\n* `SortCodeAndAccountNumber` - Sort Code and Account Number - identifier scheme used in the UK by financial institutions to identify the account of a customer. The identifier is the concatenation of the 6 digit UK sort code and 8 digit account number. (UK Open Banking)\r\n"
    accountidentification:
      type: object
      properties:
        AccountIdentificationType:
          $ref: '#/components/schemas/accountidentificationtypevalues'
        AccountIdentification:
          $ref: '#/components/schemas/identifier'
      description: The identifier of account like Account Number.
    accountdatetimetypevalues:
      enum:
        - OpeningDate
        - ClosingDate
        - BlockingDate
        - MaturityDate
        - LiveDate
        - RenewalDate
      type: string
      description: ">\r\n* `OpeningDate` - Date on which the account and related basic services are effectively operational for the account owner. (ISO20022)\r\n* `ClosingDate` - Date on which the account and related services cease effectively to be operational for the account owner. (ISO20022)\r\n* `BlockingDate` - \r\n* `MaturityDate` - Maturity date for the account.\r\n* `LiveDate` - \r\n* `RenewalDate` - \r\n"
    accountdatetime:
      type: object
      properties:
        AccountDateType:
          $ref: '#/components/schemas/accountdatetimetypevalues'
        AccountDate:
          $ref: '#/components/schemas/datetime'
      description: 'A characteristic of account which refers to LifecycleDate of account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) '
    accounttypevalues:
      enum:
        - DebitAccount
        - CreditAccount
        - VostroAcount
        - NostroAccount
        - PaymentAccount
        - SettlementAccount
        - SavingAccount
        - CurrentAccount
        - CashAccount
        - LoanAccount
        - IndividualAccount
        - JointAccount
        - LiquidationAccount
        - ProvisionAccount
        - PartnershipAccount
        - InvestmentAccount
      type: string
      description: ">\r\n* `DebitAccount` - \r\n* `CreditAccount` - \r\n* `VostroAcount` - In correspondent banking, an account held by one bank on behalf of another bank (the customer bank); the customer bank regards this account as its nostro account. (ECB)\r\n* `NostroAccount` - In correspondent banking, an account held by a customer bank on the books of another bank acting as a service provider. The other bank regards this account as a loro account. (ECB)\r\n* `PaymentAccount` - \r\n* `SettlementAccount` - A specific purpose account used to post debit and credit entries as a result of the transaction. (ISO20022)\n\nAccount which is used for settlement. (ISO20022)\r\n* `SavingAccount` - \r\n* `CurrentAccount` - \r\n* `CashAccount` - \r\n* `LoanAccount` - \r\n* `IndividualAccount` - \r\n* `JointAccount` - \r\n* `LiquidationAccount` - \r\n* `ProvisionAccount` - \r\n* `PartnershipAccount` - \r\n* `InvestmentAccount` - \r\n"
    balancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - CurrentBalance
        - AvailableBalance
        - LedgerBalance
        - ReserveBalance
        - FreeBalance
        - PrincipalBalance
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - PreviouslyClosedBooked
        - Expected
      type: string
      description: ">\r\n* `OpeningBalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `ClosingBalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `CurrentBalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `AvailableBalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `LedgerBalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `ReserveBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n* `ClosingAvailable` - Closing balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `ClosingBooked` - Balance of the account at the end of the pre-agreed account reporting period. It is the sum of the opening booked balance at the beginning of the period and all entries booked to the account during the pre-agreed account reporting period.\r\n* `ForwardAvailable` - Forward available balance of money that is at the disposal of the account owner on the date specified.\r\n* `Information` - Balance for informational purposes.\r\n* `InterimAvailable` - Available balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `InterimBooked` - Balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `OpeningAvailable` - Opening balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `OpeningBooked` - Book balance of the account at the beginning of the account reporting period. It always equals the closing book balance from the previous report.\r\n* `PreviouslyClosedBooked` - Balance of the account at the previously closed account reporting period. The opening booked balance for the new period has to be equal to this balance.\nUsage: the previously booked closing balance should equal (inclusive date) the booked closing balance of the date it references and equal the actual booked opening balance of the current date.\r\n* `Expected` - Balance, composed of booked entries and pending items known at the time of calculation, which projects the end of day balance if everything is booked on the account and no other entry is posted.\r\n"
    balancecounterpartytypevalues:
      enum:
        - Bilateral
        - Multilateral
      type: string
      description: ">\r\n* `Bilateral` - Balance calculated regarding one member in the system. (ISO20022)\r\n* `Multilateral` - Balance calculated regarding all members in the system. (ISO20022)\r\n"
    balancesubtypevalues:
      enum:
        - Adjustment
        - Basecurrency
        - Blocked
        - Blockedfunds
        - Daylightoverdraft
        - Eligibleassets
        - Firmcollateralization
        - Amountsthathavebeenusedtoserveasfirmcollateral
        - Securitiesforecast
        - Netfunding
        - Intermediate
        - Localcurrency
        - Limitrelated
        - Reservedliquidity
        - Securitiespending
        - Payinpayout
        - Progressiveaverage
        - Reserve
        - Selfcollateralization
        - Amountsthathavebeenusedtoserveasselfcollateral
        - Threshold
      type: string
      description: ">\r\n* `Adjustment` - Balance to be held in the settlement account in order to comply with the average reserve due, in the event that the bank's balance is equal to the reserve due during the remaining days of the maintenance period.\r\n* `Basecurrency` - Balance representing the amount in the domestic or base accounting currency.\r\n* `Blocked` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes. In some countries, a blocked balance is known as a 'reserve' balance.\r\n* `Blockedfunds` - Balance representing funds that cannot be touched by the account owner.\r\n* `Daylightoverdraft` - Balance representing the intra day overdraft granted by the Central Bank to financial institutions participating in a RTGS system. This balance may vary over time and shall be offset at the end of the day.\r\n* `Eligibleassets` - Balance representing the potential loan a Central Bank would make in cash if the collateral is pledged, eg, securities available and eligible as collateral with the Central Bank.\r\n* `Firmcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral.\r\n* `Amountsthathavebeenusedtoserveasfirmcollateral` - Balance representing the cash equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral and have been used as collateral.\r\n* `Securitiesforecast` - Balance representing the total of all balance types representing the forecast of transactions to settle, blocked items, custody transactions and corporate actions cash disbursements.\r\n* `Netfunding` - Balance representing the net amount to be funded resulting from the difference between the total of all transactions with a cash impact and the existing cash coverage.\r\n* `Intermediate` - Balance representing an intermediate amount such as the opening or closing balance incrementally carried forward from one page to the next in a multi-page statement or report.\r\n* `Localcurrency` - Balance representing the amount in the local market currency for which the asset is held.\r\n* `Limitrelated` - Balance of a specific limit value, eg, a bilateral balance is calculated in relation to a given bilateral limit.\r\n* `Reservedliquidity` - Balance representing the amount that a financial institution has set aside for a specific reason and which is therefore not available. In the context of CSDs, reservation of liquidity made to meet settlement obligations.\r\n* `Securitiespending` - Balance of securities pending delivery, such as orders to sell securities have been executed but settlement of the open transactions has not been confirmed.\r\n* `Payinpayout` - Balance representing the fictive amount of automated direct debits or payment based on standing arrangements between the CSD and the user. Usage: Pay-Ins and Pay-Outs can be different based on individual payment instructions or available funds.\r\n* `Progressiveaverage` - Average of the daily balances on the account used to fulfil the reserve requirements calculated from the beginning of the maintenance period.\r\n* `Reserve` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes.\r\n* `Selfcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of the net incoming balance of securities qualified to serve as collateral for which settlement instructions are held at.\r\n* `Amountsthathavebeenusedtoserveasselfcollateral` - Balance representing the cash-equivalent resulting from evaluation of incoming securities, qualified to serve as collateral and actually used as collateral, which have been settled during the settlement process.\r\n* `Threshold` - Balance representing the amount that will be destined for investment. Difference between available balance and threshold for investment limit.\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceValueDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        BalanceCounterpartyType:
          $ref: '#/components/schemas/balancecounterpartytypevalues'
        BalanceCalculationDate:
          $ref: '#/components/schemas/datetime'
        BalanceSubType:
          $ref: '#/components/schemas/balancesubtypevalues'
      description: "The state of the obligations managed on the account, the result of all entries on the account.\n\nNumerical representation of the net increases and decreases in an account at a specific point in time. (ISO20022)\n\nBanking: Amount available in an account for withdrawal or use.\nRead more: http://www.businessdictionary.com/definition/balance.html\n\nBookkeeping: Difference between the debit and credit sides of an account.\nRead more: http://www.businessdictionary.com/definition/balance.html"
    currencytypevalues:
      enum:
        - BaseCurrency
        - ReportingCurrency
        - SecondaryCurrency
        - TransferCurrency
      type: string
      description: ">\r\n* `BaseCurrency` - Base currency of the account. (ISO20022)\n\r\n* `ReportingCurrency` - Currency used to calculate and report the balance and related entries of an account. (ISO20022)\n\r\n* `SecondaryCurrency` - \r\n* `TransferCurrency` - Currency of the amount to be transferred which may be different from the currency of the debtor's account. (ISO20022)\r\n"
    accountcurrency:
      type: object
      properties:
        AccountCurrencyType:
          $ref: '#/components/schemas/currencytypevalues'
        AccountCurrency:
          $ref: '#/components/schemas/currencycode'
      description: ''
    account:
      type: object
      properties:
        AccountStatus:
          $ref: '#/components/schemas/accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/accountidentification'
        AccountDate:
          $ref: '#/components/schemas/accountdatetime'
        AccountType:
          $ref: '#/components/schemas/accounttypevalues'
        AccountPurpose:
          $ref: '#/components/schemas/text'
        AccountBalance:
          $ref: '#/components/schemas/accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/text'
        AccountName:
          $ref: '#/components/schemas/name'
      description: Reference to any external accounts used in processing Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()
    paymentmechanismtypevalues:
      enum:
        - ACH
        - SWIFT
      type: string
      description: "Requested and actual payment mechanism used ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: ''
    paymentlocalinstumenttypevalues:
      enum:
        - Directdebitconfirmedelectronicmandate
        - Directdebitpapermandatewithpaperauthorization
        - Directdebitunconfirmedelectronicmandate
        - Batchpaymentsaruba
        - Instantpaymentsaruba
        - Credittransfers
        - Nonpreauthoriseddirectdebitat
        - Preauthoriseddirectdebitat
        - Cashperpost
        - Returnedcredittransfers
        - Truncatedcredittransfers
        - Directdebits
        - Returneddirectdebits
        - Truncatedchecks
        - Revokedcredittransfers
        - Revokeddirectdebits
        - Revokedreturnedcredittransfers
        - Revokedreturneddirectdebits
        - Revokedtruncatedchecks
        - Revokedtruncatedcredittransfers
        - Cardclearing
        - Nonpreauthoriseddirectdebitde
        - Preauthoriseddirectdebitde
        - Imagebasedchequecollection
        - Paperlesschequecollection
        - Businesstobusinessdirectdebit
        - Businesstocustomerdirectdebit
        - Ancillarysystemtransferinitiation
        - Backuppayment
        - Mandatedpayment
        - Settlementbanktransferinitiation
        - Preauthoriseddirectdebitaccéléréacceleratedclearing2dayordinairenormalclearing4day
        - Preauthoriseddirectdebitordinairenormalclearing4day
        - Preauthoriseddirectdebitvérifiéverifiedclearing
        - Recoveredbillofexchangeorpromissorynote
        - Nonpreauthoriseddirectdebitriba
        - Preauthorisedrevocabledirectdebit
        - Preauthorisedrevocableurgentdirectdebit
        - Paymentsviainternetownedbycurrence
        - Instantcredittransfernottimecritical
        - Instantcredittransfertimecritical
        - Paymentsviainternetownedbycurrenceusinginstantcredittransfer
        - Paymentsviainternetownedbycurrenceusinginstantcredittransfernottimecritical
        - Paymentsviainternetownedbycurrenceusinginstantcredittransfertimecritical
        - Dutchdomesticbulkpayment
        - Dutchurgentpayment
        - Paymentviaacceptgiroownedbycurrence
        - Paymentsviastandaarddigitalenota
        - Incidentmanagementcorrection
        - Directdebitinitiatedbythegovernmentwithspecialconditions
        - Masspaymentbeneficiary
        - Masspaymentours
        - Masspaymentshared
        - Standingorder
        - Oneoffauthorisation
        - Oneoffauthorisationcharities
        - Oneoffauthorisationconstructionindustry
        - Oneoffauthorisationtuitionfees
        - Standingauthorisationcompanies
        - Standingauthorisationcompanieswithoutdebtorrevocationright
        - Standingauthorisationgeneral
        - Standingauthorisationlotteries
        - Convertedbankpayment
        - Businesspayment
        - Crossbordercustomercredittransfer
        - Overnight
        - Paymentwitheri
        - Sameday
        - Corenorefund
        - Directdebitfixedamount
        - Sepadirectdebitcore
        - Sepab2bdirectdebitami
        - Sepabusinesstobusinessdirectdebit
        - Sepacored1directdebitami
        - Sepacoredirectdebitami
        - Sepadirectdebit1daysettlement
        - Sepafadirectdebitami
        - Instantcredittransfer
        - Authenticateddirectdebit
        - Unauthenticateddirectdebit
        - Cashconcentrationintragroup
        - Banktransfer
        - Checksamedaysettlementwire
        - Customertransfer
        - Customertransferplus
        - Deposittosendersaccount
        - Fedfundsreturned
        - Fedfundssold
        - Nonvalueservicemessage
        - Drawdownresponsevaluetohonoradrawdownrequest
        - Banktobankdrawdownrequestorresponsenonvalue
        - Customerorcorporatedrawdownrequestorresponsenonvalue
        - Internationalach
        - Cashconcentrationordisbursementcorporatecounterparty
        - Corporatetradeexchange
        - Prearrangedpaymentordepositconsumercounterparty
        - Customerinitiatedentry
        - Representedcheckentry
        - Accountsreceivablecheck
        - Internetinitiatedentry
        - Pointofpurchase
        - Pointofsale
        - Telephoneinitiatedentry
      type: string
      description: ">\r\n* `Directdebitconfirmedelectronicmandate` - Transaction is related to a direct debit instruction authorized under a confirmed electronic mandate.\r\n* `Directdebitpapermandatewithpaperauthorization` - Transaction is related to a direct debit instruction authorized under a paper based mandate, supported by paper authorization signed by the debtor.\r\n* `Directdebitunconfirmedelectronicmandate` - Transaction is related to a direct debit instruction authorized under an unconfirmed electronic mandate requiring confirmation by the debtor.\r\n* `Batchpaymentsaruba` - Transaction is related to an Instant Credit Transfer under the rules of the Centrale Bank van Aruba, based on the EPC SCT Inst scheme, with a specific batch time-out delay.\r\n* `Instantpaymentsaruba` - Transaction is related to an Instant Credit Transfer under the rules of the Centrale Bank van Aruba, based on the EPC SCT Inst scheme.\r\n* `Credittransfers` - Transaction is related to credit transfers\r\n* `Nonpreauthoriseddirectdebitat` - Transaction is related to a direct debit that is not pre authorised (Einzugsermächtigung).\r\n* `Preauthoriseddirectdebitat` - Transaction is related to a direct debit that is pre authorised (Abbuchungsauftrag).\r\n* `Cashperpost` - Transaction is related to cash per post.\nTransaction to ultimate recipient having no bank account. Primary beneficiary is a postal service provider. Funds are paid out by cash. Additional necessary information for address and delivery options need to be attached.\r\n* `Returnedcredittransfers` - Transaction is related to returned credit transfers.\r\n* `Truncatedcredittransfers` - Transaction is related to truncated credit transfers.\nConversion of physical instrument to electonric form for transmission to the paying bank and where the original paper document does not continue in the clearing process..The original instrument rules are retained throughout the life of the instrument.\nTransaction triggered by specific marked and populated paper slip.\nReconciliation reference is secured by check digits supporting secure optical recognition. All other remittance information is truncated prior transmission.\r\n* `Directdebits` - Transaction is related to direct debits.\r\n* `Returneddirectdebits` - Transaction is related to returned direct debits.\r\n* `Truncatedchecks` - Transaction is related to truncated checks.\nConversion of physical instrument to electonric form for transmission to the paying bank and where the original paper document does not continue in the clearing process..The original instrument rules are retained throughout the life of the instrument.\r\n* `Revokedcredittransfers` - Transaction is related to revoked credit transfers\r\n* `Revokeddirectdebits` - Transaction is related to revoked direct debits.\r\n* `Revokedreturnedcredittransfers` - Transaction is related to revoked returned credit transfers\r\n* `Revokedreturneddirectdebits` - Transaction is related to revoked returned direct debits.\r\n* `Revokedtruncatedchecks` - Transaction is related to revoked truncated checks.\r\n* `Revokedtruncatedcredittransfers` - Transaction is related to revoked truncated credit transfers.\r\n* `Cardclearing` - Transaction is related to card clearing.\r\n* `Nonpreauthoriseddirectdebitde` - Transaction is related to a direct debit that is not pre authorised (Einzugsermächtigung).\r\n* `Preauthoriseddirectdebitde` - Transaction is related to a direct debit that is pre authorised (Abbuchungsauftrag).\r\n* `Imagebasedchequecollection` - Transaction is related to the German Image-based Cheque Collection Procedure “Imagegestützter Scheckeinzug - ISE”\r\n* `Paperlesschequecollection` - Transaction is related to the German Paperless Cheque Collection procedure “Belegloser Scheckeinzug - BSE”\r\n* `Businesstobusinessdirectdebit` - Transaction is related to a business-to-business direct debit (CSB58).\r\n* `Businesstocustomerdirectdebit` - Transaction is related to a business-to-customer direct debit (CSB19).\r\n* `Ancillarysystemtransferinitiation` - Indicates that the payment is sent by an authorized third party on behalf of the participant.\r\n* `Backuppayment` - Indicates that the payment was initiated manually using a GUI (Graphical User Interface).\r\n* `Mandatedpayment` - Indicates that the payment is sent by responsible Central Bank on behalf of the participant in case of contingency.\r\n* `Settlementbanktransferinitiation` - Indicates that the payment is submitted to move  liquidity to the technical account - dedicated to real-time settlement in an external system (for example ancillary system) . The payment is processed in a separate payment queue besides the normal processing.\r\n* `Preauthoriseddirectdebitaccéléréacceleratedclearing2dayordinairenormalclearing4day` - Transaction is related to an urgent direct debit that is pre authorised (Avis de Prélèvement accéléré).\r\n* `Preauthoriseddirectdebitordinairenormalclearing4day` - Transaction is related to a direct debit that is pre authorised (Avis de Prélèvement).\r\n* `Preauthoriseddirectdebitvérifiéverifiedclearing` - Transaction is related to an urgent direct debit that is pre authorised (Avis de Prélèvement vérifié).\r\n* `Recoveredbillofexchangeorpromissorynote` - LCR - Lettre de Change Relevé (Recovered Bill of Exchange) and BOR - Billet à Orde Relevé (Promissory Note)\r\n* `Nonpreauthoriseddirectdebitriba` - Transaction is related to a non-pre authorised collection (RIBA).\r\n* `Preauthorisedrevocabledirectdebit` - Transaction is related to a direct debit that is pre authorised and revocable (RID Ordinario).\r\n* `Preauthorisedrevocableurgentdirectdebit` - Transaction is related to an urgent direct debit that is pre authorised and revocable (RID Veloce).\r\n* `Paymentsviainternetownedbycurrence` - Transaction is related to payments via internet owned by Currence.\r\n* `Instantcredittransfernottimecritical` - The transaction is related to a regular  Credit Transfer and will be instantly processed under the Dutch AOS on top of the EPC SCT scheme.\r\n* `Instantcredittransfertimecritical` - The transaction is related to an Instant Credit Transfer under the rules of the Dutch AOS on top of the EPC SCT Inst scheme.\r\n* `Paymentsviainternetownedbycurrenceusinginstantcredittransfer` - Transaction is related to payments via internet owned by Currence which uses an Instant Credit Transfer.\r\n* `Paymentsviainternetownedbycurrenceusinginstantcredittransfernottimecritical` - Transaction is related to payments via internet owned by Currence which uses a regular  Credit Transfer and will be instantly processed under the Dutch AOS on top of the EPC SCT scheme.\r\n* `Paymentsviainternetownedbycurrenceusinginstantcredittransfertimecritical` - Transaction is related to payments via internet owned by Currence which uses an Instant Credit Transfer under the rules of the Dutch AOS on top of the EPC SCT Inst scheme.\r\n* `Dutchdomesticbulkpayment` - Transaction is related to a Domestic payment initiated by PAIN.001\r\n* `Dutchurgentpayment` - Transaction is related to a Domestic payment initiated by PAIN.001\r\n* `Paymentviaacceptgiroownedbycurrence` - Transaction is related to payments via Acceptgiro owned by Currence.\r\n* `Paymentsviastandaarddigitalenota` - Transaction is related to payments via a ‘Standaard Digitale Nota’ InvoiceAcceptgiro payment.\r\n* `Incidentmanagementcorrection` - Transaction is related to an Incident Management Correction procedure based on the DD infrastructure.\r\n* `Directdebitinitiatedbythegovernmentwithspecialconditions` - Transaction is related to direct debit scheme owned by the NVB.\r\n* `Masspaymentbeneficiary` - Transaction is related to mass payment beneficiary.\r\n* `Masspaymentours` - Transaction is related to mass payment ours.\r\n* `Masspaymentshared` - Transaction is related to mass payment shared.\r\n* `Standingorder` - Transaction is related to standing order.\r\n* `Oneoffauthorisation` - Transaction is related to one-off authorisation.\r\n* `Oneoffauthorisationcharities` - Transaction is related to one-off authorisation charities.\r\n* `Oneoffauthorisationconstructionindustry` - Transaction is related to one-off authorisation construction industry.\r\n* `Oneoffauthorisationtuitionfees` - Transaction is related to one-off authorisation tuition fees.\r\n* `Standingauthorisationcompanies` - Transaction is related to standing authorisation companies.\r\n* `Standingauthorisationcompanieswithoutdebtorrevocationright` - Transaction is related to standing authorisation companies without debtor revocation right.\r\n* `Standingauthorisationgeneral` - Transaction is related to standing authorisation general.\r\n* `Standingauthorisationlotteries` - Transaction is related to standing authorisation lotteries.\r\n* `Convertedbankpayment` - Transaction is related to converted (bank) payment.\nConversion of physical instrument to electonric form for transmission to the paying bank and where the original paper document does not continue in the clearing process.The instrument rules change upon conversion.\r\n* `Businesspayment` - Transaction is related to business payment\r\n* `Crossbordercustomercredittransfer` - Transaction is related to cross border customer credit transfer.\r\n* `Overnight` - Transaction is related to overnight clearing.\r\n* `Paymentwitheri` - Credit transfer contains Extended Remittance Information (ERI) as defined within the applicable scheme.\r\n* `Sameday` - Transaction is related to same day clearing.\r\n* `Corenorefund` - SEPA Core Direct Debit with ‘no refund’ option\r\n* `Directdebitfixedamount` - SEPA Fixed Amount Direct Debit\r\n* `Sepadirectdebitcore` - Transaction is related to SEPA direct debit -core.\r\n* `Sepab2bdirectdebitami` - SEPA B2B Direct Debit AMI based on a paper mandate\r\n* `Sepabusinesstobusinessdirectdebit` - Transaction is related to SEPA business to business direct debit.\r\n* `Sepacored1directdebitami` - Optional shorter time cycle (D-1) for SEPA Core Direct Debit AMI based on a paper mandate\r\n* `Sepacoredirectdebitami` - SEPA Core Direct Debit AMI based on a paper mandate\r\n* `Sepadirectdebit1daysettlement` - Optional shorter time cycle (D-1) for SEPA Core Direct Debit\r\n* `Sepafadirectdebitami` - SEPA Fixed Amount Direct Debit AMI based on a paper mandate\r\n* `Instantcredittransfer` - Transaction is related to an Instant Credit Transfer.\nUse case example: SEPA Instant Credit Transfer (SCT Inst)\r\n* `Authenticateddirectdebit` - Transaction is authenticated direct debit for domestic use.\r\n* `Unauthenticateddirectdebit` - Transaction is unauthenticated direct debit for domestic use.\r\n* `Cashconcentrationintragroup` - Transaction is related to an intra-group bank initiated cash management payment\r\n* `Banktransfer` - Transaction is related to a bank transfer.\r\n* `Checksamedaysettlementwire` - Transaction is related to check same day settlement wire.\r\n* `Customertransfer` - Transaction is related to customer transfer.\r\n* `Customertransferplus` - Transaction is related to a customer transfer, which may include information related to a cover payment or extended remittance information.\r\n* `Deposittosendersaccount` - Transaction is related to deposit to sender's account.\r\n* `Fedfundsreturned` - Transaction is related to Fed funds returned.\r\n* `Fedfundssold` - Transaction is related to Fed funds sold.\r\n* `Nonvalueservicemessage` - Transaction is related to non-value service message.\r\n* `Drawdownresponsevaluetohonoradrawdownrequest` - Transaction is related to drawdown response (value) to honor a drawdown request.\r\n* `Banktobankdrawdownrequestorresponsenonvalue` - Transaction is related to bank-to-bank drawdown request or response (non-value)\r\n* `Customerorcorporatedrawdownrequestorresponsenonvalue` - Transaction is related to customer or corporate drawdown request or response (non-value).\r\n* `Internationalach` - Transaction is related to international ACH.\r\n* `Cashconcentrationordisbursementcorporatecounterparty` - Transaction is related to cash concentration or disbursement corporate counterparty.\r\n* `Corporatetradeexchange` - Transaction is related to corporate trade exchange.\r\n* `Prearrangedpaymentordepositconsumercounterparty` - Transaction is related to prearranged payment or deposit consumer counterparty.\r\n* `Customerinitiatedentry` - A credit entry initiated by or on behalf of the holder of a consumer account\r\n* `Representedcheckentry` - Transaction is related to re-presented check entry.\r\n* `Accountsreceivablecheck` - Transaction is related to accounts receivable check.\r\n* `Internetinitiatedentry` - Transaction is related to internet initiated entry.\r\n* `Pointofpurchase` - Transaction is related to point-of-purchase.\r\n* `Pointofsale` - Transaction is related to point-of-sale.\r\n* `Telephoneinitiatedentry` - Transaction is related to telephone initiated entry.\r\n"
    paymentcategorypurposetypevalues:
      enum:
        - Bonuspayment
        - Cashmanagementtransfer
        - Cardbulkclearing
        - Creditcardpayment
        - Tradesettlementpayment
        - Debitcardpayment
        - Dividend
        - Deliveragainstpayment
        - Epayment
        - Feecollection
        - Governmentpayment
        - Hedging
        - Irrevocablecreditcardpayment
        - Irrevocabledebitcardpayment
        - Intracompanypayment
        - Interest
        - Loan
        - Commercial
        - Consumer
        - Otherpayment
        - Pensionpayment
        - Represented
        - Reimbursementreceivedcredittransfer
        - Receiveagainstpayment
        - Salarypayment
        - Securities
        - Socialsecuritybenefit
        - Supplierpayment
        - Taxpayment
        - Trade
        - Treasurypayment
        - Valueaddedtaxpayment
        - Withholding
      type: string
      description: ">\r\n* `Bonuspayment` - Transaction is the payment of a bonus.\r\n* `Cashmanagementtransfer` - Transaction is a general cash management instruction.\r\n* `Cardbulkclearing` - A Service that is settling money for a bulk of card transactions, while referring to a specific transaction file or other information like terminal ID, card acceptor ID or other transaction details.\r\n* `Creditcardpayment` - Transaction is related to a payment of credit card.\r\n* `Tradesettlementpayment` - Transaction is related to settlement of a trade, eg a foreign exchange deal or a securities transaction.\r\n* `Debitcardpayment` - Transaction is related to a payment of debit card.\r\n* `Dividend` - Transaction is the payment of dividends.\r\n* `Deliveragainstpayment` - Code used to pre-advise the account servicer of a forthcoming deliver against payment instruction.\r\n* `Epayment` - Transaction is related to ePayment.\r\n* `Feecollection` - A Service that is settling card transaction related fees between two parties.\r\n* `Governmentpayment` - Transaction is a payment to or from a government department.\r\n* `Hedging` - Transaction is related to the payment of a hedging operation.\r\n* `Irrevocablecreditcardpayment` - Transaction is reimbursement of credit card payment.\r\n* `Irrevocabledebitcardpayment` - Transaction is reimbursement of debit card payment.\r\n* `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.\r\n* `Interest` - Transaction is the payment of interest.\r\n* `Loan` - Transaction is related to the transfer of a loan to a borrower.\r\n* `Commercial` - Mobile P2B Payment\r\n* `Consumer` - Mobile P2P Payment\r\n* `Otherpayment` - Other payment purpose.\r\n* `Pensionpayment` - Transaction is the payment of pension.\r\n* `Represented` - Collection used to re-present previously reversed or returned direct debit transactions.\r\n* `Reimbursementreceivedcredittransfer` - Transaction is related to a reimbursement for commercial reasons of a correctly received credit transfer.\r\n* `Receiveagainstpayment` - Code used to pre-advise the account servicer of a forthcoming receive against payment instruction.\r\n* `Salarypayment` - Transaction is the payment of salaries.\r\n* `Securities` - Transaction is the payment of securities.\r\n* `Socialsecuritybenefit` - Transaction is a social security benefit, ie payment made by a government to support individuals.\r\n* `Supplierpayment` - Transaction is related to a payment to a supplier.\r\n* `Taxpayment` - Transaction is the payment of taxes.\r\n* `Trade` - Transaction is related to the payment of a trade finance transaction.\r\n* `Treasurypayment` - Transaction is related to treasury operations.  E.g. financial contract settlement.\r\n* `Valueaddedtaxpayment` - Transaction is the payment of value added tax.\r\n* `Withholding` - Transaction is the payment of withholding tax.\r\n"
    paymentsequencetypevalues:
      enum:
        - First
        - Recurring
        - Final
        - Oneoff
        - Represented
      type: string
      description: ">\r\n* `First` - First collection of a series of direct debit instructions.\r\n* `Recurring` - Direct debit instruction where the debtor's authorisation is used for regular direct debit transactions initiated by the creditor.\r\n* `Final` - Final collection of a series of direct debit instructions.\r\n* `Oneoff` - Direct debit instruction where the debtor's authorisation is used to initiate one single direct debit transaction.\r\n* `Represented` - Collection used to re-present previously reversed or returned direct debit transactions.\r\n"
    paymentprocessingarrangementmodality:
      type: object
      properties:
        PaymentProcessingPriority:
          $ref: '#/components/schemas/priorityvaluetypes'
        PaymentProcessingArrangement:
          $ref: '#/components/schemas/arrangement'
        PaymentProcessingClearingChannel:
          $ref: '#/components/schemas/clearingchanneltypevalues'
        PaymentLocalInstument:
          $ref: '#/components/schemas/paymentlocalinstumenttypevalues'
        PaymentCategoryPurpose:
          $ref: '#/components/schemas/paymentcategorypurposetypevalues'
        PaymentSequence:
          $ref: '#/components/schemas/paymentsequencetypevalues'
      description: 'Specifies how a payment must be processed, for instance through which specific clearing channel. (ISO20022) PaymentProcessing|PaymentProcessing (https://www.iso20022.org/standardsrepository/type/PaymentProcessing)|Standard|ISO20022 BM ()'
    clearingsystemidentificationtypevalues:
      enum:
        - Austrianbankleitzahl
        - Australianbankstatebranchcodebsb
        - Canadianpaymentsassociationpaymentroutingnumber
        - Swissfinancialinstitutionidentificationshort
        - Swissfinancialinstitutionidentificationlong
        - Cnapsidentifier
        - Germanbankleitzahl
        - Spanishdomesticinterbankingcode
        - Ukdomesticsortcode
        - Helenicbankidentificationcode
        - Hongkongbankcode
        - Irishnationalclearingcode
        - Indianfinancialsystemcode
        - Italiandomesticidentificationcode
        - Japanzenginclearingcode
        - Newzealandnationalclearingcode
        - Polishnationalclearingcode
        - Portuguesenationalclearingcode
        - Russiancentralbankidentificationcode
        - Swedenbankgiroclearingcode
        - Ibgsortcode
        - Thaicentralbankidentificationcode
        - Financialinstitutioncode
        - Unitedstatesroutingnumberfedwirenacha
        - Chipsparticipantidentifier
        - Southafricannationalclearingcode
      type: string
      description: ">\r\n* `Austrianbankleitzahl` - Bank Branch code used in Austria\r\n* `Australianbankstatebranchcodebsb` - Bank Branch code used in Australia\r\n* `Canadianpaymentsassociationpaymentroutingnumber` - Bank Branch code used in Canada\r\n* `Swissfinancialinstitutionidentificationshort` - Financial Institution Identification (IID) used in Switzerland, without check digit\r\n* `Swissfinancialinstitutionidentificationlong` - Financial Institution Identification (IID) used in Switzerland, including check digit\r\n* `Cnapsidentifier` - Bank Branch code used in China\r\n* `Germanbankleitzahl` - Bank Branch code used in Germany\r\n* `Spanishdomesticinterbankingcode` - Bank Branch code used in Spain\r\n* `Ukdomesticsortcode` - Bank Branch code used in the UK\r\n* `Helenicbankidentificationcode` - Bank Branch code used in Greece\r\n* `Hongkongbankcode` - Bank Branch code used in Hong Kong\r\n* `Irishnationalclearingcode` - Bank Branch code used in Ireland\r\n* `Indianfinancialsystemcode` - Bank Branch code used in India\r\n* `Italiandomesticidentificationcode` - Bank Branch code used in Italy\r\n* `Japanzenginclearingcode` - Bank Branch code used in Japan\r\n* `Newzealandnationalclearingcode` - Bank Branch code used in New Zealand\r\n* `Polishnationalclearingcode` - Bank Branch code used in Poland\r\n* `Portuguesenationalclearingcode` - Bank Branch code used in Portugal\r\n* `Russiancentralbankidentificationcode` - Bank Branch code used in Russia\r\n* `Swedenbankgiroclearingcode` - Bank Branch code used in Sweden\r\n* `Ibgsortcode` - Bank Branch code used in Singapore\r\n* `Thaicentralbankidentificationcode` - Bank Identification code used in Thailand\r\n* `Financialinstitutioncode` - Bank Branch code used in Taiwan\r\n* `Unitedstatesroutingnumberfedwirenacha` - Routing Transit number assigned by the ABA for US financial institutons\r\n* `Chipsparticipantidentifier` - Bank identifier used by CHIPs in the US\r\n* `Southafricannationalclearingcode` - Bank Branch code used in South Africa\r\n"
    settlementmethodtypevalues:
      enum:
        - Instructedagent
        - Instructingagent
        - Covermethod
        - Clearingsystem
      type: string
      description: ">\r\n* `Instructedagent` - Settlement is done by the agent instructed to execute a payment instruction.\r\n* `Instructingagent` - Settlement is done by the agent instructing and forwarding the payment to the next party in the payment chain.\r\n* `Covermethod` - Settlement is done through a cover payment.\r\n* `Clearingsystem` - Settlement is done through a payment clearing system.\r\n"
    settlementinstruction:
      type: object
      properties:
        SettlementInstructionIdentifier:
          $ref: '#/components/schemas/identifier'
        InterbankSettlementAmount:
          $ref: '#/components/schemas/amount'
        InterbankSettlementCurrency:
          $ref: '#/components/schemas/currencycode'
        CreditDateTime:
          $ref: '#/components/schemas/datetime'
        DebitDateTime:
          $ref: '#/components/schemas/datetime'
        ClearingSystemIdentification:
          $ref: '#/components/schemas/clearingsystemidentificationtypevalues'
        SettlementTimeRequest:
          $ref: '#/components/schemas/text'
        SettlementPriority:
          $ref: '#/components/schemas/text'
        SettlementMethod:
          $ref: '#/components/schemas/settlementmethodtypevalues'
        InterbankSettlementDate:
          $ref: '#/components/schemas/datetime'
      description: Requested settlement instructions CashSettlement|CashSettlement (https://www.iso20022.org/standardsrepository/type/CashSettlement)|Standard|ISO20022 BM ()
    PaymentExecutionProcedure:
      type: object
      properties:
        ACHAccessServiceSessionReference:
          $ref: '#/components/schemas/achsession'
        ACHAccessSchedule:
          $ref: '#/components/schemas/schedule'
        CorrespondentServiceSessionReference:
          $ref: '#/components/schemas/correspondentservicesession'
        CorrespondentServiceAccessSchedule:
          $ref: '#/components/schemas/schedule'
        PaymentTransactionInitiatorReference:
          $ref: '#/components/schemas/involvedparty'
        PaymentOrderReference:
          $ref: '#/components/schemas/paymentinstruction'
        PayerReference:
          $ref: '#/components/schemas/involvedparty'
        PayerBankReference:
          $ref: '#/components/schemas/involvedparty'
        PayerProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        PayeeReference:
          $ref: '#/components/schemas/involvedparty'
        PayeeBankReference:
          $ref: '#/components/schemas/involvedparty'
        PayeeProductInstanceReference:
          $ref: '#/components/schemas/productagreement'
        Amount:
          $ref: '#/components/schemas/amount'
        Currency:
          $ref: '#/components/schemas/currencycode'
        DateType:
          $ref: '#/components/schemas/paymentdatetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
        WashAccountReference:
          $ref: '#/components/schemas/account'
        IntermediaryAccountReference:
          $ref: '#/components/schemas/account'
        PaymentMechanismType:
          $ref: '#/components/schemas/paymentmechanismtypevalues'
        PaymentProcessingConfiguration:
          $ref: '#/components/schemas/paymentprocessingarrangementmodality'
        SettlementInstruction:
          $ref: '#/components/schemas/settlementinstruction'
      description: 'Complete work tasks following a defined procedure in support of general office activities and product and service delivery within Payment Execution. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    PaymentExecutionProcedure:
      description: PaymentExecutionProcedure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentExecutionProcedure'
    PaymentMechanism:
      description: PaymentMechanism
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentMechanism'
    PaymentExecution:
      description: PaymentExecution
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentExecution'
  parameters:
    paymentexecutionid:
      name: paymentexecutionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    paymentmechanismid:
      name: paymentmechanismid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    PaymentExecutionProcedure:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentExecutionProcedure'
      required: true
    PaymentExecution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentExecution'
      required: true