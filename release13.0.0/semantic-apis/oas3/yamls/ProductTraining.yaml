openapi: 3.0.1
info:
  title: Product Training
  description: 'Develop and provide product specific training across the workforce. This includes all media and training mechanisms (on-line, self taught, classroom etc.)'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductTraining/13.0.0
paths:
  '/ProductTraining/{producttrainingid}/Control':
    put:
      tags:
        - CR - ProductTrainingProcedure
      summary: CoCR Control the processing of Product Training Procedure
      description: CoCR Control the processing of Product Training Procedure
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/ControlProductTrainingProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ControlProductTrainingProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/Exchange':
    put:
      tags:
        - CR - ProductTrainingProcedure
      summary: 'EcCR Accept, verify, etc. aspects of Product Training Procedure processing'
      description: 'EcCR Accept, verify, etc. aspects of Product Training Procedure processing'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/ExchangeProductTrainingProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExchangeProductTrainingProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/Execute':
    put:
      tags:
        - CR - ProductTrainingProcedure
      summary: ExCR Execute an available automated action for Product Training Procedure
      description: ExCR Execute an available automated action for Product Training Procedure
      operationId: Execute
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/ExecuteProductTrainingProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteProductTrainingProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ProductTraining/Initiate:
    post:
      tags:
        - CR - ProductTrainingProcedure
      summary: InCR Instantiate a new Product Training Procedure
      description: InCR Instantiate a new Product Training Procedure
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/InitiateProductTrainingProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateProductTrainingProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/Retrieve':
    get:
      tags:
        - CR - ProductTrainingProcedure
      summary: ReCR Retrieve details about any aspect of Product Training Procedure
      description: ReCR Retrieve details about any aspect of Product Training Procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveProductTrainingProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/Request':
    put:
      tags:
        - CR - ProductTrainingProcedure
      summary: RqCR Request manual intervention or a decision with respect to Product Training Procedure
      description: RqCR Request manual intervention or a decision with respect to Product Training Procedure
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/RequestProductTrainingProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/RequestProductTrainingProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/Update':
    put:
      tags:
        - CR - ProductTrainingProcedure
      summary: UpCR Update details relating to Product Training Procedure
      description: UpCR Update details relating to Product Training Procedure
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductTrainingProcedureRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProductTrainingProcedureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ContentDevelopment/{contentdevelopmentid}/Exchange':
    put:
      tags:
        - BQ - ContentDevelopment
      summary: 'EcBQ Accept, verify, etc. aspects of Content Development processing'
      description: 'EcBQ Accept, verify, etc. aspects of Content Development processing'
      operationId: ExchangeContentDevelopment
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/contentdevelopmentid'
      requestBody:
        $ref: '#/components/requestBodies/ContentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ContentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceDelivery/{servicedeliveryid}/Exchange':
    put:
      tags:
        - BQ - ServiceDelivery
      summary: 'EcBQ Accept, verify, etc. aspects of Service Delivery processing'
      description: 'EcBQ Accept, verify, etc. aspects of Service Delivery processing'
      operationId: ExchangeServiceDelivery
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/servicedeliveryid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceDelivery'
      responses:
        '200':
          $ref: '#/components/responses/ServiceDelivery'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceEvaluation/{serviceevaluationid}/Exchange':
    put:
      tags:
        - BQ - ServiceEvaluation
      summary: 'EcBQ Accept, verify, etc. aspects of Service Evaluation processing'
      description: 'EcBQ Accept, verify, etc. aspects of Service Evaluation processing'
      operationId: ExchangeServiceEvaluation
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceevaluationid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceEvaluation'
      responses:
        '200':
          $ref: '#/components/responses/ServiceEvaluation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceScheduling/{serviceschedulingid}/Exchange':
    put:
      tags:
        - BQ - ServiceScheduling
      summary: 'EcBQ Accept, verify, etc. aspects of Service Scheduling processing'
      description: 'EcBQ Accept, verify, etc. aspects of Service Scheduling processing'
      operationId: ExchangeServiceScheduling
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceschedulingid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceScheduling'
      responses:
        '200':
          $ref: '#/components/responses/ServiceScheduling'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceDelivery/{servicedeliveryid}/Execute':
    put:
      tags:
        - BQ - ServiceDelivery
      summary: ExBQ Execute an available automated action for Service Delivery
      description: ExBQ Execute an available automated action for Service Delivery
      operationId: ExecuteServiceDelivery
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/servicedeliveryid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceDelivery'
      responses:
        '200':
          $ref: '#/components/responses/ServiceDelivery'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceScheduling/{serviceschedulingid}/Execute':
    put:
      tags:
        - BQ - ServiceScheduling
      summary: ExBQ Execute an available automated action for Service Scheduling
      description: ExBQ Execute an available automated action for Service Scheduling
      operationId: ExecuteServiceScheduling
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceschedulingid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceScheduling'
      responses:
        '200':
          $ref: '#/components/responses/ServiceScheduling'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ContentDevelopment/Initiate':
    post:
      tags:
        - BQ - ContentDevelopment
      summary: InBQ Instantiate a new Content Development
      description: InBQ Instantiate a new Content Development
      operationId: InitiateContentDevelopment
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/ContentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ContentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceDelivery/Initiate':
    post:
      tags:
        - BQ - ServiceDelivery
      summary: InBQ Instantiate a new Service Delivery
      description: InBQ Instantiate a new Service Delivery
      operationId: InitiateServiceDelivery
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceDelivery'
      responses:
        '200':
          $ref: '#/components/responses/ServiceDelivery'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceScheduling/Initiate':
    post:
      tags:
        - BQ - ServiceScheduling
      summary: InBQ Instantiate a new Service Scheduling
      description: InBQ Instantiate a new Service Scheduling
      operationId: InitiateServiceScheduling
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceScheduling'
      responses:
        '200':
          $ref: '#/components/responses/ServiceScheduling'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ContentDevelopment/{contentdevelopmentid}/Retrieve':
    get:
      tags:
        - BQ - ContentDevelopment
      summary: ReBQ Retrieve details about any aspect of Content Development
      description: ReBQ Retrieve details about any aspect of Content Development
      operationId: RetrieveContentDevelopment
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/contentdevelopmentid'
      responses:
        '200':
          $ref: '#/components/responses/ContentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceDelivery/{servicedeliveryid}/Retrieve':
    get:
      tags:
        - BQ - ServiceDelivery
      summary: ReBQ Retrieve details about any aspect of Service Delivery
      description: ReBQ Retrieve details about any aspect of Service Delivery
      operationId: RetrieveServiceDelivery
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/servicedeliveryid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceDelivery'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceEvaluation/{serviceevaluationid}/Retrieve':
    get:
      tags:
        - BQ - ServiceEvaluation
      summary: ReBQ Retrieve details about any aspect of Service Evaluation
      description: ReBQ Retrieve details about any aspect of Service Evaluation
      operationId: RetrieveServiceEvaluation
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceevaluationid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceEvaluation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceScheduling/{serviceschedulingid}/Retrieve':
    get:
      tags:
        - BQ - ServiceScheduling
      summary: ReBQ Retrieve details about any aspect of Service Scheduling
      description: ReBQ Retrieve details about any aspect of Service Scheduling
      operationId: RetrieveServiceScheduling
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceschedulingid'
      responses:
        '200':
          $ref: '#/components/responses/ServiceScheduling'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ContentDevelopment/{contentdevelopmentid}/Request':
    put:
      tags:
        - BQ - ContentDevelopment
      summary: RqBQ Request manual intervention or a decision with respect to Content Development
      description: RqBQ Request manual intervention or a decision with respect to Content Development
      operationId: RequestContentDevelopment
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/contentdevelopmentid'
      requestBody:
        $ref: '#/components/requestBodies/ContentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ContentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceDelivery/{servicedeliveryid}/Request':
    put:
      tags:
        - BQ - ServiceDelivery
      summary: RqBQ Request manual intervention or a decision with respect to Service Delivery
      description: RqBQ Request manual intervention or a decision with respect to Service Delivery
      operationId: RequestServiceDelivery
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/servicedeliveryid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceDelivery'
      responses:
        '200':
          $ref: '#/components/responses/ServiceDelivery'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceEvaluation/{serviceevaluationid}/Request':
    put:
      tags:
        - BQ - ServiceEvaluation
      summary: RqBQ Request manual intervention or a decision with respect to Service Evaluation
      description: RqBQ Request manual intervention or a decision with respect to Service Evaluation
      operationId: RequestServiceEvaluation
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceevaluationid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceEvaluation'
      responses:
        '200':
          $ref: '#/components/responses/ServiceEvaluation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceScheduling/{serviceschedulingid}/Request':
    put:
      tags:
        - BQ - ServiceScheduling
      summary: RqBQ Request manual intervention or a decision with respect to Service Scheduling
      description: RqBQ Request manual intervention or a decision with respect to Service Scheduling
      operationId: RequestServiceScheduling
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceschedulingid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceScheduling'
      responses:
        '200':
          $ref: '#/components/responses/ServiceScheduling'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ContentDevelopment/{contentdevelopmentid}/Update':
    put:
      tags:
        - BQ - ContentDevelopment
      summary: UpBQ Update details relating to Content Development
      description: UpBQ Update details relating to Content Development
      operationId: UpdateContentDevelopment
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/contentdevelopmentid'
      requestBody:
        $ref: '#/components/requestBodies/ContentDevelopment'
      responses:
        '200':
          $ref: '#/components/responses/ContentDevelopment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceDelivery/{servicedeliveryid}/Update':
    put:
      tags:
        - BQ - ServiceDelivery
      summary: UpBQ Update details relating to Service Delivery
      description: UpBQ Update details relating to Service Delivery
      operationId: UpdateServiceDelivery
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/servicedeliveryid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceDelivery'
      responses:
        '200':
          $ref: '#/components/responses/ServiceDelivery'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceEvaluation/{serviceevaluationid}/Update':
    put:
      tags:
        - BQ - ServiceEvaluation
      summary: UpBQ Update details relating to Service Evaluation
      description: UpBQ Update details relating to Service Evaluation
      operationId: UpdateServiceEvaluation
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceevaluationid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceEvaluation'
      responses:
        '200':
          $ref: '#/components/responses/ServiceEvaluation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductTraining/{producttrainingid}/ServiceScheduling/{serviceschedulingid}/Update':
    put:
      tags:
        - BQ - ServiceScheduling
      summary: UpBQ Update details relating to Service Scheduling
      description: UpBQ Update details relating to Service Scheduling
      operationId: UpdateServiceScheduling
      parameters:
        - $ref: '#/components/parameters/producttrainingid'
        - $ref: '#/components/parameters/serviceschedulingid'
      requestBody:
        $ref: '#/components/requestBodies/ServiceScheduling'
      responses:
        '200':
          $ref: '#/components/responses/ServiceScheduling'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A Classification value that distinguishes between the type of products/services related to Product Training Procedure  ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the customer who is involved in Product Training Procedure ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: The status of Product Training Procedure Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation and or tasks that need to be completed prior to the initiation of the workstep
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule according to which the service provider will process the Product Training Procedure ||\r\n|"
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Content Development specific Business Service
    proceduretypevalues:
      type: object
      properties:
        Proceduretypevalues:
          type: string
          description: A Classification value that distinguishes between the type of process undertaken within Procedure
          format: enumeration
      description: "A Classification value that distinguishes between the type of process undertaken within Product Training Procedure ||\r\n|"
    instructiondatetimetypevalues:
      enum:
        - DueDate
        - ExecutionDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `DueDate` - \r\n* `ExecutionDate` - \r\n* `FulfillmentDate` - \r\n"
    instructiondatetime:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/datetime'
        InstructionDateType:
          $ref: '#/components/schemas/instructiondatetimetypevalues'
      description: ''
    instructionstatustypevalues:
      enum:
        - Pendingprocessing
        - Acknowledgedaccepted
        - Rejected
        - Accepted
        - Completed
        - Notreceived
        - Cancelled
        - Beingcancelled
        - Receivedbyissuerorregistrar
        - Pending
        - Standinginstruction
        - Queued
        - Cancelledbysubcustodian
        - Forwarded
      type: string
      description: ">\r\n* `Pendingprocessing` - Processing of the instruction is pending.\r\n* `Acknowledgedaccepted` - Instruction has been acknowledged and accepted and is validated for further processing.\r\n* `Rejected` - Instruction has been rejected.\r\n* `Accepted` - Instruction has been accepted and is validated for further processing.\r\n* `Completed` - Processing has been completed.\r\n* `Notreceived` - No instruction has been received (to be used in a reminder).\r\n* `Cancelled` - Instruction has been cancelled.\r\n* `Beingcancelled` - Cancel request is being processed.\r\n* `Receivedbyissuerorregistrar` - Instruction has been received by Issuer.\r\n* `Pending` - Instruction is pending.\r\n* `Standinginstruction` - Standing instruction is applied.\r\n* `Queued` - Instruction is queued.\r\n* `Cancelledbysubcustodian` - Instruction has been cancelled by the agent, for example, due to an event deadline extension.\r\n* `Forwarded` - Accepted and sent along the chain.\r\n"
    instructionstatus:
      type: object
      properties:
        InstructionStatusType:
          $ref: '#/components/schemas/instructionstatustypevalues'
        InstructionStatus:
          $ref: '#/components/schemas/status'
      description: 'A characteristic of instruction which refers to the LifecycleStatus of instruction (e.g., requested, executed, fulfilled, etc.); '
    instructionidentificationtypevalues:
      enum:
        - OrderNumber
        - InstructionNumber
      type: string
      description: ">\r\n* `OrderNumber` - \r\n* `InstructionNumber` - \r\n"
    instructionidentification:
      type: object
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/identifier'
        InstructionIdentificationType:
          $ref: '#/components/schemas/instructionidentificationtypevalues'
      description: "An identifier that allows to uniquely refer to an instance of an Instruction.\n"
    instructiontypevalues:
      enum:
        - PaymentInstruction
        - DeliveryOrder
        - InformationRequest
        - ExchangeInstruction
        - AllocationInstruction
        - MaintenanceInstruction
      type: string
      description: ">\r\n* `PaymentInstruction` - \r\n* `DeliveryOrder` - \r\n* `InformationRequest` - \r\n* `ExchangeInstruction` - \r\n* `AllocationInstruction` - \r\n* `MaintenanceInstruction` - \r\n"
    log:
      type: object
      properties:
        LogType:
          $ref: '#/components/schemas/text'
        LogPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/datetime'
        LogIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    instruction:
      type: object
      properties:
        InstructionDate:
          $ref: '#/components/schemas/instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/instructionidentification'
        InstructionType:
          $ref: '#/components/schemas/instructiontypevalues'
        InstructionResult:
          $ref: '#/components/schemas/text'
        InstructionDescription:
          $ref: '#/components/schemas/text'
        InstructionLog:
          $ref: '#/components/schemas/log'
        InstructionPurpose:
          $ref: '#/components/schemas/text'
      description: "Request to process ProductTraining ||\r\n|"
    procedure:
      type: object
      properties:
        ProcedureType:
          $ref: '#/components/schemas/proceduretypevalues'
        ProcedureDateTime:
          $ref: '#/components/schemas/datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/status'
      description: Reference to Content Development
    worksteptypevalues:
      type: object
      properties:
        Worksteptypevalues:
          type: string
          description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
          format: enumeration
      description: A Classification value that distinguishes between the type of workstep undertaken within Procedure
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: ''
    workstep:
      type: object
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/text'
        WorkstepType:
          $ref: '#/components/schemas/worksteptypevalues'
        WorkstepDescription:
          $ref: '#/components/schemas/text'
        WorkstepDateTime:
          $ref: '#/components/schemas/datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/workproduct'
      description: Reference to Content Development
    ContentDevelopment:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductTrainingProcedureReference:
          $ref: '#/components/schemas/procedure'
        ContentDevelopmentReference:
          $ref: '#/components/schemas/workstep'
        ContentDevelopmentType:
          $ref: '#/components/schemas/text'
      description: "A course of action for doing Content Development in the context of executing the Content Development\n"
    ServiceDelivery:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductTrainingProcedureReference:
          $ref: '#/components/schemas/procedure'
        ServiceDeliveryReference:
          $ref: '#/components/schemas/workstep'
        ServiceDeliveryType:
          $ref: '#/components/schemas/text'
      description: "A course of action for doing Content Development in the context of executing the Content Development\n"
    ServiceEvaluation:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductTrainingProcedureReference:
          $ref: '#/components/schemas/procedure'
        ServiceEvaluationReference:
          $ref: '#/components/schemas/workstep'
        ServiceEvaluationType:
          $ref: '#/components/schemas/text'
      description: "A course of action for doing Content Development in the context of executing the Content Development\n"
    ServiceScheduling:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductTrainingProcedureReference:
          $ref: '#/components/schemas/procedure'
        ServiceSchedulingReference:
          $ref: '#/components/schemas/workstep'
        ServiceSchedulingType:
          $ref: '#/components/schemas/text'
      description: "A course of action for doing Content Development in the context of executing the Content Development\n"
    producttrainingprocedure:
      type: object
      properties:
        ProductTrainingProcedure:
          type: string
          description: A training procedure defined for a banking product
          format: class
      description: "Reference to the party who is involved in Product Training Procedure ||\r\n|"
    ProductTrainingOutcome:
      type: object
      properties:
        ProductTrainingWorkProduct:
          $ref: '#/components/schemas/workproduct'
        ProductTrainingProcedure:
          $ref: '#/components/schemas/producttrainingprocedure'
      description: "A course of action for doing Content Development in the context of executing the Content Development\n"
    featuretypevalues:
      enum:
        - FeeFeature
        - InterestFeature
        - WithdrawalFeature
        - DepositFeature
        - SweepFeature
        - LienFeature
        - PaymentFeature
        - RepaymentFeature
        - LimitFeature
        - OverdraftFeature
        - StatementFeature
        - CurrencyExchangeFeature
        - PriceFeature
      type: string
      description: "A Classification value that distinguishes between Procedures according to the type of business services and/or type of concern defined within Product Training Procedure ||\r\n|"
    feature:
      type: object
      properties:
        FeatureType:
          $ref: '#/components/schemas/featuretypevalues'
        FeatureIdentification:
          $ref: '#/components/schemas/identifier'
        FeatureName:
          $ref: '#/components/schemas/name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/status'
        FeatureDescription:
          $ref: '#/components/schemas/text'
      description: "A selected optional business service as subject matter of Product Training Procedure ||\r\n|"
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: "Reference to the business unit which is involved in Product Training Procedure ||\r\n|"
    financialfacility:
      type: object
      properties:
        FinancialFacility:
          type: string
          description: "A production or operational capacity to perform a business function for delivering a banking product or service\n\nA functional classification of banking product that provides ongoing capacity to deliver financial services (e.g. loan service, payment service)\n\n\n"
          format: class
      description: "Reference to the Financial Facility related to  Product Training Procedure  ||\r\n|"
    employee:
      type: object
      properties:
        Employee:
          type: string
          description: 'Party who is employed by an employer. '
          format: class
      description: "Reference to the employee who is involved in Product Training Procedure ||\r\n|"
    servicetypevalues:
      enum:
        - ITService
        - AdministrativeService
        - SystemService
        - FinancialService
        - InformationService
        - BusinessService
      type: string
      description: "A Classification value that distinguishes between the type of services in Product Training Procedure  ||\r\n|"
    transactiontypevalues:
      enum:
        - FinancialTransaction
        - BusinessTransaction
        - BankingTransaction
        - AccountingTransaction
        - BookingTransaction
        - AllocationTransaction
        - DeliveryTransaction
        - ProductionTransaction
      type: string
      description: "A Classification value that distinguishes between the type of transactions in Product Training Procedure  ||\r\n|"
    transactiondatetimetypevalues:
      enum:
        - ExecutedDate
        - FulfillmentDate
        - InitiatedDate
        - CancelledDate
        - ApprovedDate
        - ValueDate
        - BookingDate
      type: string
      description: ">\r\n* `ExecutedDate` - \r\n* `FulfillmentDate` - \r\n* `InitiatedDate` - \r\n* `CancelledDate` - \r\n* `ApprovedDate` - \r\n* `ValueDate` - \r\n* `BookingDate` - \r\n"
    transactiondatetime:
      type: object
      properties:
        TransactionDate:
          $ref: '#/components/schemas/datetime'
        TransactionDateType:
          $ref: '#/components/schemas/transactiondatetimetypevalues'
      description: "The Date that the transaction has occurred or is planned to occur.\nA characteristic of transaction which refers to the LifecycleDate of transaction (e.g., initiated date, executed date, fulfillment date). "
    transactionstatustypevalues:
      enum:
        - Initiated
        - Executed
        - Cancelled
        - Confirmed
        - Suspended
        - Pending
        - Completed
        - Notified
        - Booked
        - Rejected
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Executed` - \r\n* `Cancelled` - \r\n* `Confirmed` - \r\n* `Suspended` - \r\n* `Pending` - \r\n* `Completed` - \r\n* `Notified` - \r\n* `Booked` - \r\n* `Rejected` - \r\n"
    transactionstatus:
      type: object
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/status'
        TransactionStatusType:
          $ref: '#/components/schemas/transactionstatustypevalues'
      description: 'A characteristic of transaction which refers to the LifecycleStatus of transaction (e.g., initiated, executed, confirmed, cancelled, etc.) '
    transaction:
      type: object
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/identifier'
        TransactionDate:
          $ref: '#/components/schemas/transactiondatetime'
        TransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        TransactionDescription:
          $ref: '#/components/schemas/text'
        TransactionStatus:
          $ref: '#/components/schemas/transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/name'
      description: Reference to the transaction that is related to  Product Training Procedure  ObligationFulfilment|ObligationFulfilment (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022 BM ()
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: Reference to the Financial Transaction Arrangement that is related to  Product Training Procedure  Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    customeragreement:
      type: object
      properties:
        CustomerAgreement:
          type: string
          description: 'An agreement between a bank and its customer. '
          format: class
      description: "Reference to the Customer Agreement that is related to  Product Training Procedure  ||\r\n|"
    ProductTrainingProcedure:
      type: object
      properties:
        ProductTrainingProcedureParameterType:
          $ref: '#/components/schemas/featuretypevalues'
        ProductTrainingProcedureSelectedOption:
          $ref: '#/components/schemas/feature'
        ProductTrainingProcedureRequest:
          $ref: '#/components/schemas/instruction'
        ProductTrainingProcedureSchedule:
          $ref: '#/components/schemas/schedule'
        ProductTrainingProcedureStatus:
          $ref: '#/components/schemas/status'
        ProductTrainingProcedureReference:
          $ref: '#/components/schemas/producttrainingprocedure'
        ProductTrainingProcedureBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        ProductTrainingProcedureServiceProviderReference:
          $ref: '#/components/schemas/involvedparty'
        ProductTrainingProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/financialfacility'
        ProductTrainingProcedureEmployeeReference:
          $ref: '#/components/schemas/employee'
        ProductTrainingProcedureCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        ProductTrainingProcedureType:
          $ref: '#/components/schemas/proceduretypevalues'
        ProductTrainingProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/schedule'
        ProductTrainingProcedureServiceType:
          $ref: '#/components/schemas/servicetypevalues'
        ProductTrainingProcedureProductandServiceType:
          $ref: '#/components/schemas/text'
        ProductTrainingProcedureProductandServiceInstance:
          type: string
          description: Reference to the product or service that is related to  Product Training Procedure
          format: object
        ProductTrainingProcedureTransactionType:
          $ref: '#/components/schemas/transactiontypevalues'
        ProductTrainingProcedureTransaction:
          $ref: '#/components/schemas/transaction'
        ProductTrainingProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/arrangement'
        ProductTrainingProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/customeragreement'
      description: "Complete work tasks following a defined procedure in support of general office activities and product and service delivery  within Product Training. \nExample: Process the evaluation and completion of customer offers."
    ControlProductTrainingProcedureRequest:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
            ProductTrainingProcedureReference:
              $ref: '#/components/schemas/producttrainingprocedure'
            ProductTrainingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/businessunit'
            ProductTrainingProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            ProductTrainingProcedureEmployeeReference:
              $ref: '#/components/schemas/employee'
            ProductTrainingProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureType:
              $ref: '#/components/schemas/proceduretypevalues'
            ProductTrainingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureServiceType:
              $ref: '#/components/schemas/servicetypevalues'
            ProductTrainingProcedureProductandServiceType:
              $ref: '#/components/schemas/text'
            ProductTrainingProcedureProductandServiceInstance:
              type: string
              description: Reference to the product or service that is related to  Product Training Procedure
              format: object
            ProductTrainingProcedureTransactionType:
              $ref: '#/components/schemas/transactiontypevalues'
            ProductTrainingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            ProductTrainingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/customeragreement'
      description: 'Input: CoCR Control the processing of Product Training Procedure'
    ControlProductTrainingProcedureResponse:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
      description: 'Output: CoCR Control the processing of Product Training Procedure'
    ExchangeProductTrainingProcedureRequest:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
            ProductTrainingProcedureReference:
              $ref: '#/components/schemas/producttrainingprocedure'
            ProductTrainingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/businessunit'
            ProductTrainingProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            ProductTrainingProcedureEmployeeReference:
              $ref: '#/components/schemas/employee'
            ProductTrainingProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureType:
              $ref: '#/components/schemas/proceduretypevalues'
            ProductTrainingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureServiceType:
              $ref: '#/components/schemas/servicetypevalues'
            ProductTrainingProcedureProductandServiceType:
              $ref: '#/components/schemas/text'
            ProductTrainingProcedureProductandServiceInstance:
              type: string
              description: Reference to the product or service that is related to  Product Training Procedure
              format: object
            ProductTrainingProcedureTransactionType:
              $ref: '#/components/schemas/transactiontypevalues'
            ProductTrainingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            ProductTrainingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/customeragreement'
      description: 'Input: EcCR Accept, verify, etc. aspects of Product Training Procedure processing'
    ExchangeProductTrainingProcedureResponse:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
      description: 'Output: EcCR Accept, verify, etc. aspects of Product Training Procedure processing'
    ExecuteProductTrainingProcedureRequest:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
            ProductTrainingProcedureReference:
              $ref: '#/components/schemas/producttrainingprocedure'
            ProductTrainingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/businessunit'
            ProductTrainingProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            ProductTrainingProcedureEmployeeReference:
              $ref: '#/components/schemas/employee'
            ProductTrainingProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureType:
              $ref: '#/components/schemas/proceduretypevalues'
            ProductTrainingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureServiceType:
              $ref: '#/components/schemas/servicetypevalues'
            ProductTrainingProcedureProductandServiceType:
              $ref: '#/components/schemas/text'
            ProductTrainingProcedureProductandServiceInstance:
              type: string
              description: Reference to the product or service that is related to  Product Training Procedure
              format: object
            ProductTrainingProcedureTransactionType:
              $ref: '#/components/schemas/transactiontypevalues'
            ProductTrainingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            ProductTrainingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/customeragreement'
      description: 'Input: ExCR Execute an available automated action for Product Training Procedure'
    ExecuteProductTrainingProcedureResponse:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
      description: 'Output: ExCR Execute an available automated action for Product Training Procedure'
    InitiateProductTrainingProcedureRequest:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
            ProductTrainingProcedureReference:
              $ref: '#/components/schemas/producttrainingprocedure'
            ProductTrainingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/businessunit'
            ProductTrainingProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            ProductTrainingProcedureEmployeeReference:
              $ref: '#/components/schemas/employee'
            ProductTrainingProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureType:
              $ref: '#/components/schemas/proceduretypevalues'
            ProductTrainingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureServiceType:
              $ref: '#/components/schemas/servicetypevalues'
            ProductTrainingProcedureProductandServiceType:
              $ref: '#/components/schemas/text'
            ProductTrainingProcedureProductandServiceInstance:
              type: string
              description: Reference to the product or service that is related to  Product Training Procedure
              format: object
            ProductTrainingProcedureTransactionType:
              $ref: '#/components/schemas/transactiontypevalues'
            ProductTrainingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            ProductTrainingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/customeragreement'
      description: 'Input: InCR Instantiate a new Product Training Procedure'
    InitiateProductTrainingProcedureResponse:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
      description: 'Output: InCR Instantiate a new Product Training Procedure'
    RetrieveProductTrainingProcedureResponse:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
            ProductTrainingProcedureReference:
              $ref: '#/components/schemas/producttrainingprocedure'
            ProductTrainingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/businessunit'
            ProductTrainingProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            ProductTrainingProcedureEmployeeReference:
              $ref: '#/components/schemas/employee'
            ProductTrainingProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureType:
              $ref: '#/components/schemas/proceduretypevalues'
            ProductTrainingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureServiceType:
              $ref: '#/components/schemas/servicetypevalues'
            ProductTrainingProcedureProductandServiceType:
              $ref: '#/components/schemas/text'
            ProductTrainingProcedureProductandServiceInstance:
              type: string
              description: Reference to the product or service that is related to  Product Training Procedure
              format: object
            ProductTrainingProcedureTransactionType:
              $ref: '#/components/schemas/transactiontypevalues'
            ProductTrainingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            ProductTrainingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/customeragreement'
      description: 'Output: ReCR Retrieve details about any aspect of Product Training Procedure'
    RequestProductTrainingProcedureRequest:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
            ProductTrainingProcedureReference:
              $ref: '#/components/schemas/producttrainingprocedure'
            ProductTrainingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/businessunit'
            ProductTrainingProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            ProductTrainingProcedureEmployeeReference:
              $ref: '#/components/schemas/employee'
            ProductTrainingProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureType:
              $ref: '#/components/schemas/proceduretypevalues'
            ProductTrainingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureServiceType:
              $ref: '#/components/schemas/servicetypevalues'
            ProductTrainingProcedureProductandServiceType:
              $ref: '#/components/schemas/text'
            ProductTrainingProcedureProductandServiceInstance:
              type: string
              description: Reference to the product or service that is related to  Product Training Procedure
              format: object
            ProductTrainingProcedureTransactionType:
              $ref: '#/components/schemas/transactiontypevalues'
            ProductTrainingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            ProductTrainingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/customeragreement'
      description: 'Input: RqCR Request manual intervention or a decision with respect to Product Training Procedure'
    RequestProductTrainingProcedureResponse:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
      description: 'Output: RqCR Request manual intervention or a decision with respect to Product Training Procedure'
    UpdateProductTrainingProcedureRequest:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
            ProductTrainingProcedureReference:
              $ref: '#/components/schemas/producttrainingprocedure'
            ProductTrainingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/businessunit'
            ProductTrainingProcedureServiceProviderReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/financialfacility'
            ProductTrainingProcedureEmployeeReference:
              $ref: '#/components/schemas/employee'
            ProductTrainingProcedureCustomerReference:
              $ref: '#/components/schemas/involvedparty'
            ProductTrainingProcedureType:
              $ref: '#/components/schemas/proceduretypevalues'
            ProductTrainingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureServiceType:
              $ref: '#/components/schemas/servicetypevalues'
            ProductTrainingProcedureProductandServiceType:
              $ref: '#/components/schemas/text'
            ProductTrainingProcedureProductandServiceInstance:
              type: string
              description: Reference to the product or service that is related to  Product Training Procedure
              format: object
            ProductTrainingProcedureTransactionType:
              $ref: '#/components/schemas/transactiontypevalues'
            ProductTrainingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/arrangement'
            ProductTrainingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/customeragreement'
      description: 'Input: UpCR Update details relating to Product Training Procedure'
    UpdateProductTrainingProcedureResponse:
      type: object
      properties:
        ProductTrainingProcedure:
          type: object
          properties:
            ProductTrainingProcedureParameterType:
              $ref: '#/components/schemas/featuretypevalues'
            ProductTrainingProcedureSelectedOption:
              $ref: '#/components/schemas/feature'
            ProductTrainingProcedureRequest:
              $ref: '#/components/schemas/instruction'
            ProductTrainingProcedureSchedule:
              $ref: '#/components/schemas/schedule'
            ProductTrainingProcedureStatus:
              $ref: '#/components/schemas/status'
      description: 'Output: UpCR Update details relating to Product Training Procedure'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ControlProductTrainingProcedureResponse:
      description: ControlProductTrainingProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlProductTrainingProcedureResponse'
    ExchangeProductTrainingProcedureResponse:
      description: ExchangeProductTrainingProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeProductTrainingProcedureResponse'
    ExecuteProductTrainingProcedureResponse:
      description: ExecuteProductTrainingProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteProductTrainingProcedureResponse'
    InitiateProductTrainingProcedureResponse:
      description: InitiateProductTrainingProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductTrainingProcedureResponse'
    RetrieveProductTrainingProcedureResponse:
      description: RetrieveProductTrainingProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveProductTrainingProcedureResponse'
    RequestProductTrainingProcedureResponse:
      description: RequestProductTrainingProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProductTrainingProcedureResponse'
    UpdateProductTrainingProcedureResponse:
      description: UpdateProductTrainingProcedureResponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductTrainingProcedureResponse'
    ContentDevelopment:
      description: ContentDevelopment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContentDevelopment'
    ServiceDelivery:
      description: ServiceDelivery
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceDelivery'
    ServiceEvaluation:
      description: ServiceEvaluation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceEvaluation'
    ServiceScheduling:
      description: ServiceScheduling
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceScheduling'
  parameters:
    producttrainingid:
      name: producttrainingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    contentdevelopmentid:
      name: contentdevelopmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    servicedeliveryid:
      name: servicedeliveryid
      in: path
      required: true
      style: simple
      schema:
        type: string
    serviceevaluationid:
      name: serviceevaluationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    serviceschedulingid:
      name: serviceschedulingid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ControlProductTrainingProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlProductTrainingProcedureRequest'
      required: true
    ExchangeProductTrainingProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangeProductTrainingProcedureRequest'
      required: true
    ExecuteProductTrainingProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteProductTrainingProcedureRequest'
      required: true
    InitiateProductTrainingProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductTrainingProcedureRequest'
      required: true
    RequestProductTrainingProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestProductTrainingProcedureRequest'
      required: true
    UpdateProductTrainingProcedureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductTrainingProcedureRequest'
      required: true
    ContentDevelopment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContentDevelopment'
      required: true
    ServiceDelivery:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceDelivery'
      required: true
    ServiceEvaluation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceEvaluation'
      required: true
    ServiceScheduling:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceScheduling'
      required: true