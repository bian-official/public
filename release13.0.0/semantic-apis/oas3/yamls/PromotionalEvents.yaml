openapi: 3.0.1
info:
  title: Promotional Events
  description: 'Develop the plan for and oversee promotional event activity, including budget and resource management'
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/PromotionalEvents/13.0.0
paths:
  /PromotionalEvents/Create:
    post:
      tags:
        - CR - PromotionalEventManagementPlan
      summary: CrCR Create and invoke the promotional event management plan
      description: CrCR Create and invoke the promotional event management plan
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/PromotionalEventManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/PromotionalEventManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Update':
    put:
      tags:
        - CR - PromotionalEventManagementPlan
      summary: UpCR Update details of the promotional event management plan
      description: UpCR Update details of the promotional event management plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
      requestBody:
        $ref: '#/components/requestBodies/PromotionalEventManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/PromotionalEventManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Request':
    put:
      tags:
        - CR - PromotionalEventManagementPlan
      summary: RqCR Request manual intervention in the event plan
      description: RqCR Request manual intervention in the event plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
      requestBody:
        $ref: '#/components/requestBodies/PromotionalEventManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/PromotionalEventManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Grant':
    put:
      tags:
        - CR - PromotionalEventManagementPlan
      summary: GrCR Obtain a permission grant against the plan
      description: GrCR Obtain a permission grant against the plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
      requestBody:
        $ref: '#/components/requestBodies/PromotionalEventManagementPlan'
      responses:
        '200':
          $ref: '#/components/responses/PromotionalEventManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Retrieve':
    get:
      tags:
        - CR - PromotionalEventManagementPlan
      summary: ReCR Retrieve details about the promotional event management plan
      description: ReCR Retrieve details about the promotional event management plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
      responses:
        '200':
          $ref: '#/components/responses/PromotionalEventManagementPlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/MarketTracking/{markettrackingid}/Update':
    put:
      tags:
        - BQ - MarketTracking
      summary: UpBQ Update details of the market tracking activity
      description: UpBQ Update details of the market tracking activity
      operationId: UpdateMarketTracking
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/MarketTracking/{markettrackingid}/Execute':
    put:
      tags:
        - BQ - MarketTracking
      summary: ExBQ Execute an automated task for the tracking activity
      description: ExBQ Execute an automated task for the tracking activity
      operationId: ExecuteMarketTracking
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/MarketTracking/{markettrackingid}/Request':
    put:
      tags:
        - BQ - MarketTracking
      summary: RqBQ Request manual intervention in the market tracking
      description: RqBQ Request manual intervention in the market tracking
      operationId: RequestMarketTracking
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/markettrackingid'
      requestBody:
        $ref: '#/components/requestBodies/MarketTracking'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/MarketTracking/{markettrackingid}/Retrieve':
    get:
      tags:
        - BQ - MarketTracking
      summary: ReBQ Retrieve details about the market tracking activity
      description: ReBQ Retrieve details about the market tracking activity
      operationId: RetrieveMarketTracking
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/markettrackingid'
      responses:
        '200':
          $ref: '#/components/responses/MarketTracking'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/ImpactAssessment/Create':
    post:
      tags:
        - BQ - ImpactAssessment
      summary: CrBQ Create an impact assessment of the promotional event activity
      description: CrBQ Create an impact assessment of the promotional event activity
      operationId: CreateImpactAssessment
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
      requestBody:
        $ref: '#/components/requestBodies/ImpactAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ImpactAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/ImpactAssessment/{impactassessmentid}/Update':
    put:
      tags:
        - BQ - ImpactAssessment
      summary: UpBQ Update details of promotional event impact assessment
      description: UpBQ Update details of promotional event impact assessment
      operationId: UpdateImpactAssessment
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/impactassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/ImpactAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ImpactAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/ImpactAssessment/{impactassessmentid}/Execute':
    put:
      tags:
        - BQ - ImpactAssessment
      summary: ExBQ Execute an automated action for an impact assessment
      description: ExBQ Execute an automated action for an impact assessment
      operationId: ExecuteImpactAssessment
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/impactassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/ImpactAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ImpactAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/ImpactAssessment/{impactassessmentid}/Request':
    put:
      tags:
        - BQ - ImpactAssessment
      summary: RqBQ Request manual intervention to an impact assessment
      description: RqBQ Request manual intervention to an impact assessment
      operationId: RequestImpactAssessment
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/impactassessmentid'
      requestBody:
        $ref: '#/components/requestBodies/ImpactAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ImpactAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/ImpactAssessment/{impactassessmentid}/Retrieve':
    get:
      tags:
        - BQ - ImpactAssessment
      summary: ReBQ Retrieve details about promotional event impact assessment activity
      description: ReBQ Retrieve details about promotional event impact assessment activity
      operationId: RetrieveImpactAssessment
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/impactassessmentid'
      responses:
        '200':
          $ref: '#/components/responses/ImpactAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Participation/Create':
    post:
      tags:
        - BQ - Participation
      summary: CrBQ Create promotional event participation plan
      description: CrBQ Create promotional event participation plan
      operationId: CreateParticipation
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
      requestBody:
        $ref: '#/components/requestBodies/Participation'
      responses:
        '200':
          $ref: '#/components/responses/Participation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Participation/{participationid}/Update':
    put:
      tags:
        - BQ - Participation
      summary: UpBQ Update the event participation schedule
      description: UpBQ Update the event participation schedule
      operationId: UpdateParticipation
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/participationid'
      requestBody:
        $ref: '#/components/requestBodies/Participation'
      responses:
        '200':
          $ref: '#/components/responses/Participation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Participation/{participationid}/Request':
    put:
      tags:
        - BQ - Participation
      summary: RqBQ Request manual intervention to the schedules
      description: RqBQ Request manual intervention to the schedules
      operationId: RequestParticipation
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/participationid'
      requestBody:
        $ref: '#/components/requestBodies/Participation'
      responses:
        '200':
          $ref: '#/components/responses/Participation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/PromotionalEvents/{promotionaleventsid}/Participation/{participationid}/Retrieve':
    get:
      tags:
        - BQ - Participation
      summary: ReBQ Retrieve details about promotional event participation activity
      description: ReBQ Retrieve details about promotional event participation activity
      operationId: RetrieveParticipation
      parameters:
        - $ref: '#/components/parameters/promotionaleventsid'
        - $ref: '#/components/parameters/participationid'
      responses:
        '200':
          $ref: '#/components/responses/Participation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "A description of the metric, defining how it is to be measured during and after the event ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: Reference to the promotional event execution
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: The make-up of the sponsorship arrangements for participation in the event
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule of involvement in the portfolio/collection of promotional events ||\r\n|"
    promotionalevent:
      type: object
      properties:
        PromotionalEvent:
          type: string
          description: "A promotional event is an occasion that draws attention to a particular product or products, such as a price decrease, or the chance to win a prize when buying the product.\n\nhttps://www.collinsdictionary.com/dictionary/english/promotional-event"
          format: class
      description: The result/impact of the overall promotional event  (can refer to any detected up-tick in brand awareness and sales)
    Participation:
      type: object
      properties:
        PromotionalEventParticipationInstanceReference:
          $ref: '#/components/schemas/identifier'
        PromotionalEventSponsorshipBudget:
          $ref: '#/components/schemas/budgetarrangement'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        PromotionalEventExecutionSchedule:
          $ref: '#/components/schemas/schedule'
        PromotionalEventResult:
          $ref: '#/components/schemas/promotionalevent'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: 'The make-up of the market tracking task performed, includes consolidation and analysis of market research'
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, evaluations and findings for the work task'
    ImpactAssessment:
      type: object
      properties:
        ImpactAssessmentWorkTaskType:
          $ref: '#/components/schemas/text'
        ImpactAssessmentWorkTask:
          $ref: '#/components/schemas/task'
        ImpactAssessmentWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        ImpactAssessmentWorkTaskResult:
          $ref: '#/components/schemas/task'
        ImpactAssessmentWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    MarketTracking:
      type: object
      properties:
        MarketTrackingWorkTaskType:
          $ref: '#/components/schemas/text'
        MarketTrackingWorkTask:
          $ref: '#/components/schemas/task'
        GeneralMarketResearchDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/identifier'
        MarketTrackingWorkTaskWorkProducts:
          $ref: '#/components/schemas/workproduct'
        MarketTrackingWorkTaskResult:
          $ref: '#/components/schemas/task'
        MarketTrackingWorkTaskDateandTime:
          $ref: '#/components/schemas/datetime'
      description: "A collection of one or more responsibilities or tasks under management\n\nExamples: Relationship development, Troubleshooting"
    strategy:
      type: object
      properties:
        Strategy:
          type: string
          description: 'A high level plan to achieve one or more goals '
          format: class
      description: Strategy set for the portfolio.(ISO20022)
    portfolio:
      type: object
      properties:
        PortfolioIdentification:
          $ref: '#/components/schemas/identifier'
        PortfolioName:
          $ref: '#/components/schemas/name'
        PortfolioStrategy:
          $ref: '#/components/schemas/strategy'
        PortfolioDescription:
          $ref: '#/components/schemas/text'
      description: The collection of promotional events that is used to assess performance and coverage and support promotional event sponsorship and participation decisions Portfolio|Portfolio (https://www.iso20022.org/standardsrepository/type/Portfolio)|Standard|ISO20022 BM ()
    metric:
      type: object
      properties:
        Metric:
          type: string
          description: 'A metric is a standard or system of measurement that quantifies certain characteristics, properties, or performance of a given entity.'
          format: class
      description: "Metrics that are defined to assess the target and actual impact of the promotional event ||\r\n|"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: "A description of the target performance for the metric ||\r\n|"
    PromotionalEventManagementPlan:
      type: object
      properties:
        PromotionalEventPortfolio:
          $ref: '#/components/schemas/portfolio'
        PromotionalEventType:
          $ref: '#/components/schemas/text'
        PromotionalEventDescription:
          $ref: '#/components/schemas/text'
        PromotionalEventMetrics:
          $ref: '#/components/schemas/metric'
        PromotionalEventMetricDefinition:
          $ref: '#/components/schemas/text'
        PromotionalEventMetricGoal:
          $ref: '#/components/schemas/goal'
        PromotionalEventSchedule:
          $ref: '#/components/schemas/schedule'
        PromotionalEventPerformanceRecord:
          type: string
          description: Maintains a consolidated record of the impact of the portfolio of promotional events
          format: object
      description: 'Oversee the working of a business unit, assign work, manage against a plan and troubleshoot issues within Promotional Events.'
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    PromotionalEventManagementPlan:
      description: PromotionalEventManagementPlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PromotionalEventManagementPlan'
    MarketTracking:
      description: MarketTracking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
    ImpactAssessment:
      description: ImpactAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImpactAssessment'
    Participation:
      description: Participation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Participation'
  parameters:
    promotionaleventsid:
      name: promotionaleventsid
      in: path
      required: true
      style: simple
      schema:
        type: string
    markettrackingid:
      name: markettrackingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    impactassessmentid:
      name: impactassessmentid
      in: path
      required: true
      style: simple
      schema:
        type: string
    participationid:
      name: participationid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    PromotionalEventManagementPlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PromotionalEventManagementPlan'
      required: true
    MarketTracking:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketTracking'
      required: true
    ImpactAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImpactAssessment'
      required: true
    Participation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Participation'
      required: true