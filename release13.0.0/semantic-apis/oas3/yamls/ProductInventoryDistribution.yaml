openapi: 3.0.1
info:
  title: Product Inventory Distribution
  description: Administer the provisioning and distribution of product inventory across the branch network and/or distribute direct to customers (e.g. mail) where appropriate
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductInventoryDistribution/13.0.0
paths:
  '/ProductInventoryDistribution/{productinventorydistributionid}/Capture':
    put:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: CaCR Capture Product Inventory Distribution Administrative Plan activity or event related information
      description: CaCR Capture Product Inventory Distribution Administrative Plan activity or event related information
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/ProductInventoryDistributionAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Control':
    put:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: CoCR Control the processing of Product Inventory Distribution Administrative Plan
      description: CoCR Control the processing of Product Inventory Distribution Administrative Plan
      operationId: Control
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/ProductInventoryDistributionAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Exchange':
    put:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: 'EcCR Accept, verify, etc. aspects of Product Inventory Distribution Administrative Plan processing'
      description: 'EcCR Accept, verify, etc. aspects of Product Inventory Distribution Administrative Plan processing'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/ProductInventoryDistributionAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Grant':
    put:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: GrCR Obtain permission to act in relation to Product Inventory Distribution Administrative Plan
      description: GrCR Obtain permission to act in relation to Product Inventory Distribution Administrative Plan
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/ProductInventoryDistributionAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ProductInventoryDistribution/Initiate:
    post:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: InCR Instantiate a new Product Inventory Distribution Administrative Plan
      description: InCR Instantiate a new Product Inventory Distribution Administrative Plan
      operationId: Initiate
      requestBody:
        $ref: '#/components/requestBodies/ProductInventoryDistributionAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Retrieve':
    get:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: ReCR Retrieve details about any aspect of Product Inventory Distribution Administrative Plan
      description: ReCR Retrieve details about any aspect of Product Inventory Distribution Administrative Plan
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Request':
    put:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: RqCR Request manual intervention or a decision with respect to Product Inventory Distribution Administrative Plan
      description: RqCR Request manual intervention or a decision with respect to Product Inventory Distribution Administrative Plan
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/ProductInventoryDistributionAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Update':
    put:
      tags:
        - CR - ProductInventoryDistributionAdministrativePlan
      summary: UpCR Update details relating to Product Inventory Distribution Administrative Plan
      description: UpCR Update details relating to Product Inventory Distribution Administrative Plan
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/ProductInventoryDistributionAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/ProductInventoryDistributionAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Distribution/{distributionid}/Capture':
    put:
      tags:
        - BQ - Distribution
      summary: CaBQ Capture Distribution activity or event related information
      description: CaBQ Capture Distribution activity or event related information
      operationId: CaptureDistribution
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/distributionid'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Mailing/{mailingid}/Capture':
    put:
      tags:
        - BQ - Mailing
      summary: CaBQ Capture Mailing activity or event related information
      description: CaBQ Capture Mailing activity or event related information
      operationId: CaptureMailing
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/mailingid'
      requestBody:
        $ref: '#/components/requestBodies/Mailing'
      responses:
        '200':
          $ref: '#/components/responses/Mailing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Oversight/{oversightid}/Capture':
    put:
      tags:
        - BQ - Oversight
      summary: CaBQ Capture Oversight activity or event related information
      description: CaBQ Capture Oversight activity or event related information
      operationId: CaptureOversight
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/oversightid'
      requestBody:
        $ref: '#/components/requestBodies/Oversight'
      responses:
        '200':
          $ref: '#/components/responses/Oversight'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Provisioning/{provisioningid}/Capture':
    put:
      tags:
        - BQ - Provisioning
      summary: CaBQ Capture Provisioning activity or event related information
      description: CaBQ Capture Provisioning activity or event related information
      operationId: CaptureProvisioning
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/provisioningid'
      requestBody:
        $ref: '#/components/requestBodies/Provisioning'
      responses:
        '200':
          $ref: '#/components/responses/Provisioning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Distribution/Initiate':
    post:
      tags:
        - BQ - Distribution
      summary: InBQ Instantiate a new Distribution
      description: InBQ Instantiate a new Distribution
      operationId: InitiateDistribution
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Mailing/Initiate':
    post:
      tags:
        - BQ - Mailing
      summary: InBQ Instantiate a new Mailing
      description: InBQ Instantiate a new Mailing
      operationId: InitiateMailing
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/Mailing'
      responses:
        '200':
          $ref: '#/components/responses/Mailing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Oversight/Initiate':
    post:
      tags:
        - BQ - Oversight
      summary: InBQ Instantiate a new Oversight
      description: InBQ Instantiate a new Oversight
      operationId: InitiateOversight
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/Oversight'
      responses:
        '200':
          $ref: '#/components/responses/Oversight'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Provisioning/Initiate':
    post:
      tags:
        - BQ - Provisioning
      summary: InBQ Instantiate a new Provisioning
      description: InBQ Instantiate a new Provisioning
      operationId: InitiateProvisioning
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
      requestBody:
        $ref: '#/components/requestBodies/Provisioning'
      responses:
        '200':
          $ref: '#/components/responses/Provisioning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Distribution/{distributionid}/Retrieve':
    get:
      tags:
        - BQ - Distribution
      summary: ReBQ Retrieve details about any aspect of Distribution
      description: ReBQ Retrieve details about any aspect of Distribution
      operationId: RetrieveDistribution
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/distributionid'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Mailing/{mailingid}/Retrieve':
    get:
      tags:
        - BQ - Mailing
      summary: ReBQ Retrieve details about any aspect of Mailing
      description: ReBQ Retrieve details about any aspect of Mailing
      operationId: RetrieveMailing
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/mailingid'
      responses:
        '200':
          $ref: '#/components/responses/Mailing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Oversight/{oversightid}/Retrieve':
    get:
      tags:
        - BQ - Oversight
      summary: ReBQ Retrieve details about any aspect of Oversight
      description: ReBQ Retrieve details about any aspect of Oversight
      operationId: RetrieveOversight
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/oversightid'
      responses:
        '200':
          $ref: '#/components/responses/Oversight'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Provisioning/{provisioningid}/Retrieve':
    get:
      tags:
        - BQ - Provisioning
      summary: ReBQ Retrieve details about any aspect of Provisioning
      description: ReBQ Retrieve details about any aspect of Provisioning
      operationId: RetrieveProvisioning
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/provisioningid'
      responses:
        '200':
          $ref: '#/components/responses/Provisioning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Distribution/{distributionid}/Update':
    put:
      tags:
        - BQ - Distribution
      summary: UpBQ Update details relating to Distribution
      description: UpBQ Update details relating to Distribution
      operationId: UpdateDistribution
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/distributionid'
      requestBody:
        $ref: '#/components/requestBodies/Distribution'
      responses:
        '200':
          $ref: '#/components/responses/Distribution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Mailing/{mailingid}/Update':
    put:
      tags:
        - BQ - Mailing
      summary: UpBQ Update details relating to Mailing
      description: UpBQ Update details relating to Mailing
      operationId: UpdateMailing
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/mailingid'
      requestBody:
        $ref: '#/components/requestBodies/Mailing'
      responses:
        '200':
          $ref: '#/components/responses/Mailing'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Oversight/{oversightid}/Update':
    put:
      tags:
        - BQ - Oversight
      summary: UpBQ Update details relating to Oversight
      description: UpBQ Update details relating to Oversight
      operationId: UpdateOversight
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/oversightid'
      requestBody:
        $ref: '#/components/requestBodies/Oversight'
      responses:
        '200':
          $ref: '#/components/responses/Oversight'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductInventoryDistribution/{productinventorydistributionid}/Provisioning/{provisioningid}/Update':
    put:
      tags:
        - BQ - Provisioning
      summary: UpBQ Update details relating to Provisioning
      description: UpBQ Update details relating to Provisioning
      operationId: UpdateProvisioning
      parameters:
        - $ref: '#/components/parameters/productinventorydistributionid'
        - $ref: '#/components/parameters/provisioningid'
      requestBody:
        $ref: '#/components/requestBodies/Provisioning'
      responses:
        '200':
          $ref: '#/components/responses/Provisioning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Documentation of Product Inventory Distribution Administrative Plan ||\r\n|"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Party who is involved in Product Inventory Distribution Administrative Plan ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: The identifier of Condition
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: Refers to the lifecycle of a Condition
    condition:
      type: object
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/identifier'
        ConditionName:
          $ref: '#/components/schemas/name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/datetime'
        ConditionStatus:
          $ref: '#/components/schemas/status'
      description: The required status/situation before the routine can be undertaken
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: The timing and key actions/milestones involved in completing the routine
    businessservicetypevalues:
      type: object
      properties:
        Businessservicetypevalues:
          type: string
          description: ''
          format: enumeration
      description: ''
    businessservice:
      type: object
      properties:
        BusinessServiceType:
          $ref: '#/components/schemas/businessservicetypevalues'
      description: The Distribution specific Business Service
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: ">\r\n* `Short-TermGoal` - \r\n* `Long-TermGoal` - \r\n* `BusinessGoal` - \r\n* `PerformanceGoal` - \r\n* `FinancialGoal` - \r\n* `OutcomeGoal` - \r\n* `SMARTGoal` - \r\n"
    goaldatetimetypevalues:
      enum:
        - SettingDate
        - PlanningDate
        - StartDate
        - ReviewDate
        - CompletionDate
      type: string
      description: ">\r\n* `SettingDate` - \r\n* `PlanningDate` - \r\n* `StartDate` - \r\n* `ReviewDate` - \r\n* `CompletionDate` - \r\n"
    goaldatetime:
      type: object
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/datetime'
        GoalDateAndTimeType:
          $ref: '#/components/schemas/goaldatetimetypevalues'
      description: 'The key dates and times of Goal like Setting Data, Planning Date, Start Date, Review Date, Completion Date.'
    goalstatustypevalues:
      enum:
        - Setting
        - Planning
        - Execution
        - MonitoringAndEvaluation
        - CompletionOrAchievement
        - MaintenanceOrSustainment
        - ClosureOrRenewal
      type: string
      description: ">\r\n* `Setting` - \r\n* `Planning` - \r\n* `Execution` - \r\n* `MonitoringAndEvaluation` - \r\n* `CompletionOrAchievement` - \r\n* `MaintenanceOrSustainment` - \r\n* `ClosureOrRenewal` - \r\n"
    goalstatus:
      type: object
      properties:
        GoalStatus:
          $ref: '#/components/schemas/status'
        GoalStatusType:
          $ref: '#/components/schemas/goalstatustypevalues'
      description: 'The lifecycle status of Goal like Goal Setting, Planning, Execution, Monitoring and Evaluation, Completion or Achievement, Maintenance or Sustainment, Closure or Renewal'
    goal:
      type: object
      properties:
        GoalType:
          $ref: '#/components/schemas/goaltypevalues'
        GoalDefinition:
          $ref: '#/components/schemas/text'
        GoalName:
          $ref: '#/components/schemas/name'
        GoalDateAndTime:
          $ref: '#/components/schemas/goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/goalstatus'
      description: ''
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: "A Classification value that distinguishes between Budgets within Product Inventory Distribution Administrative Plan according to the type of resource and/or activity that is budgetted ||\r\n|"
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: Amount of budget which is arranged whitin Product Inventory Distribution Administrative Plan CurrencyAndAmount|CurrencyAndAmount (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022  ()
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: 'An arrangement which is specifying an estimate of costs, revenues, and resources over a specified period, reflecting a reading of future financial conditions and goals. (adapted from Business Dictionary)'
    plannedaction:
      type: object
      properties:
        PlannedAction:
          type: string
          description: 'An action that is arranged in a plan for doing or achieving something '
          format: class
      description: 'An action that is arranged in a plan for doing or achieving something '
    plantypevalues:
      enum:
        - AdministrativePlan
        - ManagementPlan
        - StratgyPlan
        - FinancialPlan
        - DevelopmentPlan
      type: string
      description: ">\r\n* `AdministrativePlan` - \r\n* `ManagementPlan` - \r\n* `StratgyPlan` - \r\n* `FinancialPlan` - \r\n* `DevelopmentPlan` - \r\n"
    plan:
      type: object
      properties:
        PlanGoal:
          $ref: '#/components/schemas/goal'
        PlanBudget:
          $ref: '#/components/schemas/budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/plannedaction'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
        PlanValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/text'
      description: "An unique reference to an item or an occurrence of Product Inventory Distribution Administrative Plan ||\r\n|"
    Distribution:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductInventoryDistributionAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        DistributionReference:
          $ref: '#/components/schemas/plannedaction'
        DistributionType:
          $ref: '#/components/schemas/text'
      description: The Distribution is an activity that is performed as one aspect of carrying out the Distribution
    Provisioning:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductInventoryDistributionAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        ProvisioningReference:
          $ref: '#/components/schemas/plannedaction'
        ProvisioningType:
          $ref: '#/components/schemas/text'
      description: The Distribution is an activity that is performed as one aspect of carrying out the Distribution
    Mailing:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductInventoryDistributionAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        MailingReference:
          $ref: '#/components/schemas/plannedaction'
        MailingType:
          $ref: '#/components/schemas/text'
      description: The Distribution is an activity that is performed as one aspect of carrying out the Distribution
    Oversight:
      type: object
      properties:
        Preconditions:
          $ref: '#/components/schemas/condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        Schedule:
          $ref: '#/components/schemas/schedule'
        BusinessService:
          $ref: '#/components/schemas/businessservice'
        Postconditions:
          $ref: '#/components/schemas/condition'
        ProductInventoryDistributionAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        OversightReference:
          $ref: '#/components/schemas/plannedaction'
        OversightType:
          $ref: '#/components/schemas/text'
      description: The Distribution is an activity that is performed as one aspect of carrying out the Distribution
    analysistypevalues:
      enum:
        - PerformanceAnalysis
        - ActivityAnalysis
        - RevenueAnalysis
        - CostAnalysis
        - PredictiveAnalysis
        - BehavioralAnalysis
        - ProfitabilityAnalysis
        - CompetitiveAnalysis
        - CohortAnalysis
        - SegmentAnalysis
        - SWOTAnalysis
        - Benchmarking
        - PositioningAnalysis
        - ScenarioAnalysis
        - IntelligenceGathering
        - Profiling
      type: string
      description: ">\r\n* `PerformanceAnalysis` - \r\n* `ActivityAnalysis` - \r\n* `RevenueAnalysis` - \r\n* `CostAnalysis` - \r\n* `PredictiveAnalysis` - \r\n* `BehavioralAnalysis` - \r\n* `ProfitabilityAnalysis` - \r\n* `CompetitiveAnalysis` - \r\n* `CohortAnalysis` - \r\n* `SegmentAnalysis` - \r\n* `SWOTAnalysis` - \r\n* `Benchmarking` - \r\n* `PositioningAnalysis` - \r\n* `ScenarioAnalysis` - \r\n* `IntelligenceGathering` - \r\n* `Profiling` - \r\n"
    analysis:
      type: object
      properties:
        AnalysisType:
          $ref: '#/components/schemas/analysistypevalues'
        AnalysisResult:
          $ref: '#/components/schemas/text'
        AnalysisPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/text'
        AnalysisSchedule:
          $ref: '#/components/schemas/schedule'
      description: ''
    productinventorydistributionadministrativeplan:
      type: object
      properties:
        ProductInventoryDistributionAdministrativePlan:
          type: string
          description: An AdministrativePlan for distribution of ProductInventory
          format: class
      description: ''
    task:
      type: object
      properties:
        Task:
          type: string
          description: ''
          format: datatype
      description: ''
    ProductInventoryDistributionOutcome:
      type: object
      properties:
        ProductInventoryDistributionPerformanceAnalysis:
          $ref: '#/components/schemas/analysis'
        ProductInventoryDistributionActivityAnalysis:
          $ref: '#/components/schemas/analysis'
        ProductInventoryDistributionAdministrativePlan:
          $ref: '#/components/schemas/productinventorydistributionadministrativeplan'
        ProductInventoryDistributionAdministrationTask:
          $ref: '#/components/schemas/task'
      description: The Distribution is an activity that is performed as one aspect of carrying out the Distribution
    assignment:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
        SubjectMatter:
          type: string
          description: ''
          format: object
      description: "The assignment of a required activity to a responsibe party in Product Inventory Distribution Administrative Plan ||\r\n|"
    actiontypevalues:
      enum:
        - Initiate
        - Execute
        - Create
        - Transfer
        - Pay
        - Deliver
        - Apply
        - Calculate
      type: string
      description: ">\r\n* `Initiate` - \r\n* `Execute` - \r\n* `Create` - \r\n* `Transfer` - \r\n* `Pay` - \r\n* `Deliver` - \r\n* `Apply` - \r\n* `Calculate` - \r\n"
    action:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/actiontypevalues'
      description: ''
    arrangementstatustypevalues:
      enum:
        - Requested
        - Proposed
        - Offered
        - Accepted
        - Cancelled
        - Fulfilled
        - Terminated
      type: string
      description: ">\r\n* `Requested` - \r\n* `Proposed` - \r\n* `Offered` - \r\n* `Accepted` - \r\n* `Cancelled` - \r\n* `Fulfilled` - \r\n* `Terminated` - \r\n"
    arrangementstatus:
      type: object
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/status'
        ArrangementStatusType:
          $ref: '#/components/schemas/arrangementstatustypevalues'
      description: 'A characteristic of arrangement which refers to the LifecycleStatus of arrangement (e.g., requested, proposed, offered, accepted, cancelled, terminated, fulfilled, etc.)'
    subject:
      type: object
      properties:
        Subject:
          type: string
          description: A thing that is discussed or dealt whit in agreement/arrangement about doing or not doing (as action) something.
          format: class
      description: ''
    arrangementtypevalues:
      enum:
        - SweepArrangement
        - WithdrawalArrangement
        - DepositArrangement
        - InterestArrangement
        - FeeArrangement
        - LienArrangement
        - InformationArrangement
        - PaymentArrangement
        - EntitlementArrangement
        - PeriodArrangement
        - CollateralArrangement
        - LimitArrangement
        - AccessArrangement
        - CardPaymentArrangement
        - StandingOrderArrangement
        - OverdraftArrangement
        - RepaymentArrangement
        - StatementArrangement
        - CreditTransferArrangement
        - ProductAndServiceArrangement
        - FactoringArrangement
        - RolloverArrangement
        - RestructuringArrangement
        - InsuranceArrangement
        - CollectionArrangement
        - UnderwritingArrangement
        - TerminationArrangement
        - MaturityArrangement
      type: string
      description: ">\r\n* `SweepArrangement` - An arrangement into which is promised for the set-up and execution of structured sweeps to and from the facility to a linked account.\r\n* `WithdrawalArrangement` - An arrangement into which is promised to deliver Withdraw Service  to take fund out of an account. \r\n* `DepositArrangement` - An arrangement into which is promised to deliver Deposit Service  to place funds into an account for safekeeping. \r\n* `InterestArrangement` - An arrangement into which is promised to apply a pricing element expressed in a percentage  to a principal amount.\r\n* `FeeArrangement` - An arrangement into which is promised to apply a charge for services rendered. \r\n* `LienArrangement` - An arrangement into which is promised for placing a lien or block on the account for a specified purpose, amount, and period. \r\n* `InformationArrangement` - An arrangement concerning the information the bank will provide about the agreement/account\r\n* `PaymentArrangement` - An arrangement into which is promised to deliver a specific payment service including regular payments, standing orders, direct debits and bill pay instructions. \r\n* `EntitlementArrangement` - Right or obligation linked to the involvement of a party in an agreement\r\n* `PeriodArrangement` - \r\n* `CollateralArrangement` - An arrangement into which is promised for handling the oversight of the allocation, valuation and administration of collateral associated with the facility. \r\n* `LimitArrangement` - An arrangement to limit something\ne.g., the number of transaction per week, the amount of money allowed to withdraw per week/day and etc. \r\n* `AccessArrangement` - An arrangement that allows or restricts the access to a service or product, channel or device through a specific access point\r\n* `CardPaymentArrangement` - An arrangement into which is promised to deliver Card payment Service to execute payment transactions through a payment card, including online payments. \r\n* `StandingOrderArrangement` - An arrangement into which is promised to deliver Standing Order Service to make regular transfers on given dates to a named beneﬁciary. \r\n* `OverdraftArrangement` - An arrangement into which is promised to deliver Overdraft Service  that allows fund transfer even if there is no provision on the account. \r\n* `RepaymentArrangement` - An arrangement into which is promised for paying back money previously borrowed from a lender. \r\n* `StatementArrangement` - An arrangement into which is promised to deliver a reporting service on payment transactions registered on an account. \r\n* `CreditTransferArrangement` - An arrangement into which is promised to allow a payer to transfer fund to a beneficiary. \r\n* `ProductAndServiceArrangement` - \r\n* `FactoringArrangement` - \r\n* `RolloverArrangement` - Arrangement stipulating the modalities for an automatic renewal of the agreement\n\ni.e. the replacement of the agreement with a new one without renewed negociation and witout explicit agreement of the customer \r\n* `RestructuringArrangement` - \r\n* `InsuranceArrangement` - \r\n* `CollectionArrangement` - An arrangement into which is promised to collect past-due debts from borrowers\r\n* `UnderwritingArrangement` - A contractual agreement between parties that commits the underwriter to assuming risk.\r\n* `TerminationArrangement` - \r\n* `MaturityArrangement` - \r\n"
    arrangement:
      type: object
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/action'
        ArrangementStartDate:
          $ref: '#/components/schemas/datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/subject'
        Arrangementtype:
          $ref: '#/components/schemas/arrangementtypevalues'
      description: The set of administrative responsibilities defined in Product Inventory Distribution Administrative Plan Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()
    balancetypevalues:
      enum:
        - OpeningBalance
        - ClosingBalance
        - CurrentBalance
        - AvailableBalance
        - LedgerBalance
        - ReserveBalance
        - FreeBalance
        - PrincipalBalance
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - PreviouslyClosedBooked
        - Expected
      type: string
      description: ">\r\n* `OpeningBalance` - Book balance of the account at the beginning of the account servicer's business day. It always equals the closing book balance from the previous business day. Note: the available balance at the beginning of the account servicer's business day may be different from the closing book balance from the previous business day. (ISO20022)\r\n* `ClosingBalance` - Balance of the account at the end of the account servicer's business day. It is the sum of the opening balance at the beginning of the day and all entries booked to the account during the account servicer's business day. (ISO20022)\r\n* `CurrentBalance` - Balance of the account at a precise moment in time. (ISO20022)\r\n* `AvailableBalance` - Balance of money or securities that is at the disposal of the account owner on the date specified. (ISO20022)\r\n* `LedgerBalance` - Ledger balance refers to posted transactions (e.g. limit authorisation amount - posted transactions). (ISO20022)\r\n* `ReserveBalance` - \r\n* `FreeBalance` - \r\n* `PrincipalBalance` - \r\n* `ClosingAvailable` - Closing balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `ClosingBooked` - Balance of the account at the end of the pre-agreed account reporting period. It is the sum of the opening booked balance at the beginning of the period and all entries booked to the account during the pre-agreed account reporting period.\r\n* `ForwardAvailable` - Forward available balance of money that is at the disposal of the account owner on the date specified.\r\n* `Information` - Balance for informational purposes.\r\n* `InterimAvailable` - Available balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `InterimBooked` - Balance calculated in the course of the account servicer's business day, at the time specified, and subject to further changes during the business day. The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period specified.\r\n* `OpeningAvailable` - Opening balance of amount of money that is at the disposal of the account owner on the date specified.\r\n* `OpeningBooked` - Book balance of the account at the beginning of the account reporting period. It always equals the closing book balance from the previous report.\r\n* `PreviouslyClosedBooked` - Balance of the account at the previously closed account reporting period. The opening booked balance for the new period has to be equal to this balance.\nUsage: the previously booked closing balance should equal (inclusive date) the booked closing balance of the date it references and equal the actual booked opening balance of the current date.\r\n* `Expected` - Balance, composed of booked entries and pending items known at the time of calculation, which projects the end of day balance if everything is booked on the account and no other entry is posted.\r\n"
    debitcreditindicatortvalues:
      enum:
        - Debit
        - Credit
      type: string
      description: ">\r\n* `Debit` - Transaction is a debt entry\r\n* `Credit` - Transaction is a credit entry\r\n"
    balancecounterpartytypevalues:
      enum:
        - Bilateral
        - Multilateral
      type: string
      description: ">\r\n* `Bilateral` - Balance calculated regarding one member in the system. (ISO20022)\r\n* `Multilateral` - Balance calculated regarding all members in the system. (ISO20022)\r\n"
    balancesubtypevalues:
      enum:
        - Adjustment
        - Basecurrency
        - Blocked
        - Blockedfunds
        - Daylightoverdraft
        - Eligibleassets
        - Firmcollateralization
        - Amountsthathavebeenusedtoserveasfirmcollateral
        - Securitiesforecast
        - Netfunding
        - Intermediate
        - Localcurrency
        - Limitrelated
        - Reservedliquidity
        - Securitiespending
        - Payinpayout
        - Progressiveaverage
        - Reserve
        - Selfcollateralization
        - Amountsthathavebeenusedtoserveasselfcollateral
        - Threshold
      type: string
      description: ">\r\n* `Adjustment` - Balance to be held in the settlement account in order to comply with the average reserve due, in the event that the bank's balance is equal to the reserve due during the remaining days of the maintenance period.\r\n* `Basecurrency` - Balance representing the amount in the domestic or base accounting currency.\r\n* `Blocked` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes. In some countries, a blocked balance is known as a 'reserve' balance.\r\n* `Blockedfunds` - Balance representing funds that cannot be touched by the account owner.\r\n* `Daylightoverdraft` - Balance representing the intra day overdraft granted by the Central Bank to financial institutions participating in a RTGS system. This balance may vary over time and shall be offset at the end of the day.\r\n* `Eligibleassets` - Balance representing the potential loan a Central Bank would make in cash if the collateral is pledged, eg, securities available and eligible as collateral with the Central Bank.\r\n* `Firmcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral.\r\n* `Amountsthathavebeenusedtoserveasfirmcollateral` - Balance representing the cash equivalent resulting from evaluation of existing holdings at CSD that are qualified to serve as collateral and have been used as collateral.\r\n* `Securitiesforecast` - Balance representing the total of all balance types representing the forecast of transactions to settle, blocked items, custody transactions and corporate actions cash disbursements.\r\n* `Netfunding` - Balance representing the net amount to be funded resulting from the difference between the total of all transactions with a cash impact and the existing cash coverage.\r\n* `Intermediate` - Balance representing an intermediate amount such as the opening or closing balance incrementally carried forward from one page to the next in a multi-page statement or report.\r\n* `Localcurrency` - Balance representing the amount in the local market currency for which the asset is held.\r\n* `Limitrelated` - Balance of a specific limit value, eg, a bilateral balance is calculated in relation to a given bilateral limit.\r\n* `Reservedliquidity` - Balance representing the amount that a financial institution has set aside for a specific reason and which is therefore not available. In the context of CSDs, reservation of liquidity made to meet settlement obligations.\r\n* `Securitiespending` - Balance of securities pending delivery, such as orders to sell securities have been executed but settlement of the open transactions has not been confirmed.\r\n* `Payinpayout` - Balance representing the fictive amount of automated direct debits or payment based on standing arrangements between the CSD and the user. Usage: Pay-Ins and Pay-Outs can be different based on individual payment instructions or available funds.\r\n* `Progressiveaverage` - Average of the daily balances on the account used to fulfil the reserve requirements calculated from the beginning of the maintenance period.\r\n* `Reserve` - Balance representing the regulatory reserve that a financial institution must have with the account servicing institution, eg, the minimum credit balance a financial institution is to keep with its Central Bank for mandatory reserve purposes.\r\n* `Selfcollateralization` - Balance representing the forecast of the cash-equivalent resulting from evaluation of the net incoming balance of securities qualified to serve as collateral for which settlement instructions are held at.\r\n* `Amountsthathavebeenusedtoserveasselfcollateral` - Balance representing the cash-equivalent resulting from evaluation of incoming securities, qualified to serve as collateral and actually used as collateral, which have been settled during the settlement process.\r\n* `Threshold` - Balance representing the amount that will be destined for investment. Difference between available balance and threshold for investment limit.\r\n"
    accountbalance:
      type: object
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/amount'
        BalanceType:
          $ref: '#/components/schemas/balancetypevalues'
        BalanceValueDate:
          $ref: '#/components/schemas/datetime'
        BalanceIndicator:
          $ref: '#/components/schemas/debitcreditindicatortvalues'
        BalanceCounterpartyType:
          $ref: '#/components/schemas/balancecounterpartytypevalues'
        BalanceCalculationDate:
          $ref: '#/components/schemas/datetime'
        BalanceSubType:
          $ref: '#/components/schemas/balancesubtypevalues'
      description: Balance of budget which is arranged whitin Product Inventory Distribution Administrative Plan Balance|Balance (https://www.iso20022.org/standardsrepository/type/Balance)|Standard|ISO20022 BM ()
    plantype:
      type: object
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/name'
        PlanType:
          $ref: '#/components/schemas/plantypevalues'
      description: "The type of Product Inventory Distribution Administrative Plan ||\r\n|"
    ProductInventoryDistributionAdministrativePlan:
      type: object
      properties:
        ProductInventoryDistributionAdministrativePlanBudgetType:
          $ref: '#/components/schemas/budgettype'
        ProductInventoryDistributionAdministrativePlanBudget:
          $ref: '#/components/schemas/amount'
        ProductInventoryDistributionAdministrativePlanAssignment:
          $ref: '#/components/schemas/assignment'
        ProductInventoryDistributionAdministrativePlanDuty:
          $ref: '#/components/schemas/arrangement'
        ProductInventoryDistributionAdministrativePlanAssociatedParty:
          $ref: '#/components/schemas/involvedparty'
        ProductInventoryDistributionAdministrativePlanBudgetBalance:
          $ref: '#/components/schemas/accountbalance'
        ProductInventoryDistributionAdministrativePlanSubjectMatter:
          type: string
          description: The subject matter of Product Inventory Distribution Administrative Plan
          format: object
        ProductInventoryDistributionAdministrativePlanType:
          $ref: '#/components/schemas/plantype'
        ProductInventoryDistributionAdministrativePlanReference:
          $ref: '#/components/schemas/plan'
        ProductInventoryDistributionAdministrativePlanDescription:
          $ref: '#/components/schemas/text'
      description: "Handle and assign the day to day activities, capture time, costs and income for an operational unit within Product Inventory Distribution. \n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProductInventoryDistributionAdministrativePlan:
      description: ProductInventoryDistributionAdministrativePlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductInventoryDistributionAdministrativePlan'
    Distribution:
      description: Distribution
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Distribution'
    Mailing:
      description: Mailing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Mailing'
    Oversight:
      description: Oversight
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Oversight'
    Provisioning:
      description: Provisioning
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Provisioning'
  parameters:
    productinventorydistributionid:
      name: productinventorydistributionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    distributionid:
      name: distributionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    mailingid:
      name: mailingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    oversightid:
      name: oversightid
      in: path
      required: true
      style: simple
      schema:
        type: string
    provisioningid:
      name: provisioningid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProductInventoryDistributionAdministrativePlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductInventoryDistributionAdministrativePlan'
      required: true
    Distribution:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Distribution'
      required: true
    Mailing:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Mailing'
      required: true
    Oversight:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Oversight'
      required: true
    Provisioning:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Provisioning'
      required: true