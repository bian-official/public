openapi: 3.0.1
info:
  title: Production Release
  description: Maintain and apply production release tests for new and updated systems
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/ProductionRelease/13.0.0
paths:
  /ProductionRelease/Evaluate:
    post:
      tags:
        - CR - ProductionSystemAssessment
      summary: EvCR Evaluate various risk exposures for a production release
      description: EvCR Evaluate various risk exposures for a production release
      operationId: Evaluate
      requestBody:
        $ref: '#/components/requestBodies/ProductionSystemAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSystemAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/Update':
    put:
      tags:
        - CR - ProductionSystemAssessment
      summary: UpCR Update aspects of an active production release evaluation
      description: UpCR Update aspects of an active production release evaluation
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionSystemAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSystemAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/Exchange':
    put:
      tags:
        - CR - ProductionSystemAssessment
      summary: 'EcCR Accept, reject, etc aspects of an evaluation'
      description: 'EcCR Accept, reject, etc aspects of an evaluation'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionSystemAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSystemAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/Request':
    put:
      tags:
        - CR - ProductionSystemAssessment
      summary: RqCR Request manual intervention in an evaluation
      description: RqCR Request manual intervention in an evaluation
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionSystemAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSystemAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/Grant':
    put:
      tags:
        - CR - ProductionSystemAssessment
      summary: GrCR Obtain a permission grant under the production release evaluation
      description: GrCR Obtain a permission grant under the production release evaluation
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionSystemAssessment'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSystemAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/Retrieve':
    get:
      tags:
        - CR - ProductionSystemAssessment
      summary: ReCR Retrieve details about a production release evaluation
      description: ReCR Retrieve details about a production release evaluation
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
      responses:
        '200':
          $ref: '#/components/responses/ProductionSystemAssessment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/FunctionalRisk/{functionalriskid}/Exchange':
    put:
      tags:
        - BQ - FunctionalRisk
      summary: 'EcBQ Accept, reject, confirm a functional risk assessment'
      description: 'EcBQ Accept, reject, confirm a functional risk assessment'
      operationId: ExchangeFunctionalRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/functionalriskid'
      requestBody:
        $ref: '#/components/requestBodies/FunctionalRisk'
      responses:
        '200':
          $ref: '#/components/responses/FunctionalRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/FunctionalRisk/{functionalriskid}/Retrieve':
    get:
      tags:
        - BQ - FunctionalRisk
      summary: ReBQ Retrieve details about a functional risk assessment
      description: ReBQ Retrieve details about a functional risk assessment
      operationId: RetrieveFunctionalRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/functionalriskid'
      responses:
        '200':
          $ref: '#/components/responses/FunctionalRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/ProductionRisk/{productionriskid}/Exchange':
    put:
      tags:
        - BQ - ProductionRisk
      summary: 'EcBQ Accept, reject, confirm a production risk assessment'
      description: 'EcBQ Accept, reject, confirm a production risk assessment'
      operationId: ExchangeProductionRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/productionriskid'
      requestBody:
        $ref: '#/components/requestBodies/ProductionRisk'
      responses:
        '200':
          $ref: '#/components/responses/ProductionRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/ProductionRisk/{productionriskid}/Retrieve':
    get:
      tags:
        - BQ - ProductionRisk
      summary: ReBQ Retrieve details about a production risk assessment
      description: ReBQ Retrieve details about a production risk assessment
      operationId: RetrieveProductionRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/productionriskid'
      responses:
        '200':
          $ref: '#/components/responses/ProductionRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/BusinessRisk/{businessriskid}/Exchange':
    put:
      tags:
        - BQ - BusinessRisk
      summary: 'EcBQ Accept, reject, confirm a business risk assessment'
      description: 'EcBQ Accept, reject, confirm a business risk assessment'
      operationId: ExchangeBusinessRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/businessriskid'
      requestBody:
        $ref: '#/components/requestBodies/BusinessRisk'
      responses:
        '200':
          $ref: '#/components/responses/BusinessRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/BusinessRisk/{businessriskid}/Retrieve':
    get:
      tags:
        - BQ - BusinessRisk
      summary: ReBQ Retrieve details about a business risk assessment
      description: ReBQ Retrieve details about a business risk assessment
      operationId: RetrieveBusinessRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/businessriskid'
      responses:
        '200':
          $ref: '#/components/responses/BusinessRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/OperationalRisk/{operationalriskid}/Exchange':
    put:
      tags:
        - BQ - OperationalRisk
      summary: 'EcBQ Accept, reject, confirm a operational risk assessment'
      description: 'EcBQ Accept, reject, confirm a operational risk assessment'
      operationId: ExchangeOperationalRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/operationalriskid'
      requestBody:
        $ref: '#/components/requestBodies/OperationalRisk'
      responses:
        '200':
          $ref: '#/components/responses/OperationalRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ProductionRelease/{productionreleaseid}/OperationalRisk/{operationalriskid}/Retrieve':
    get:
      tags:
        - BQ - OperationalRisk
      summary: ReBQ Retrieve details about a operational risk assessment
      description: ReBQ Retrieve details about a operational risk assessment
      operationId: RetrieveOperationalRisk
      parameters:
        - $ref: '#/components/parameters/productionreleaseid'
        - $ref: '#/components/parameters/operationalriskid'
      responses:
        '200':
          $ref: '#/components/responses/OperationalRisk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "The consolidated release evaluation combining the results of all underlying tests ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: The reference to and descriptive name of the production release system Name|Name (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022 ()
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: "Key dates associated with the assessment (e.g. notification date, commencement  date, completion date) ||\r\n|"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: Value of the specific date type ISODateTime|ISODateTime (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022 BM ()
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Reference to the business units responsible for the testing and deployment ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Reference to testing materials, results, assessments and other documents'
    testtypevalues:
      enum:
        - ProductEligibilityTest
        - NextBestProductTest
        - IssuedDeviceTest
        - CardHolderAuthenticationTest
        - CardFundsAvailableTest
        - CardTransactionFraudTest
        - CardStand-InAuthorizationTest
        - ExternalAccessRequestTest
        - SuitabilityTest
        - LegalComplianceTest
        - RegulatoryComplianceTest
        - SystemFunctionalTest
        - SystemProductionTest
        - SystemBusinessRiskTest
        - SystemOperationsTest
        - CreditPolicyComplianceTest
        - RuleSetAndDecisionTreeTest
        - ModelBasedTests
        - AssetAndLiabilityValuationTest
        - LiquidityAndCashFlowTest
        - RiskTest
        - SensitivityTest
      type: string
      description: ">\r\n* `ProductEligibilityTest` - \r\n* `NextBestProductTest` - \r\n* `IssuedDeviceTest` - \r\n* `CardHolderAuthenticationTest` - \r\n* `CardFundsAvailableTest` - \r\n* `CardTransactionFraudTest` - \r\n* `CardStand-InAuthorizationTest` - \r\n* `ExternalAccessRequestTest` - \r\n* `SuitabilityTest` - \r\n* `LegalComplianceTest` - \r\n* `RegulatoryComplianceTest` - \r\n* `SystemFunctionalTest` - \r\n* `SystemProductionTest` - \r\n* `SystemBusinessRiskTest` - \r\n* `SystemOperationsTest` - \r\n* `CreditPolicyComplianceTest` - \r\n* `RuleSetAndDecisionTreeTest` - \r\n* `ModelBasedTests` - \r\n* `AssetAndLiabilityValuationTest` - \r\n* `LiquidityAndCashFlowTest` - \r\n* `RiskTest` - \r\n* `SensitivityTest` - \r\n"
    test:
      type: object
      properties:
        TestResult:
          $ref: '#/components/schemas/text'
        TestGuidance:
          $ref: '#/components/schemas/text'
        TestType:
          $ref: '#/components/schemas/testtypevalues'
        TestDescription:
          $ref: '#/components/schemas/text'
      description: The result of the functional risk test (including required remedial actions/fixes where appropriate)
    FunctionalRisk:
      type: object
      properties:
        FunctionalRiskSystemTestType:
          $ref: '#/components/schemas/text'
        FunctionalRiskSystemTestDescription:
          $ref: '#/components/schemas/text'
        FunctionalRiskSystemTestWorkProduct:
          $ref: '#/components/schemas/workproduct'
        FunctionalRiskSystemTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    ProductionRisk:
      type: object
      properties:
        ProductionRiskSystemTestType:
          $ref: '#/components/schemas/text'
        ProductionRiskSystemTestDescription:
          $ref: '#/components/schemas/text'
        ProductionRiskSystemTestWorkProduct:
          $ref: '#/components/schemas/workproduct'
        ProductionRiskSystemTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    BusinessRisk:
      type: object
      properties:
        BusinessRiskSystemTestType:
          $ref: '#/components/schemas/text'
        BusinessRiskSystemTestDescription:
          $ref: '#/components/schemas/text'
        BusinessRiskTestWorkProduct:
          $ref: '#/components/schemas/workproduct'
        BusinessRiskTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    OperationalRisk:
      type: object
      properties:
        OperationalRiskSystemTestType:
          $ref: '#/components/schemas/text'
        OperationalRiskSystemTestDescription:
          $ref: '#/components/schemas/text'
        OperationalRiskSystemTestWorkProduct:
          $ref: '#/components/schemas/workproduct'
        OperationalRiskSystemTestResult:
          $ref: '#/components/schemas/test'
      description: "All kind of verifications \n\nExamples: Password verification"
    profile:
      type: object
      properties:
        Profile:
          type: string
          description: A brief description of the characteristics of something or someone. (Business Dictionary)
          format: class
      description: "Details the types of production release tests to be and actually applied ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The schedule for performing the range of release tests (planned and actual) ||\r\n|"
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: "Reference to associated documents ||\r\n|"
    ProductionSystemAssessment:
      type: object
      properties:
        ProductionReleaseName:
          $ref: '#/components/schemas/name'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/involvedparty'
        ProductionReleaseType:
          $ref: '#/components/schemas/text'
        ProductionReleaseDescription:
          $ref: '#/components/schemas/text'
        ProductionReleaseTestProfile:
          $ref: '#/components/schemas/profile'
        ProductionReleaseTestSchedule:
          $ref: '#/components/schemas/schedule'
        ProductionReleaseConsolidationRecord:
          $ref: '#/components/schemas/text'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        DateType:
          $ref: '#/components/schemas/datetimetypevalues'
        Date:
          $ref: '#/components/schemas/datetime'
      description: 'To test or assess an entity, possibly against some formal qualification or certification requirement within Production Release. '
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ProductionSystemAssessment:
      description: ProductionSystemAssessment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionSystemAssessment'
    FunctionalRisk:
      description: FunctionalRisk
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FunctionalRisk'
    ProductionRisk:
      description: ProductionRisk
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionRisk'
    BusinessRisk:
      description: BusinessRisk
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessRisk'
    OperationalRisk:
      description: OperationalRisk
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalRisk'
  parameters:
    productionreleaseid:
      name: productionreleaseid
      in: path
      required: true
      style: simple
      schema:
        type: string
    functionalriskid:
      name: functionalriskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    productionriskid:
      name: productionriskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    businessriskid:
      name: businessriskid
      in: path
      required: true
      style: simple
      schema:
        type: string
    operationalriskid:
      name: operationalriskid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    ProductionSystemAssessment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionSystemAssessment'
      required: true
    FunctionalRisk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FunctionalRisk'
      required: true
    ProductionRisk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductionRisk'
      required: true
    BusinessRisk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessRisk'
      required: true
    OperationalRisk:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationalRisk'
      required: true