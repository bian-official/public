openapi: 3.0.1
info:
  title: Regulatory Reporting
  description: This service domain administers and orchestrates the tasks required to meet the bank's regulatory reporting obligations
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/RegulatoryReporting/13.0.0
paths:
  '/RegulatoryReporting/{regulatoryreportingid}/Update':
    put:
      tags:
        - CR - RegulatoryComplianceAdministrativePlan
      summary: UpCR Update the regulatory reporting set up or schedule
      description: UpCR Update the regulatory reporting set up or schedule
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryComplianceAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryComplianceAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Request':
    put:
      tags:
        - CR - RegulatoryComplianceAdministrativePlan
      summary: RqCR Request an override to the regular reporting schedule (e.g. request ad hoc report)
      description: RqCR Request an override to the regular reporting schedule (e.g. request ad hoc report)
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryComplianceAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryComplianceAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Retrieve':
    get:
      tags:
        - CR - RegulatoryComplianceAdministrativePlan
      summary: ReCR Retrieve any details of the regulatory reporting administration
      description: ReCR Retrieve any details of the regulatory reporting administration
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryComplianceAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /RegulatoryReporting/Create:
    post:
      tags:
        - CR - RegulatoryComplianceAdministrativePlan
      summary: CrBQ Initiate the handling of a regulatory reporting enquiry
      description: CrBQ Initiate the handling of a regulatory reporting enquiry
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/RegulatoryComplianceAdministrativePlan'
      responses:
        '200':
          $ref: '#/components/responses/RegulatoryComplianceAdministrativePlan'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Authoring/{authoringid}/Capture':
    put:
      tags:
        - BQ - Authoring
      summary: CaBQ Provide transaction records as required to support regulatory reporting
      description: CaBQ Provide transaction records as required to support regulatory reporting
      operationId: CaptureAuthoring
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/authoringid'
      requestBody:
        $ref: '#/components/requestBodies/Authoring'
      responses:
        '200':
          $ref: '#/components/responses/Authoring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Consolidation/{consolidationid}/Retrieve':
    get:
      tags:
        - BQ - Consolidation
      summary: ReBQ Retrieve consolidated information for review
      description: ReBQ Retrieve consolidated information for review
      operationId: RetrieveConsolidation
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/consolidationid'
      responses:
        '200':
          $ref: '#/components/responses/Consolidation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Consolidation/{consolidationid}/Update':
    put:
      tags:
        - BQ - Consolidation
      summary: UpBQ Update or augment consolidated information to support report generation
      description: UpBQ Update or augment consolidated information to support report generation
      operationId: UpdateConsolidation
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/consolidationid'
      requestBody:
        $ref: '#/components/requestBodies/Consolidation'
      responses:
        '200':
          $ref: '#/components/responses/Consolidation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Authoring/{authoringid}/Exchange':
    put:
      tags:
        - BQ - Authoring
      summary: EcBQ Accept or reject a regulatory report prior to submission
      description: EcBQ Accept or reject a regulatory report prior to submission
      operationId: ExchangeAuthoring
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/authoringid'
      requestBody:
        $ref: '#/components/requestBodies/Authoring'
      responses:
        '200':
          $ref: '#/components/responses/Authoring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Authoring/{authoringid}/Retrieve':
    get:
      tags:
        - BQ - Authoring
      summary: ReBQ Retrieve regulatory reporting detail and reports for review
      description: ReBQ Retrieve regulatory reporting detail and reports for review
      operationId: RetrieveAuthoring
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/authoringid'
      responses:
        '200':
          $ref: '#/components/responses/Authoring'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Enquiries/{enquiriesid}/Update':
    put:
      tags:
        - BQ - Enquiries
      summary: UpBQ Update or augment consolidated information to support enquiry handling
      description: UpBQ Update or augment consolidated information to support enquiry handling
      operationId: UpdateEnquiries
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/enquiriesid'
      requestBody:
        $ref: '#/components/requestBodies/Enquiries'
      responses:
        '200':
          $ref: '#/components/responses/Enquiries'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Enquiries/{enquiriesid}/Exchange':
    put:
      tags:
        - BQ - Enquiries
      summary: EcBQ Accept or reject a regulatory enquiry response prior to submission
      description: EcBQ Accept or reject a regulatory enquiry response prior to submission
      operationId: ExchangeEnquiries
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/enquiriesid'
      requestBody:
        $ref: '#/components/requestBodies/Enquiries'
      responses:
        '200':
          $ref: '#/components/responses/Enquiries'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Enquiries/{enquiriesid}/Capture':
    put:
      tags:
        - BQ - Enquiries
      summary: CaBQ Provide transaction records as required to support regulatory enquiry
      description: CaBQ Provide transaction records as required to support regulatory enquiry
      operationId: CaptureEnquiries
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/enquiriesid'
      requestBody:
        $ref: '#/components/requestBodies/Enquiries'
      responses:
        '200':
          $ref: '#/components/responses/Enquiries'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/RegulatoryReporting/{regulatoryreportingid}/Enquiries/{enquiriesid}/Retrieve':
    get:
      tags:
        - BQ - Enquiries
      summary: ReBQ Retrieve regulatory enquiry detail and response for review
      description: ReBQ Retrieve regulatory enquiry detail and response for review
      operationId: RetrieveEnquiries
      parameters:
        - $ref: '#/components/parameters/regulatoryreportingid'
        - $ref: '#/components/parameters/enquiriesid'
      responses:
        '200':
          $ref: '#/components/responses/Enquiries'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: The business unit being assessed for enquiry if appropriate
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: The particular date and time point in the progression of time
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: ''
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: Entity that assigns and manages the identification.
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    productidentificationtypevalues:
      enum:
        - ISINCode
        - PackageCode
        - Buyersitemnumber
        - Commercialdescriptioncodename
        - EAN
        - Harmonizedtariffcodename
        - Manufacturersitemnumber
        - Modelnumber
        - Partnumber
        - Quotacategory
        - Stylenumber
        - Suppliersitemnumber
        - Universalproductcode
      type: string
      description: ">\r\n* `ISINCode` - \r\n* `PackageCode` - \r\n* `Buyersitemnumber` - Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` - A code to identify a product based on applicable commercial conditions.\r\n* `EAN` - The unique EAN (European Article Number) code.\r\n* `Harmonizedtariffcodename` - Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` - Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` - Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` - Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` - Product identifier used by the retail industry.\r\n* `Stylenumber` - Identification of the style of a product.\r\n* `Suppliersitemnumber` - Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` - Number assigned to a manufacturer's product by the Product Code Council.\r\n"
    productidentification:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/identifier'
        ProductIdentificationType:
          $ref: '#/components/schemas/productidentificationtypevalues'
      description: The identifier of product e.g. ISIN Code.
    bankingproducttypevalues:
      enum:
        - LoanProduct
        - CurrentAccountProduct
        - SavingAccountProduct
        - BrokeredProduct
        - TermDepositProduct
      type: string
      description: ">\r\n* `LoanProduct` - \r\n* `CurrentAccountProduct` - \r\n* `SavingAccountProduct` - \r\n* `BrokeredProduct` - \r\n* `TermDepositProduct` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: ''
    productstatustypevalues:
      enum:
        - Initiated
        - Announced
        - Sold
        - Obsolete
        - Active
      type: string
      description: ">\r\n* `Initiated` - \r\n* `Announced` - \r\n* `Sold` - \r\n* `Obsolete` - \r\n* `Active` - \r\n"
    productstatus:
      type: object
      properties:
        ProductStatus:
          $ref: '#/components/schemas/status'
        ProductStatusType:
          $ref: '#/components/schemas/productstatustypevalues'
      description: 'Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn).'
    bankingproduct:
      type: object
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/productidentification'
        ProductType:
          $ref: '#/components/schemas/bankingproducttypevalues'
        ProductLifecycleStatus:
          $ref: '#/components/schemas/productstatus'
        ProductPriority:
          $ref: '#/components/schemas/text'
        ProductDescription:
          $ref: '#/components/schemas/text'
        ProductVersion:
          $ref: '#/components/schemas/text'
        ProductName:
          $ref: '#/components/schemas/name'
      description: The instances of products/services being assessed if appropriate
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'Work documentation, forms and schedules produced and referenced during the enquiry'
    financialdocumenttypevalues:
      enum:
        - Meteredserviceinvoice
        - Creditnoterelatedtofinancialadjustment
        - Debitnoterelatedtofinancialadjustment
        - Commercialinvoice
        - Creditnote
        - Debitnote
        - Hireinvoice
        - Selfbilledinvoice
        - Remittanceadvicemessage
        - Relatedpaymentinstruction
        - Commercialcontract
        - Foreignexchangedealreference
        - Statementofaccount
        - Dispatchadvice
        - Purchaseorder
        - Structuredcommunicationreference
        - Billoflading
        - Voucher
        - Accountreceivableopenitem
        - Tradeservicesutilitytransaction
        - Cashierreceipt
        - Customerreceipt
        - Journal
        - Salereceipt
      type: string
      description: ">\r\n* `Meteredserviceinvoice` - Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\r\n* `Creditnoterelatedtofinancialadjustment` - Document is a credit note for the final amount settled for a commercial transaction.\r\n* `Debitnoterelatedtofinancialadjustment` - Document is a debit note for the final amount settled for a commercial transaction.\r\n* `Commercialinvoice` - Document is an invoice.\r\n* `Creditnote` - Document is a credit note.\r\n* `Debitnote` - Document is a debit note.\r\n* `Hireinvoice` - Document is an invoice for the hiring of human resources or renting goods or equipment.\r\n* `Selfbilledinvoice` - Document is an invoice issued by the debtor.\r\n* `Remittanceadvicemessage` - Document is a remittance advice sent separately from the current transaction.\r\n* `Relatedpaymentinstruction` - Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\r\n* `Commercialcontract` - Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\r\n* `Foreignexchangedealreference` - Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\r\n* `Statementofaccount` - Document is a statement of the transactions posted to the debtor's account at the supplier.\r\n* `Dispatchadvice` - Document is a dispatch advice.\r\n* `Purchaseorder` - Document is a purchase order.\r\n* `Structuredcommunicationreference` - Document is a structured communication reference provided by the creditor to identify the referred transaction.\r\n* `Billoflading` - Document is a shipping notice.\r\n* `Voucher` - Document is an electronic payment document.\r\n* `Accountreceivableopenitem` - Document is a payment that applies to a specific source document.\r\n* `Tradeservicesutilitytransaction` - Document is a transaction identifier as assigned by the Trade Services Utility.\r\n* `Cashierreceipt` - When the Sale system print the Cashier copy of the Payment receipt.\r\n* `Customerreceipt` - When the Sale System requires   the POI system to print the Customer receipt.\r\n* `Journal` - When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\r\n* `Salereceipt` - When the Sale System requires the POI system to print the Sale receipt.\r\n"
    documentdatetimetypevalues:
      enum:
        - CreationDate
        - CapturingDate
        - VersionDate
        - ValueDate
        - IssueDate
      type: string
      description: ">\r\n* `CreationDate` - \r\n* `CapturingDate` - \r\n* `VersionDate` - \r\n* `ValueDate` - \r\n* `IssueDate` - \r\n"
    document:
      type: object
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/identifier'
        DocumentVersion:
          type: string
          description: ''
          format: number
        DocumentType:
          $ref: '#/components/schemas/financialdocumenttypevalues'
        DocumentStatus:
          $ref: '#/components/schemas/status'
        DocumentDateTime:
          $ref: '#/components/schemas/datetime'
        DocumentName:
          $ref: '#/components/schemas/name'
        DocumentDateTimeType:
          $ref: '#/components/schemas/documentdatetimetypevalues'
        DocumentPurpose:
          $ref: '#/components/schemas/text'
        DocumentFormat:
          $ref: '#/components/schemas/text'
        DocumentSubject:
          $ref: '#/components/schemas/text'
        DocumentDescription:
          $ref: '#/components/schemas/text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
      description: The document reference for all classified/archived documents from the enquiry
    Enquiries:
      type: object
      properties:
        RegulatoryEnquiry:
          type: string
          description: The description of the requested information for the regulatory enquiry
          format: object
        EnquiryBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        EnquiryProductandServiceReference:
          $ref: '#/components/schemas/bankingproduct'
        EnquiryCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        EnquiryTransactionRecords:
          $ref: '#/components/schemas/text'
        RegulatoryEnquiryWorkProducts:
          $ref: '#/components/schemas/workproduct'
        RegulatoryEnquiryResult:
          type: string
          description: The record or report that is the outcome/result of the enquiry
          format: object
        RegulatoryEnquiryDocumentReference:
          $ref: '#/components/schemas/document'
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    Consolidation:
      type: object
      properties:
        RegulatoryReportTypeContentRequirements:
          $ref: '#/components/schemas/text'
        SourceBusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/involvedparty'
        SourceProductandServiceReference:
          $ref: '#/components/schemas/bankingproduct'
        SourceCustomerReference:
          $ref: '#/components/schemas/involvedparty'
        SourceTransactionRecords:
          $ref: '#/components/schemas/text'
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    organisationidentificationtypevalues:
      enum:
        - LEI
        - ELF
        - MIC
        - BICFI
        - Bankpartyidentification
        - Centralbankidentificationnumber
        - Clearingidentificationnumber
        - Certificateofincorporationnumber
        - Countryidentificationcode
        - Customernumber
        - Datauniversalnumberingsystem
        - Employeridentificationnumber
        - Gs1glnidentifier
        - SIREN
        - SIRET
        - Taxidentificationnumber
        - EANGLN
      type: string
      description: ">\r\n* `LEI` - Legal Entity Identifier is a code allocated to a party as described in ISO 17442 \"Financial Services - Legal Entity Identifier (LEI)\".\r\n* `ELF` - Entity Legal Forms is a code allocated to a party as described in ISO 20275 \"Financial services  Entity legal forms (ELF)\". \r\n* `MIC` - Market Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383 \"Codes for exchanges and market identifications\".\r\n* `BICFI` - Code allocated to a financial institution by the ISO 9362 Registration Authority as described in ISO 9362 \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".\r\n* `Bankpartyidentification` - Unique and unambiguous assignment made by a specific bank or similar financial institution to identify a relationship as defined between the bank and its client.\r\n* `Centralbankidentificationnumber` - A unique identification number assigned by a central bank to identify an organisation.\r\n* `Clearingidentificationnumber` - A unique identification number assigned by a clearing house to identify an organisation\r\n* `Certificateofincorporationnumber` - A unique identification number assigned by a designated authority to a certificate of incorporation and used to identify an organisation.\r\n* `Countryidentificationcode` - Country authority given organisation identification (e.g., corporate registration number)\r\n* `Customernumber` - Number assigned by an issuer to identify a customer.\nNumber assigned by a party to identify a creditor or debtor relationship.\r\n* `Datauniversalnumberingsystem` - A unique identification number provided by Dun & Bradstreet to identify an organisation.\r\n* `Employeridentificationnumber` - Number assigned by a registration authority to an employer.\r\n* `Gs1glnidentifier` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to GS1 numbering scheme rules.The number is used to retrieve detailed information that is linked to it.\r\n* `SIREN` - The SIREN number is a 9 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation in France.\r\n* `SIRET` - The SIRET number is a 14 digit code assigned by INSEE, the French National Institute for Statistics and Economic Studies, to identify an organisation unit in France. It consists of the SIREN number, followed by a five digit classification number, to identify the local geographical unit of that entity\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to identify an organisation.\r\n* `EANGLN` - Global Location Number. A non-significant reference number used to identify legal entities, functional entities, or physical entities according to the European Association for Numbering (EAN) numbering scheme rules. The number is used to retrieve detailed information that is linked to it. (iso20022)\r\n"
    organisationidentification:
      type: object
      properties:
        OrganisationIdentificationType:
          $ref: '#/components/schemas/organisationidentificationtypevalues'
        OrganisationIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    organisationdatetimetypevalues:
      enum:
        - RegistrationDate
        - EstablishmentDate
        - EntityExpirationDate
      type: string
      description: ">\r\n* `RegistrationDate` - Date and time at which a given organisation was officially registered. (ISO20022)\r\n* `EstablishmentDate` - Date when the organisation was established. ISO20022\r\n* `EntityExpirationDate` - The date the Legal Entity ceased operation or was merged. ISO20022\r\n"
    organisationdatetime:
      type: object
      properties:
        OrganisatioDate:
          $ref: '#/components/schemas/datetime'
        OrganisatioDateType:
          $ref: '#/components/schemas/organisationdatetimetypevalues'
      description: ''
    organisationtypevalues:
      enum:
        - LegalEntity
        - Authority
        - OrganisationUnit
        - FinancialInstitution
        - Charity
        - GovernmentBody
      type: string
      description: ">\r\n* `LegalEntity` - \r\n* `Authority` - \r\n* `OrganisationUnit` - \r\n* `FinancialInstitution` - \r\n* `Charity` - \r\n* `GovernmentBody` - \r\n"
    organisationnametypevalues:
      enum:
        - ShortName
        - TradingName
        - LegalName
      type: string
      description: ">\r\n* `ShortName` - \r\n* `TradingName` - \r\n* `LegalName` - \r\n"
    organisationname:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/name'
        NameType:
          $ref: '#/components/schemas/organisationnametypevalues'
      description: ''
    organisationlegalstructuretypevalues:
      enum:
        - Corporation
        - Individual
        - Supranational
        - Sovereign
        - Municipal
        - Province
        - State
        - County
        - Partnership
        - Financialinstitution
        - National
      type: string
      description: ">\r\n* `Corporation` - Legal structure is a corporation.\r\n* `Individual` - Legal structure is an individual.\r\n* `Supranational` - Legal structure is a supranational.\r\n* `Sovereign` - Legal structure is a sovereign.\r\n* `Municipal` - Legal structure is a municipal.\r\n* `Province` - Legal structure is a province.\r\n* `State` - Legal structure is a state.\r\n* `County` - Legal structure is a county.\r\n* `Partnership` - Legal structure is a partnership.\r\n* `Financialinstitution` - Legal structure is a financial institution.\r\n* `National` - Legal structure is a state.\r\n"
    organisation:
      type: object
      properties:
        OrganisationStructureHierarchy:
          $ref: '#/components/schemas/text'
        OrganisationIdentification:
          $ref: '#/components/schemas/organisationidentification'
        OrganisationSector:
          $ref: '#/components/schemas/text'
        LegalEntityIndicator:
          type: string
          description: ''
          format: string
        OrganisationDate:
          $ref: '#/components/schemas/organisationdatetime'
        OrganisationType:
          $ref: '#/components/schemas/organisationtypevalues'
        OrganisationName:
          $ref: '#/components/schemas/organisationname'
        OrganisationLegalStructure:
          $ref: '#/components/schemas/organisationlegalstructuretypevalues'
      description: Refers to the company group or subsidiary covered by the regulatory report
    regulatoryreport:
      type: object
      properties:
        RegulatoryReport:
          type: string
          description: "Information needed due to regulatory and statutory requirements. (ISO20022)\n\nA report required to support operational transparency that demonstrates compliance with some specification, law, policy, restriction, or other rule specified by a regulatory agency. (FIBO)\n\n\n\n"
          format: class
      description: Refers to the regulatory report
    Authoring:
      type: object
      properties:
        RegulatoryReportTypeComplianceReportingRequirements:
          $ref: '#/components/schemas/text'
        ReportingPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        ReportingBusinessLegalEntityReference:
          $ref: '#/components/schemas/organisation'
        ReportingBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        RegulatoryReportReference:
          $ref: '#/components/schemas/regulatoryreport'
        RegulatoryReport:
          $ref: '#/components/schemas/regulatoryreport'
        RegulatoryReportDocumentReference:
          $ref: '#/components/schemas/document'
      description: "A collection of one or more clerical routines that are to be followed to administer the operational unit/function\n\nExamples: Time-sheet recording"
    regulatoryauthority:
      type: object
      properties:
        RegulatoryAuthority:
          type: string
          description: An organisation that is alowed to impose regulations
          format: class
      description: "Reference to the interested regulatory reporting authority ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The details of all regulatory reporting requirements and scheduled reporting tasks ||\r\n|"
    regulation:
      type: object
      properties:
        RegulationDefinition:
          $ref: '#/components/schemas/text'
      description: "Reference to the regulation for which content is being collected ||\r\n|"
    reporttypevalues:
      enum:
        - FinancialReport
        - BusinessReport
        - ManagementReport
        - Statement
        - MaintenanceReport
        - RegulatoryReport
        - TaxReport
        - AnalysisReport
      type: string
      description: "The types of report, included in the reporting schedule ||\r\n|"
    RegulatoryComplianceAdministrativePlan:
      type: object
      properties:
        RegulatoryAuthorityReference:
          $ref: '#/components/schemas/regulatoryauthority'
        RegulatoryReportingSchedule:
          $ref: '#/components/schemas/schedule'
        RegulationReference:
          $ref: '#/components/schemas/regulation'
        RegulatoryReportType:
          $ref: '#/components/schemas/reporttypevalues'
      description: "Handle and assign the day to day activities, capture time, costs and income for an operational unit within Regulatory Reporting. \n"
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    RegulatoryComplianceAdministrativePlan:
      description: RegulatoryComplianceAdministrativePlan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryComplianceAdministrativePlan'
    Authoring:
      description: Authoring
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authoring'
    Consolidation:
      description: Consolidation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consolidation'
    Enquiries:
      description: Enquiries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enquiries'
  parameters:
    regulatoryreportingid:
      name: regulatoryreportingid
      in: path
      required: true
      style: simple
      schema:
        type: string
    authoringid:
      name: authoringid
      in: path
      required: true
      style: simple
      schema:
        type: string
    consolidationid:
      name: consolidationid
      in: path
      required: true
      style: simple
      schema:
        type: string
    enquiriesid:
      name: enquiriesid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    RegulatoryComplianceAdministrativePlan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegulatoryComplianceAdministrativePlan'
      required: true
    Authoring:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authoring'
      required: true
    Consolidation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consolidation'
      required: true
    Enquiries:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Enquiries'
      required: true