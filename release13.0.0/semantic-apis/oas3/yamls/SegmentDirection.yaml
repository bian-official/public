openapi: 3.0.1
info:
  title: Segment Direction
  description: Define market segments and develop and assess performance against the segment plan's performance goals
  contact:
    name: BIAN
    url: https://bian.org
  version: 13.0.0
servers:
  - url: https://virtserver.swaggerhub.com/B154/BIAN/SegmentDirection/13.0.0
paths:
  /SegmentDirection/Create:
    post:
      tags:
        - CR - SegmentStrategy
      summary: CrCR Create a segment strategy for the associated division
      description: CrCR Create a segment strategy for the associated division
      operationId: Create
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        '200':
          $ref: '#/components/responses/SegmentStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Update':
    put:
      tags:
        - CR - SegmentStrategy
      summary: UpCR Update details of the segment strategy
      description: UpCR Update details of the segment strategy
      operationId: Update
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        '200':
          $ref: '#/components/responses/SegmentStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Exchange':
    put:
      tags:
        - CR - SegmentStrategy
      summary: 'EcCR Accept, reject, etc. aspects or actions associated with the strategy'
      description: 'EcCR Accept, reject, etc. aspects or actions associated with the strategy'
      operationId: Exchange
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        '200':
          $ref: '#/components/responses/SegmentStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Capture':
    put:
      tags:
        - CR - SegmentStrategy
      summary: CaCR Capture activity details related to implementation of the strategy
      description: CaCR Capture activity details related to implementation of the strategy
      operationId: Capture
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        '200':
          $ref: '#/components/responses/SegmentStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Request':
    put:
      tags:
        - CR - SegmentStrategy
      summary: RqCR Request manual intervention
      description: RqCR Request manual intervention
      operationId: Request
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        '200':
          $ref: '#/components/responses/SegmentStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Grant':
    put:
      tags:
        - CR - SegmentStrategy
      summary: GrCR Grant permission for some action under the authority of the strategy
      description: GrCR Grant permission for some action under the authority of the strategy
      operationId: Grant
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
      requestBody:
        $ref: '#/components/requestBodies/SegmentStrategy'
      responses:
        '200':
          $ref: '#/components/responses/SegmentStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Retrieve':
    get:
      tags:
        - CR - SegmentStrategy
      summary: ReCR Retrieve details relating to the strategy and any supporting activities
      description: ReCR Retrieve details relating to the strategy and any supporting activities
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
      responses:
        '200':
          $ref: '#/components/responses/SegmentStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Initiative/Create':
    post:
      tags:
        - BQ - Initiative
      summary: CrBQ Create/instigate a supporting segment initiative
      description: CrBQ Create/instigate a supporting segment initiative
      operationId: CreateInitiative
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        '200':
          $ref: '#/components/responses/Initiative'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Initiative/{initiativeid}/Update':
    put:
      tags:
        - BQ - Initiative
      summary: UpBQ Update details for a segment initiative
      description: UpBQ Update details for a segment initiative
      operationId: UpdateInitiative
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
        - $ref: '#/components/parameters/initiativeid'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        '200':
          $ref: '#/components/responses/Initiative'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Initiative/{initiativeid}/Exchange':
    put:
      tags:
        - BQ - Initiative
      summary: 'EcBQ Accept, verify, reject, etc. aspects of an initiative'
      description: 'EcBQ Accept, verify, reject, etc. aspects of an initiative'
      operationId: ExchangeInitiative
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
        - $ref: '#/components/parameters/initiativeid'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        '200':
          $ref: '#/components/responses/Initiative'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Initiative/{initiativeid}/Capture':
    put:
      tags:
        - BQ - Initiative
      summary: CaBQ Capture activity details for a segment initiative
      description: CaBQ Capture activity details for a segment initiative
      operationId: CaptureInitiative
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
        - $ref: '#/components/parameters/initiativeid'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        '200':
          $ref: '#/components/responses/Initiative'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Initiative/{initiativeid}/Request':
    put:
      tags:
        - BQ - Initiative
      summary: RqBQ Request manual intervention into a segment initiative
      description: RqBQ Request manual intervention into a segment initiative
      operationId: RequestInitiative
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
        - $ref: '#/components/parameters/initiativeid'
      requestBody:
        $ref: '#/components/requestBodies/Initiative'
      responses:
        '200':
          $ref: '#/components/responses/Initiative'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/SegmentDirection/{segmentdirectionid}/Initiative/{initiativeid}/Retrieve':
    get:
      tags:
        - BQ - Initiative
      summary: ReBQ Retrieve details about a segment initiative
      description: ReBQ Retrieve details about a segment initiative
      operationId: RetrieveInitiative
      parameters:
        - $ref: '#/components/parameters/segmentdirectionid'
        - $ref: '#/components/parameters/initiativeid'
      responses:
        '200':
          $ref: '#/components/responses/Initiative'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          format: string
        status:
          type: string
          format: string
        message:
          type: string
          format: string
      description: Status Attributes
    businessunit:
      type: object
      properties:
        BusinessFunction:
          type: string
          description: ''
          format: string
        Goal:
          type: string
          description: ''
          format: string
      description: Business unit responsible for implementing a specific initiative supporting the segment strategy
    businessinitiativetypevalues:
      enum:
        - MarketExpansion
        - Diversification
        - MergersAndAcquisitions
        - ProcessImprovement
        - CostReduction
        - QualityManagement
        - RevenueGrowth
        - CostManagement
        - CapitalOptimization
        - CustomerExperienceImprovement
        - CustomerRetention
        - CustomerAcquisition
        - RegulatoryCompliance
        - RiskManagement
      type: string
      description: ">\r\n* `MarketExpansion` - Entering new geographic markets or targeting new customer segments to increase market share.\r\n* `Diversification` - Expanding the company's product or service offerings to reduce risk and tap into new revenue streams.\r\n* `MergersAndAcquisitions` - -    Acquiring or merging with other companies to achieve strategic growth or synergy.\n\n\r\n* `ProcessImprovement` - Enhancing efficiency and productivity by streamlining processes, adopting best practices, or implementing new technologies\r\n* `CostReduction` - Identifying and eliminating unnecessary expenses to improve profitability.\r\n* `QualityManagement` - Implementing quality control systems and continuous improvement practices to enhance product or service quality.\r\n* `RevenueGrowth` - Strategies focused on increasing sales and revenue, such as launching new products, enhancing sales techniques, or expanding marketing efforts\r\n* `CostManagement` - -    Initiatives aimed at controlling and reducing costs to improve financial health.\n\r\n* `CapitalOptimization` - Improving the use of capital through better investment decisions, asset management, or debt restructuring\r\n* `CustomerExperienceImprovement` - Enhancing customer satisfaction and loyalty by improving customer service, user experience, or product quality\r\n* `CustomerRetention` - Implementing programs and strategies to retain existing customers, such as loyalty programs, personalized marketing, or improved customer support\r\n* `CustomerAcquisition` - Strategies to attract new customers, including marketing campaigns, promotional offers, and strategic partnerships\r\n* `RegulatoryCompliance` - -    Ensuring that the company adheres to all relevant laws, regulations, and industry standards.\n\r\n* `RiskManagement` - Identifying, assessing, and mitigating risks that could impact the business, including financial, operational, and strategic risks\r\n"
    text:
      type: object
      properties:
        Text:
          type: string
          description: Text is a character string such as a finite set of characters generally in the form of words of a language. (UN/CEFACT)
          format: datatype
      description: "Assessment of how the work is progressing towards achieving the goal, including projections of likely outcomes ||\r\n|"
    schedule:
      type: object
      properties:
        ScheduleType:
          $ref: '#/components/schemas/text'
      description: "The target and actual strategy implementation schedule - recording planned and actual initiatives associated with the realization of the strategy ||\r\n|"
    workproducttypevalues:
      enum:
        - Document
        - WorkingPaper
        - ActivityLog
        - Form
        - File
        - MeetingSchedule
        - MeetingMinute
      type: string
      description: ">\r\n* `Document` - \r\n* `WorkingPaper` - \r\n* `ActivityLog` - \r\n* `Form` - \r\n* `File` - File of consolidated notes, evaluations and recommendations for the work task\r\n* `MeetingSchedule` - \r\n* `MeetingMinute` - \r\n"
    value:
      type: object
      properties:
        Value:
          type: string
          description: "Data or set of data \n\n- A value is the concept of worth in general that is assigned or is determined by measurement, assessment or calculation. (UN/CEFACT)"
          format: datatype
      description: ''
    name:
      type: object
      properties:
        Name:
          type: string
          description: 'A name is a word or phrase that constitutes the distinctive designation of a person, place, thing or concept. (UN/CEFAT)'
          format: datatype
      description: "Name by which a party is known and which is usually used to identify that party. (ISO20022)\n"
    partytypevalues:
      enum:
        - Person
        - Organisation
      type: string
      description: ">\r\n* `Person` - Human entity, as distinguished from a corporate entity (which is sometimes referred to as an 'artificial person'). ISO20022\r\n* `Organisation` - Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022\r\n"
    datetimetypevalues:
      enum:
        - MaturityDate
        - InitiatedDate
        - RequestedDate
        - ExecutedDate
        - OpenDate
        - CloseDate
        - ExpiryDate
        - EffectiveDate
        - CreatingDate
        - ActivationDate
        - DeactivationDate
        - BlockingDate
        - SendingDate
        - ValidFromDate
        - ValidToDate
        - ReceivingDate
        - SigningDate
        - DueDate
        - ValueDate
        - FulfillmentDate
      type: string
      description: ">\r\n* `MaturityDate` - \r\n* `InitiatedDate` - \r\n* `RequestedDate` - \r\n* `ExecutedDate` - \r\n* `OpenDate` - \r\n* `CloseDate` - \r\n* `ExpiryDate` - \r\n* `EffectiveDate` - \r\n* `CreatingDate` - \r\n* `ActivationDate` - \r\n* `DeactivationDate` - \r\n* `BlockingDate` - \r\n* `SendingDate` - \r\n* `ValidFromDate` - \r\n* `ValidToDate` - \r\n* `ReceivingDate` - \r\n* `SigningDate` - \r\n* `DueDate` - \r\n* `ValueDate` - \r\n* `FulfillmentDate` - \r\n"
    datetime:
      type: object
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/text'
        TimeZoneCode:
          $ref: '#/components/schemas/text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/text'
        DateTimeType:
          $ref: '#/components/schemas/datetimetypevalues'
      description: ''
    partyidentificationtypevalues:
      enum:
        - Taxidentificationnumber
        - Nationalregistrationnumber
        - Registrationauthorityidentification
        - LEI(LegalEntityIdentifier)
        - Alienregistrationnumber
        - Passportnumber
        - Taxexemptidentificationnumber
        - Corporateidentification
        - Driverlicensenumber
        - Foreigninvestmentidentitynumber
        - Socialsecuritynumber
        - Identitycardnumber
        - Concat
        - Nationalregistrationidentificationnumber
      type: string
      description: ">\r\n* `Taxidentificationnumber` - Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` - Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. (ISO20022)\r\n* `Registrationauthorityidentification` - An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. (ISO20022)\r\n* `LEI(LegalEntityIdentifier)` - \r\n* `Alienregistrationnumber` - Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` - Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` - Number assigned to a tax exempt entity.\r\n* `Corporateidentification` - Number assigned to a corporate entity.\r\n* `Driverlicensenumber` - Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` - Number assigned to a foreign investor (other than the alien number).\r\n* `Socialsecuritynumber` - Number assigned by a social security agency.\r\n* `Identitycardnumber` - Number assigned by a national authority to an identity card.\r\n* `Concat` - Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` - National registration identification number. In Singapore this is known as the NRIC.\r\n"
    partyidentification:
      type: object
      properties:
        PartyIdentificationType:
          $ref: '#/components/schemas/partyidentificationtypevalues'
        PartyIdentification:
          $ref: '#/components/schemas/identifier'
      description: ''
    partylegalstructuretypevalues:
      enum:
        - Individual
        - CommunityInterestCompany
        - CharitableIncorporatedOrganisation
        - Co-Operative
        - Charity
        - GeneralPartnership
        - LimitedLiabilityPartnership
        - ScottishLimitedPartnership
        - LimitedPartnership
        - PrivateLimitedCompany
        - PublicLimitedCompany
        - Sole(SoleTrader)
      type: string
      description: ">\r\n* `Individual` - \r\n* `CommunityInterestCompany` - \r\n* `CharitableIncorporatedOrganisation` - \r\n* `Co-Operative` - \r\n* `Charity` - \r\n* `GeneralPartnership` - \r\n* `LimitedLiabilityPartnership` - \r\n* `ScottishLimitedPartnership` - \r\n* `LimitedPartnership` - \r\n* `PrivateLimitedCompany` - \r\n* `PublicLimitedCompany` - \r\n* `Sole(SoleTrader)` - \r\n"
    party:
      type: object
      properties:
        PartyName:
          $ref: '#/components/schemas/name'
        PartyType:
          $ref: '#/components/schemas/partytypevalues'
        PartyDateTime:
          $ref: '#/components/schemas/datetime'
        PartyIdentification:
          $ref: '#/components/schemas/partyidentification'
        PartyLegalStructureType:
          $ref: '#/components/schemas/partylegalstructuretypevalues'
      description: ''
    datetimeperiod:
      type: object
      properties:
        FromDateTime:
          $ref: '#/components/schemas/datetime'
        ToDateTime:
          $ref: '#/components/schemas/datetime'
      description: The time period addressed by the segment strategy DateTimePeriod|DateTimePeriod (https://www.iso20022.org/standardsrepository/type/DateTimePeriod)|Standard|ISO20022 BM ()
    partyinvolvementtypevalues:
      enum:
        - Agreementinvolvement
        - Partyinvolvement
        - Arrangementinvolvement
        - Designspecificationinvolvement
        - Relationshipinvolvement
        - Locationinvolvement
        - Bankguaranteeinvolvement
      type: string
      description: ">\r\n* `Agreementinvolvement` - \r\n* `Partyinvolvement` - \r\n* `Arrangementinvolvement` - \r\n* `Designspecificationinvolvement` - \r\n* `Relationshipinvolvement` - \r\n* `Locationinvolvement` - \r\n* `Bankguaranteeinvolvement` - \r\n"
    partyrole:
      type: object
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/text'
        PartyRoleName:
          $ref: '#/components/schemas/name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        PartyInvolvementType:
          $ref: '#/components/schemas/partyinvolvementtypevalues'
      description: ''
    involvedparty:
      type: object
      properties:
        PartyReference:
          $ref: '#/components/schemas/party'
        PartyInvolvement:
          $ref: '#/components/schemas/partyrole'
      description: "Identifies the interested parties and their roles and responsibilities for the specific actions supporting the achievement of the goal ||\r\n|"
    identifier:
      type: object
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/datetime'
      description: ''
    workproduct:
      type: object
      properties:
        WorkProductType:
          $ref: '#/components/schemas/workproducttypevalues'
        WorkProductIdentifoication:
          $ref: '#/components/schemas/identifier'
      description: 'File of consolidated notes, assessments etc. arising from the work'
    documentdirectoryentry:
      type: object
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          description: Identification allowing the retrieval of a document from a Document Directory
          format: string
      description: Reference to associated documents (when appropriate)
    correspondencetypevalues:
      enum:
        - UnsolicitedMessage
        - Complaint
      type: string
      description: ">\r\n* `UnsolicitedMessage` - \r\n* `Complaint` - \r\n"
    addresstypevalues:
      enum:
        - PostalAddress
        - GeolocationAddress
        - LatitudeAddress
        - LongitudeAddress
        - ElectronicAddress
      type: string
      description: ">\r\n* `PostalAddress` - \r\n* `GeolocationAddress` - \r\n* `LatitudeAddress` - \r\n* `LongitudeAddress` - \r\n* `ElectronicAddress` - \r\n"
    status:
      type: object
      properties:
        StatusReason:
          $ref: '#/components/schemas/text'
        StatusDateTime:
          $ref: '#/components/schemas/datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/involvedparty'
      description: 'The tracked status (e.g. under construction or repair, inhabited, vacant).'
    geographicalareatypevalues:
      enum:
        - Continent
        - Country
        - State
        - District
        - Province
        - Town
        - City
        - Region
      type: string
      description: ">\r\n* `Continent` - \r\n* `Country` - \r\n* `State` - \r\n* `District` - \r\n* `Province` - \r\n* `Town` - \r\n* `City` - \r\n* `Region` - \r\n"
    location:
      type: object
      properties:
        LocationDescription:
          $ref: '#/components/schemas/text'
        LocationDateTime:
          $ref: '#/components/schemas/datetime'
        LocationStatus:
          $ref: '#/components/schemas/status'
        LocationType:
          $ref: '#/components/schemas/geographicalareatypevalues'
        LocationZoningType:
          $ref: '#/components/schemas/text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/text'
        LocationConstructionType:
          $ref: '#/components/schemas/text'
        LocationOccupancyType:
          $ref: '#/components/schemas/text'
        LocationValue:
          $ref: '#/components/schemas/value'
        LocationCapacity:
          $ref: '#/components/schemas/text'
        LocationIdentification:
          $ref: '#/components/schemas/identifier'
        LocationAddress:
          $ref: '#/components/schemas/address'
        LocationName:
          $ref: '#/components/schemas/name'
        LocationTimeZone:
          $ref: '#/components/schemas/text'
      description: ''
    address:
      type: object
      properties:
        AddressType:
          $ref: '#/components/schemas/addresstypevalues'
        LocationReference:
          $ref: '#/components/schemas/location'
      description: The address for message delivery (needs to match channel selection)
    correspondencecommunicationmethodtypevalues:
      enum:
        - Fax
        - Email
        - Proprietary
        - Online
        - Phone
        - Postalservice
        - File
      type: string
      description: ">\r\n* `Fax` - Transmission by fax.\r\n* `Email` - Transmission by e-mail.\r\n* `Proprietary` - Transmission by proprietary method.\r\n* `Online` - Transmission on line, for example, in a web portal.\r\n* `Phone` - Transmission by telephone.\r\n* `Postalservice` - Transmission by postal service.\r\n* `File` - Transmission by file transfer.\r\n"
    correspondencemediumtypevalues:
      enum:
        - Paper
        - Electronic
        - Paperelectronic
        - Biometric
      type: string
      description: ">\r\n* `Paper` - Presentation is made on paper.\r\n* `Electronic` - Presentation is made electronically.\r\n* `Paperelectronic` - Presentation is made on paper and/or electronically.\r\n* `Biometric` - Biometric medium.\r\n"
    correspondence:
      type: object
      properties:
        CorrespondenceType:
          $ref: '#/components/schemas/correspondencetypevalues'
        CorrespondenceAddress:
          $ref: '#/components/schemas/address'
        CorrespondenceDateTime:
          $ref: '#/components/schemas/datetime'
        CorrespondenceContent:
          $ref: '#/components/schemas/text'
        CorrespondenceTemplate:
          $ref: '#/components/schemas/text'
        CorrespondenceCommunicationMethod:
          $ref: '#/components/schemas/correspondencecommunicationmethodtypevalues'
        CorrespondenceAddressType:
          $ref: '#/components/schemas/addresstypevalues'
        CorrespondenceMedium:
          $ref: '#/components/schemas/correspondencemediumtypevalues'
      description: Reference to the correspondence generated by the initiative
    projectdatetime:
      type: object
      properties:
        ProjectDate:
          $ref: '#/components/schemas/datetime'
        ProjectDateType:
          $ref: '#/components/schemas/projectdatetime'
      description: 'Key dates and times associated with the execution of the segment initiative (e.g. start, review, completion)'
    Initiative:
      type: object
      properties:
        SegmentInitiativeBusinessUnitReference:
          $ref: '#/components/schemas/businessunit'
        SegmentInitiativeType:
          $ref: '#/components/schemas/businessinitiativetypevalues'
        SegmentInitiativeDescription:
          $ref: '#/components/schemas/text'
        SegmentInitiativeSchedule:
          $ref: '#/components/schemas/schedule'
        SegmentInitiativeWorkProducts:
          $ref: '#/components/schemas/workproduct'
        SegmentInitiativeResult:
          $ref: '#/components/schemas/text'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/documentdirectoryentry'
        CorrespondenceInstanceReference:
          $ref: '#/components/schemas/correspondence'
        SegmentInitiativeDateType:
          $ref: '#/components/schemas/projectdatetime'
        SegmentInitiativeDate:
          $ref: '#/components/schemas/datetime'
      description: "A collection of goals and objectives for the enterprise and its main divisions\n\nExample: Increase marketshare"
    rulesettypevalues:
      enum:
        - Policy
        - Regulation
        - Law
        - Guideline
        - Criterion
        - Standard
      type: string
      description: ">\r\n* `Policy` - Rule that governs business execution.\n\nThe set of basic principles and associated guidelines, formulated and enforced by the governing body of an organization, to direct and limit its actions in pursuit of long-term goals. (Business Dictionary)\n\r\n* `Regulation` - A rule used to carry out a law (FIBO)\n\nBusiness Dictionary: a rule (with or without the coercive power of law) employed in controlling, directing, or managing an activity, organization, or system. \n\nThe set of rules and legislation governing certain actions. \nhttps://financial-dictionary.thefreedictionary.com/Regulatory\r\n* `Law` - A binding rule that the courts will enforce.\nA system of rules and guidelines which are enforced through social institutions to govern behavior. (FIBO)\n\r\n* `Guideline` - A recommended practice (adapted from Business Dictionary)\nA general rule, principle, or piece of advice.\r\n* `Criterion` - A principle or standard by which something may be judged or decided.\n\nRead more: http://www.businessdictionary.com/definition/criterion.html\r\n* `Standard` - A rule considered by an authority or by general consent as a basis of comparison\r\n"
    ruleset:
      type: object
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/text'
        RuleSetType:
          $ref: '#/components/schemas/rulesettypevalues'
        RuleSetName:
          $ref: '#/components/schemas/name'
        RuleSetIdentification:
          $ref: '#/components/schemas/identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/status'
      description: Specific policies and guidelines that govern the application of the strategy GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()
    budgettypevalues:
      enum:
        - OperatingBudget
        - FinancialBudget
        - ResourceBudget
      type: string
      description: ">\r\n* `OperatingBudget` - \r\n* `FinancialBudget` - \r\n* `ResourceBudget` - \r\n"
    budgettype:
      type: object
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/name'
        BudgetType:
          $ref: '#/components/schemas/budgettypevalues'
      description: A Classification value that specifies the type of Budget
    currencycode:
      type: object
      properties:
        Currencycode:
          type: string
          description: "A code identifying a currency according to ISO-4217.\nA currency is a system of money in general use in a particular country.\n\nCode allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters. (ISO20022)\n\n"
          format: datatype
      description: ''
    amounttypevalues:
      enum:
        - Principal
        - Actual
        - Estimated
        - Maximum
        - Default
        - Replacement
        - Incremental
        - Decremental
        - Reserved
        - Available
        - Used
        - DuePayable
        - Minimum
        - Open
        - Unknown
        - Fixed
      type: string
      description: ">\r\n* `Principal` - \r\n* `Actual` - Actual amount.\r\n* `Estimated` - Estimated amount (the final amount could be above or below).\r\n* `Maximum` - Maximum amount (the final amount must be less or equal).\r\n* `Default` - Default amount.\r\n* `Replacement` - Replacement amount.\r\n* `Incremental` - Incremental amount for reservation.\r\n* `Decremental` - Decremental amount for reservation.\r\n* `Reserved` - Reserved or updated reserved amount for reservation.\r\n* `Available` - \r\n* `Used` - \r\n* `DuePayable` - \r\n* `Minimum` - \r\n* `Open` - The amount is open.(ISO20022)\r\n* `Unknown` - The amount is unkown.(ISO20022)\r\n* `Fixed` - The amount represents a fixed value.(ISO20022)\r\n"
    amount:
      type: object
      properties:
        AmountValue:
          $ref: '#/components/schemas/value'
        AmountCurrency:
          $ref: '#/components/schemas/currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/text'
        AmountType:
          $ref: '#/components/schemas/amounttypevalues'
      description: ''
    budgetarrangement:
      type: object
      properties:
        BudgetType:
          $ref: '#/components/schemas/budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/amount'
      description: "Target and actual financial budget for the strategy ||\r\n|"
    goaltypevalues:
      enum:
        - Short-TermGoal
        - Long-TermGoal
        - BusinessGoal
        - PerformanceGoal
        - FinancialGoal
        - OutcomeGoal
        - SMARTGoal
      type: string
      description: "The type of goal (e.g. market share, new business, relationship performance) ||\r\n|"
    SegmentStrategy:
      type: object
      properties:
        SegmentStrategyPeriod:
          $ref: '#/components/schemas/datetimeperiod'
        SegmentStrategyPoliciesAndGuidelines:
          $ref: '#/components/schemas/ruleset'
        SegmentStrategyOrganization:
          $ref: '#/components/schemas/involvedparty'
        SegmentStrategyBudget:
          $ref: '#/components/schemas/budgetarrangement'
        SegmentStrategySchedule:
          $ref: '#/components/schemas/schedule'
        SegmentGoalRecord:
          $ref: '#/components/schemas/text'
        SegmentGoalType:
          $ref: '#/components/schemas/goaltypevalues'
        SegmentGoalDefinition:
          $ref: '#/components/schemas/text'
        SegmentGoalOrganization:
          $ref: '#/components/schemas/involvedparty'
        SegmentGoalResult:
          $ref: '#/components/schemas/text'
      description: "Define the policies, goals & objectives and strategies for an organizational entity or unit  within Segment Direction. \nExample: Direct a division of the enterprise."
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    SegmentStrategy:
      description: SegmentStrategy
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentStrategy'
    Initiative:
      description: Initiative
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Initiative'
  parameters:
    segmentdirectionid:
      name: segmentdirectionid
      in: path
      required: true
      style: simple
      schema:
        type: string
    initiativeid:
      name: initiativeid
      in: path
      required: true
      style: simple
      schema:
        type: string
  requestBodies:
    SegmentStrategy:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentStrategy'
      required: true
    Initiative:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Initiative'
      required: true