asyncapi: 3.0.0
info:
  title: Customer Campaign Design
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Design and refine
    customer campaign specifications based on their impact
channels:
  CustomerCampaignSpecification/Created:
    address: CustomerCampaignSpecification/Created
    messages:
      CustomerCampaignSpecification-created.message:
        $ref: '#/components/messages/CustomerCampaignSpecification'
    description: ''
  CustomerCampaignSpecification/Updated:
    address: CustomerCampaignSpecification/Updated
    messages:
      CustomerCampaignSpecification-updated.message:
        $ref: '#/components/messages/CustomerCampaignSpecification'
    description: ''
  SupportCapabilities/Created:
    address: SupportCapabilities/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SupportCapabilities'
    description: ''
  SupportCapabilities/Updated:
    address: SupportCapabilities/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SupportCapabilities'
    description: ''
  RequirementsDefinition/Created:
    address: RequirementsDefinition/Created
    messages:
      publish.message:
        $ref: '#/components/messages/RequirementsDefinition'
    description: ''
  RequirementsDefinition/Updated:
    address: RequirementsDefinition/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/RequirementsDefinition'
    description: ''
  EngagementModel/Created:
    address: EngagementModel/Created
    messages:
      publish.message:
        $ref: '#/components/messages/EngagementModel'
    description: ''
  EngagementModel/Updated:
    address: EngagementModel/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/EngagementModel'
    description: ''
  ExecutionApproach/Created:
    address: ExecutionApproach/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ExecutionApproach'
    description: ''
  ExecutionApproach/Updated:
    address: ExecutionApproach/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ExecutionApproach'
    description: ''
operations:
  CustomerCampaignSpecification-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerCampaignSpecification~1Created'
    summary: CustomerCampaignSpecification
    messages:
      - $ref: >-
          #/channels/CustomerCampaignSpecification~1Created/messages/CustomerCampaignSpecification-created.message
  CustomerCampaignSpecification-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerCampaignSpecification~1Updated'
    summary: CustomerCampaignSpecification
    messages:
      - $ref: >-
          #/channels/CustomerCampaignSpecification~1Updated/messages/CustomerCampaignSpecification-updated.message
  SupportCapabilities/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SupportCapabilities~1Created'
    summary: SupportCapabilities
    messages:
      - $ref: '#/channels/SupportCapabilities~1Created/messages/publish.message'
  SupportCapabilities/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SupportCapabilities~1Updated'
    summary: SupportCapabilities
    messages:
      - $ref: '#/channels/SupportCapabilities~1Updated/messages/publish.message'
  RequirementsDefinition/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/RequirementsDefinition~1Created'
    summary: RequirementsDefinition
    messages:
      - $ref: '#/channels/RequirementsDefinition~1Created/messages/publish.message'
  RequirementsDefinition/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/RequirementsDefinition~1Updated'
    summary: RequirementsDefinition
    messages:
      - $ref: '#/channels/RequirementsDefinition~1Updated/messages/publish.message'
  EngagementModel/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/EngagementModel~1Created'
    summary: EngagementModel
    messages:
      - $ref: '#/channels/EngagementModel~1Created/messages/publish.message'
  EngagementModel/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/EngagementModel~1Updated'
    summary: EngagementModel
    messages:
      - $ref: '#/channels/EngagementModel~1Updated/messages/publish.message'
  ExecutionApproach/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ExecutionApproach~1Created'
    summary: ExecutionApproach
    messages:
      - $ref: '#/channels/ExecutionApproach~1Created/messages/publish.message'
  ExecutionApproach/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ExecutionApproach~1Updated'
    summary: ExecutionApproach
    messages:
      - $ref: '#/channels/ExecutionApproach~1Updated/messages/publish.message'
components:
  messages:
    CustomerCampaignSpecification:
      name: CustomerCampaignSpecification
      description: >-
        Create and maintain a design for a procedure, product/service model or
        other such entity  within Customer Campaign Design. 

        Example: Create and maintain product designs and analytical models.
      payload:
        $ref: '#/components/schemas/CustomerCampaignSpecification'
    SupportCapabilities:
      name: SupportCapabilities
      description: >-
        The main design elements/views making up the overall specification


        *Content/Media Creation inventory for deployment

        *Systems Deployment e.g. resource/finance admin, analysis and reporting
        systems,
      payload:
        $ref: '#/components/schemas/SupportCapabilities'
    RequirementsDefinition:
      name: RequirementsDefinition
      description: >-
        The main design elements/views making up the overall specification


        *Content/Media Creation inventory for deployment

        *Systems Deployment e.g. resource/finance admin, analysis and reporting
        systems,
      payload:
        $ref: '#/components/schemas/RequirementsDefinition'
    EngagementModel:
      name: EngagementModel
      description: >-
        The main design elements/views making up the overall specification


        *Content/Media Creation inventory for deployment

        *Systems Deployment e.g. resource/finance admin, analysis and reporting
        systems,
      payload:
        $ref: '#/components/schemas/EngagementModel'
    ExecutionApproach:
      name: ExecutionApproach
      description: >-
        The main design elements/views making up the overall specification


        *Content/Media Creation inventory for deployment

        *Systems Deployment e.g. resource/finance admin, analysis and reporting
        systems,
      payload:
        $ref: '#/components/schemas/ExecutionApproach'
  schemas:
    SupportCapabilities:
      type: object
      description: ''
      properties:
        Designspecificationinvolvementtypevalues:
          enum:
            - Designer
            - Owner
            - Manager
            - Responsibleparty
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/DesignSpecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/DesignSpecificationAspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/CustomerCampaign'
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the range ends. (ISO20022) '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
    DesignSpecification:
      type: object
      format: DesignSpecification
      description: "Reference to Design Specification ||\r\n|"
      properties:
        Designspecificationstatustypevalues:
          enum:
            - UnderDevelopment
            - InUse
            - UnderReview
            - Available
            - In-Force
            - Suspended
          format: DesignSpecification
        DesignSpecificationVersion:
          $ref: '#/components/schemas/Text'
        Designspecificationtypevalues:
          enum:
            - CampaignDesignSpecification
            - ProductDesignSpecification
            - ModelDesignSpecification
            - StandardDesignSpecification
          format: DesignSpecification
        DesignSpecificationDescription:
          $ref: '#/components/schemas/Text'
        DesignSpecificationSchedule:
          $ref: '#/components/schemas/Schedule'
    Schedule:
      type: object
      format: Schedule
      description: >-
        The schedule and timing of the definition and update/revisions of the
        specification aspect 
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    DesignSpecificationAspect:
      type: object
      format: DesignSpecificationAspect
      description: "Reference to Design Specification Aspect  ||\r\n|"
      properties:
        Designspecificationaspecttypevalues:
          enum:
            - Testing
            - Production
            - FunctionalRequirement
          format: DesignSpecificationAspect
    CustomerCampaign:
      type: object
      format: CustomerCampaign
      description: "Reference to Customer Campaign which is going to be designed  ||\r\n|"
      properties:
        Customercampaigntypevalues:
          enum:
            - ProductLaunchCampaign
            - BrandAwarenessCampaign
            - CustomerRetentionCampaign
            - ReferralCampaign
            - ReactivationCampaign
            - Cross-SellingAndUpsellingCampaign
          format: CustomerCampaign
    RequirementsDefinition:
      type: object
      description: ''
      properties:
        Designspecificationinvolvementtypevalues:
          enum:
            - Designer
            - Owner
            - Manager
            - Responsibleparty
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/DesignSpecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/DesignSpecificationAspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/CustomerCampaign'
    EngagementModel:
      type: object
      description: ''
      properties:
        Designspecificationinvolvementtypevalues:
          enum:
            - Designer
            - Owner
            - Manager
            - Responsibleparty
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/DesignSpecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/DesignSpecificationAspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/CustomerCampaign'
    ExecutionApproach:
      type: object
      description: ''
      properties:
        Designspecificationinvolvementtypevalues:
          enum:
            - Designer
            - Owner
            - Manager
            - Responsibleparty
        DesignSpecificationInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        DesignSpecificationReference:
          $ref: '#/components/schemas/DesignSpecification'
        DesignSpecificationAspectReference:
          $ref: '#/components/schemas/DesignSpecificationAspect'
        CustomerCampaignReference:
          $ref: '#/components/schemas/CustomerCampaign'
    CustomerCampaignSpecification:
      type: object
      description: ''
      properties:
        Customercampaigntypevalues:
          enum:
            - ProductLaunchCampaign
            - BrandAwarenessCampaign
            - CustomerRetentionCampaign
            - ReferralCampaign
            - ReactivationCampaign
            - Cross-SellingAndUpsellingCampaign
        CustomerCampaignDescription:
          $ref: '#/components/schemas/Text'
        CustomerCampaignMetrics:
          $ref: '#/components/schemas/CustomerCampaignMetric'
        CustomerCampaignMetricDefinition:
          $ref: '#/components/schemas/Text'
        CustomerCampaignMetricGoal:
          $ref: '#/components/schemas/Goal'
        CustomerCampaignSpecification:
          $ref: '#/components/schemas/CampaignDesignSpecification'
        CustomerCampaignProductandServiceUsage:
          $ref: '#/components/schemas/ProductUsage'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
        ProductandServiceCampaignEngagementDescription:
          $ref: '#/components/schemas/CustomerCampaignArrangement'
        ProductandServiceCampaignTransferPricingArrangement:
          type: string
          format: CustomerCampaignManagement
          description: "Describes how any discounted costs are to be accounted for by the product fulfillment function (e.g. borne by fulfillment business unit, compensated by campaign budget) ||\r\n|"
        CustomerCampaignExecutionGuidelines:
          $ref: '#/components/schemas/CustomerCampaignRuleSet'
        CustomerCampaignEligibility:
          $ref: '#/components/schemas/CustomerCampaignRuleSet'
        CustomerCampaignQualifications:
          $ref: '#/components/schemas/CustomerCampaignRequirement'
        CustomerCampaignInteractionGuide:
          $ref: '#/components/schemas/CustomerCampaignRuleSet'
        CustomerCampaignConsumables:
          $ref: '#/components/schemas/ItemInventory'
        CustomerCampaignConsumableType:
          $ref: '#/components/schemas/Text'
        CustomerCampaignConsumableDescription:
          $ref: '#/components/schemas/Text'
        CustomerCampaignPerformanceRecord:
          $ref: '#/components/schemas/Text'
        CustomerCampaignProcedureInstanceReference:
          $ref: '#/components/schemas/CustomerCampaignProcedure'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerCampaignProcedureSet-up:
          $ref: '#/components/schemas/Arrangement'
        CustomerCampaignProcedureVersionNumber:
          $ref: '#/components/schemas/Text'
        CustomerCampaignProcedureResult:
          $ref: '#/components/schemas/Text'
    CustomerCampaignMetric:
      type: object
      format: CustomerCampaignMetric
      description: "Metrics that are defined to assess the target and actual impact of the campaign ||\r\n|"
      properties:
        Customercampaignmetrictypevalues:
          enum:
            - Click-ThroughRates(CTR)
            - ConversionRate
            - CustomerAcquisitionCost(CAC)
            - ReturnOnInvestment(ROI)
            - CustomerLifetimeValue(CLV)
            - EngagementRate
            - BounceRate
            - RepeatPurchaseRate
            - ChurnRate
          format: CustomerCampaignMetric
    Goal:
      type: object
      format: Goal
      description: "A description of the target performance for the metric that can be defined for different usage scenarios as appropriate ||\r\n|"
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    CampaignDesignSpecification:
      type: object
      format: CampaignDesignSpecification
      description: "The precise make-up of the campaign. Note that all customer campaign specifications are subject to versioning as the campaign is refined over time. ||\r\n|"
      properties:
        Campaigndesignspecificationaspecttypevalues:
          enum:
            - RequirementsDefinition
            - ExecutionApproach
            - SupportCapabilities
            - EngagementModel
          format: CampaignDesignSpecification
    ProductUsage:
      type: object
      format: ProductUsage
      description: "Details how the campaign aligns with selected products and services, including pricing considerations ||\r\n|"
      properties:
        ProductUsageDateTime:
          $ref: '#/components/schemas/Datetime'
        ProductUsageVolume:
          $ref: '#/components/schemas/Text'
        ProductUsageIndicator:
          $ref: '#/components/schemas/Yesnoindicator'
    Yesnoindicator:
      type: object
      format: Yesnoindicator
      description: >-
        An indicator specifying if the whether the customer has bought  the
        banking product or not.  
      properties:
        Yesnoindicator:
          type: string
          format: DataType
          description: |-
            Indicates a "Yes" or "No" type of answer for an element. (ISO20022)
            true: Yes
            false: No 
    CustomerCampaignArrangement:
      type: object
      format: CustomerCampaignArrangement
      description: "A description of how the product or service is adapted in the context of the campaign (e.g. discounted pricing/preferential rates, waived service fees, gifts or incentives) ||\r\n|"
      properties:
        CustomerCampaignArrangement:
          type: string
          format: Class
          description: >-
            An arrangement to fulfill the Customer Campaign. 


            Arrangements for a customer campaign refer to the various setups and
            configurations that help plan, execute, and manage the campaign
            effectively. These arrangements encompass several aspects, including
            strategic planning, organizational structure, execution tactics, and
            evaluation methods. 


            For example: 


            "Engagement Arrangement" to specify how the product or service is
            adapted in the context of the campaign (e.g. discounted
            pricing/preferential rates, waived service fees, gifts or
            incentives) 


            "Transfer Pricing Arrangement" to specify how any discounted costs
            are to be accounted for by the product fulfillment function (e.g.
            borne by fulfillment business unit, compensated by campaign budget)


             
    CustomerCampaignRuleSet:
      type: object
      format: CustomerCampaignRuleSet
      description: "Provides the structured narrative and any pricing/negotiating frameworks that are used in the execution of the campaign ||\r\n|"
      properties:
        CustomerCampaignRuleSet:
          type: string
          format: Class
          description: >-
            A set of rules to guide and direct the Customer Campaign. 


            Customer campaign rule sets refer to the guidelines and parameters
            that govern how a campaign is executed and managed. These rules
            ensure that the campaign is consistent, targeted, and effective. 


            For example:


            "Execution Guideline": The guideline for the execution of the
            campaign.


            "Eligibility Criteria": The eligibility criteria to be applied to
            select suitable candidates for the customer campaign. (Note
            candidate lists are developed by Campaign Execution)


            "Interaction Guide": The guideline that provides the structured
            narrative and any pricing/negotiating frameworks which are used in
            the execution of the campaign. 


            Rule sets involved in customer campaigns are the predefined
            guidelines and criteria used to design, implement, and measure the
            effectiveness of marketing efforts 
    CustomerCampaignRequirement:
      type: object
      format: CustomerCampaignRequirement
      description: "Defines any qualifications or credentials required of the bank unit or employees to execute the campaign (e.g. product certified, sign-off authority level) ||\r\n|"
      properties:
        CustomerCampaignRequirement:
          type: string
          format: Class
          description: ''
    ItemInventory:
      type: object
      format: ItemInventory
      description: "Design specification of any consumables that are to be used in the execution of the campaign (e.g. brochures) ||\r\n|"
      properties:
        ItemInventoryType:
          $ref: '#/components/schemas/Text'
    CustomerCampaignProcedure:
      type: object
      format: CustomerCampaignProcedure
      description: "Reference to the customer campaign execution event ||\r\n|"
      properties:
        CustomerCampaignProcedureWorkstep:
          $ref: '#/components/schemas/Workstep'
        Campaignprocedureworksteptypevalues:
          enum:
            - CandidateSelection
            - Execution
            - AnalysisFeedback
          format: CustomerCampaignProcedure
    Workstep:
      type: object
      format: Workstep
      description: 'A workstep to execute the campaign '
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/Text'
        Worksteptypevalues:
          enum:
            - Worksteptypevalues
          format: Workstep
        WorkstepDescription:
          $ref: '#/components/schemas/Text'
        WorkstepDateTime:
          $ref: '#/components/schemas/Datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/Status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/Workproduct'
    Workproduct:
      type: object
      format: Workproduct
      description: ' '
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Details of the deployment set-up/configuration of the campaign for
        reference Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
