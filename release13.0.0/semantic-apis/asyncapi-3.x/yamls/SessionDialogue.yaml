asyncapi: 3.0.0
info:
  title: Session Dialogue
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    handles/structures the customer narrative during an interactive session. It
    consolidates and presents pertinent customer information and provides
    servicing guidelines with standard dialogue/scripting as appropriate. It can
    include the capability to provoke questions to capture key relationship and
    sales triggers. It also ensures the correct sequencing, dialogue content and
    actions are performed/initiated during the customer interaction. It may
    further leverage the session by passing on customer notifications, status
    updates and triggering sales/marketing efforts.
channels:
  CustomerContactSessionProcedure/Created:
    address: CustomerContactSessionProcedure/Created
    messages:
      CustomerContactSessionProcedure-created.message:
        $ref: '#/components/messages/CustomerContactSessionProcedure'
    description: ''
  CustomerContactSessionProcedure/Updated:
    address: CustomerContactSessionProcedure/Updated
    messages:
      CustomerContactSessionProcedure-updated.message:
        $ref: '#/components/messages/CustomerContactSessionProcedure'
    description: ''
  Offer/Created:
    address: Offer/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Offer'
    description: ''
  Offer/Updated:
    address: Offer/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Offer'
    description: ''
  Authentication/Created:
    address: Authentication/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Authentication'
    description: ''
  Authentication/Updated:
    address: Authentication/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Authentication'
    description: ''
  Sales/Created:
    address: Sales/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Sales'
    description: ''
  Sales/Updated:
    address: Sales/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Sales'
    description: ''
  ProductorService/Created:
    address: ProductorService/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductorService'
    description: ''
  ProductorService/Updated:
    address: ProductorService/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductorService'
    description: ''
  Query/Created:
    address: Query/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Query'
    description: ''
  Query/Updated:
    address: Query/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Query'
    description: ''
  Intelligence/Created:
    address: Intelligence/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Intelligence'
    description: ''
  Intelligence/Updated:
    address: Intelligence/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Intelligence'
    description: ''
  Order/Created:
    address: Order/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Order'
    description: ''
  Order/Updated:
    address: Order/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Order'
    description: ''
  History/Created:
    address: History/Created
    messages:
      publish.message:
        $ref: '#/components/messages/History'
    description: ''
  History/Updated:
    address: History/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/History'
    description: ''
  Case/Created:
    address: Case/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Case'
    description: ''
  Case/Updated:
    address: Case/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Case'
    description: ''
operations:
  CustomerContactSessionProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerContactSessionProcedure~1Created'
    summary: CustomerContactSessionProcedure
    messages:
      - $ref: >-
          #/channels/CustomerContactSessionProcedure~1Created/messages/CustomerContactSessionProcedure-created.message
  CustomerContactSessionProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerContactSessionProcedure~1Updated'
    summary: CustomerContactSessionProcedure
    messages:
      - $ref: >-
          #/channels/CustomerContactSessionProcedure~1Updated/messages/CustomerContactSessionProcedure-updated.message
  Offer/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Offer~1Created'
    summary: Offer
    messages:
      - $ref: '#/channels/Offer~1Created/messages/publish.message'
  Offer/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Offer~1Updated'
    summary: Offer
    messages:
      - $ref: '#/channels/Offer~1Updated/messages/publish.message'
  Authentication/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Authentication~1Created'
    summary: Authentication
    messages:
      - $ref: '#/channels/Authentication~1Created/messages/publish.message'
  Authentication/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Authentication~1Updated'
    summary: Authentication
    messages:
      - $ref: '#/channels/Authentication~1Updated/messages/publish.message'
  Sales/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Sales~1Created'
    summary: Sales
    messages:
      - $ref: '#/channels/Sales~1Created/messages/publish.message'
  Sales/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Sales~1Updated'
    summary: Sales
    messages:
      - $ref: '#/channels/Sales~1Updated/messages/publish.message'
  ProductorService/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductorService~1Created'
    summary: ProductorService
    messages:
      - $ref: '#/channels/ProductorService~1Created/messages/publish.message'
  ProductorService/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductorService~1Updated'
    summary: ProductorService
    messages:
      - $ref: '#/channels/ProductorService~1Updated/messages/publish.message'
  Query/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Query~1Created'
    summary: Query
    messages:
      - $ref: '#/channels/Query~1Created/messages/publish.message'
  Query/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Query~1Updated'
    summary: Query
    messages:
      - $ref: '#/channels/Query~1Updated/messages/publish.message'
  Intelligence/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Intelligence~1Created'
    summary: Intelligence
    messages:
      - $ref: '#/channels/Intelligence~1Created/messages/publish.message'
  Intelligence/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Intelligence~1Updated'
    summary: Intelligence
    messages:
      - $ref: '#/channels/Intelligence~1Updated/messages/publish.message'
  Order/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Order~1Created'
    summary: Order
    messages:
      - $ref: '#/channels/Order~1Created/messages/publish.message'
  Order/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Order~1Updated'
    summary: Order
    messages:
      - $ref: '#/channels/Order~1Updated/messages/publish.message'
  History/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/History~1Created'
    summary: History
    messages:
      - $ref: '#/channels/History~1Created/messages/publish.message'
  History/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/History~1Updated'
    summary: History
    messages:
      - $ref: '#/channels/History~1Updated/messages/publish.message'
  Case/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Case~1Created'
    summary: Case
    messages:
      - $ref: '#/channels/Case~1Created/messages/publish.message'
  Case/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Case~1Updated'
    summary: Case
    messages:
      - $ref: '#/channels/Case~1Updated/messages/publish.message'
components:
  messages:
    CustomerContactSessionProcedure:
      name: CustomerContactSessionProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Session
        Dialogue. 
      payload:
        $ref: '#/components/schemas/CustomerContactSessionProcedure'
    Offer:
      name: Offer
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Offer'
    Authentication:
      name: Authentication
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Authentication'
    Sales:
      name: Sales
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Sales'
    ProductorService:
      name: ProductorService
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/ProductorService'
    Query:
      name: Query
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Query'
    Intelligence:
      name: Intelligence
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Intelligence'
    Order:
      name: Order
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Order'
    History:
      name: History
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/History'
    Case:
      name: Case
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Case'
  schemas:
    Offer:
      type: object
      description: ''
      properties:
        ProductandServiceType:
          $ref: '#/components/schemas/Text'
        OfferTaskResult:
          $ref: '#/components/schemas/Task'
    Text:
      type: object
      format: Text
      description: "The selected product/service ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Task:
      type: object
      format: Task
      description: "The result of the invoked offer procedure (e.g. abandoned, in process/pending, offer accepted) ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Authentication:
      type: object
      description: ''
      properties:
        RequiredAuthenticationLevel:
          type: string
          format: Object
          description: "The target level of authentication required ||\r\n|"
        AuthenticationTaskResult:
          $ref: '#/components/schemas/Task'
    Sales:
      type: object
      description: ''
      properties:
        ProductandServiceType:
          $ref: '#/components/schemas/Text'
        ProductandServiceProperties:
          $ref: '#/components/schemas/Feature'
        SalesTaskResult:
          $ref: '#/components/schemas/Task'
    Feature:
      type: object
      format: Feature
      description: "A description of the selected product's features and options desired ||\r\n|"
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Party who plays a  specific role in the context of assigning a status. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the status was assigned. '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: 'Period of time during which the status is valid. '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    ProductorService:
      type: object
      description: ''
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        ProductandServiceTaskResult:
          $ref: '#/components/schemas/Task'
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Reference to a specific product instance provided by the customer ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    Query:
      type: object
      description: ''
      properties:
        QueryType:
          $ref: '#/components/schemas/Text'
        QueryTaskResult:
          $ref: '#/components/schemas/Task'
    Intelligence:
      type: object
      description: ''
      properties:
        IntelligenceRecord:
          type: string
          format: Object
          description: "An optional interaction within the session to capture customer insights such as detected life events and or product and service preferences or concerns ||\r\n|"
        Customerinsighttypevalues:
          enum:
            - CustomerBehavioralInsight
            - CustomerDemographicInsight
            - CustomerPsychographicInsight
            - CustomerTransactionalInsight
            - CustomerFeedbackAndSentimentInsigh
            - CustomerJourneyInsight
            - CustomerRetentionAndChurnInsight
            - CustomerFinancialInsight
        CustomerInsight:
          $ref: '#/components/schemas/CustomerInsight'
        InsightTaskResult:
          $ref: '#/components/schemas/Task'
    CustomerInsight:
      type: object
      format: CustomerInsight
      description: "The derived value of the specific insight for the customer and past values if appropriate ||\r\n|"
      properties:
        Customerinsighttypevalues:
          enum:
            - CustomerBehavioralInsight
            - CustomerDemographicInsight
            - CustomerPsychographicInsight
            - CustomerTransactionalInsight
            - CustomerFeedbackAndSentimentInsigh
            - CustomerJourneyInsight
            - CustomerRetentionAndChurnInsight
            - CustomerFinancialInsight
          format: CustomerInsight
        CustomerInsightValue:
          $ref: '#/components/schemas/Value'
        CustomerInsightCalculationDate:
          $ref: '#/components/schemas/Datetime'
        CustomerInsightDescription:
          $ref: '#/components/schemas/Text'
        CustomerInsightIdentification:
          $ref: '#/components/schemas/Identifier'
    Order:
      type: object
      description: ''
      properties:
        OrderType:
          $ref: '#/components/schemas/Text'
        OrderTaskRecord:
          $ref: '#/components/schemas/Task'
        OrderTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        OrderTaskWorkResult:
          $ref: '#/components/schemas/Text'
    Workproduct:
      type: object
      format: Workproduct
      description: "Forms and actions agreed and registered during the order ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    History:
      type: object
      description: ''
      properties:
        HistoryTaskResult:
          $ref: '#/components/schemas/Task'
    Case:
      type: object
      description: ''
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        Casetypevalues:
          enum:
            - Card
            - Loan
            - Fraud
            - Payment
            - Market
            - Security
            - Other
        CaseTaskResult:
          $ref: '#/components/schemas/Task'
    CustomerContactSessionProcedure:
      type: object
      description: ''
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        EmployeeReference:
          $ref: '#/components/schemas/Employee'
        ServicingPositionReference:
          $ref: '#/components/schemas/Position'
        SessionMechanism:
          $ref: '#/components/schemas/Session'
        SessionStartEndTime:
          $ref: '#/components/schemas/Datetime'
        SessionDialogueRecord:
          $ref: '#/components/schemas/Session'
        SessionDialogueType:
          $ref: '#/components/schemas/Text'
        SessionDialogueScript:
          type: string
          format: Object
          description: "In cases a prompt or script can provided to structure the interaction for self-service and assisted interactions ||\r\n|"
        SessionDialogueLogReference:
          $ref: '#/components/schemas/SessionDialogueLog'
        SessionDialogueLog:
          $ref: '#/components/schemas/SessionDialogueLog'
        SessionDialogueResult:
          $ref: '#/components/schemas/Session'
    Employee:
      type: object
      format: Employee
      description: "Reference to the servicing agent ||\r\n|"
      properties:
        Employee:
          type: string
          format: Class
          description: 'Party who is employed by an employer.  '
    Position:
      type: object
      format: Position
      description: >-
        Reference to the servicing location/desk for assisted customer exchanges
        Position |Position 
        (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
        BM ()
      properties:
        PositionValue:
          $ref: '#/components/schemas/Value'
        PositionQuantity:
          type: string
          format: Number
          description: ''
        PositionDate:
          $ref: '#/components/schemas/Datetime'
        PositionAmount:
          $ref: '#/components/schemas/Amount'
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Session:
      type: object
      format: Session
      description: "The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up) ||\r\n|"
      properties:
        SessionDuration:
          $ref: '#/components/schemas/Duration'
        SessionDateTime:
          $ref: '#/components/schemas/Datetime'
        SessionStatus:
          $ref: '#/components/schemas/Status'
        SessionType:
          $ref: '#/components/schemas/Sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/Schedule'
        Session:
          type: string
          format: Class
          description: >-
            The operation of a system -typically an automated system -- for a
            bounded period of time.


            Semi-permanent container of state for an information exchange with a
            system.


            Time-bounded, temporal unit of context and continuity, identifying a
            unit of work.
             
    Duration:
      type: object
      format: Duration
      description: 'The time the session was active '
      properties:
        Duration:
          type: string
          format: DataType
          description: >-
            A duration is the specification of a length of time without a fixed
            start or end time, expressed in Gregorian calendar time units (Year,
            Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT) 
    Sessiontype:
      type: object
      format: Sessiontype
      description: >-
        Specifies the classification of session like Customer Contact Session,
        Channel Operating Session, Device Operating Session, etc. 
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/Name'
        Sessiontypevalues:
          enum:
            - ContactHandlingSession
            - CustomerDialogueSession
            - ChannelOperatingSession
            - GatewayOperatingSession
            - SwitchOperatingSession
            - DeviceOperatingSession
            - InterbankTransactionOperatingSessi
            - CorrespondenceOperatingSession
            - InteractiveHelpOperatingSession
            - ACHOperatingSession
          format: Sessiontype
    Schedule:
      type: object
      format: Schedule
      description: ' '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    SessionDialogueLog:
      type: object
      format: SessionDialogueLog
      description: "The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording) ||\r\n|"
      properties:
        SessionDialogueLog:
          type: string
          format: Class
          description: 'A record of contact dialogue log entries. '
