asyncapi: 3.0.0
info:
  title: Correspondent Bank Directory
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    maintains correspondent bank reference details. This includes correspondent
    bank payment parameters in particular bank limits and capturing transaction
    activity to track reciprocity
channels:
  CorrespondentBankDirectoryEntry/Created:
    address: CorrespondentBankDirectoryEntry/Created
    messages:
      CorrespondentBankDirectoryEntry-created.message:
        $ref: '#/components/messages/CorrespondentBankDirectoryEntry'
    description: ''
  CorrespondentBankDirectoryEntry/Updated:
    address: CorrespondentBankDirectoryEntry/Updated
    messages:
      CorrespondentBankDirectoryEntry-updated.message:
        $ref: '#/components/messages/CorrespondentBankDirectoryEntry'
    description: ''
operations:
  CorrespondentBankDirectoryEntry-created:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankDirectoryEntry~1Created'
    summary: CorrespondentBankDirectoryEntry
    messages:
      - $ref: >-
          #/channels/CorrespondentBankDirectoryEntry~1Created/messages/CorrespondentBankDirectoryEntry-created.message
  CorrespondentBankDirectoryEntry-updated:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankDirectoryEntry~1Updated'
    summary: CorrespondentBankDirectoryEntry
    messages:
      - $ref: >-
          #/channels/CorrespondentBankDirectoryEntry~1Updated/messages/CorrespondentBankDirectoryEntry-updated.message
components:
  messages:
    CorrespondentBankDirectoryEntry:
      name: CorrespondentBankDirectoryEntry
      description: >-
        Capture and maintain reference information about some type of entitity
        within Correspondent Bank Data Management.
      payload:
        $ref: '#/components/schemas/CorrespondentBankDirectoryEntry'
  schemas:
    CorrespondentBankDirectoryEntry:
      type: object
      description: ''
      properties:
        CorrespondentBankReference:
          type: string
          format: Object
          description: "Reference to the correspondent bank (e.g. BIC Codes) ||\r\n|"
        ContactAddresses:
          $ref: '#/components/schemas/Address'
        VostroAccountReference:
          $ref: '#/components/schemas/Account'
        CorrespondentBankAgreementReference:
          $ref: '#/components/schemas/CorrespondentBankingAgreement'
        CorrespondentBankName:
          $ref: '#/components/schemas/Name'
        BIC:
          $ref: '#/components/schemas/Identifier'
        NationalClearingCode:
          $ref: '#/components/schemas/Identifier'
        CorrespondentBankContactAddress:
          $ref: '#/components/schemas/Address'
        PartyReferenceDataDirectoryReference:
          $ref: '#/components/schemas/PartyReferenceDataDirectory'
        LegalEntityDirectoryReference:
          $ref: '#/components/schemas/LegalEntityDirectory'
        PaymentProcessingTimes:
          $ref: '#/components/schemas/Datetime'
        NostroAccountReference:
          $ref: '#/components/schemas/Account'
        RelatedBeneficiaryBankReference:
          $ref: '#/components/schemas/Involvedparty'
        RelatedBeneficiaryBankBIC:
          $ref: '#/components/schemas/Accountidentification'
        RelatedBeneficiaryBankName:
          $ref: '#/components/schemas/Name'
        RelatedBeneficiaryBankCurrencyReference:
          $ref: '#/components/schemas/Currencycode'
    Address:
      type: object
      format: Address
      description: >-
        Address of the correspondent bank Location/Address|Location/Address
        (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022
        BM ()
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Text:
      type: object
      format: Text
      description: A detailed explanation or commentary of account.
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetime:
      type: object
      format: Datetime
      description: >-
        Dates and times during which the correspondent bank processes payments
        ISODateTime|ISODateTime
        (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
        BM ()
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: "Reference to the recording by Party Reference Data Directory of a bank for which the correspondent bank can be used as correspondent ||\r\n|"
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: >-
        Name of a bank for which the correspondent bank can be used as
        correspondent Name|Name
        (https://www.iso20022.org/standardsrepository/type/Name)|Standard|ISO20022
        ()
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: >-
        Code that identifies a bank within a country
        GenericIdentification|GenericIdentification
        (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022
        BM ()
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Account:
      type: object
      format: Account
      description: >-
        Reference to the mirror account in the books of this bank of the account
        that this bank has with the correspondent bank Account|Account 
        (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022
        BM ()
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/Accountidentification'
        AccountDate:
          $ref: '#/components/schemas/Accountdatetime'
        Accounttypevalues:
          enum:
            - DebitAccount
            - CreditAccount
            - VostroAcount
            - NostroAccount
            - PaymentAccount
            - SettlementAccount
            - SavingAccount
            - CurrentAccount
            - CashAccount
            - LoanAccount
            - IndividualAccount
            - JointAccount
            - LiquidationAccount
            - ProvisionAccount
            - PartnershipAccount
            - InvestmentAccount
          format: Account
        AccountPurpose:
          $ref: '#/components/schemas/Text'
        AccountBalance:
          $ref: '#/components/schemas/Accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/Accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/Text'
        AccountName:
          $ref: '#/components/schemas/Name'
        Account:
          type: string
          format: Class
          description: >-
            A measuring state on which movements in value or amounts of assets,
            rights and obligations are registered.


            Comment: 

            It is a bookkeeping instrument holding the amount or value of
            something by registering the movements in plus and min when events
            happen which have an impact on the position.

            The term "account" is usually associated to an accounting or
            bookkeeping concept to hold the financial or stock state of a
            business concept. An account will typically group the debit and
            credit entries for a specific aspect of the business resulting from
            transactions,

            Often accounts are represented as a T-account which is a visual aid
            used to depict an account. Above the top portion of the T would be
            the account title. On the left-side of the base of the T would be
            any debit amounts; on the right-side would be the credit amounts.

            A commonly used bookkeeping method is the double-entry method. This
            means that every transaction has at least 2 movements. If a customer
            pays 100 € in cash, there is

            a decrease in the amount that the customer owes to the company (the
            customer position is decreased)

            an increase in the amount that the company has in cash (the cash
            position is increased)


            An account can be assigning to one or more ledgers. A ledger is a
            group of accounts for a certain purpose. If there is need for
            multiple ledgers because of multiple purpose, an account can
            perfectly well assigned to multiple ledgers. When Ledgers are in
            real physical books, this is not possible. When ledgers are digital,
            accounts can be grouped into multiple groups at the same time. This
            practice is very rarely taught into courses for accounting, but in
            digital accounting, it is common practice.


            Examples:- 

            stock account of a shop, cash register, bank account, financial
            accounting account, customer account, supplier account, ...

            Bank Account BE12 1234 5678 9012: is an individual banking account

            Accounts Payable, is a collective account keeping the balance of the
            amounts to pay by the organisation to its suppliers. The balance is
            the result of the financial movements related to suppliers. This
            account is managed usually in a General Ledger 

            Supplier Account X, is an individual account keeping the balance of
            the amounts to pay by the organisation to an individual supplier.
            The balance is the result of the financial movements related to an
            individual supplier. This account is managed usually in a
            sub-ledger.

            Stock Account x, is an individual account keeping the balance of the
            amounts in stock of a specific good.

            A payment service to take fund out of an account.  
    Accountstatus:
      type: object
      format: Accountstatus
      description: >-
        A characteristic of account which refers to the LifecycleStatus of
        account like opened, closed, blocked, etc.


        Specifies the current state of an account. (ISO20022) 
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Status'
        Accountstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Proforma
            - Pending
          format: Accountstatus
    Accountidentification:
      type: object
      format: Accountidentification
      description: >-
        BIC of a bank for which the correspondent bank can be used as
        correspondent AccountIdentification |AccountIdentification 
        (https://www.iso20022.org/standardsrepository/type/AccountIdentification)|Standard|ISO20022
        BM ()
      properties:
        Accountidentificationtypevalues:
          enum:
            - BBAN
            - IBAN
            - UPIC
            - AccountNumber
            - PAN
            - Paym
            - Wallet
            - SortCodeAndAccountNumber
          format: Accountidentification
        AccountIdentification:
          $ref: '#/components/schemas/Identifier'
        Accountidentification:
          type: string
          format: DataType
          description: ''
    Accountdatetime:
      type: object
      format: Accountdatetime
      description: >-
        A characteristic of account which refers to LifecycleDate of account
        (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
      properties:
        Accountdatetimetypevalues:
          enum:
            - OpeningDate
            - ClosingDate
            - BlockingDate
            - MaturityDate
            - LiveDate
            - RenewalDate
          format: Accountdatetime
        AccountDate:
          $ref: '#/components/schemas/Datetime'
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        The state of the obligations managed on the account, the result of all
        entries on the account.


        Numerical representation of the net increases and decreases in an
        account at a specific point in time. (ISO20022)


        Banking: Amount available in an account for withdrawal or use.

        Read more: http://www.businessdictionary.com/definition/balance.html


        Bookkeeping: Difference between the debit and credit sides of an
        account.

        Read more: http://www.businessdictionary.com/definition/balance.html 
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - OpeningBalance
            - ClosingBalance
            - CurrentBalance
            - AvailableBalance
            - LedgerBalance
            - ReserveBalance
            - FreeBalance
            - PrincipalBalance
            - ClosingAvailable
            - ClosingBooked
            - ForwardAvailable
            - Information
            - InterimAvailable
            - InterimBooked
            - OpeningAvailable
            - OpeningBooked
            - PreviouslyClosedBooked
            - Expected
          format: Accountbalance
        BalanceValueDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Balancecounterpartytypevalues:
          enum:
            - Bilateral
            - Multilateral
          format: Accountbalance
        BalanceCalculationDate:
          $ref: '#/components/schemas/Datetime'
        Balancesubtypevalues:
          enum:
            - Adjustment
            - Basecurrency
            - Blocked
            - Blockedfunds
            - Daylightoverdraft
            - Eligibleassets
            - Firmcollateralization
            - Amountsthathavebeenusedtoserveasfi
            - Securitiesforecast
            - Netfunding
            - Intermediate
            - Localcurrency
            - Limitrelated
            - Reservedliquidity
            - Securitiespending
            - Payinpayout
            - Progressiveaverage
            - Reserve
            - Selfcollateralization
            - Amountsthathavebeenusedtoserveasse
            - Threshold
          format: Accountbalance
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: >-
        Reference to the currency of payments to a bank for which the
        correspondent bank can be used as correspondent
        CurrencyCode|CurrencyCode
        (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022
        BM ()
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Accountcurrency:
      type: object
      format: Accountcurrency
      description: ' '
      properties:
        Currencytypevalues:
          enum:
            - BaseCurrency
            - ReportingCurrency
            - SecondaryCurrency
            - TransferCurrency
          format: Accountcurrency
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
    CorrespondentBankingAgreement:
      type: object
      format: CorrespondentBankingAgreement
      description: "Reference to the agreement with the correspondent bank as recorded by Party Reference Data Directory ||\r\n|"
      properties:
        CorrespondentBankingAgreement:
          type: string
          format: Class
          description: >-
            An agreement whereby one bank (the settlement or service-providing
            bank) makes or receives payments (potentially performing other
            banking services in addition) on behalf of another bank (the
            customer or user bank). (ECB)


            An agreement under which one bank (correspondent) holds deposits
            owned by other banks (respondents) and provides payment and other
            services to those respondent banks. Such arrangements may also be
            known as agency relationships in some domestic contexts. In
            international banking, balances held for a foreign respondent bank
            may be used to settle foreign exchange transactions. Reciprocal
            correspondent banking relationships may involve the use of so-called
            nostro and vostro accounts to settle foreign exchange transactions.
            (Bank for International Settlement)
             
    PartyReferenceDataDirectory:
      type: object
      format: PartyReferenceDataDirectory
      description: "Reference to the recording of the correspondent bank in the Party Reference Data Directory ||\r\n|"
      properties:
        PartyReferenceDataDirectory:
          type: string
          format: Class
          description: 'A directory that maintains party reference data '
    LegalEntityDirectory:
      type: object
      format: LegalEntityDirectory
      description: "Reference to the recording of the correspondent bank in the Legal Entity Directory ||\r\n|"
      properties:
        LegalEntityDirectory:
          type: string
          format: Class
          description: >-
            A directory whose entries represent parties that can be a Legal
            Entity 
