asyncapi: 3.0.0
info:
  title: Transaction Authorization
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    handles risk based authorization for interactive customer transactions. This
    combines the context (channel) transaction, customer details and recent
    activity analysis as appropriate. The authorization may require a specific
    level of party/customer authentication to get approval.
channels:
  InteractiveTransactionAssessment/Created:
    address: InteractiveTransactionAssessment/Created
    messages:
      InteractiveTransactionAssessment-created.message:
        $ref: '#/components/messages/InteractiveTransactionAssessment'
    description: ''
  InteractiveTransactionAssessment/Updated:
    address: InteractiveTransactionAssessment/Updated
    messages:
      InteractiveTransactionAssessment-updated.message:
        $ref: '#/components/messages/InteractiveTransactionAssessment'
    description: ''
operations:
  InteractiveTransactionAssessment-created:
    action: receive
    channel:
      $ref: '#/channels/InteractiveTransactionAssessment~1Created'
    summary: InteractiveTransactionAssessment
    messages:
      - $ref: >-
          #/channels/InteractiveTransactionAssessment~1Created/messages/InteractiveTransactionAssessment-created.message
  InteractiveTransactionAssessment-updated:
    action: receive
    channel:
      $ref: '#/channels/InteractiveTransactionAssessment~1Updated'
    summary: InteractiveTransactionAssessment
    messages:
      - $ref: >-
          #/channels/InteractiveTransactionAssessment~1Updated/messages/InteractiveTransactionAssessment-updated.message
components:
  messages:
    InteractiveTransactionAssessment:
      name: InteractiveTransactionAssessment
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement within Transaction Authorization. 
      payload:
        $ref: '#/components/schemas/InteractiveTransactionAssessment'
  schemas:
    InteractiveTransactionAssessment:
      type: object
      description: ''
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        EmployeeReference:
          $ref: '#/components/schemas/Employee'
        ProductReference:
          $ref: '#/components/schemas/BankingProduct'
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
        ProposedTransactionValue:
          $ref: '#/components/schemas/Amount'
        CustomerContactRecordReference:
          $ref: '#/components/schemas/CustomerContact'
        CustomerContactRecord:
          $ref: '#/components/schemas/CustomerContact'
        CustomerContactRecordCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerContactRecordContactDevice:
          $ref: '#/components/schemas/Device'
        CustomerContactRecordAuthenticationStatus(asobtainedbySD-ContactHandler):
          $ref: '#/components/schemas/Text'
        CustomerContactRecordRoutingSelectionStatus:
          $ref: '#/components/schemas/Status'
        CustomerContactRecordMenuSelection:
          $ref: '#/components/schemas/Text'
        CustomerContactRecordServicingRequest:
          $ref: '#/components/schemas/Instruction'
        CustomerContactRecordServicingEventHistory:
          $ref: '#/components/schemas/Text'
        CustomerContactRecordServicingPositionReference:
          $ref: '#/components/schemas/Position'
        CustomerContactRecordServicingResourceReference:
          $ref: '#/components/schemas/ServicingResource'
        CustomerContactRecordActivityRecord:
          $ref: '#/components/schemas/CustomerEventLog'
        CustomerSessionDialogueReference:
          $ref: '#/components/schemas/Session'
        CustomerSessionDialogueRecord:
          $ref: '#/components/schemas/Session'
        SessionDialogueType:
          $ref: '#/components/schemas/Text'
        SessionDialogueScript:
          $ref: '#/components/schemas/Session'
        SessionDialogueLogReference:
          $ref: '#/components/schemas/SessionDialogueLog'
        SessionDialogueLog:
          $ref: '#/components/schemas/SessionDialogueLog'
        SessionDialogueSessionMechanism:
          $ref: '#/components/schemas/Session'
        SessionDialogueRecordSessionStartEndTime:
          $ref: '#/components/schemas/Datetime'
        SessionDialogueResult:
          type: string
          format: Object
          description: "The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up) ||\r\n|"
        CustomerContactRecordDuration:
          $ref: '#/components/schemas/Duration'
        CustomerContactActivityRecord:
          type: string
          format: Object
          description: "Description of all actions performed during the contact, including all sessions ||\r\n|"
        CustomerContactResult:
          $ref: '#/components/schemas/CustomerContact'
        ChannelActivityHistoryReportReference:
          $ref: '#/components/schemas/Report'
        ChannelActivityHistoryReportFromto:
          $ref: '#/components/schemas/Datetimeperiod'
        ChannelActivityHistoryReport:
          $ref: '#/components/schemas/Report'
        TransactionAuthorizationGuidance:
          $ref: '#/components/schemas/RuleSet'
        TransactionAuthorizationResult:
          $ref: '#/components/schemas/TransactionAuthorization'
    Involvedparty:
      type: object
      format: Involvedparty
      description: "The customer reference as provided by the contacting party and verified by the authentication function ||\r\n|"
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: >-
        The period for the channel activity report DateTimePeriod|DateTimePeriod
        (https://www.iso20022.org/standardsrepository/type/DateTimePeriod)|Standard|ISO20022
        BM ()
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Employee:
      type: object
      format: Employee
      description: "The servicing resource for assisted customer exchanges ||\r\n|"
      properties:
        Employee:
          type: string
          format: Class
          description: 'Party who is employed by an employer.  '
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        The type of product involved Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Reference to the specific product accessed by the proposed transaction ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
        Amount:
          type: string
          format: DataType
          description: >-
            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. (UN/CEFACT)


            The decimal seperator is a dot.



            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. The decimal
            separator is a dot. (ISO20022)

            Note: A zero amount is considered a positive amount.

            total number of digits: 18

            number of digits in fractional part: 5

            minInclusive: 0 
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    CustomerContact:
      type: object
      format: CustomerContact
      description: "The interim result of the contact (subject to transaction approval) ||\r\n|"
      properties:
        ContactType:
          $ref: '#/components/schemas/Text'
        ContactDateTime:
          $ref: '#/components/schemas/Datetime'
        ContactLocation:
          $ref: '#/components/schemas/Location'
        ContactSchedule:
          $ref: '#/components/schemas/Schedule'
        ContactResult:
          $ref: '#/components/schemas/Text'
        ContactPurpose:
          $ref: '#/components/schemas/Text'
        ContactDevice:
          $ref: '#/components/schemas/Device'
        ContactIndicator:
          $ref: '#/components/schemas/Text'
        ContactContent:
          $ref: '#/components/schemas/Text'
        CustomerContact:
          type: string
          format: Class
          description: >-
            An (structured) interaction between a customer and a financial
            institution.
             
    Location:
      type: object
      format: Location
      description: 'Geographical location of the device. '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: >-
        The address associated with the device like Internet Protocol address,
        email Address 
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Schedule:
      type: object
      format: Schedule
      description: ' '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
        Schedule:
          type: string
          format: DataType
          description: >-
            Defined sequence of planned tasks/actions or a timetable of
            available services


            A schedule is a time based series of something 
    Device:
      type: object
      format: Device
      description: "The contact device can be determined by the channel operations facilities (e.g. URL/ANI-phone number) ||\r\n|"
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Deviceidentification'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
          format: Device
        DeviceProperty:
          $ref: '#/components/schemas/Text'
        DeviceElement:
          $ref: '#/components/schemas/Text'
        DeviceStatus:
          $ref: '#/components/schemas/Status'
        DeviceVersion:
          type: string
          format: Number
          description: ''
        DeviceDateTime:
          $ref: '#/components/schemas/Datetime'
        DeviceDescription:
          $ref: '#/components/schemas/Text'
        DeviceName:
          $ref: '#/components/schemas/Name'
        DeviceLanguage:
          $ref: '#/components/schemas/Text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/Text'
        DeviceLocation:
          $ref: '#/components/schemas/Location'
        DeviceManufacturer:
          $ref: '#/components/schemas/Text'
        DeviceCountry:
          $ref: '#/components/schemas/Country'
        DeviceAddress:
          $ref: '#/components/schemas/Address'
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Device
        Deviceoperatingsystemtypevalues:
          enum:
            - Android
            - Ios
            - Windows
            - Blackberry
            - Tizen
            - Othernational
            - Otherprivate
          format: Device
        Device:
          type: string
          format: Class
          description: >-
            An item created to serve a particular need, such as a credit card, a
            smart phone, an electronic signature, an electronic key, etc.


            A device is a physical resource (material and non human resources)
            to serve a particular need. 

             
    Deviceidentification:
      type: object
      format: Deviceidentification
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Identifier'
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
          format: Deviceidentification
    Country:
      type: object
      format: Country
      description: 'Country of the location. '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    Instruction:
      type: object
      format: Instruction
      description: "The customer may provide details of servicing resource request when initiating or during contact ||\r\n|"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondatetime:
      type: object
      format: Instructiondatetime
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Datetime'
        Instructiondatetimetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondatetime
    Instructionstatus:
      type: object
      format: Instructionstatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionstatustypevalues:
          enum:
            - Pendingprocessing
            - Acknowledgedaccepted
            - Rejected
            - Accepted
            - Completed
            - Notreceived
            - Cancelled
            - Beingcancelled
            - Receivedbyissuerorregistrar
            - Pending
            - Standinginstruction
            - Queued
            - Cancelledbysubcustodian
            - Forwarded
          format: Instructionstatus
        InstructionStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    Position:
      type: object
      format: Position
      description: >-
        Reference to the servicing position can be where an inbound contact is
        routed, or the source of an outbound contact request Position |Position 
        (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
        BM ()
      properties:
        PositionValue:
          $ref: '#/components/schemas/Value'
        PositionQuantity:
          type: string
          format: Number
          description: ''
        PositionDate:
          $ref: '#/components/schemas/Datetime'
        PositionAmount:
          $ref: '#/components/schemas/Amount'
    ServicingResource:
      type: object
      format: ServicingResource
      description: "Reference to the servicing resource can be to handle an inbound contact or the source of an outbound contact request ||\r\n|"
      properties:
        ServicingResource:
          type: string
          format: Class
          description: 'A resource that is required for servicing a customer.  '
    CustomerEventLog:
      type: object
      format: CustomerEventLog
      description: "Records the actions performed during contact, including all dialogue sessions ||\r\n|"
      properties:
        CustomerEventLog:
          type: string
          format: Class
          description: 'A record of the customer''s events. '
    Session:
      type: object
      format: Session
      description: "The mechanism for the session (e.g.. web, phone, chat, video, VOIP, face to face at a branch note there can be concurrent sessions within a single customer contact) ||\r\n|"
      properties:
        SessionDuration:
          $ref: '#/components/schemas/Duration'
        SessionDateTime:
          $ref: '#/components/schemas/Datetime'
        SessionStatus:
          $ref: '#/components/schemas/Status'
        SessionType:
          $ref: '#/components/schemas/Sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/Schedule'
        Session:
          type: string
          format: Class
          description: >-
            The operation of a system -typically an automated system -- for a
            bounded period of time.


            Semi-permanent container of state for an information exchange with a
            system.


            Time-bounded, temporal unit of context and continuity, identifying a
            unit of work.
             
    Duration:
      type: object
      format: Duration
      description: >-
        Records the start and end date times for the contact Duration|Duration
        (https://www.iso20022.org/standardsrepository/type/duration)|Standard|ISO20022
        BM ()
      properties:
        Duration:
          type: string
          format: DataType
          description: >-
            A duration is the specification of a length of time without a fixed
            start or end time, expressed in Gregorian calendar time units (Year,
            Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT) 
    Sessiontype:
      type: object
      format: Sessiontype
      description: >-
        Specifies the classification of session like Customer Contact Session,
        Channel Operating Session, Device Operating Session, etc. 
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/Name'
        Sessiontypevalues:
          enum:
            - ContactHandlingSession
            - CustomerDialogueSession
            - ChannelOperatingSession
            - GatewayOperatingSession
            - SwitchOperatingSession
            - DeviceOperatingSession
            - InterbankTransactionOperatingSessi
            - CorrespondenceOperatingSession
            - InteractiveHelpOperatingSession
            - ACHOperatingSession
          format: Sessiontype
    SessionDialogueLog:
      type: object
      format: SessionDialogueLog
      description: "The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording) ||\r\n|"
      properties:
        SessionDialogueLog:
          type: string
          format: Class
          description: 'A record of contact dialogue log entries. '
    Report:
      type: object
      format: Report
      description: "The content of the report extracting recent channel activity records to support the transaction authorization decision ||\r\n|"
      properties:
        Reporttypevalues:
          enum:
            - FinancialReport
            - BusinessReport
            - ManagementReport
            - Statement
            - MaintenanceReport
            - RegulatoryReport
            - TaxReport
            - AnalysisReport
          format: Report
        ReportValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ReportVersion:
          type: string
          format: Number
          description: ''
        ReportDateTime:
          $ref: '#/components/schemas/Datetime'
        ReportFormat:
          $ref: '#/components/schemas/Text'
        Report:
          type: string
          format: Class
          description: >-
            A unique and specific set of information containing the content for
            communications.


            The term Report is mostly used as communication about a particular
            subject matter, often in the form of an official document, after
            thorough investigation or consideration by an appointed person or
            body.


            A document containing information organized in a narrative, graphic,
            or tabular form, prepared on ad hoc, periodic, recurring, regular,
            or as required basis. Reports may refer to specific periods, events,
            occurrences, or subjects, and may be communicated or presented in
            oral or written form. (Business Dictionary) 
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        In case of failure, the guidance explains reason and details if
        additional information can be considered GovernanceRules|GovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: RuleSet
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    TransactionAuthorization:
      type: object
      format: TransactionAuthorization
      description: "Indicates success or failure or required increased authentication level to be acquired for authorization ||\r\n|"
      properties:
        TransactionAuthorization:
          type: string
          format: Class
          description: ''
