asyncapi: 3.0.0
info:
  title: Product Service Agency
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    establishes and maintains contractual arrangements with product and service
    agencies
channels:
  ServiceProviderAgreement/Created:
    address: ServiceProviderAgreement/Created
    messages:
      ServiceProviderAgreement-created.message:
        $ref: '#/components/messages/ServiceProviderAgreement'
    description: ''
  ServiceProviderAgreement/Updated:
    address: ServiceProviderAgreement/Updated
    messages:
      ServiceProviderAgreement-updated.message:
        $ref: '#/components/messages/ServiceProviderAgreement'
    description: ''
  PolicyTerm/Created:
    address: PolicyTerm/Created
    messages:
      publish.message:
        $ref: '#/components/messages/PolicyTerm'
    description: ''
  PolicyTerm/Updated:
    address: PolicyTerm/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/PolicyTerm'
    description: ''
  LegalTerm/Created:
    address: LegalTerm/Created
    messages:
      publish.message:
        $ref: '#/components/messages/LegalTerm'
    description: ''
  LegalTerm/Updated:
    address: LegalTerm/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/LegalTerm'
    description: ''
  RegulatoryTerm/Created:
    address: RegulatoryTerm/Created
    messages:
      publish.message:
        $ref: '#/components/messages/RegulatoryTerm'
    description: ''
  RegulatoryTerm/Updated:
    address: RegulatoryTerm/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/RegulatoryTerm'
    description: ''
  ProductServiceAgencyOutcome/Created:
    address: ProductServiceAgencyOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductServiceAgencyOutcome'
    description: ''
  ProductServiceAgencyOutcome/Updated:
    address: ProductServiceAgencyOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductServiceAgencyOutcome'
    description: ''
  ServiceProviderAgreement/Notify:
    address: ServiceProviderAgreement/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ServiceProviderAgreementNotify'
  LegalTerm/Notify:
    address: LegalTerm/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/LegalTermNotify'
  PolicyTerm/Notify:
    address: PolicyTerm/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/PolicyTermNotify'
  RegulatoryTerm/Notify:
    address: RegulatoryTerm/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/RegulatoryTermNotify'
operations:
  ServiceProviderAgreement-created:
    action: receive
    channel:
      $ref: '#/channels/ServiceProviderAgreement~1Created'
    summary: ServiceProviderAgreement
    messages:
      - $ref: >-
          #/channels/ServiceProviderAgreement~1Created/messages/ServiceProviderAgreement-created.message
  ServiceProviderAgreement-updated:
    action: receive
    channel:
      $ref: '#/channels/ServiceProviderAgreement~1Updated'
    summary: ServiceProviderAgreement
    messages:
      - $ref: >-
          #/channels/ServiceProviderAgreement~1Updated/messages/ServiceProviderAgreement-updated.message
  PolicyTerm/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/PolicyTerm~1Created'
    summary: PolicyTerm
    messages:
      - $ref: '#/channels/PolicyTerm~1Created/messages/publish.message'
  PolicyTerm/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/PolicyTerm~1Updated'
    summary: PolicyTerm
    messages:
      - $ref: '#/channels/PolicyTerm~1Updated/messages/publish.message'
  LegalTerm/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/LegalTerm~1Created'
    summary: LegalTerm
    messages:
      - $ref: '#/channels/LegalTerm~1Created/messages/publish.message'
  LegalTerm/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/LegalTerm~1Updated'
    summary: LegalTerm
    messages:
      - $ref: '#/channels/LegalTerm~1Updated/messages/publish.message'
  RegulatoryTerm/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/RegulatoryTerm~1Created'
    summary: RegulatoryTerm
    messages:
      - $ref: '#/channels/RegulatoryTerm~1Created/messages/publish.message'
  RegulatoryTerm/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/RegulatoryTerm~1Updated'
    summary: RegulatoryTerm
    messages:
      - $ref: '#/channels/RegulatoryTerm~1Updated/messages/publish.message'
  ProductServiceAgencyOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductServiceAgencyOutcome~1Created'
    summary: ProductServiceAgencyOutcome
    messages:
      - $ref: >-
          #/channels/ProductServiceAgencyOutcome~1Created/messages/publish.message
  ProductServiceAgencyOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductServiceAgencyOutcome~1Updated'
    summary: ProductServiceAgencyOutcome
    messages:
      - $ref: >-
          #/channels/ProductServiceAgencyOutcome~1Updated/messages/publish.message
  ServiceProviderAgreement/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/ServiceProviderAgreement~1Notify'
    messages:
      - $ref: '#/channels/ServiceProviderAgreement~1Notify/messages/subscribe.message'
  LegalTerm/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/LegalTerm~1Notify'
    messages:
      - $ref: '#/channels/LegalTerm~1Notify/messages/subscribe.message'
  PolicyTerm/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/PolicyTerm~1Notify'
    messages:
      - $ref: '#/channels/PolicyTerm~1Notify/messages/subscribe.message'
  RegulatoryTerm/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/RegulatoryTerm~1Notify'
    messages:
      - $ref: '#/channels/RegulatoryTerm~1Notify/messages/subscribe.message'
components:
  messages:
    ServiceProviderAgreement:
      name: ServiceProviderAgreement
      description: >+
        Maintain the terms and conditions that apply to a commercial
        relationship within Product Service Agency.

      payload:
        $ref: '#/components/schemas/ServiceProviderAgreement'
    PolicyTerm:
      name: PolicyTerm
      description: >-
        Covers the corporate policies and requirements considerations of the
        agreement
      payload:
        $ref: '#/components/schemas/PolicyTerm'
    LegalTerm:
      name: LegalTerm
      description: >-
        Covers the corporate policies and requirements considerations of the
        agreement
      payload:
        $ref: '#/components/schemas/LegalTerm'
    RegulatoryTerm:
      name: RegulatoryTerm
      description: >-
        Covers the corporate policies and requirements considerations of the
        agreement
      payload:
        $ref: '#/components/schemas/RegulatoryTerm'
    ProductServiceAgencyOutcome:
      name: ProductServiceAgencyOutcome
      description: >-
        Covers the corporate policies and requirements considerations of the
        agreement
      payload:
        $ref: '#/components/schemas/ProductServiceAgencyOutcome'
    ServiceProviderAgreementNotify:
      name: ServiceProviderAgreementNotify
      payload:
        $ref: '#/components/schemas/ServiceProviderAgreementNotify'
    LegalTermNotify:
      name: LegalTermNotify
      payload:
        $ref: '#/components/schemas/LegalTermNotify'
    PolicyTermNotify:
      name: PolicyTermNotify
      payload:
        $ref: '#/components/schemas/PolicyTermNotify'
    RegulatoryTermNotify:
      name: RegulatoryTermNotify
      payload:
        $ref: '#/components/schemas/RegulatoryTermNotify'
  schemas:
    PolicyTerm:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        PolicyTermReference:
          $ref: '#/components/schemas/Arrangement'
        PolicyTermType:
          $ref: '#/components/schemas/Text'
        BankPolicy-RuleType:
          type: string
          format: String
          description: "The type of bank policy referenced (e.g. staff certification) ||\r\n|"
        ApplicableBankPolicy-RuleReference:
          type: string
          format: Object
          description: "Reference to the bank's policies or rules ||\r\n|"
        ApplicableBankPolicy-RuleInterpretation:
          type: string
          format: String
          description: "Explanation or interpretation of the policy or rule as applied ||\r\n|"
    Condition:
      type: object
      format: Condition
      description: "The required status/situation for the terms to apply and or tasks that need to be completed prior to the initiation of the workstep ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Policy Term ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Schedule:
      type: object
      format: Schedule
      description: "Any timing/duration considerations applying to the Policy Term ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The Policy Term specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Agreement:
      type: object
      format: Agreement
      description: >-
        Reference to Policy Term Agreement_x000D_

        |Agreement
        (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
        BM ()
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Date:
      type: object
      format: Date
      description: 'Date on which the agreement was signed by all parties. (ISO20022) '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Agreementstatus:
      type: object
      format: Agreementstatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/Status'
        Agreementstatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementstatus
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Reference to Policy Term Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    LegalTerm:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        LegalTermReference:
          $ref: '#/components/schemas/Arrangement'
        LegalTermType:
          $ref: '#/components/schemas/Text'
        Jurisdiction:
          type: string
          format: String
          description: "The legal jurisdiction ||\r\n|"
        ApplicableLawReference:
          type: string
          format: Object
          description: "Reference to any legal requirements ||\r\n|"
        ApplicableLawInterpretation:
          type: string
          format: String
          description: "Explanation or interpretation of the law as applied ||\r\n|"
    RegulatoryTerm:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        RegulatoryTermReference:
          $ref: '#/components/schemas/Arrangement'
        RegulatoryTermType:
          $ref: '#/components/schemas/Text'
        RegulatoryAuthority:
          type: string
          format: String
          description: "The applicable regulatory authority ||\r\n|"
        ApplicableRegulationReference:
          type: string
          format: Object
          description: "Reference to any regulatory requirements ||\r\n|"
        ApplicableRegulationInterpretation:
          type: string
          format: String
          description: "Explanation or interpretation of the regulation as applied ||\r\n|"
    ProductServiceAgencyOutcome:
      type: object
      description: ''
      properties:
        ProductServiceAgencyAgreement:
          $ref: '#/components/schemas/Agreement'
        ProductServiceAgencyWorkProduct:
          $ref: '#/components/schemas/Workproduct'
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
    Workproduct:
      type: object
      format: Workproduct
      description: " ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    ServiceProviderAgreement:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        ServiceProviderAgreementSelectedOption:
          $ref: '#/components/schemas/Feature'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        ServiceProviderAgreementDischargeRequest:
          $ref: '#/components/schemas/Instruction'
        ServiceProviderAgreementDischargeSchedule:
          $ref: '#/components/schemas/Schedule'
        ServiceProviderAgreementStatus:
          $ref: '#/components/schemas/Agreementstatus'
        ServiceProviderAgreementAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        ServiceProviderAgreementCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        ServiceProviderAgreementObligation:
          $ref: '#/components/schemas/Arrangement'
        ServiceProviderAgreementEntitlement:
          $ref: '#/components/schemas/Arrangement'
        ServiceProviderAgreementRegulationReference:
          $ref: '#/components/schemas/RuleSet'
        ServiceProviderAgreementRegulationType:
          $ref: '#/components/schemas/Rulesettype'
        ServiceProviderAgreementJurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        ServiceProviderAgreementAccountReference:
          $ref: '#/components/schemas/Account'
        ServiceProviderAgreementSubjectMatter:
          type: string
          format: Object
          description: "The subject matter of  Service Provider Agreement ||\r\n|"
        ServiceProviderAgreementProductReference:
          $ref: '#/components/schemas/BankingProduct'
        ServiceProviderAgreementCalendarReference:
          $ref: '#/components/schemas/Calendar'
        ServiceProviderAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/Agreement'
    Feature:
      type: object
      format: Feature
      description: "A selected optional feature in a product, identified by Parameter Type ||\r\n|"
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Instruction:
      type: object
      format: Instruction
      description: "Request to discharge Service Provider Agreement ||\r\n|"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondatetime:
      type: object
      format: Instructiondatetime
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Datetime'
        Instructiondatetimetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondatetime
    Instructionstatus:
      type: object
      format: Instructionstatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionstatustypevalues:
          enum:
            - Pendingprocessing
            - Acknowledgedaccepted
            - Rejected
            - Accepted
            - Completed
            - Notreceived
            - Cancelled
            - Beingcancelled
            - Receivedbyissuerorregistrar
            - Pending
            - Standinginstruction
            - Queued
            - Cancelledbysubcustodian
            - Forwarded
          format: Instructionstatus
        InstructionStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        Reference to the regulation which is defined in Service Provider
        Agreement GovernanceRules|GovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: RuleSet
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Rulesettype:
      type: object
      format: Rulesettype
      description: "A Classification that distinguishes between the regularity domains of Service Provider Agreement ||\r\n|"
      properties:
        RuleSetTypeName:
          $ref: '#/components/schemas/Name'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: Rulesettype
    Jurisdiction:
      type: object
      format: Jurisdiction
      description: >-
        Reference to the jurisdiction that is assigned to Service Provider
        Agreement in case of legal dispute. Jurisdiction|Jurisdiction
        (https://www.iso20022.org/standardsrepository/type/Jurisdiction)|Standard|ISO20022
        BM ()
      properties:
        Jurisdiction:
          type: string
          format: Class
          description: 'Jurisdiction that will be assigned in case of legal dispute. '
    Account:
      type: object
      format: Account
      description: >-
        Reference to the account which is linked to Service Provider Agreement


        A characteristic of agreement which refers to its involved account to
        specify the account that will be used to register for the transactions
        in position keeping management. Account|Account 
        (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022
        BM ()
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/Accountidentification'
        AccountDate:
          $ref: '#/components/schemas/Accountdatetime'
        Accounttypevalues:
          enum:
            - DebitAccount
            - CreditAccount
            - VostroAcount
            - NostroAccount
            - PaymentAccount
            - SettlementAccount
            - SavingAccount
            - CurrentAccount
            - CashAccount
            - LoanAccount
            - IndividualAccount
            - JointAccount
            - LiquidationAccount
            - ProvisionAccount
            - PartnershipAccount
            - InvestmentAccount
          format: Account
        AccountPurpose:
          $ref: '#/components/schemas/Text'
        AccountBalance:
          $ref: '#/components/schemas/Accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/Accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/Text'
        AccountName:
          $ref: '#/components/schemas/Name'
    Accountstatus:
      type: object
      format: Accountstatus
      description: >-
        A characteristic of account which refers to the LifecycleStatus of
        account like opened, closed, blocked, etc.


        Specifies the current state of an account. (ISO20022) 
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Status'
        Accountstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Proforma
            - Pending
          format: Accountstatus
    Accountidentification:
      type: object
      format: Accountidentification
      description: 'The identifier of account like Account Number. '
      properties:
        Accountidentificationtypevalues:
          enum:
            - BBAN
            - IBAN
            - UPIC
            - AccountNumber
            - PAN
            - Paym
            - Wallet
            - SortCodeAndAccountNumber
          format: Accountidentification
        AccountIdentification:
          $ref: '#/components/schemas/Identifier'
    Accountdatetime:
      type: object
      format: Accountdatetime
      description: >-
        A characteristic of account which refers to LifecycleDate of account
        (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
      properties:
        Accountdatetimetypevalues:
          enum:
            - OpeningDate
            - ClosingDate
            - BlockingDate
            - MaturityDate
            - LiveDate
            - RenewalDate
          format: Accountdatetime
        AccountDate:
          $ref: '#/components/schemas/Datetime'
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        The state of the obligations managed on the account, the result of all
        entries on the account.


        Numerical representation of the net increases and decreases in an
        account at a specific point in time. (ISO20022)


        Banking: Amount available in an account for withdrawal or use.

        Read more: http://www.businessdictionary.com/definition/balance.html


        Bookkeeping: Difference between the debit and credit sides of an
        account.

        Read more: http://www.businessdictionary.com/definition/balance.html 
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - OpeningBalance
            - ClosingBalance
            - CurrentBalance
            - AvailableBalance
            - LedgerBalance
            - ReserveBalance
            - FreeBalance
            - PrincipalBalance
            - ClosingAvailable
            - ClosingBooked
            - ForwardAvailable
            - Information
            - InterimAvailable
            - InterimBooked
            - OpeningAvailable
            - OpeningBooked
            - PreviouslyClosedBooked
            - Expected
          format: Accountbalance
        BalanceValueDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Balancecounterpartytypevalues:
          enum:
            - Bilateral
            - Multilateral
          format: Accountbalance
        BalanceCalculationDate:
          $ref: '#/components/schemas/Datetime'
        Balancesubtypevalues:
          enum:
            - Adjustment
            - Basecurrency
            - Blocked
            - Blockedfunds
            - Daylightoverdraft
            - Eligibleassets
            - Firmcollateralization
            - Amountsthathavebeenusedtoserveasfi
            - Securitiesforecast
            - Netfunding
            - Intermediate
            - Localcurrency
            - Limitrelated
            - Reservedliquidity
            - Securitiespending
            - Payinpayout
            - Progressiveaverage
            - Reserve
            - Selfcollateralization
            - Amountsthathavebeenusedtoserveasse
            - Threshold
          format: Accountbalance
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Accountcurrency:
      type: object
      format: Accountcurrency
      description: ' '
      properties:
        Currencytypevalues:
          enum:
            - BaseCurrency
            - ReportingCurrency
            - SecondaryCurrency
            - TransferCurrency
          format: Accountcurrency
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Reference to the product which is linked to Service Provider Agreement


        Comment: 

        A characteristic of agreement which refers to its related products that
        are sold by agreement. Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    Calendar:
      type: object
      format: Calendar
      description: "The calendar of Service Provider Agreement ||\r\n|"
      properties:
        Calendartypevalues:
          enum:
            - UKCalendar
            - ChineseCalendar
          format: Calendar
        CalendarName:
          $ref: '#/components/schemas/Name'
    ServiceProviderAgreementNotify:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        ServiceProviderAgreementSelectedOption:
          $ref: '#/components/schemas/Feature'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        ServiceProviderAgreementDischargeRequest:
          $ref: '#/components/schemas/Instruction'
        ServiceProviderAgreementDischargeSchedule:
          $ref: '#/components/schemas/Schedule'
        ServiceProviderAgreementStatus:
          $ref: '#/components/schemas/Agreementstatus'
        ServiceProviderAgreementAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        ServiceProviderAgreementCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        ServiceProviderAgreementObligation:
          $ref: '#/components/schemas/Arrangement'
        ServiceProviderAgreementEntitlement:
          $ref: '#/components/schemas/Arrangement'
        ServiceProviderAgreementRegulationReference:
          $ref: '#/components/schemas/RuleSet'
        ServiceProviderAgreementRegulationType:
          $ref: '#/components/schemas/Rulesettype'
        ServiceProviderAgreementJurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        ServiceProviderAgreementAccountReference:
          $ref: '#/components/schemas/Account'
        ServiceProviderAgreementSubjectMatter:
          type: string
          format: Object
          description: "The subject matter of  Service Provider Agreement ||\r\n|"
        ServiceProviderAgreementProductReference:
          $ref: '#/components/schemas/BankingProduct'
        ServiceProviderAgreementCalendarReference:
          $ref: '#/components/schemas/Calendar'
        ServiceProviderAgreementAssociatedAgreementReference:
          $ref: '#/components/schemas/Agreement'
    LegalTermNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        LegalTermReference:
          $ref: '#/components/schemas/Arrangement'
        LegalTermType:
          $ref: '#/components/schemas/Text'
        Jurisdiction:
          type: string
          format: String
          description: "The legal jurisdiction ||\r\n|"
        ApplicableLawReference:
          type: string
          format: Object
          description: "Reference to any legal requirements ||\r\n|"
        ApplicableLawInterpretation:
          type: string
          format: String
          description: "Explanation or interpretation of the law as applied ||\r\n|"
    PolicyTermNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        PolicyTermReference:
          $ref: '#/components/schemas/Arrangement'
        PolicyTermType:
          $ref: '#/components/schemas/Text'
        BankPolicy-RuleType:
          type: string
          format: String
          description: "The type of bank policy referenced (e.g. staff certification) ||\r\n|"
        ApplicableBankPolicy-RuleReference:
          type: string
          format: Object
          description: "Reference to the bank's policies or rules ||\r\n|"
        ApplicableBankPolicy-RuleInterpretation:
          type: string
          format: String
          description: "Explanation or interpretation of the policy or rule as applied ||\r\n|"
    RegulatoryTermNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        ServiceProviderAgreementReference:
          $ref: '#/components/schemas/Agreement'
        RegulatoryTermReference:
          $ref: '#/components/schemas/Arrangement'
        RegulatoryTermType:
          $ref: '#/components/schemas/Text'
        RegulatoryAuthority:
          type: string
          format: String
          description: "The applicable regulatory authority ||\r\n|"
        ApplicableRegulationReference:
          type: string
          format: Object
          description: "Reference to any regulatory requirements ||\r\n|"
        ApplicableRegulationInterpretation:
          type: string
          format: String
          description: "Explanation or interpretation of the regulation as applied ||\r\n|"
