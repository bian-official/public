asyncapi: 3.0.0
info:
  title: Card Clearing
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    orchestrates the capture and consolidation of card financial transactions
    originating from various sources, such as POS Network, E-Commerce Gateway,
    ATM Network, or Card Case Management. It also handles the clearing of the
    transactions from the Acquirers to the Issuers through the Card Networks
channels:
  CardClearingProcedure/Created:
    address: CardClearingProcedure/Created
    messages:
      CardClearingProcedure-created.message:
        $ref: '#/components/messages/CardClearingProcedure'
    description: ''
  CardClearingProcedure/Updated:
    address: CardClearingProcedure/Updated
    messages:
      CardClearingProcedure-updated.message:
        $ref: '#/components/messages/CardClearingProcedure'
    description: ''
  Addressing/Created:
    address: Addressing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Addressing'
    description: ''
  Addressing/Updated:
    address: Addressing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Addressing'
    description: ''
  FXConversion/Created:
    address: FXConversion/Created
    messages:
      publish.message:
        $ref: '#/components/messages/FXConversion'
    description: ''
  FXConversion/Updated:
    address: FXConversion/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/FXConversion'
    description: ''
  Fees/Created:
    address: Fees/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Fees'
    description: ''
  Fees/Updated:
    address: Fees/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Fees'
    description: ''
  Matching/Created:
    address: Matching/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Matching'
    description: ''
  Matching/Updated:
    address: Matching/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Matching'
    description: ''
  Capture/Created:
    address: Capture/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Capture'
    description: ''
  Capture/Updated:
    address: Capture/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Capture'
    description: ''
  Routing/Created:
    address: Routing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Routing'
    description: ''
  Routing/Updated:
    address: Routing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Routing'
    description: ''
  Reconciliation/Created:
    address: Reconciliation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Reconciliation'
    description: ''
  Reconciliation/Updated:
    address: Reconciliation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Reconciliation'
    description: ''
operations:
  CardClearingProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/CardClearingProcedure~1Created'
    summary: CardClearingProcedure
    messages:
      - $ref: >-
          #/channels/CardClearingProcedure~1Created/messages/CardClearingProcedure-created.message
  CardClearingProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/CardClearingProcedure~1Updated'
    summary: CardClearingProcedure
    messages:
      - $ref: >-
          #/channels/CardClearingProcedure~1Updated/messages/CardClearingProcedure-updated.message
  Addressing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Addressing~1Created'
    summary: Addressing
    messages:
      - $ref: '#/channels/Addressing~1Created/messages/publish.message'
  Addressing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Addressing~1Updated'
    summary: Addressing
    messages:
      - $ref: '#/channels/Addressing~1Updated/messages/publish.message'
  FXConversion/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/FXConversion~1Created'
    summary: FXConversion
    messages:
      - $ref: '#/channels/FXConversion~1Created/messages/publish.message'
  FXConversion/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/FXConversion~1Updated'
    summary: FXConversion
    messages:
      - $ref: '#/channels/FXConversion~1Updated/messages/publish.message'
  Fees/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Fees~1Created'
    summary: Fees
    messages:
      - $ref: '#/channels/Fees~1Created/messages/publish.message'
  Fees/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Fees~1Updated'
    summary: Fees
    messages:
      - $ref: '#/channels/Fees~1Updated/messages/publish.message'
  Matching/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Matching~1Created'
    summary: Matching
    messages:
      - $ref: '#/channels/Matching~1Created/messages/publish.message'
  Matching/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Matching~1Updated'
    summary: Matching
    messages:
      - $ref: '#/channels/Matching~1Updated/messages/publish.message'
  Capture/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Capture~1Created'
    summary: Capture
    messages:
      - $ref: '#/channels/Capture~1Created/messages/publish.message'
  Capture/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Capture~1Updated'
    summary: Capture
    messages:
      - $ref: '#/channels/Capture~1Updated/messages/publish.message'
  Routing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Routing~1Created'
    summary: Routing
    messages:
      - $ref: '#/channels/Routing~1Created/messages/publish.message'
  Routing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Routing~1Updated'
    summary: Routing
    messages:
      - $ref: '#/channels/Routing~1Updated/messages/publish.message'
  Reconciliation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Reconciliation~1Created'
    summary: Reconciliation
    messages:
      - $ref: '#/channels/Reconciliation~1Created/messages/publish.message'
  Reconciliation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Reconciliation~1Updated'
    summary: Reconciliation
    messages:
      - $ref: '#/channels/Reconciliation~1Updated/messages/publish.message'
components:
  messages:
    CardClearingProcedure:
      name: CardClearingProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Card
        Clearing. 
      payload:
        $ref: '#/components/schemas/CardClearingProcedure'
    Addressing:
      name: Addressing
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Addressing'
    FXConversion:
      name: FXConversion
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/FXConversion'
    Fees:
      name: Fees
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Fees'
    Matching:
      name: Matching
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Matching'
    Capture:
      name: Capture
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Capture'
    Routing:
      name: Routing
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Routing'
    Reconciliation:
      name: Reconciliation
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Reconciliation'
  schemas:
    Addressing:
      type: object
      description: ''
      properties:
        AddressingTaskResult:
          $ref: '#/components/schemas/Test'
    Test:
      type: object
      format: Test
      description: "Details of the transaction addressing ||\r\n|"
      properties:
        TestResult:
          $ref: '#/components/schemas/Text'
        TestGuidance:
          $ref: '#/components/schemas/Text'
        Testtypevalues:
          enum:
            - ProductEligibilityTest
            - NextBestProductTest
            - IssuedDeviceTest
            - CardHolderAuthenticationTest
            - CardFundsAvailableTest
            - CardTransactionFraudTest
            - CardStand-InAuthorizationTest
            - ExternalAccessRequestTest
            - SuitabilityTest
            - LegalComplianceTest
            - RegulatoryComplianceTest
            - SystemFunctionalTest
            - SystemProductionTest
            - SystemBusinessRiskTest
            - SystemOperationsTest
            - CreditPolicyComplianceTest
            - RuleSetAndDecisionTreeTest
            - ModelBasedTests
            - AssetAndLiabilityValuationTest
            - LiquidityAndCashFlowTest
            - RiskTest
            - SensitivityTest
          format: Test
        TestDescription:
          $ref: '#/components/schemas/Text'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    FXConversion:
      type: object
      description: ''
      properties:
        FXConversionRatesandFees:
          $ref: '#/components/schemas/FeeArrangement'
        FXConversionTaskResult:
          $ref: '#/components/schemas/Task'
    FeeArrangement:
      type: object
      format: FeeArrangement
      description: >-
        The FX rates and fees that are applied to the transactions
        Adjustment|Adjustment
        (https://www.iso20022.org/standardsrepository/type/Adjustment)|Standard|ISO20022
        BM ()
      properties:
        Feetypevalues:
          enum:
            - Accountingfee
            - Adrfee
            - Advisoryfee
            - Airwaybillfee
            - Backendload
            - Brokeragefee
            - Clearanceandhandlingatdestination
            - Clearanceandhandlingatorigin
            - Collectfreight
            - Commission
            - Contingencydeferredsalescharge
            - Correspondentbankcharge
            - Custodyfee
            - Dangerousgoodsfee
            - Dilutionlevy
            - Discount
            - Equalisation
            - Frontendload
            - Initial
            - Insurancepremium
            - Issuancecancellationfee
            - Issuancefee
            - Managementfee
            - Matchingfees
            - Miscellaneousfee
            - Other
            - Packaging
            - Partacquis
            - Penalty
            - Pickup
            - Postagecharge
            - Premium
            - Publicationfee
            - Regulatoryfee
            - Securitycharge
            - Serviceprovisionfee
            - Shippingcharge
            - Signatureservice
            - Specialconcessions
            - Speciallyagreedfrontendload
            - Storageatdestination
            - Storageatorigin
            - Switch
            - Transferfee
            - Transportcharges
            - Ucitscommission
            - ChequeRelatedFee
          format: FeeArrangement
        FeeAmount:
          $ref: '#/components/schemas/Amount'
        FeeRate:
          $ref: '#/components/schemas/Rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/Datetime'
        FeePlan:
          $ref: '#/components/schemas/Feeplan'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: FeeArrangement
        FeeReason:
          $ref: '#/components/schemas/Text'
        Adjustmentdirectiontypevalues:
          enum:
            - Added
            - Substracted
          format: FeeArrangement
        Chargebearertypevalues:
          enum:
            - Bornebydebtor
            - Bornebycreditor
            - Shared
            - Followingservicelevel
          format: FeeArrangement
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
        Amount:
          type: string
          format: DataType
          description: >-
            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. (UN/CEFACT)


            The decimal seperator is a dot.



            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. The decimal
            separator is a dot. (ISO20022)

            Note: A zero amount is considered a positive amount.

            total number of digits: 18

            number of digits in fractional part: 5

            minInclusive: 0 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Rate:
      type: object
      format: Rate
      description: >-
        Rate used to calculate the amount of the adjustment, allowance, charge
        or fee. (ISO20022) 
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Feeplan:
      type: object
      format: Feeplan
      description: An arranged FeeRatePlan
      properties:
        FeePlanName:
          $ref: '#/components/schemas/Name'
        Feeplantypevalues:
          enum:
            - StandardFeePlan
            - FinalFeePlan
          format: Feeplan
        FeePlan:
          $ref: '#/components/schemas/Plan'
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Plan:
      type: object
      format: Plan
      description: ' '
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    Task:
      type: object
      format: Task
      description: "Details of the transaction FX conversion ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Fees:
      type: object
      description: ''
      properties:
        InterchargeFees:
          $ref: '#/components/schemas/FeeArrangement'
        FeeTaskResult:
          $ref: '#/components/schemas/Test'
    Matching:
      type: object
      description: ''
      properties:
        MatchingTaskResult:
          $ref: '#/components/schemas/Test'
    Capture:
      type: object
      description: ''
      properties:
        CardTransactionRecordReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CardTransactionNetworkReference:
          $ref: '#/components/schemas/CardNetwork'
        CardTransactionIssuingBankReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionMerchantAcquiringBankReference:
          $ref: '#/components/schemas/Involvedparty'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
        CardTransactionCurrency:
          $ref: '#/components/schemas/Currencycode'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
        CardTransactionAmount:
          $ref: '#/components/schemas/Amount'
        CardTransactionMerchantReference:
          $ref: '#/components/schemas/CardPaymentTransactionInvolvement'
        CardTransactionLocationReference:
          $ref: '#/components/schemas/Location'
        CardTransactionProductandServiceReference:
          $ref: '#/components/schemas/BankingProduct'
        CardTransactionDateandTime:
          type: string
          format: ''
          description: Significant dates and times associated with the transaction |||
        CardTransactionFXConversionCharge:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionInterchargeFee:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionAuthorizationRecord:
          $ref: '#/components/schemas/CardPaymentAuthorization'
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "The account number associated with the card transaction ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    CardNetwork:
      type: object
      format: CardNetwork
      description: "Reference to the network the card transaction is handled by ||\r\n|"
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    CardPaymentTransactionInvolvement:
      type: object
      format: CardPaymentTransactionInvolvement
      description: >-
        Refers to the merchant initiating settlement
        CardPaymentPartyRole|CardPaymentPartyRole
        (https://www.iso20022.org/standardsrepository/type/CardPaymentPartyRole)|Standard|ISO20022
        BM ()
      properties:
        Cardpaymentinvolvementtypevalues:
          enum:
            - Cardholder
            - Cardissuer
            - Cardacceptor
            - Cardacquirer
            - Merchant
            - Cardnetwork
          format: CardPaymentTransactionInvolvement
        PartyReference:
          $ref: '#/components/schemas/Party'
        TransactionReference:
          $ref: '#/components/schemas/Cardpaymenttransaction'
    Cardpaymenttransaction:
      type: object
      format: Cardpaymenttransaction
      description: ' '
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        MerchantLocation:
          $ref: '#/components/schemas/Location'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Cardpaymenttransaction
        Transactionchanneltypevalues:
          enum:
            - Mailorder
            - Telephoneorder
            - Electroniccommerce
            - Televisionpayment
            - Officeorbranch
            - Homebanking
            - Financialadvisor
            - Mobilepayment
            - Securedelectroniccommerce
            - Mobilepos
          format: Cardpaymenttransaction
        PointOfInteraction:
          $ref: '#/components/schemas/Pointofservice'
        CardTransactionDateTime:
          $ref: '#/components/schemas/Datetime'
        Transactionenvironmenttypevalues:
          enum:
            - Merchant
            - Private
            - Public
            - Branch
            - Other
          format: Cardpaymenttransaction
        MerchantCountry:
          $ref: '#/components/schemas/Country'
        CardNetwork:
          $ref: '#/components/schemas/Cardnetwork'
        Amountqualifiertypevalues:
          enum:
            - Cashback
            - Gratuity
            - Fees
            - Rebates
            - Valueaddedtax
            - Actual
            - Replacement
            - Maximum
            - Default
            - Estimated
            - Original
            - Surcharge
            - Servicefee
            - Interchangefee
            - Discount
            - Atmcommissionfee
            - Authorisedamount
            - Cardremainingbalance
            - Maximumallowedamount
            - Minimumallowedamount
            - Requestedamount
            - Issuerfees
            - Issuercommission
            - Interchangefees
            - Processingfees
            - Currencyconversionfees
            - Internationalserviceassessmentfees
            - Commission
            - Donation
            - Tax
            - Incremental
            - Decremental
            - Reserved
            - Confirmedamount
            - Instructedamount
            - Atmaccessfee
            - Cardholderbillingfee
            - Clearingfee
            - Credittransactionfee
            - Cumulative
            - Debittransactionfee
            - Extra
            - Foreignexchangefee
            - Fundstransfer
            - Instantpaymentfee
            - Instanttransferfee
            - Issuercardholderfee
            - Limit
            - Othernational
            - Otherprivate
            - Reconciliationfee
            - Settlementfee
            - Transactionfee
            - Anticipated
            - Baggage
            - Chargedtocard
            - Clearingpriorityfee
            - Dental
            - Deposit
            - Fundstransferfee
            - Otherqualifiedmedical
            - Prescription
            - Proxy
            - Requestedcashback
            - Settlementpriorityfee
            - Totalhealthcare
            - Transit
            - Vision
            - Connect
            - Data
            - Exchangeticket
            - Exchangeticketfee
            - Fare
            - Foodbeverage
            - Insurance
            - Longdistance
            - Miscellaneous
            - Phone
            - Prepayment
            - Total
            - Usage
            - Predcc
            - Upgrade
            - Clubfee
            - Cargo
            - Dutyfree
            - Ticketdelivery
            - Petcarrier
            - Tourorder
            - Minimuminterchangefee
            - Maximuminterchangefee
            - Cashbackinterchangefee
          format: Cardpaymenttransaction
        CardPaymentStatus:
          $ref: '#/components/schemas/Status'
        Cardtransactioncategorytypevalues:
          enum:
            - Cardtransactioncategorytypevalues
          format: Cardpaymenttransaction
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Cardpaymenttransactionidentification'
        Cardpaymenttransactionservicetypevalues:
          enum:
            - Cardsfundtransfer
            - Originalcredit
            - Cardpayment
            - Cashback
            - Cashadvance
            - Cashdeposit
            - Deferredpayment
            - Reservation
            - Loading
            - Refund
            - Quasicash
            - Balance
            - Cardactivation
            - Cardverification
            - Pinchange
            - Validitycheck
            - Aggregation
            - DCC
            - Gratuity
            - Instalment
            - Loyalty
            - Noshow
            - Purchasecorporate
            - Recurringpayment
            - Solicitedavailablefunds
            - Unsolicitedavailablefunds
            - Voiceauthorisation
            - Initialreservation
            - Updatereservation
            - Paymentreservation
            - Additionalpayment
            - Firstrecurring
            - Followingrecurring
            - Persontobusiness
            - Persontoperson
            - Acceptorinstalment
            - Issuerinstalment
            - Unloading
            - Cardsfundtransferpush
            - Cardsfundtransferpull
            - Cashwithdrawal
            - Pinunblock
            - Chosenwithdrawal
            - Preauthorisedwithdrawal
            - Profilewithdrawal
            - Standardwithdrawal
            - Transfercardbillpayment
            - Transferfromcash
            - Transferfromcheque
            - Transferfundsdisbursementgeneral
            - Transfergovernmentdisbursement
            - Transfermerchantdisbursement
            - Transferpayrollpensiondisbursement
            - Nonrefundable
            - Instant
            - Creditadjustement
            - Debitadjustement
            - Createcertificate
            - Renewcerificate
            - Revokecertificate
            - Addwhitelist
            - Removewhitelist
            - Cardinitiatingdirectdebit
            - Guaranteeofpayment
          format: Cardpaymenttransaction
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
    Pointofservice:
      type: object
      format: Pointofservice
      description: >-
        Describes the Point of Interaction through which the payment by card was
        initiated. (ISO20022) 
      properties:
        PointOfService:
          type: string
          format: Class
          description: Point at which a service is offered and/or fulfilled.
    Country:
      type: object
      format: Country
      description: 'Country of the merchant where the transaction took place. (ISO20022) '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    Cardnetwork:
      type: object
      format: Cardnetwork
      description: 'Network used for handling the card payment transaction. '
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    Cardpaymenttransactionidentification:
      type: object
      format: Cardpaymenttransactionidentification
      description: >-
        Identification of the transaction assigned by the initiator of the
        request. For instance refers to POITransactionIdentification if used
        inside an authorisation request or to SaleTransactionIdentification if
        the message is a payment request initiated by a sale system. (ISO20022) 
      properties:
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        Cardpaymenttransactionidentificationtypevalues:
          enum:
            - Issuercitidentification
            - Merchantcitidentification
          format: Cardpaymenttransactionidentification
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Details of the transaction (e.g. purchased service/product, purpose)
        Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    CardPaymentAuthorization:
      type: object
      format: CardPaymentAuthorization
      description: >-
        Details the reference, amount, timestamp of the transaction
        authorization) CardPaymentValidation|CardPaymentValidation
        (https://www.iso20022.org/standardsrepository/type/CardPaymentValidation)|Standard|ISO20022
        BM ()
      properties:
        Truefalseindicatorvalues:
          enum:
            - 1
            - 0
          format: CardPaymentAuthorization
        ValidityDate:
          $ref: '#/components/schemas/Date'
        Response:
          $ref: '#/components/schemas/Text'
        AuthorizationCode:
          $ref: '#/components/schemas/Value'
        Cardholderaddressverificationresulttypevalues:
          enum:
            - Addressmatch
            - Addressnotmatch
            - Addresstechnical
            - Addressnottechnical
            - Addressmissing
            - Addressnotused
            - Postalmatch
            - Postalnotmatch
            - Postaltechnical
            - Postalnottechnical
            - Postalmissing
            - Postalnotused
          format: CardPaymentAuthorization
        Cscresulttypevalues:
          enum:
            - Cscmatch
            - Cscnomatch
            - Csctechnical
            - Cscnottechnical
            - Cscmissing
            - Cscnotused
          format: CardPaymentAuthorization
        ElectronicCommerceAuthenticationResult:
          $ref: '#/components/schemas/Text'
        Failurereasontypevalues:
          enum:
            - Customercancel
            - Malfunction
            - Partial
            - Toolateresponse
            - Unabletocomplete
            - Unabletosend
            - Timeout
            - Carddeclined
            - Onlinedeclined
            - Offlinedeclined
            - Suspectedfraud
            - Securityerror
            - Cardcaptured
            - Carderror
            - Customerdecline
            - Forgottencard
            - Fullfilmenterror
            - Outofcustomerservice
            - Unabletocapture
            - Security
            - Hardware
            - Compromised
            - Expired
            - Invalidkcv
            - Keyloaderror
            - Cardretained
            - Customertimeout
          format: CardPaymentAuthorization
        AuthorizationEntity:
          $ref: '#/components/schemas/Involvedparty'
    Date:
      type: object
      format: Date
      description: >-
        Transaction authorisation deadline to complete the related payment.
        (ISO20022) 
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Routing:
      type: object
      description: ''
      properties:
        RoutingTaskResult:
          $ref: '#/components/schemas/Test'
    Reconciliation:
      type: object
      description: ''
      properties:
        ReconciliationTaskResult:
          $ref: '#/components/schemas/Test'
    CardClearingProcedure:
      type: object
      description: ''
      properties:
        NetworkReference:
          $ref: '#/components/schemas/CardNetwork'
        ParticipantAcquirerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        ParticipantAcquirerBankClearingandSettlementTerms:
          $ref: '#/components/schemas/CardClearingArrangement'
        ParticipantIssuerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        ParticipantIssuerBankClearingandSettlementTerms:
          $ref: '#/components/schemas/CardClearingArrangement'
        Cardclearingtypevalues:
          enum:
            - Capture
            - Batch
            - Chargeback
        CardClearingProcessDateandTime:
          type: string
          format: ''
          description: The scheduled time for the process likely initiation time |||
        CardClearingServiceSchedule:
          $ref: '#/components/schemas/Schedule'
    CardClearingArrangement:
      type: object
      format: CardClearingArrangement
      description: "Defines card clearing fees/terms in force referenced by Network ||\r\n|"
      properties:
        CardClearingArrangement:
          type: string
          format: Class
          description: >-
            An arrangement (obligation and right) defined for doing the clearing
            of a card based transaction or a batch of card based transactions.
             
    Schedule:
      type: object
      format: Schedule
      description: "The schedule of activities for card clearing ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
