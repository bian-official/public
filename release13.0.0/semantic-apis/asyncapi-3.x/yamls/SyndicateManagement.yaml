asyncapi: 3.0.0
info:
  title: Syndicate Management
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    manages syndicate membership and compliance
channels:
  SyndicateMembership/Created:
    address: SyndicateMembership/Created
    messages:
      SyndicateMembership-created.message:
        $ref: '#/components/messages/SyndicateMembership'
    description: ''
  SyndicateMembership/Updated:
    address: SyndicateMembership/Updated
    messages:
      SyndicateMembership-updated.message:
        $ref: '#/components/messages/SyndicateMembership'
    description: ''
  SyndicateEligibilityClauses/Created:
    address: SyndicateEligibilityClauses/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SyndicateEligibilityClauses'
    description: ''
  SyndicateEligibilityClauses/Updated:
    address: SyndicateEligibilityClauses/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SyndicateEligibilityClauses'
    description: ''
  SyndicateComplianceClauses/Created:
    address: SyndicateComplianceClauses/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SyndicateComplianceClauses'
    description: ''
  SyndicateComplianceClauses/Updated:
    address: SyndicateComplianceClauses/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SyndicateComplianceClauses'
    description: ''
  SyndicateManagementOutcome/Created:
    address: SyndicateManagementOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SyndicateManagementOutcome'
    description: ''
  SyndicateManagementOutcome/Updated:
    address: SyndicateManagementOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SyndicateManagementOutcome'
    description: ''
  SyndicateMembership/Notify:
    address: SyndicateMembership/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/SyndicateMembershipNotify'
  SyndicateComplianceClauses/Notify:
    address: SyndicateComplianceClauses/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/SyndicateComplianceClausesNotify'
  SyndicateEligibilityClauses/Notify:
    address: SyndicateEligibilityClauses/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/SyndicateEligibilityClausesNotify'
operations:
  SyndicateMembership-created:
    action: receive
    channel:
      $ref: '#/channels/SyndicateMembership~1Created'
    summary: SyndicateMembership
    messages:
      - $ref: >-
          #/channels/SyndicateMembership~1Created/messages/SyndicateMembership-created.message
  SyndicateMembership-updated:
    action: receive
    channel:
      $ref: '#/channels/SyndicateMembership~1Updated'
    summary: SyndicateMembership
    messages:
      - $ref: >-
          #/channels/SyndicateMembership~1Updated/messages/SyndicateMembership-updated.message
  SyndicateEligibilityClauses/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SyndicateEligibilityClauses~1Created'
    summary: SyndicateEligibilityClauses
    messages:
      - $ref: >-
          #/channels/SyndicateEligibilityClauses~1Created/messages/publish.message
  SyndicateEligibilityClauses/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SyndicateEligibilityClauses~1Updated'
    summary: SyndicateEligibilityClauses
    messages:
      - $ref: >-
          #/channels/SyndicateEligibilityClauses~1Updated/messages/publish.message
  SyndicateComplianceClauses/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SyndicateComplianceClauses~1Created'
    summary: SyndicateComplianceClauses
    messages:
      - $ref: >-
          #/channels/SyndicateComplianceClauses~1Created/messages/publish.message
  SyndicateComplianceClauses/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SyndicateComplianceClauses~1Updated'
    summary: SyndicateComplianceClauses
    messages:
      - $ref: >-
          #/channels/SyndicateComplianceClauses~1Updated/messages/publish.message
  SyndicateManagementOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SyndicateManagementOutcome~1Created'
    summary: SyndicateManagementOutcome
    messages:
      - $ref: >-
          #/channels/SyndicateManagementOutcome~1Created/messages/publish.message
  SyndicateManagementOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SyndicateManagementOutcome~1Updated'
    summary: SyndicateManagementOutcome
    messages:
      - $ref: >-
          #/channels/SyndicateManagementOutcome~1Updated/messages/publish.message
  SyndicateMembership/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/SyndicateMembership~1Notify'
    messages:
      - $ref: '#/channels/SyndicateMembership~1Notify/messages/subscribe.message'
  SyndicateComplianceClauses/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/SyndicateComplianceClauses~1Notify'
    messages:
      - $ref: >-
          #/channels/SyndicateComplianceClauses~1Notify/messages/subscribe.message
  SyndicateEligibilityClauses/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/SyndicateEligibilityClauses~1Notify'
    messages:
      - $ref: >-
          #/channels/SyndicateEligibilityClauses~1Notify/messages/subscribe.message
components:
  messages:
    SyndicateMembership:
      name: SyndicateMembership
      description: >-
        Maintain a membership for some group or related collection of parties
        within Syndicate Management. 
      payload:
        $ref: '#/components/schemas/SyndicateMembership'
    SyndicateEligibilityClauses:
      name: SyndicateEligibilityClauses
      description: >-
        The Syndicate Eligibility Clauses defines a particular clause or
        consideration that is applied to determine eligibility for Syndicate
        Eligibility Clauses
      payload:
        $ref: '#/components/schemas/SyndicateEligibilityClauses'
    SyndicateComplianceClauses:
      name: SyndicateComplianceClauses
      description: >-
        The Syndicate Eligibility Clauses defines a particular clause or
        consideration that is applied to determine eligibility for Syndicate
        Eligibility Clauses
      payload:
        $ref: '#/components/schemas/SyndicateComplianceClauses'
    SyndicateManagementOutcome:
      name: SyndicateManagementOutcome
      description: >-
        The Syndicate Eligibility Clauses defines a particular clause or
        consideration that is applied to determine eligibility for Syndicate
        Eligibility Clauses
      payload:
        $ref: '#/components/schemas/SyndicateManagementOutcome'
    SyndicateMembershipNotify:
      name: SyndicateMembershipNotify
      payload:
        $ref: '#/components/schemas/SyndicateMembershipNotify'
    SyndicateComplianceClausesNotify:
      name: SyndicateComplianceClausesNotify
      payload:
        $ref: '#/components/schemas/SyndicateComplianceClausesNotify'
    SyndicateEligibilityClausesNotify:
      name: SyndicateEligibilityClausesNotify
      payload:
        $ref: '#/components/schemas/SyndicateEligibilityClausesNotify'
  schemas:
    SyndicateEligibilityClauses:
      type: object
      description: ''
      properties:
        SyndicateMembershipReference:
          type: string
          format: Object
          description: "Reference to Syndicate Eligibility Clauses ||\r\n|"
        SyndicateEligibilityClausesReference:
          type: string
          format: Object
          description: "Reference to Syndicate Eligibility Clauses ||\r\n|"
        SyndicateEligibilityClausesType:
          $ref: '#/components/schemas/Text'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    BusinessService:
      type: object
      format: BusinessService
      description: "The Syndicate Eligibility Clauses specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Party who plays a  specific role in the context of assigning a status. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: 'The name of Condition '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the status was assigned. '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: 'Period of time during which the status is valid. '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Condition:
      type: object
      format: Condition
      description: "The required status/situation before Syndicate Eligibility Clauses can be governed by applying the Syndicate Eligibility Clauses clause ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Status:
      type: object
      format: Status
      description: 'Refers to the lifecycle of a Condition '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Schedule:
      type: object
      format: Schedule
      description: "The timing and key actions/milestones involved in governing Syndicate Eligibility Clauses by applying the Syndicate Eligibility Clauses clause ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    SyndicateComplianceClauses:
      type: object
      description: ''
      properties:
        SyndicateMembershipReference:
          type: string
          format: Object
          description: "Reference to Syndicate Compliance Clauses ||\r\n|"
        SyndicateComplianceClausesReference:
          type: string
          format: Object
          description: "Reference to Syndicate Compliance Clauses ||\r\n|"
        SyndicateComplianceClausesType:
          $ref: '#/components/schemas/Text'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
    SyndicateManagementOutcome:
      type: object
      description: ''
      properties:
        SyndicateManagementTask:
          $ref: '#/components/schemas/Task'
        SyndicateManagementEntry:
          $ref: '#/components/schemas/DirectoryEntry'
    Task:
      type: object
      format: Task
      description: " ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    DirectoryEntry:
      type: object
      format: DirectoryEntry
      description: " ||\r\n|"
      properties:
        Directoryentrydatetypevalues:
          enum:
            - OpenDate
            - RefreshDate
          format: DirectoryEntry
        DirectoryEntryDate:
          $ref: '#/components/schemas/Date'
        DirectoryEntryStatus:
          $ref: '#/components/schemas/Status'
    Date:
      type: object
      format: Date
      description: ' '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    SyndicateMembership:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        SyndicateMembershipSelectedOption:
          $ref: '#/components/schemas/Service'
        SyndicateMembershipRequest:
          $ref: '#/components/schemas/Instruction'
        SyndicateMembershipPlan:
          $ref: '#/components/schemas/Plan'
        SyndicateMembershipObligation:
          $ref: '#/components/schemas/Arrangement'
        SyndicateMembershipEntitlement:
          $ref: '#/components/schemas/Arrangement'
        SyndicateMembershipReference:
          type: string
          format: Object
          description: "An unique reference to an item or an occurrence of Syndicate Membership ||\r\n|"
    Service:
      type: object
      format: Service
      description: "A selected optional business service as subject matter of Syndicate Membership ||\r\n|"
      properties:
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Service
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      format: Feature
      description: >-
        A characteristic of service which refers 1) mainly to the function or
        condition of service. 2) to non-functional features like quality and
        security 
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Instruction:
      type: object
      format: Instruction
      description: "Request to enroll Syndicate Membership ||\r\n|"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondatetime:
      type: object
      format: Instructiondatetime
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Datetime'
        Instructiondatetimetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondatetime
    Instructionstatus:
      type: object
      format: Instructionstatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionstatustypevalues:
          enum:
            - Pendingprocessing
            - Acknowledgedaccepted
            - Rejected
            - Accepted
            - Completed
            - Notreceived
            - Cancelled
            - Beingcancelled
            - Receivedbyissuerorregistrar
            - Pending
            - Standinginstruction
            - Queued
            - Cancelledbysubcustodian
            - Forwarded
          format: Instructionstatus
        InstructionStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    Plan:
      type: object
      format: Plan
      description: "Reference to  Syndicate Membership Plan ||\r\n|"
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Right to do something under the terms of Syndicate Membership
        Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
        Arrangement:
          type: string
          format: Class
          description: >-
            An agreed commitment to perform actions that meet obligations under
            an agreement 
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    SyndicateMembershipNotify:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        SyndicateMembershipSelectedOption:
          $ref: '#/components/schemas/Service'
        SyndicateMembershipRequest:
          $ref: '#/components/schemas/Instruction'
        SyndicateMembershipPlan:
          $ref: '#/components/schemas/Plan'
        SyndicateMembershipObligation:
          $ref: '#/components/schemas/Arrangement'
        SyndicateMembershipEntitlement:
          $ref: '#/components/schemas/Arrangement'
        SyndicateMembershipReference:
          type: string
          format: Object
          description: "An unique reference to an item or an occurrence of Syndicate Membership ||\r\n|"
    SyndicateComplianceClausesNotify:
      type: object
      description: ''
      properties:
        SyndicateMembershipReference:
          type: string
          format: Object
          description: "Reference to Syndicate Compliance Clauses ||\r\n|"
        SyndicateComplianceClausesReference:
          type: string
          format: Object
          description: "Reference to Syndicate Compliance Clauses ||\r\n|"
        SyndicateComplianceClausesType:
          $ref: '#/components/schemas/Text'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
    SyndicateEligibilityClausesNotify:
      type: object
      description: ''
      properties:
        SyndicateMembershipReference:
          type: string
          format: Object
          description: "Reference to Syndicate Eligibility Clauses ||\r\n|"
        SyndicateEligibilityClausesReference:
          type: string
          format: Object
          description: "Reference to Syndicate Eligibility Clauses ||\r\n|"
        SyndicateEligibilityClausesType:
          $ref: '#/components/schemas/Text'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
