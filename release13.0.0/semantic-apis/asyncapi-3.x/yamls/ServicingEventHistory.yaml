asyncapi: 3.0.0
info:
  title: Servicing Event History
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    captures, classifies and stores servicing activity and events to support
    root cause analysis
channels:
  ServicingEventLog/Created:
    address: ServicingEventLog/Created
    messages:
      ServicingEventLog-created.message:
        $ref: '#/components/messages/ServicingEventLog'
    description: ''
  ServicingEventLog/Updated:
    address: ServicingEventLog/Updated
    messages:
      ServicingEventLog-updated.message:
        $ref: '#/components/messages/ServicingEventLog'
    description: ''
  Assignment/Created:
    address: Assignment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Assignment'
    description: ''
  Assignment/Updated:
    address: Assignment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Assignment'
    description: ''
  Session/Created:
    address: Session/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Session'
    description: ''
  Session/Updated:
    address: Session/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Session'
    description: ''
  ServicingFacility/Created:
    address: ServicingFacility/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ServicingFacility'
    description: ''
  ServicingFacility/Updated:
    address: ServicingFacility/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ServicingFacility'
    description: ''
  Issue/Created:
    address: Issue/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Issue'
    description: ''
  Issue/Updated:
    address: Issue/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Issue'
    description: ''
operations:
  ServicingEventLog-created:
    action: receive
    channel:
      $ref: '#/channels/ServicingEventLog~1Created'
    summary: ServicingEventLog
    messages:
      - $ref: >-
          #/channels/ServicingEventLog~1Created/messages/ServicingEventLog-created.message
  ServicingEventLog-updated:
    action: receive
    channel:
      $ref: '#/channels/ServicingEventLog~1Updated'
    summary: ServicingEventLog
    messages:
      - $ref: >-
          #/channels/ServicingEventLog~1Updated/messages/ServicingEventLog-updated.message
  Assignment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Assignment~1Created'
    summary: Assignment
    messages:
      - $ref: '#/channels/Assignment~1Created/messages/publish.message'
  Assignment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Assignment~1Updated'
    summary: Assignment
    messages:
      - $ref: '#/channels/Assignment~1Updated/messages/publish.message'
  Session/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Session~1Created'
    summary: Session
    messages:
      - $ref: '#/channels/Session~1Created/messages/publish.message'
  Session/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Session~1Updated'
    summary: Session
    messages:
      - $ref: '#/channels/Session~1Updated/messages/publish.message'
  ServicingFacility/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ServicingFacility~1Created'
    summary: ServicingFacility
    messages:
      - $ref: '#/channels/ServicingFacility~1Created/messages/publish.message'
  ServicingFacility/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ServicingFacility~1Updated'
    summary: ServicingFacility
    messages:
      - $ref: '#/channels/ServicingFacility~1Updated/messages/publish.message'
  Issue/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Issue~1Created'
    summary: Issue
    messages:
      - $ref: '#/channels/Issue~1Created/messages/publish.message'
  Issue/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Issue~1Updated'
    summary: Issue
    messages:
      - $ref: '#/channels/Issue~1Updated/messages/publish.message'
components:
  messages:
    ServicingEventLog:
      name: ServicingEventLog
      description: >-
        Maintain a log of transactions or activity, typically a financial
        account/journal or a log of activity to support behavioral analysis
        within Servicing Event History. 
      payload:
        $ref: '#/components/schemas/ServicingEventLog'
    Assignment:
      name: Assignment
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Assignment'
    Session:
      name: Session
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Session'
    ServicingFacility:
      name: ServicingFacility
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/ServicingFacility'
    Issue:
      name: Issue
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/Issue'
  schemas:
    Assignment:
      type: object
      description: ''
      properties:
        DateTimeLocation:
          $ref: '#/components/schemas/Text'
        ServicingPositionActivityReport:
          $ref: '#/components/schemas/Report'
        ServicingPositionActivityStatistics:
          type: string
          format: Object
          description: "Accumulated statistics during the session (e.g. average contact time, wait time, service utilization, facility usage) ||\r\n|"
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Report:
      type: object
      format: Report
      description: "Log of servicing activity at that position during the session (e.g. contacts, sales, issues, breaks) ||\r\n|"
      properties:
        Reporttypevalues:
          enum:
            - FinancialReport
            - BusinessReport
            - ManagementReport
            - Statement
            - MaintenanceReport
            - RegulatoryReport
            - TaxReport
            - AnalysisReport
          format: Report
        ReportValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ReportVersion:
          type: string
          format: Number
          description: ''
        ReportDateTime:
          $ref: '#/components/schemas/Datetime'
        ReportFormat:
          $ref: '#/components/schemas/Text'
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Session:
      type: object
      format: Session
      description: "The outcome of the dialogue (e.g. customer satisfied, on-ward routing, hang-up) ||\r\n|"
      properties:
        SessionStartEndTime:
          $ref: '#/components/schemas/Datetime'
        CustomerContactReference:
          $ref: '#/components/schemas/CustomerContact'
        SessionMechanism:
          $ref: '#/components/schemas/Session'
        SessionDuration:
          $ref: '#/components/schemas/Duration'
        SessionDateTime:
          $ref: '#/components/schemas/Datetime'
        SessionStatus:
          $ref: '#/components/schemas/Status'
        SessionType:
          $ref: '#/components/schemas/Sessiontype'
        SessionScheduel:
          $ref: '#/components/schemas/Schedule'
        ServicingFacilityType:
          $ref: '#/components/schemas/Text'
        SessionDialogueRecord:
          $ref: '#/components/schemas/Session'
        SessionDialogueType:
          $ref: '#/components/schemas/Text'
        SessionDialogueScript:
          $ref: '#/components/schemas/Session'
        SessionDialogueLogReference:
          $ref: '#/components/schemas/SessionDialogueLog'
        SessionDialogueLog:
          $ref: '#/components/schemas/SessionDialogueLog'
        SessionDialogueResult:
          $ref: '#/components/schemas/Session'
    CustomerContact:
      type: object
      format: CustomerContact
      description: "Reference to the complete contact record for the customer contact ||\r\n|"
      properties:
        ContactType:
          $ref: '#/components/schemas/Text'
        ContactDateTime:
          $ref: '#/components/schemas/Datetime'
        ContactLocation:
          $ref: '#/components/schemas/Location'
        ContactSchedule:
          $ref: '#/components/schemas/Schedule'
        ContactResult:
          $ref: '#/components/schemas/Text'
        ContactPurpose:
          $ref: '#/components/schemas/Text'
        ContactDevice:
          $ref: '#/components/schemas/Device'
        ContactIndicator:
          $ref: '#/components/schemas/Text'
        ContactContent:
          $ref: '#/components/schemas/Text'
    Location:
      type: object
      format: Location
      description: 'Geographical location of the device. '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Address:
      type: object
      format: Address
      description: >-
        The address associated with the device like Internet Protocol address,
        email Address 
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Schedule:
      type: object
      format: Schedule
      description: ' '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    Device:
      type: object
      format: Device
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Deviceidentification'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
          format: Device
        DeviceProperty:
          $ref: '#/components/schemas/Text'
        DeviceElement:
          $ref: '#/components/schemas/Text'
        DeviceStatus:
          $ref: '#/components/schemas/Status'
        DeviceVersion:
          type: string
          format: Number
          description: ''
        DeviceDateTime:
          $ref: '#/components/schemas/Datetime'
        DeviceDescription:
          $ref: '#/components/schemas/Text'
        DeviceName:
          $ref: '#/components/schemas/Name'
        DeviceLanguage:
          $ref: '#/components/schemas/Text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/Text'
        DeviceLocation:
          $ref: '#/components/schemas/Location'
        DeviceManufacturer:
          $ref: '#/components/schemas/Text'
        DeviceCountry:
          $ref: '#/components/schemas/Country'
        DeviceAddress:
          $ref: '#/components/schemas/Address'
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Device
        Deviceoperatingsystemtypevalues:
          enum:
            - Android
            - Ios
            - Windows
            - Blackberry
            - Tizen
            - Othernational
            - Otherprivate
          format: Device
    Deviceidentification:
      type: object
      format: Deviceidentification
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Identifier'
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
          format: Deviceidentification
    Country:
      type: object
      format: Country
      description: 'Country of the location. '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    Duration:
      type: object
      format: Duration
      description: 'The time the session was active '
      properties:
        Duration:
          type: string
          format: DataType
          description: >-
            A duration is the specification of a length of time without a fixed
            start or end time, expressed in Gregorian calendar time units (Year,
            Month, Week, Day) and Hours, Minutes or Seconds. (UN/CEFACT) 
    Sessiontype:
      type: object
      format: Sessiontype
      description: >-
        Specifies the classification of session like Customer Contact Session,
        Channel Operating Session, Device Operating Session, etc. 
      properties:
        SessionTypeName:
          $ref: '#/components/schemas/Name'
        Sessiontypevalues:
          enum:
            - ContactHandlingSession
            - CustomerDialogueSession
            - ChannelOperatingSession
            - GatewayOperatingSession
            - SwitchOperatingSession
            - DeviceOperatingSession
            - InterbankTransactionOperatingSessi
            - CorrespondenceOperatingSession
            - InteractiveHelpOperatingSession
            - ACHOperatingSession
          format: Sessiontype
    SessionDialogueLog:
      type: object
      format: SessionDialogueLog
      description: "The dialogue log, used for training and root cause analysis etc.  (e.g. click-stream, video/audio recording) ||\r\n|"
      properties:
        SessionDialogueLog:
          type: string
          format: Class
          description: 'A record of contact dialogue log entries. '
    ServicingFacility:
      type: object
      description: ''
      properties:
        ServicingFacilityType:
          $ref: '#/components/schemas/Text'
        ServicingFacilityInstanceReference:
          $ref: '#/components/schemas/Identifier'
    Issue:
      type: object
      description: ''
      properties:
        ServicingPositionReference:
          $ref: '#/components/schemas/Position'
        ServicingPositionSessionReference:
          $ref: '#/components/schemas/Session'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        ProductionIssueType:
          $ref: '#/components/schemas/Text'
        ProductionIssueDescription:
          $ref: '#/components/schemas/Text'
        ProductionIssueDiagnosis:
          $ref: '#/components/schemas/Assessment'
        ProductionIssueResolutionTask:
          $ref: '#/components/schemas/Task'
    Position:
      type: object
      format: Position
      description: >-
        Reference to the service position where issue arises Position |Position 
        (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
        BM ()
      properties:
        PositionValue:
          $ref: '#/components/schemas/Value'
        PositionQuantity:
          type: string
          format: Number
          description: ''
        PositionDate:
          $ref: '#/components/schemas/Datetime'
        PositionAmount:
          $ref: '#/components/schemas/Amount'
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Assessment:
      type: object
      format: Assessment
      description: >-
        An evaluation of the event cause and impact Assessment|Assessment
        (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
        BM ()
      properties:
        Assessmenttypevalues:
          enum:
            - AssetValuation
            - ProductMatching
            - Authorization
            - Authentication
            - QualityAssurance
            - Audit
            - ComplianceCheck
            - FundingCheck
            - SuitabilityCheck
            - PerformanceCheck
            - ImpactAssessment
            - RiskAssessment
            - Rating
            - UnderwritingAssessment
            - Qualification
            - Verification
            - KYCAssessment
            - PEPAssessment
            - AMLAssessment
          format: Assessment
        AssessmentMethod:
          $ref: '#/components/schemas/Text'
        AssessmentSchedule:
          $ref: '#/components/schemas/Schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/Text'
        AssessmentModel:
          $ref: '#/components/schemas/Model'
        AssessmentDateTime:
          $ref: '#/components/schemas/Datetime'
        AssessmentResult:
          $ref: '#/components/schemas/Text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/Text'
        AssessmentRequirement:
          $ref: '#/components/schemas/Requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/Date'
        AssessmentStatus:
          $ref: '#/components/schemas/Status'
    Model:
      type: object
      format: Model
      description: ' '
      properties:
        ModelType:
          $ref: '#/components/schemas/Text'
        ModelPurpose:
          $ref: '#/components/schemas/Text'
        ModelVersion:
          $ref: '#/components/schemas/Text'
        ModelName:
          $ref: '#/components/schemas/Name'
        ModelDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ModelStatus:
          $ref: '#/components/schemas/Status'
    Document:
      type: object
      format: Document
      description: 'Document that represents the result of an assessment(s). '
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Creditnoterelatedtofinancialadjust
            - Debitnoterelatedtofinancialadjustm
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Structuredcommunicationreference
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Tradeservicesutilitytransaction
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Document:
          type: string
          format: Class
          description: >-
            Something tangible that records something, such as a recording or a
            photograph, or a writing that can be used to furnish evidence or
            information (FIBO)


            Definition: A physical or digital representation of something
            meaningful to the audience.


            Comment: 

            1.Technical: Manuals, instructions, tutorials, procedures,
            specifications, etc., that accompany a piece of equipment or
            software, and provide guidance for its proper use and maintenance.

            2.Trading: Preparation of a set of commercial and financial
            documents that record or support a business transaction.
            International trade documentations include air waybill, bill of
            exchange, bill of lading, certificate of inspection, certificate of
            insurance, certificate of origin, commercial invoice, and consular
            invoice.



            Read more:
            http://www.businessdictionary.com/definition/documentation.html#ixzz3EQGRGC4W
             
    Requirement:
      type: object
      format: Requirement
      description: ' '
      properties:
        RequirementType:
          type: string
          format: String
          description: ''
    Date:
      type: object
      format: Date
      description: 'Date when the assessment expires. (ISO20022) '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Task:
      type: object
      format: Task
      description: "Description of corrective actions and assigned parties ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    ServicingEventLog:
      type: object
      description: ''
      properties:
        ServicingPositionReference:
          $ref: '#/components/schemas/Position'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
