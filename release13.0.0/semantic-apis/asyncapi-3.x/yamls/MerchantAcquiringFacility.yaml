asyncapi: 3.0.0
info:
  title: Merchant Acquiring Facility
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    orchestrates the activities related to Merchant fulfillment, Merchant
    Account maintenance, Merchant transactional activities and settlement,
    including the billing of merchant fees and charges.
channels:
  MerchantAcquiringFacility/Created:
    address: MerchantAcquiringFacility/Created
    messages:
      MerchantAcquiringFacility-created.message:
        $ref: '#/components/messages/MerchantAcquiringFacility'
    description: ''
  MerchantAcquiringFacility/Updated:
    address: MerchantAcquiringFacility/Updated
    messages:
      MerchantAcquiringFacility-updated.message:
        $ref: '#/components/messages/MerchantAcquiringFacility'
    description: ''
  ServiceFee/Created:
    address: ServiceFee/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ServiceFee'
    description: ''
  ServiceFee/Updated:
    address: ServiceFee/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ServiceFee'
    description: ''
  MerchantAccount/Created:
    address: MerchantAccount/Created
    messages:
      publish.message:
        $ref: '#/components/messages/MerchantAccount'
    description: ''
  MerchantAccount/Updated:
    address: MerchantAccount/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/MerchantAccount'
    description: ''
  Clearing/Created:
    address: Clearing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Clearing'
    description: ''
  Clearing/Updated:
    address: Clearing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Clearing'
    description: ''
  Chargeback/Created:
    address: Chargeback/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Chargeback'
    description: ''
  Chargeback/Updated:
    address: Chargeback/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Chargeback'
    description: ''
  Settlement/Created:
    address: Settlement/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Settlement'
    description: ''
  Settlement/Updated:
    address: Settlement/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Settlement'
    description: ''
operations:
  MerchantAcquiringFacility-created:
    action: receive
    channel:
      $ref: '#/channels/MerchantAcquiringFacility~1Created'
    summary: MerchantAcquiringFacility
    messages:
      - $ref: >-
          #/channels/MerchantAcquiringFacility~1Created/messages/MerchantAcquiringFacility-created.message
  MerchantAcquiringFacility-updated:
    action: receive
    channel:
      $ref: '#/channels/MerchantAcquiringFacility~1Updated'
    summary: MerchantAcquiringFacility
    messages:
      - $ref: >-
          #/channels/MerchantAcquiringFacility~1Updated/messages/MerchantAcquiringFacility-updated.message
  ServiceFee/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ServiceFee~1Created'
    summary: ServiceFee
    messages:
      - $ref: '#/channels/ServiceFee~1Created/messages/publish.message'
  ServiceFee/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ServiceFee~1Updated'
    summary: ServiceFee
    messages:
      - $ref: '#/channels/ServiceFee~1Updated/messages/publish.message'
  MerchantAccount/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/MerchantAccount~1Created'
    summary: MerchantAccount
    messages:
      - $ref: '#/channels/MerchantAccount~1Created/messages/publish.message'
  MerchantAccount/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/MerchantAccount~1Updated'
    summary: MerchantAccount
    messages:
      - $ref: '#/channels/MerchantAccount~1Updated/messages/publish.message'
  Clearing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Clearing~1Created'
    summary: Clearing
    messages:
      - $ref: '#/channels/Clearing~1Created/messages/publish.message'
  Clearing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Clearing~1Updated'
    summary: Clearing
    messages:
      - $ref: '#/channels/Clearing~1Updated/messages/publish.message'
  Chargeback/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Chargeback~1Created'
    summary: Chargeback
    messages:
      - $ref: '#/channels/Chargeback~1Created/messages/publish.message'
  Chargeback/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Chargeback~1Updated'
    summary: Chargeback
    messages:
      - $ref: '#/channels/Chargeback~1Updated/messages/publish.message'
  Settlement/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Settlement~1Created'
    summary: Settlement
    messages:
      - $ref: '#/channels/Settlement~1Created/messages/publish.message'
  Settlement/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Settlement~1Updated'
    summary: Settlement
    messages:
      - $ref: '#/channels/Settlement~1Updated/messages/publish.message'
components:
  messages:
    MerchantAcquiringFacility:
      name: MerchantAcquiringFacility
      description: >-
        Fulfill any scheduled and ad-hoc obligations under a service
        arrangement, most typically for a financial product or facility within
        Merchant Acquiring Facility. 
      payload:
        $ref: '#/components/schemas/MerchantAcquiringFacility'
    ServiceFee:
      name: ServiceFee
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/ServiceFee'
    MerchantAccount:
      name: MerchantAccount
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/MerchantAccount'
    Clearing:
      name: Clearing
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/Clearing'
    Chargeback:
      name: Chargeback
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/Chargeback'
    Settlement:
      name: Settlement
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/Settlement'
  schemas:
    ServiceFee:
      type: object
      description: ''
      properties:
        FeeCreditAccount:
          $ref: '#/components/schemas/Account'
        FeeCalculationMethod:
          $ref: '#/components/schemas/ServiceModality'
        FeeRate:
          $ref: '#/components/schemas/Rate'
        Feetypevalues:
          enum:
            - Accountingfee
            - Adrfee
            - Advisoryfee
            - Airwaybillfee
            - Backendload
            - Brokeragefee
            - Clearanceandhandlingatdestination
            - Clearanceandhandlingatorigin
            - Collectfreight
            - Commission
            - Contingencydeferredsalescharge
            - Correspondentbankcharge
            - Custodyfee
            - Dangerousgoodsfee
            - Dilutionlevy
            - Discount
            - Equalisation
            - Frontendload
            - Initial
            - Insurancepremium
            - Issuancecancellationfee
            - Issuancefee
            - Managementfee
            - Matchingfees
            - Miscellaneousfee
            - Other
            - Packaging
            - Partacquis
            - Penalty
            - Pickup
            - Postagecharge
            - Premium
            - Publicationfee
            - Regulatoryfee
            - Securitycharge
            - Serviceprovisionfee
            - Shippingcharge
            - Signatureservice
            - Specialconcessions
            - Speciallyagreedfrontendload
            - Storageatdestination
            - Storageatorigin
            - Switch
            - Transferfee
            - Transportcharges
            - Ucitscommission
            - ChequeRelatedFee
        Chargebearertypevalues:
          enum:
            - Bornebydebtor
            - Bornebycreditor
            - Shared
            - Followingservicelevel
        ChargeBearerReference:
          $ref: '#/components/schemas/Involvedparty'
        Feeapplicationfrequencyvalues:
          enum:
            - Onclosing
            - Onopening
            - Chargingperiod
            - Daily
            - Peritem
            - Monthly
            - Onanniversary
            - Other
            - Perhundredpounds
            - Perhour
            - Peroccurrence
            - Persheet
            - Pertransaction
            - Pertransactionamount
            - Pertransactionpercentage
            - Quarterly
            - Sixmonthly
            - Statementmonthly
            - Weekly
            - Yearly
        FeeAmount:
          $ref: '#/components/schemas/Amount'
        AccrualFeeAmount:
          $ref: '#/components/schemas/Amount'
        FeeDebitAccount:
          $ref: '#/components/schemas/Account'
        FeePaymentMethod:
          $ref: '#/components/schemas/ServiceModality'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
        Feecalculationmethodtypevalues:
          enum:
            - Flat
            - Perunit
            - Percentage
            - Rateperbrackets
            - Ratewithminimumamount
            - Ratewithmaximumamount
            - Other
            - Grossamount
            - Netamount
            - Netassetvalueprice
        Feecalculationfrequencyvalues:
          enum:
            - Onclosing
            - Onopening
            - Chargingperiod
            - Daily
            - Peritem
            - Monthly
            - Onanniversary
            - Other
            - Perhundredpounds
            - Perhour
            - Peroccurrence
            - Persheet
            - Pertransaction
            - Pertransactionamount
            - Pertransactionpercentage
            - Quarterly
            - Sixmonthly
            - Statementmonthly
            - Weekly
            - Yearly
        Feepaymentmethodtypevalues:
          enum:
            - Cash
            - Unit
        FeeApplicationAmount:
          $ref: '#/components/schemas/Amount'
        FeeApplicationDate:
          $ref: '#/components/schemas/Datetime'
    Account:
      type: object
      format: Account
      description: >-
        Customer account to be used to debit a fee amount


        Account from which a fee is debited. (ISO20022) Account|Account 
        (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022
        BM ()
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Accountstatus'
        AccountIdentification:
          $ref: '#/components/schemas/Accountidentification'
        AccountDate:
          $ref: '#/components/schemas/Accountdatetime'
        Accounttypevalues:
          enum:
            - DebitAccount
            - CreditAccount
            - VostroAcount
            - NostroAccount
            - PaymentAccount
            - SettlementAccount
            - SavingAccount
            - CurrentAccount
            - CashAccount
            - LoanAccount
            - IndividualAccount
            - JointAccount
            - LiquidationAccount
            - ProvisionAccount
            - PartnershipAccount
            - InvestmentAccount
          format: Account
        AccountPurpose:
          $ref: '#/components/schemas/Text'
        AccountBalance:
          $ref: '#/components/schemas/Accountbalance'
        AccountCurrency:
          $ref: '#/components/schemas/Accountcurrency'
        AccountDescription:
          $ref: '#/components/schemas/Text'
        AccountName:
          $ref: '#/components/schemas/Name'
    Accountstatus:
      type: object
      format: Accountstatus
      description: >-
        A characteristic of account which refers to the LifecycleStatus of
        account like opened, closed, blocked, etc.


        Specifies the current state of an account. (ISO20022) 
      properties:
        AccountStatus:
          $ref: '#/components/schemas/Status'
        Accountstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Proforma
            - Pending
          format: Accountstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Datetime:
      type: object
      format: Datetime
      description: >-
        Date for which the application of the fee was executed
        ISODateTime|ISODateTime
        (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
        BM ()
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: >-
        The name of account


        The account name is the name or names of the account owner(s)
        represented at an account level, as displayed by the ASPSP's online
        channels. Note, the account name is not the product name or the nickname
        of the account. (Open Banking) 
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Accountidentification:
      type: object
      format: Accountidentification
      description: 'The identifier of account like Account Number. '
      properties:
        Accountidentificationtypevalues:
          enum:
            - BBAN
            - IBAN
            - UPIC
            - AccountNumber
            - PAN
            - Paym
            - Wallet
            - SortCodeAndAccountNumber
          format: Accountidentification
        AccountIdentification:
          $ref: '#/components/schemas/Identifier'
    Accountdatetime:
      type: object
      format: Accountdatetime
      description: >-
        A characteristic of account which refers to LifecycleDate of account
        (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
      properties:
        Accountdatetimetypevalues:
          enum:
            - OpeningDate
            - ClosingDate
            - BlockingDate
            - MaturityDate
            - LiveDate
            - RenewalDate
          format: Accountdatetime
        AccountDate:
          $ref: '#/components/schemas/Datetime'
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        The state of the obligations managed on the account, the result of all
        entries on the account.


        Numerical representation of the net increases and decreases in an
        account at a specific point in time. (ISO20022)


        Banking: Amount available in an account for withdrawal or use.

        Read more: http://www.businessdictionary.com/definition/balance.html


        Bookkeeping: Difference between the debit and credit sides of an
        account.

        Read more: http://www.businessdictionary.com/definition/balance.html 
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - OpeningBalance
            - ClosingBalance
            - CurrentBalance
            - AvailableBalance
            - LedgerBalance
            - ReserveBalance
            - FreeBalance
            - PrincipalBalance
            - ClosingAvailable
            - ClosingBooked
            - ForwardAvailable
            - Information
            - InterimAvailable
            - InterimBooked
            - OpeningAvailable
            - OpeningBooked
            - PreviouslyClosedBooked
            - Expected
          format: Accountbalance
        BalanceValueDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Balancecounterpartytypevalues:
          enum:
            - Bilateral
            - Multilateral
          format: Accountbalance
        BalanceCalculationDate:
          $ref: '#/components/schemas/Datetime'
        Balancesubtypevalues:
          enum:
            - Adjustment
            - Basecurrency
            - Blocked
            - Blockedfunds
            - Daylightoverdraft
            - Eligibleassets
            - Firmcollateralization
            - Amountsthathavebeenusedtoserveasfi
            - Securitiesforecast
            - Netfunding
            - Intermediate
            - Localcurrency
            - Limitrelated
            - Reservedliquidity
            - Securitiespending
            - Payinpayout
            - Progressiveaverage
            - Reserve
            - Selfcollateralization
            - Amountsthathavebeenusedtoserveasse
            - Threshold
          format: Accountbalance
    Amount:
      type: object
      format: Amount
      description: >-
        Amount of a fee applied as a result of this application execution
        CurrencyAndAmount|CurrencyAndAmount
        (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022 
        ()
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Accountcurrency:
      type: object
      format: Accountcurrency
      description: ' '
      properties:
        Currencytypevalues:
          enum:
            - BaseCurrency
            - ReportingCurrency
            - SecondaryCurrency
            - TransferCurrency
          format: Accountcurrency
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
    ServiceModality:
      type: object
      format: ServiceModality
      description: "Payment method to be used for payning the fee, e.g. credit transfer, direct debit ||\r\n|"
      properties:
        Modalitytypevalues:
          enum:
            - AllocationModality
            - CalculationModality
            - DerivationModality
            - PaymentModality
            - ProcessingModality
            - ApplicationModality
            - DeliveryModality
          format: ServiceModality
    Rate:
      type: object
      format: Rate
      description: >-
        Rate of fee (percentage) to be applied  PercentageRate|PercentageRate
        (https://www.iso20022.org/standardsrepository/type/PercentageRate)|Standard|ISO20022
        BM ()
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
    MerchantAccount:
      type: object
      description: ''
      properties:
        MerchantAccountPostingTransaction:
          $ref: '#/components/schemas/Transaction'
        MerchantAcquiringAccountPostingPurpose:
          $ref: '#/components/schemas/Text'
        MerchantAcquiringAccountPostingAmount:
          $ref: '#/components/schemas/Amount'
        MerchantAcquiringAccountPostingValueDate:
          $ref: '#/components/schemas/Date'
        MerchantAcquiringAccountPostingResult:
          $ref: '#/components/schemas/Text'
    Transaction:
      type: object
      format: Transaction
      description: >-
        Reference to the posting transaction against the merchant account
        ObligationFulfilment|ObligationFulfilment
        (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022
        BM ()
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        TransactionDate:
          $ref: '#/components/schemas/Transactiondatetime'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transaction
        TransactionDescription:
          $ref: '#/components/schemas/Text'
        TransactionStatus:
          $ref: '#/components/schemas/Transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/Name'
    Transactiondatetime:
      type: object
      format: Transactiondatetime
      description: >-
        The Date that the transaction has occurred or is planned to occur.

        A characteristic of transaction which refers to the LifecycleDate of
        transaction (e.g., initiated date, executed date, fulfillment date).  
      properties:
        TransactionDate:
          $ref: '#/components/schemas/Datetime'
        Transactiondatetimetypevalues:
          enum:
            - ExecutedDate
            - FulfillmentDate
            - InitiatedDate
            - CancelledDate
            - ApprovedDate
            - ValueDate
            - BookingDate
          format: Transactiondatetime
    Transactionstatus:
      type: object
      format: Transactionstatus
      description: >-
        A characteristic of transaction which refers to the LifecycleStatus of
        transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/Status'
        Transactionstatustypevalues:
          enum:
            - Initiated
            - Executed
            - Cancelled
            - Confirmed
            - Suspended
            - Pending
            - Completed
            - Notified
            - Booked
            - Rejected
          format: Transactionstatus
    Date:
      type: object
      format: Date
      description: >-
        The value date for the posting ISODate|ISODate
        (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
        BM ()
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Clearing:
      type: object
      description: ''
      properties:
        CardTransactionRecordReference:
          $ref: '#/components/schemas/CardPaymentTransaction'
        CardTransactionProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CardHolderReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionIssuedDeviceReference:
          $ref: '#/components/schemas/IssuedDevice'
        CardTransactionNetworkReference:
          $ref: '#/components/schemas/CardNetwork'
        CardTransactionIssuingBankReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionMerchantAcquiringBankReference:
          $ref: '#/components/schemas/Involvedparty'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
        CardTransactionCurrency:
          $ref: '#/components/schemas/Currencycode'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
        CardTransactionAmount:
          $ref: '#/components/schemas/Amount'
        CardTransactionMerchantReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionLocationReference:
          $ref: '#/components/schemas/Location'
        CardTransactionProductandServiceReference:
          $ref: '#/components/schemas/BankingProduct'
        CardTransactionDateandTime:
          $ref: '#/components/schemas/DateTime'
        CardTransactionFXConversionCharge:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionInterchargeFee:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionAuthorizationRecord:
          $ref: '#/components/schemas/Authorization'
    CardPaymentTransaction:
      type: object
      format: CardPaymentTransaction
      description: >-
        Reference to the card transaction as recorded by issuer and/or acquirer
        CardPayment|CardPayment
        (https://www.iso20022.org/standardsrepository/type/CardPayment)|Standard|ISO20022
        BM ()
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        MerchantLocation:
          $ref: '#/components/schemas/Location'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: CardPaymentTransaction
        Transactionchanneltypevalues:
          enum:
            - Mailorder
            - Telephoneorder
            - Electroniccommerce
            - Televisionpayment
            - Officeorbranch
            - Homebanking
            - Financialadvisor
            - Mobilepayment
            - Securedelectroniccommerce
            - Mobilepos
          format: CardPaymentTransaction
        PointOfInteraction:
          $ref: '#/components/schemas/Pointofservice'
        CardTransactionDateTime:
          $ref: '#/components/schemas/Datetime'
        Transactionenvironmenttypevalues:
          enum:
            - Merchant
            - Private
            - Public
            - Branch
            - Other
          format: CardPaymentTransaction
        MerchantCountry:
          $ref: '#/components/schemas/Country'
        CardNetwork:
          $ref: '#/components/schemas/Cardnetwork'
        Amountqualifiertypevalues:
          enum:
            - Cashback
            - Gratuity
            - Fees
            - Rebates
            - Valueaddedtax
            - Actual
            - Replacement
            - Maximum
            - Default
            - Estimated
            - Original
            - Surcharge
            - Servicefee
            - Interchangefee
            - Discount
            - Atmcommissionfee
            - Authorisedamount
            - Cardremainingbalance
            - Maximumallowedamount
            - Minimumallowedamount
            - Requestedamount
            - Issuerfees
            - Issuercommission
            - Interchangefees
            - Processingfees
            - Currencyconversionfees
            - Internationalserviceassessmentfees
            - Commission
            - Donation
            - Tax
            - Incremental
            - Decremental
            - Reserved
            - Confirmedamount
            - Instructedamount
            - Atmaccessfee
            - Cardholderbillingfee
            - Clearingfee
            - Credittransactionfee
            - Cumulative
            - Debittransactionfee
            - Extra
            - Foreignexchangefee
            - Fundstransfer
            - Instantpaymentfee
            - Instanttransferfee
            - Issuercardholderfee
            - Limit
            - Othernational
            - Otherprivate
            - Reconciliationfee
            - Settlementfee
            - Transactionfee
            - Anticipated
            - Baggage
            - Chargedtocard
            - Clearingpriorityfee
            - Dental
            - Deposit
            - Fundstransferfee
            - Otherqualifiedmedical
            - Prescription
            - Proxy
            - Requestedcashback
            - Settlementpriorityfee
            - Totalhealthcare
            - Transit
            - Vision
            - Connect
            - Data
            - Exchangeticket
            - Exchangeticketfee
            - Fare
            - Foodbeverage
            - Insurance
            - Longdistance
            - Miscellaneous
            - Phone
            - Prepayment
            - Total
            - Usage
            - Predcc
            - Upgrade
            - Clubfee
            - Cargo
            - Dutyfree
            - Ticketdelivery
            - Petcarrier
            - Tourorder
            - Minimuminterchangefee
            - Maximuminterchangefee
            - Cashbackinterchangefee
          format: CardPaymentTransaction
        CardPaymentStatus:
          $ref: '#/components/schemas/Status'
        Cardtransactioncategorytypevalues:
          enum:
            - Cardtransactioncategorytypevalues
          format: CardPaymentTransaction
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Cardpaymenttransactionidentification'
        Cardpaymenttransactionservicetypevalues:
          enum:
            - Cardsfundtransfer
            - Originalcredit
            - Cardpayment
            - Cashback
            - Cashadvance
            - Cashdeposit
            - Deferredpayment
            - Reservation
            - Loading
            - Refund
            - Quasicash
            - Balance
            - Cardactivation
            - Cardverification
            - Pinchange
            - Validitycheck
            - Aggregation
            - DCC
            - Gratuity
            - Instalment
            - Loyalty
            - Noshow
            - Purchasecorporate
            - Recurringpayment
            - Solicitedavailablefunds
            - Unsolicitedavailablefunds
            - Voiceauthorisation
            - Initialreservation
            - Updatereservation
            - Paymentreservation
            - Additionalpayment
            - Firstrecurring
            - Followingrecurring
            - Persontobusiness
            - Persontoperson
            - Acceptorinstalment
            - Issuerinstalment
            - Unloading
            - Cardsfundtransferpush
            - Cardsfundtransferpull
            - Cashwithdrawal
            - Pinunblock
            - Chosenwithdrawal
            - Preauthorisedwithdrawal
            - Profilewithdrawal
            - Standardwithdrawal
            - Transfercardbillpayment
            - Transferfromcash
            - Transferfromcheque
            - Transferfundsdisbursementgeneral
            - Transfergovernmentdisbursement
            - Transfermerchantdisbursement
            - Transferpayrollpensiondisbursement
            - Nonrefundable
            - Instant
            - Creditadjustement
            - Debitadjustement
            - Createcertificate
            - Renewcerificate
            - Revokecertificate
            - Addwhitelist
            - Removewhitelist
            - Cardinitiatingdirectdebit
            - Guaranteeofpayment
          format: CardPaymentTransaction
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Pointofservice:
      type: object
      format: Pointofservice
      description: >-
        Describes the Point of Interaction through which the payment by card was
        initiated. (ISO20022) 
      properties:
        PointOfService:
          type: string
          format: Class
          description: Point at which a service is offered and/or fulfilled.
    Country:
      type: object
      format: Country
      description: 'Country of the location. '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    Cardnetwork:
      type: object
      format: Cardnetwork
      description: 'Network used for handling the card payment transaction. '
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    Cardpaymenttransactionidentification:
      type: object
      format: Cardpaymenttransactionidentification
      description: >-
        Identification of the transaction assigned by the initiator of the
        request. For instance refers to POITransactionIdentification if used
        inside an authorisation request or to SaleTransactionIdentification if
        the message is a payment request initiated by a sale system. (ISO20022) 
      properties:
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        Cardpaymenttransactionidentificationtypevalues:
          enum:
            - Issuercitidentification
            - Merchantcitidentification
          format: Cardpaymenttransactionidentification
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "The account number associated with the card transaction ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    IssuedDevice:
      type: object
      format: IssuedDevice
      description: "Reference to the issued device submitted to authorize the transaction (e.g. card number) ||\r\n|"
      properties:
        Issueddevicestatustypevalues:
          enum:
            - Issued
            - IssuedButNotActivated
            - Activated
            - Suspended
            - Retrieved
          format: IssuedDevice
        IssuedDevicePartyReference:
          $ref: '#/components/schemas/Party'
        IssuedDeviceConfiguration:
          $ref: '#/components/schemas/Text'
        IssuedDeviceReference:
          $ref: '#/components/schemas/Device'
        IssuedDeviceValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        IssuedDeviceDeliveryMethod:
          $ref: '#/components/schemas/Text'
        DeviceIssueDate:
          $ref: '#/components/schemas/Datetime'
        IssuedDeviceCollectLocation:
          $ref: '#/components/schemas/Branch'
        IssuedDeviceProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        Devicecustomizationtypevalues:
          enum:
            - CardDesign
          format: IssuedDevice
    Device:
      type: object
      format: Device
      description: 'Reference to the device that is issued '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Deviceidentification'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
          format: Device
        DeviceProperty:
          $ref: '#/components/schemas/Text'
        DeviceElement:
          $ref: '#/components/schemas/Text'
        DeviceStatus:
          $ref: '#/components/schemas/Status'
        DeviceVersion:
          type: string
          format: Number
          description: ''
        DeviceDateTime:
          $ref: '#/components/schemas/Datetime'
        DeviceDescription:
          $ref: '#/components/schemas/Text'
        DeviceName:
          $ref: '#/components/schemas/Name'
        DeviceLanguage:
          $ref: '#/components/schemas/Text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/Text'
        DeviceLocation:
          $ref: '#/components/schemas/Location'
        DeviceManufacturer:
          $ref: '#/components/schemas/Text'
        DeviceCountry:
          $ref: '#/components/schemas/Country'
        DeviceAddress:
          $ref: '#/components/schemas/Address'
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Device
        Deviceoperatingsystemtypevalues:
          enum:
            - Android
            - Ios
            - Windows
            - Blackberry
            - Tizen
            - Othernational
            - Otherprivate
          format: Device
    Deviceidentification:
      type: object
      format: Deviceidentification
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Identifier'
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
          format: Deviceidentification
    Branch:
      type: object
      format: Branch
      description: 'The name of the branch where the party will collect the device '
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/Identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/Identifier'
        BranchAddress:
          $ref: '#/components/schemas/Address'
        BranchName:
          $ref: '#/components/schemas/Name'
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: 'The product or service to which the Issued Device will be attached '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    CardNetwork:
      type: object
      format: CardNetwork
      description: "Reference to the network the card transaction is handled by as recorded with the transaction ||\r\n|"
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Details of the transaction (e.g. purchased service/product, purpose)
        Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    DateTime:
      type: object
      format: DateTime
      description: "Significant dates and times associated with the transaction ||\r\n|"
      properties:
        TimeIndication:
          type: string
          format: String
          description: >-
            Expression of the point in time

            is expressed according to "TimeIndicationType" e.g. period, day,
            more detailed indication
        TimeIndicationType:
          type: string
          format: String
          description: ''
    FeeArrangement:
      type: object
      format: FeeArrangement
      description: >-
        The applied intercharge fee Adjustment|Adjustment
        (https://www.iso20022.org/standardsrepository/type/Adjustment)|Standard|ISO20022
        BM ()
      properties:
        Feetypevalues:
          enum:
            - Accountingfee
            - Adrfee
            - Advisoryfee
            - Airwaybillfee
            - Backendload
            - Brokeragefee
            - Clearanceandhandlingatdestination
            - Clearanceandhandlingatorigin
            - Collectfreight
            - Commission
            - Contingencydeferredsalescharge
            - Correspondentbankcharge
            - Custodyfee
            - Dangerousgoodsfee
            - Dilutionlevy
            - Discount
            - Equalisation
            - Frontendload
            - Initial
            - Insurancepremium
            - Issuancecancellationfee
            - Issuancefee
            - Managementfee
            - Matchingfees
            - Miscellaneousfee
            - Other
            - Packaging
            - Partacquis
            - Penalty
            - Pickup
            - Postagecharge
            - Premium
            - Publicationfee
            - Regulatoryfee
            - Securitycharge
            - Serviceprovisionfee
            - Shippingcharge
            - Signatureservice
            - Specialconcessions
            - Speciallyagreedfrontendload
            - Storageatdestination
            - Storageatorigin
            - Switch
            - Transferfee
            - Transportcharges
            - Ucitscommission
            - ChequeRelatedFee
          format: FeeArrangement
        FeeAmount:
          $ref: '#/components/schemas/Amount'
        FeeRate:
          $ref: '#/components/schemas/Rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/Datetime'
        FeePlan:
          $ref: '#/components/schemas/Feeplan'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: FeeArrangement
        FeeReason:
          $ref: '#/components/schemas/Text'
        Adjustmentdirectiontypevalues:
          enum:
            - Added
            - Substracted
          format: FeeArrangement
        Chargebearertypevalues:
          enum:
            - Bornebydebtor
            - Bornebycreditor
            - Shared
            - Followingservicelevel
          format: FeeArrangement
    Feeplan:
      type: object
      format: Feeplan
      description: An arranged FeeRatePlan
      properties:
        FeePlanName:
          $ref: '#/components/schemas/Name'
        Feeplantypevalues:
          enum:
            - StandardFeePlan
            - FinalFeePlan
          format: Feeplan
        FeePlan:
          $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      format: Plan
      description: ' '
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    Authorization:
      type: object
      format: Authorization
      description: "Details the reference, amount, timestamp of the transaction authorization ||\r\n|"
      properties:
        Authorization:
          type: string
          format: Class
          description: >-
            An evaluation whether a party or system is allowed to do something.


            The consent given by a participant (or a third party acting on
            behalf of that participant) in order to transfer funds or
            securities. (ECB)


            Authorization is a mechanism by which a computer system determines
            whether to allow or deny specific action to a user. Authorization is
            often controlled by rather complex rules and algorithms, usually
            specified as part of an access control model. Authorization often
            follows (and required) authentication, however, authentication and
            authorization are two separate mechanisms. In rare cases,
            "authorization" is understood as a process of allowing access,
            granting permissions or giving approval. Such as "authorization" of
            a request to join a group. (ISO/IEC 24760-1:2019 IT Security and
            Privacy) 
    Chargeback:
      type: object
      description: ''
      properties:
        CardTransactionRecordReference:
          $ref: '#/components/schemas/CardPaymentTransaction'
        ChargebackInstruction:
          $ref: '#/components/schemas/ChargebackInstruction'
        CardTransactionProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CardHolderReference:
          $ref: '#/components/schemas/CardHolder'
        CardTransactionIssuedDeviceReference:
          $ref: '#/components/schemas/IssuedDevice'
        CardTransactionNetworkReference:
          $ref: '#/components/schemas/CardNetwork'
        CardTransactionIssuingBankReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionMerchantAcquiringBankReference:
          $ref: '#/components/schemas/Involvedparty'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
        CardTransactionCurrency:
          $ref: '#/components/schemas/Currencycode'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
        CardTransactionAmount:
          $ref: '#/components/schemas/Amount'
        CardTransactionMerchantReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionLocationReference:
          $ref: '#/components/schemas/Location'
        CardTransactionProductandServiceReference:
          $ref: '#/components/schemas/BankingProduct'
        CardTransactionDateandTime:
          $ref: '#/components/schemas/DateTime'
        CardTransactionFXConversionCharge:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionInterchargeFee:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionAuthorizationRecord:
          $ref: '#/components/schemas/Authorization'
    ChargebackInstruction:
      type: object
      format: ChargebackInstruction
      description: "Details the instruction received from Card Case to book chargeback for the transaction could be partial chargeback amount is detailed in instruction ||\r\n|"
      properties:
        ChargebackInstruction:
          type: string
          format: Class
          description: 'An instruction to book chargeback for the transaction.  '
    CardHolder:
      type: object
      format: CardHolder
      description: "The identity of the account holder submitting the transaction ||\r\n|"
      properties:
        CardHolderIdentifier:
          type: string
          format: String
          description: 'Identifier of the card holder.  '
    Settlement:
      type: object
      description: ''
      properties:
        ParticipantMerchantAcquirerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        ParticipantIssuerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        CardFinancialSettlementServicePaymentAdviceRecord:
          $ref: '#/components/schemas/Text'
        ParticipantPaymentTransaction:
          $ref: '#/components/schemas/CardPaymentTransaction'
        ParticipantAcquirerBankSettlementAccountStatement:
          $ref: '#/components/schemas/AccountStatement'
    AccountStatement:
      type: object
      format: AccountStatement
      description: >-
        The settlement account statement for the processing window used to
        confirm payments Account/CashAccount/AccountReportedMovement_x000D_

        |Account/CashAccount/AccountReportedMovement
        (https://www.iso20022.org/standardsrepository/type/AccountPartyRole)|Standard|ISO20022
        BM  ()
      properties:
        Balancetypevalues:
          enum:
            - OpeningBalance
            - ClosingBalance
            - CurrentBalance
            - AvailableBalance
            - LedgerBalance
            - ReserveBalance
            - FreeBalance
            - PrincipalBalance
            - ClosingAvailable
            - ClosingBooked
            - ForwardAvailable
            - Information
            - InterimAvailable
            - InterimBooked
            - OpeningAvailable
            - OpeningBooked
            - PreviouslyClosedBooked
            - Expected
          format: AccountStatement
        AccountStatementBalance:
          $ref: '#/components/schemas/Accountbalance'
        'AccountStatementIdentification,':
          $ref: '#/components/schemas/Identifier'
        Accountstatementtypevalues:
          enum:
            - AccountClosure
            - AccountOpening
            - Annual
            - Interim
            - RegularPeriodic
          format: AccountStatement
        AccountStatementContentType:
          $ref: '#/components/schemas/Text'
        AccountStatementPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AccountStatementContent:
          $ref: '#/components/schemas/Text'
        AccountStatementCreationDate:
          $ref: '#/components/schemas/Datetime'
    MerchantAcquiringFacility:
      type: object
      description: ''
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/MerchantAgreement'
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        PartyReference:
          $ref: '#/components/schemas/Involvedparty'
        BankBranchLocationReference:
          $ref: '#/components/schemas/Branch'
        AccountCurrency:
          $ref: '#/components/schemas/Currencycode'
        TaxReference:
          $ref: '#/components/schemas/Identifier'
        MerchantAcquiringFacilityOperationalTerms:
          $ref: '#/components/schemas/Arrangement'
        LimitSettings:
          $ref: '#/components/schemas/LimitArrangement'
        LimitValue:
          $ref: '#/components/schemas/Value'
        Limittypevalues:
          enum:
            - Multilateral
            - Bilateral
            - Netbilateral
            - Indirectbilateral
            - Global
            - Mandatorybilateral
            - Discretionarybilateral
            - Directdebit
            - Singlecustomerdirectdebit
            - Singlefinancialinstitutiondirectde
            - Totaldailycustomerdirectdebit
            - Totaldailyfinancialinstitutiondire
            - Autocollateralisation
            - Unsecuredcredit
            - Externalguarantee
    MerchantAgreement:
      type: object
      format: MerchantAgreement
      description: "Reference to the merchant facility product instance ||\r\n|"
      properties:
        MerchantAgreement:
          type: string
          format: Class
          description: >-
            An agreement between Acquiring Bank and Merchant for handling the
            Merchant Account and the specific terms and conditions for the
            merchant. 


            A written contract between a merchant and an acquirer to honor or
            accept credit cards, or to transmit or process for payment credit
            card payments, for the purchase of goods or services or a charitable
            contribution. (Law and Legal Definition)

             
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Operational terms governing the merchant facility Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    LimitArrangement:
      type: object
      format: LimitArrangement
      description: >-
        The associated limit settings and rules Limit|Limit
        (https://www.iso20022.org/standardsrepository/type/Limit)|Standard|ISO20022
        (https://www.iso20022.org/)
      properties:
        Limittypevalues:
          enum:
            - Multilateral
            - Bilateral
            - Netbilateral
            - Indirectbilateral
            - Global
            - Mandatorybilateral
            - Discretionarybilateral
            - Directdebit
            - Singlecustomerdirectdebit
            - Singlefinancialinstitutiondirectde
            - Totaldailycustomerdirectdebit
            - Totaldailyfinancialinstitutiondire
            - Autocollateralisation
            - Unsecuredcredit
            - Externalguarantee
          format: LimitArrangement
        LimitCurrency:
          $ref: '#/components/schemas/Currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/Amount'
        LimitStatus:
          $ref: '#/components/schemas/Limitstatus'
        LimitRate:
          $ref: '#/components/schemas/Rate'
        LimitFrequency:
          $ref: '#/components/schemas/Frequency'
        LimitIdentification:
          $ref: '#/components/schemas/Identifier'
        LimitStartDatetime:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: LimitArrangement
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: LimitArrangement
    Limitstatus:
      type: object
      format: Limitstatus
      description: 'Current status of the limit. '
      properties:
        LimitStatus:
          $ref: '#/components/schemas/Status'
        Limitstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Requested
          format: Limitstatus
    Frequency:
      type: object
      format: Frequency
      description: >-
        Specifies the periodicity linked to a limit for example the periodicity
        can indicate that the limit can be reached daily or monthly. (ISO20022) 
      properties:
        Frequencytypevalues:
          enum:
            - Annual
            - Monthly
            - Quarterly
            - Semiannual
            - Weekly
            - Daily
            - Adhoc
            - Intraday
            - Overnight
            - Tendays
            - Fortnightly
            - Triggeredbymovement
            - Never
            - Rate
            - Oncreditevent
            - Upfront
            - Onexpiry
            - Hourly
          format: Frequency
        FrequencyName:
          $ref: '#/components/schemas/Name'
        FrequencyDefinition:
          $ref: '#/components/schemas/Text'
