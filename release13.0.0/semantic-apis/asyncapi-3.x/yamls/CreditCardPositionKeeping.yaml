asyncapi: 3.0.0
info:
  title: Credit Card Position Keeping
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Maintain a log of credit
    card bookings and authorizations for operational and management information,
    tracking and reconciliation purposes.
channels:
  CreditCardPositionLog/Created:
    address: CreditCardPositionLog/Created
    messages:
      CreditCardPositionLog-created.message:
        $ref: '#/components/messages/CreditCardPositionLog'
    description: ''
  CreditCardPositionLog/Updated:
    address: CreditCardPositionLog/Updated
    messages:
      CreditCardPositionLog-updated.message:
        $ref: '#/components/messages/CreditCardPositionLog'
    description: ''
  CardTransactionEvent/Created:
    address: CardTransactionEvent/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CardTransactionEvent'
    description: ''
  CardTransactionEvent/Updated:
    address: CardTransactionEvent/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CardTransactionEvent'
    description: ''
  CreditCardPositionKeepingOutcome/Created:
    address: CreditCardPositionKeepingOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CreditCardPositionKeepingOutcome'
    description: ''
  CreditCardPositionKeepingOutcome/Updated:
    address: CreditCardPositionKeepingOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CreditCardPositionKeepingOutcome'
    description: ''
  CreditCardPositionLog/Notify:
    address: CreditCardPositionLog/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/CreditCardPositionLogNotify'
  CardTransactionEvent/Notify:
    address: CardTransactionEvent/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/CardTransactionEventNotify'
operations:
  CreditCardPositionLog-created:
    action: receive
    channel:
      $ref: '#/channels/CreditCardPositionLog~1Created'
    summary: CreditCardPositionLog
    messages:
      - $ref: >-
          #/channels/CreditCardPositionLog~1Created/messages/CreditCardPositionLog-created.message
  CreditCardPositionLog-updated:
    action: receive
    channel:
      $ref: '#/channels/CreditCardPositionLog~1Updated'
    summary: CreditCardPositionLog
    messages:
      - $ref: >-
          #/channels/CreditCardPositionLog~1Updated/messages/CreditCardPositionLog-updated.message
  CardTransactionEvent/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CardTransactionEvent~1Created'
    summary: CardTransactionEvent
    messages:
      - $ref: '#/channels/CardTransactionEvent~1Created/messages/publish.message'
  CardTransactionEvent/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CardTransactionEvent~1Updated'
    summary: CardTransactionEvent
    messages:
      - $ref: '#/channels/CardTransactionEvent~1Updated/messages/publish.message'
  CreditCardPositionKeepingOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CreditCardPositionKeepingOutcome~1Created'
    summary: CreditCardPositionKeepingOutcome
    messages:
      - $ref: >-
          #/channels/CreditCardPositionKeepingOutcome~1Created/messages/publish.message
  CreditCardPositionKeepingOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CreditCardPositionKeepingOutcome~1Updated'
    summary: CreditCardPositionKeepingOutcome
    messages:
      - $ref: >-
          #/channels/CreditCardPositionKeepingOutcome~1Updated/messages/publish.message
  CreditCardPositionLog/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/CreditCardPositionLog~1Notify'
    messages:
      - $ref: '#/channels/CreditCardPositionLog~1Notify/messages/subscribe.message'
  CardTransactionEvent/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/CardTransactionEvent~1Notify'
    messages:
      - $ref: '#/channels/CardTransactionEvent~1Notify/messages/subscribe.message'
components:
  messages:
    CreditCardPositionLog:
      name: CreditCardPositionLog
      description: >-
        Maintain a log of transactions or activity, typically a financial
        account/journal or a log of activity to support behavioral analysis
        within Credit Card Position Keeping. 
      payload:
        $ref: '#/components/schemas/CreditCardPositionLog'
    CardTransactionEvent:
      name: CardTransactionEvent
      description: >-
        The Card Transaction Event is one of the specific types of events that
        is recorded in the Card Transaction Event
      payload:
        $ref: '#/components/schemas/CardTransactionEvent'
    CreditCardPositionKeepingOutcome:
      name: CreditCardPositionKeepingOutcome
      description: >-
        The Card Transaction Event is one of the specific types of events that
        is recorded in the Card Transaction Event
      payload:
        $ref: '#/components/schemas/CreditCardPositionKeepingOutcome'
    CreditCardPositionLogNotify:
      name: CreditCardPositionLogNotify
      payload:
        $ref: '#/components/schemas/CreditCardPositionLogNotify'
    CardTransactionEventNotify:
      name: CardTransactionEventNotify
      payload:
        $ref: '#/components/schemas/CardTransactionEventNotify'
  schemas:
    CardTransactionEvent:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/Log'
        CardTransactionEventReference:
          $ref: '#/components/schemas/Event'
        CardTransactionEventType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The completion status once the event has been captured ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: 'Name (label) of the location. (ISO20022) '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Card Transaction Event ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Schedule:
      type: object
      format: Schedule
      description: "The timing and key actions/milestones involved in capturing the event ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The Card Transaction Event specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Log:
      type: object
      format: Log
      description: "Reference to Card Transaction Event ||\r\n|"
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    Event:
      type: object
      format: Event
      description: "Reference to Card Transaction Event ||\r\n|"
      properties:
        EventType:
          $ref: '#/components/schemas/Text'
        EventDateTime:
          $ref: '#/components/schemas/Datetime'
        EventDescription:
          $ref: '#/components/schemas/Text'
        EventSource:
          type: string
          format: Object
          description: ''
        EventLocation:
          $ref: '#/components/schemas/Location'
        EventAction:
          $ref: '#/components/schemas/Action'
        EventStatus:
          $ref: '#/components/schemas/Status'
        EventValue:
          $ref: '#/components/schemas/Value'
        EventValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        EventIdentification:
          $ref: '#/components/schemas/Identifier'
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    CreditCardPositionKeepingOutcome:
      type: object
      description: ''
      properties:
        CreditCardPositionKeepingIncident:
          $ref: '#/components/schemas/Event'
        CreditCardPositionKeepingLog:
          $ref: '#/components/schemas/Log'
    CreditCardPositionLog:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        CreditCardPositionLogSelectedOption:
          $ref: '#/components/schemas/Service'
        CreditCardPositionLogType:
          $ref: '#/components/schemas/Text'
        CreditCardPositionLogSchedule:
          $ref: '#/components/schemas/Schedule'
        CreditCardPositionLogUsageLog:
          $ref: '#/components/schemas/Log'
        CreditCardPositionLogUpdateLog:
          $ref: '#/components/schemas/Log'
        CreditCardPositionLogAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        CreditCardPositionLogBusinessUnitReference:
          $ref: '#/components/schemas/BusinessUnit'
        CreditCardPositionLogCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CreditCardPositionLogServiceConfiguration:
          $ref: '#/components/schemas/Text'
        CreditCardPositionLogPosition:
          $ref: '#/components/schemas/Position'
        CreditCardPositionLogPositionType:
          $ref: '#/components/schemas/PositionType'
        CreditCardPositionLogPositionLimitTime:
          $ref: '#/components/schemas/LimitArrangement'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/Log'
    Service:
      type: object
      format: Service
      description: "A selected optional business service as subject matter of Credit Card Position Log ||\r\n|"
      properties:
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Service
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      format: Feature
      description: >-
        A characteristic of service which refers 1) mainly to the function or
        condition of service. 2) to non-functional features like quality and
        security 
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    BusinessUnit:
      type: object
      format: BusinessUnit
      description: "Reference to the business unit which is involved in Credit Card Position Log ||\r\n|"
      properties:
        BusinessFunction:
          type: string
          format: String
          description: ''
        Goal:
          type: string
          format: String
          description: ''
    Position:
      type: object
      format: Position
      description: >-
        The position of Credit Card Position Log Position |Position 
        (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
        BM ()
      properties:
        PositionValue:
          $ref: '#/components/schemas/Value'
        PositionQuantity:
          type: string
          format: Number
          description: ''
        PositionDate:
          $ref: '#/components/schemas/Datetime'
        PositionAmount:
          $ref: '#/components/schemas/Amount'
    Amount:
      type: object
      format: Amount
      description: 'Amount of money of the limit, expressed in a currency. (ISO20022) '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
        Amount:
          type: string
          format: DataType
          description: >-
            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. (UN/CEFACT)


            The decimal seperator is a dot.



            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. The decimal
            separator is a dot. (ISO20022)

            Note: A zero amount is considered a positive amount.

            total number of digits: 18

            number of digits in fractional part: 5

            minInclusive: 0 
    Currencycode:
      type: object
      format: Currencycode
      description: 'Currency unit used to specify the limit amount. (ISO20022) '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    PositionType:
      type: object
      format: PositionType
      description: "A classification value expressing the kind of position withing the Credit Card Position Log ||\r\n|"
      properties:
        PositionType:
          type: string
          format: Class
          description: 'A classification of the position.  '
    LimitArrangement:
      type: object
      format: LimitArrangement
      description: >-
        Reference to the time limitation related to the position of Credit Card
        Position Log Limit|Limit
        (https://www.iso20022.org/standardsrepository/type/Limit)|Standard|ISO20022
        (https://www.iso20022.org/)
      properties:
        Limittypevalues:
          enum:
            - Multilateral
            - Bilateral
            - Netbilateral
            - Indirectbilateral
            - Global
            - Mandatorybilateral
            - Discretionarybilateral
            - Directdebit
            - Singlecustomerdirectdebit
            - Singlefinancialinstitutiondirectde
            - Totaldailycustomerdirectdebit
            - Totaldailyfinancialinstitutiondire
            - Autocollateralisation
            - Unsecuredcredit
            - Externalguarantee
          format: LimitArrangement
        LimitCurrency:
          $ref: '#/components/schemas/Currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/Amount'
        LimitStatus:
          $ref: '#/components/schemas/Limitstatus'
        LimitRate:
          $ref: '#/components/schemas/Rate'
        LimitFrequency:
          $ref: '#/components/schemas/Frequency'
        LimitIdentification:
          $ref: '#/components/schemas/Identifier'
        LimitStartDatetime:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: LimitArrangement
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: LimitArrangement
    Limitstatus:
      type: object
      format: Limitstatus
      description: 'Current status of the limit. '
      properties:
        LimitStatus:
          $ref: '#/components/schemas/Status'
        Limitstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Requested
          format: Limitstatus
    Rate:
      type: object
      format: Rate
      description: >-
        Specifies that the limit is a percentage of a related amount.
        (ISO20022) 
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
    Frequency:
      type: object
      format: Frequency
      description: >-
        Specifies the periodicity linked to a limit for example the periodicity
        can indicate that the limit can be reached daily or monthly. (ISO20022) 
      properties:
        Frequencytypevalues:
          enum:
            - Annual
            - Monthly
            - Quarterly
            - Semiannual
            - Weekly
            - Daily
            - Adhoc
            - Intraday
            - Overnight
            - Tendays
            - Fortnightly
            - Triggeredbymovement
            - Never
            - Rate
            - Oncreditevent
            - Upfront
            - Onexpiry
            - Hourly
          format: Frequency
        FrequencyName:
          $ref: '#/components/schemas/Name'
        FrequencyDefinition:
          $ref: '#/components/schemas/Text'
    CreditCardPositionLogNotify:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        CreditCardPositionLogSelectedOption:
          $ref: '#/components/schemas/Service'
        CreditCardPositionLogType:
          $ref: '#/components/schemas/Text'
        CreditCardPositionLogSchedule:
          $ref: '#/components/schemas/Schedule'
        CreditCardPositionLogUsageLog:
          $ref: '#/components/schemas/Log'
        CreditCardPositionLogUpdateLog:
          $ref: '#/components/schemas/Log'
        CreditCardPositionLogAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        CreditCardPositionLogBusinessUnitReference:
          $ref: '#/components/schemas/BusinessUnit'
        CreditCardPositionLogCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CreditCardPositionLogServiceConfiguration:
          $ref: '#/components/schemas/Text'
        CreditCardPositionLogPosition:
          $ref: '#/components/schemas/Position'
        CreditCardPositionLogPositionType:
          $ref: '#/components/schemas/PositionType'
        CreditCardPositionLogPositionLimitTime:
          $ref: '#/components/schemas/LimitArrangement'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/Log'
    CardTransactionEventNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CreditCardPositionLogReference:
          $ref: '#/components/schemas/Log'
        CardTransactionEventReference:
          $ref: '#/components/schemas/Event'
        CardTransactionEventType:
          $ref: '#/components/schemas/Text'
