asyncapi: 3.0.0
info:
  title: Customer Campaign Management
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Assess the coverage and
    impact of internal/customer campaigns and redirect campaign development and
    execution activity accordingly
channels:
  CustomerCampaignPortfolioManagementPlan/Created:
    address: CustomerCampaignPortfolioManagementPlan/Created
    messages:
      CustomerCampaignPortfolioManagementPlan-created.message:
        $ref: '#/components/messages/CustomerCampaignPortfolioManagementPlan'
    description: ''
  CustomerCampaignPortfolioManagementPlan/Updated:
    address: CustomerCampaignPortfolioManagementPlan/Updated
    messages:
      CustomerCampaignPortfolioManagementPlan-updated.message:
        $ref: '#/components/messages/CustomerCampaignPortfolioManagementPlan'
    description: ''
  ImpactAssessment/Created:
    address: ImpactAssessment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ImpactAssessment'
    description: ''
  ImpactAssessment/Updated:
    address: ImpactAssessment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ImpactAssessment'
    description: ''
  PerformanceAssessment/Created:
    address: PerformanceAssessment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/PerformanceAssessment'
    description: ''
  PerformanceAssessment/Updated:
    address: PerformanceAssessment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/PerformanceAssessment'
    description: ''
  CoveragePlanning/Created:
    address: CoveragePlanning/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CoveragePlanning'
    description: ''
  CoveragePlanning/Updated:
    address: CoveragePlanning/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CoveragePlanning'
    description: ''
  MarketTracking/Created:
    address: MarketTracking/Created
    messages:
      publish.message:
        $ref: '#/components/messages/MarketTracking'
    description: ''
  MarketTracking/Updated:
    address: MarketTracking/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/MarketTracking'
    description: ''
  CapabilityOversight/Created:
    address: CapabilityOversight/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CapabilityOversight'
    description: ''
  CapabilityOversight/Updated:
    address: CapabilityOversight/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CapabilityOversight'
    description: ''
  CompetitiveAssessment/Created:
    address: CompetitiveAssessment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CompetitiveAssessment'
    description: ''
  CompetitiveAssessment/Updated:
    address: CompetitiveAssessment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CompetitiveAssessment'
    description: ''
  CampaignDirection/Created:
    address: CampaignDirection/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CampaignDirection'
    description: ''
  CampaignDirection/Updated:
    address: CampaignDirection/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CampaignDirection'
    description: ''
operations:
  CustomerCampaignPortfolioManagementPlan-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerCampaignPortfolioManagementPlan~1Created'
    summary: CustomerCampaignPortfolioManagementPlan
    messages:
      - $ref: >-
          #/channels/CustomerCampaignPortfolioManagementPlan~1Created/messages/CustomerCampaignPortfolioManagementPlan-created.message
  CustomerCampaignPortfolioManagementPlan-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerCampaignPortfolioManagementPlan~1Updated'
    summary: CustomerCampaignPortfolioManagementPlan
    messages:
      - $ref: >-
          #/channels/CustomerCampaignPortfolioManagementPlan~1Updated/messages/CustomerCampaignPortfolioManagementPlan-updated.message
  ImpactAssessment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ImpactAssessment~1Created'
    summary: ImpactAssessment
    messages:
      - $ref: '#/channels/ImpactAssessment~1Created/messages/publish.message'
  ImpactAssessment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ImpactAssessment~1Updated'
    summary: ImpactAssessment
    messages:
      - $ref: '#/channels/ImpactAssessment~1Updated/messages/publish.message'
  PerformanceAssessment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/PerformanceAssessment~1Created'
    summary: PerformanceAssessment
    messages:
      - $ref: '#/channels/PerformanceAssessment~1Created/messages/publish.message'
  PerformanceAssessment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/PerformanceAssessment~1Updated'
    summary: PerformanceAssessment
    messages:
      - $ref: '#/channels/PerformanceAssessment~1Updated/messages/publish.message'
  CoveragePlanning/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CoveragePlanning~1Created'
    summary: CoveragePlanning
    messages:
      - $ref: '#/channels/CoveragePlanning~1Created/messages/publish.message'
  CoveragePlanning/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CoveragePlanning~1Updated'
    summary: CoveragePlanning
    messages:
      - $ref: '#/channels/CoveragePlanning~1Updated/messages/publish.message'
  MarketTracking/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/MarketTracking~1Created'
    summary: MarketTracking
    messages:
      - $ref: '#/channels/MarketTracking~1Created/messages/publish.message'
  MarketTracking/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/MarketTracking~1Updated'
    summary: MarketTracking
    messages:
      - $ref: '#/channels/MarketTracking~1Updated/messages/publish.message'
  CapabilityOversight/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CapabilityOversight~1Created'
    summary: CapabilityOversight
    messages:
      - $ref: '#/channels/CapabilityOversight~1Created/messages/publish.message'
  CapabilityOversight/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CapabilityOversight~1Updated'
    summary: CapabilityOversight
    messages:
      - $ref: '#/channels/CapabilityOversight~1Updated/messages/publish.message'
  CompetitiveAssessment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CompetitiveAssessment~1Created'
    summary: CompetitiveAssessment
    messages:
      - $ref: '#/channels/CompetitiveAssessment~1Created/messages/publish.message'
  CompetitiveAssessment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CompetitiveAssessment~1Updated'
    summary: CompetitiveAssessment
    messages:
      - $ref: '#/channels/CompetitiveAssessment~1Updated/messages/publish.message'
  CampaignDirection/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CampaignDirection~1Created'
    summary: CampaignDirection
    messages:
      - $ref: '#/channels/CampaignDirection~1Created/messages/publish.message'
  CampaignDirection/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CampaignDirection~1Updated'
    summary: CampaignDirection
    messages:
      - $ref: '#/channels/CampaignDirection~1Updated/messages/publish.message'
components:
  messages:
    CustomerCampaignPortfolioManagementPlan:
      name: CustomerCampaignPortfolioManagementPlan
      description: >-
        Oversee the working of a business unit, assign work, manage against a
        plan and troubleshoot issues within Customer Campaign Management.
      payload:
        $ref: '#/components/schemas/CustomerCampaignPortfolioManagementPlan'
    ImpactAssessment:
      name: ImpactAssessment
      description: >-
        It is is a duty used to evaluate the potential consequences of a
        proposed action or project on various aspects of the environment,
        society, and economy


        Comment: 

        For Customer Campaihn Management: Assess Objective Attainment by segment
        (and supporting campaign) this can trigger an oversight response
      payload:
        $ref: '#/components/schemas/ImpactAssessment'
    PerformanceAssessment:
      name: PerformanceAssessment
      description: >-
        It is is a duty used to evaluate the potential consequences of a
        proposed action or project on various aspects of the environment,
        society, and economy


        Comment: 

        For Customer Campaihn Management: Assess Objective Attainment by segment
        (and supporting campaign) this can trigger an oversight response
      payload:
        $ref: '#/components/schemas/PerformanceAssessment'
    CoveragePlanning:
      name: CoveragePlanning
      description: >-
        It is is a duty used to evaluate the potential consequences of a
        proposed action or project on various aspects of the environment,
        society, and economy


        Comment: 

        For Customer Campaihn Management: Assess Objective Attainment by segment
        (and supporting campaign) this can trigger an oversight response
      payload:
        $ref: '#/components/schemas/CoveragePlanning'
    MarketTracking:
      name: MarketTracking
      description: >-
        It is is a duty used to evaluate the potential consequences of a
        proposed action or project on various aspects of the environment,
        society, and economy


        Comment: 

        For Customer Campaihn Management: Assess Objective Attainment by segment
        (and supporting campaign) this can trigger an oversight response
      payload:
        $ref: '#/components/schemas/MarketTracking'
    CapabilityOversight:
      name: CapabilityOversight
      description: >-
        It is is a duty used to evaluate the potential consequences of a
        proposed action or project on various aspects of the environment,
        society, and economy


        Comment: 

        For Customer Campaihn Management: Assess Objective Attainment by segment
        (and supporting campaign) this can trigger an oversight response
      payload:
        $ref: '#/components/schemas/CapabilityOversight'
    CompetitiveAssessment:
      name: CompetitiveAssessment
      description: >-
        It is is a duty used to evaluate the potential consequences of a
        proposed action or project on various aspects of the environment,
        society, and economy


        Comment: 

        For Customer Campaihn Management: Assess Objective Attainment by segment
        (and supporting campaign) this can trigger an oversight response
      payload:
        $ref: '#/components/schemas/CompetitiveAssessment'
    CampaignDirection:
      name: CampaignDirection
      description: >-
        It is is a duty used to evaluate the potential consequences of a
        proposed action or project on various aspects of the environment,
        society, and economy


        Comment: 

        For Customer Campaihn Management: Assess Objective Attainment by segment
        (and supporting campaign) this can trigger an oversight response
      payload:
        $ref: '#/components/schemas/CampaignDirection'
  schemas:
    ImpactAssessment:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        ImpactAssessmentReference:
          $ref: '#/components/schemas/PlannedAction'
        ImpactAssessmentType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently) ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Impact Assessment ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Schedule:
      type: object
      format: Schedule
      description: "The timing and key actions/milestones involved in fulfilling the duty ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The Impact Assessment specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Plan:
      type: object
      format: Plan
      description: "Reference to Customer Campaign Portfolio Management Plan ||\r\n|"
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    PlannedAction:
      type: object
      format: PlannedAction
      description: "Reference to Impact Assessment ||\r\n|"
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    PerformanceAssessment:
      type: object
      description: ''
      properties:
        PerformanceAssessmentWorkTaskType:
          $ref: '#/components/schemas/Text'
        PerformanceAssessmentWorkTask:
          $ref: '#/components/schemas/Task'
        PerformanceAssessmentWorkTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        PerformanceAssessmentWorkTaskResult:
          $ref: '#/components/schemas/Text'
        PerformanceAssessmentWorkTaskDateandTime:
          $ref: '#/components/schemas/Datetime'
    Task:
      type: object
      format: Task
      description: "The make-up of the market tracking task performed, includes consolidation and analysis of market research to reach specific insights ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Workproduct:
      type: object
      format: Workproduct
      description: "File of consolidated notes, evaluations and findings for the work task ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    CoveragePlanning:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        CoveragePlanningReference:
          $ref: '#/components/schemas/PlannedAction'
        CoveragePlanningType:
          $ref: '#/components/schemas/Text'
    MarketTracking:
      type: object
      description: ''
      properties:
        MarketTrackingWorkTaskType:
          $ref: '#/components/schemas/Text'
        MarketTrackingWorkTask:
          $ref: '#/components/schemas/Task'
        GeneralMarketResearchDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/MarketResearch'
        CompetitorAnalysisInstanceReference:
          $ref: '#/components/schemas/CompetitorAnalysis'
        CustomerSurveyProcedureInstanceReference:
          type: string
          format: CustomerSurveys
          description: "Reference to internally maintained customer survey materials ||\r\n|"
        MarketTrackingWorkTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        MarketTrackingWorkTaskResult:
          $ref: '#/components/schemas/Text'
        MarketTrackingWorkTaskDateandTime:
          $ref: '#/components/schemas/Datetime'
    MarketResearch:
      type: object
      format: MarketResearch
      description: "Reference to an internally maintained market research viewpoint ||\r\n|"
      properties:
        MarketResearchSource:
          type: string
          format: Object
          description: >-
            Refers to information (e.g. Market research report) used in the
            Market Research
             
        Marketresearchviewpointtypevalues:
          enum:
            - CustomerViewpoint
            - CompetitorViewpoint
            - MarketDynamicsViewpoint
            - ProductServiceViewpoint
            - GeographicViewpoint
            - EconomicAndPoliticalViewpoint
            - TechnologicalViewpoint
            - EnvironmentalAndSustainabilityView
            - ChannelAndDistributionViewpoint
            - FinancialViewpoint
          format: MarketResearch
        MarketResearchApproach:
          $ref: '#/components/schemas/Text'
        MarketResearchPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ResearchedMarket:
          $ref: '#/components/schemas/Market'
        Marketresearchaspecttypevalues:
          enum:
            - MarketSize
            - MarktTrends
            - TargetMarket
            - ConsumerBehavior
            - CompetitiveAnalysis
            - ProductOrServiceAnalysis
            - PricingStrategy
            - DistributionChannels
            - MarketingAndAdvertising
            - BrandingAndPositioning
            - CustomerDemographics
            - CustomerPsychographics
            - TechnologyAndInnovation
            - RegulatoryFactors
            - EnvironmentalFactors
            - CustomerJourneyAndExperience
            - MarketEntry
            - MarketExpansion
          format: MarketResearch
        MarketResearchDescription:
          $ref: '#/components/schemas/Text'
        MarketResearchDateAndTime:
          $ref: '#/components/schemas/Datetime'
    Market:
      type: object
      format: Market
      description: Market that is subject of the market research
      properties:
        Markettypevalues:
          enum:
            - FinancialMarket
            - GeneralMarket
          format: Market
        MarketIdentification:
          $ref: '#/components/schemas/Identifier'
        MarketCountry:
          $ref: '#/components/schemas/Country'
        MarketJurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
    Country:
      type: object
      format: Country
      description: 'Country in which a market operates. (ISO20022) '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    Jurisdiction:
      type: object
      format: Jurisdiction
      description: >2-
            
        Jurisdiction of the governing law for the trades on this market, for
        example, City of NY, County of NY, State of NY, regulatory
        SEC.(ISO20022) 
      properties:
        Jurisdiction:
          type: string
          format: Class
          description: 'Jurisdiction that will be assigned in case of legal dispute. '
    CompetitorAnalysis:
      type: object
      format: CompetitorAnalysis
      description: "Reference to an internally maintained competitor analysis viewpoint ||\r\n|"
      properties:
        Competitoranalysistypevalues:
          enum:
            - PeerCompetitorAnalysis
            - ProductCompetitiveAnalysis
            - CompetitorClusteringOrGrouping
            - CompetitorSWOTAnalysis
            - CompetitiveBenchmarking
          format: CompetitorAnalysis
    CapabilityOversight:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        CapabilityOversightReference:
          $ref: '#/components/schemas/PlannedAction'
        CapabilityOversightType:
          $ref: '#/components/schemas/Text'
    CompetitiveAssessment:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CustomerCampaignPortfolioManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        CompetitiveAssessmentReference:
          $ref: '#/components/schemas/PlannedAction'
        CompetitiveAssessmentType:
          $ref: '#/components/schemas/Text'
    CampaignDirection:
      type: object
      description: ''
      properties:
        CustomerCampaignDevelopmentSchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerCampaignExecutionSchedule:
          $ref: '#/components/schemas/Schedule'
    CustomerCampaignPortfolioManagementPlan:
      type: object
      description: ''
      properties:
        CustomerCampaignPortfolio:
          $ref: '#/components/schemas/CustomerCampaignPortfolio'
        Customercampaigntypevalues:
          enum:
            - ProductLaunchCampaign
            - BrandAwarenessCampaign
            - CustomerRetentionCampaign
            - ReferralCampaign
            - ReactivationCampaign
            - Cross-SellingAndUpsellingCampaign
        CustomerCampaignDescription:
          $ref: '#/components/schemas/Text'
        CustomerCampaignMetrics:
          $ref: '#/components/schemas/CustomerCampaignMetric'
        CustomerCampaignMetricDefinition:
          $ref: '#/components/schemas/Text'
        CustomerCampaignMetricGoal:
          $ref: '#/components/schemas/Goal'
        CustomerCampaignPerformanceRecord:
          $ref: '#/components/schemas/Text'
        CustomerCampaignProcedureInstanceReference:
          $ref: '#/components/schemas/CustomerCampaignProcedure'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerCampaignProcedureSet-up:
          $ref: '#/components/schemas/Arrangement'
        CustomerCampaignProcedureVersionNumber:
          $ref: '#/components/schemas/Text'
        CustomerCampaignProcedureResult:
          $ref: '#/components/schemas/Text'
    CustomerCampaignPortfolio:
      type: object
      format: CustomerCampaignPortfolio
      description: "The collection/portfolio of available customer campaigns. The details are used to assess performance and coverage and direct development and execution activity ||\r\n|"
      properties:
        CustomerCampaignPortfolio:
          type: string
          format: Class
          description: >-
            A customer campaign portfolio is a collection of customer campaigns
            that a business uses to target its customers 
    CustomerCampaignMetric:
      type: object
      format: CustomerCampaignMetric
      description: "Metrics that are defined to assess the target and actual impact of the campaign ||\r\n|"
      properties:
        Customercampaignmetrictypevalues:
          enum:
            - Click-ThroughRates(CTR)
            - ConversionRate
            - CustomerAcquisitionCost(CAC)
            - ReturnOnInvestment(ROI)
            - CustomerLifetimeValue(CLV)
            - EngagementRate
            - BounceRate
            - RepeatPurchaseRate
            - ChurnRate
          format: CustomerCampaignMetric
    CustomerCampaignProcedure:
      type: object
      format: CustomerCampaignProcedure
      description: "Reference to the customer campaign execution event ||\r\n|"
      properties:
        CustomerCampaignProcedureWorkstep:
          $ref: '#/components/schemas/Workstep'
        Campaignprocedureworksteptypevalues:
          enum:
            - CandidateSelection
            - Execution
            - AnalysisFeedback
          format: CustomerCampaignProcedure
    Workstep:
      type: object
      format: Workstep
      description: 'A workstep to execute the campaign '
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/Text'
        Worksteptypevalues:
          enum:
            - Worksteptypevalues
          format: Workstep
        WorkstepDescription:
          $ref: '#/components/schemas/Text'
        WorkstepDateTime:
          $ref: '#/components/schemas/Datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/Status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/Workproduct'
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Details of the deployment set-up/configuration of the campaign for
        reference Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
