asyncapi: 3.0.0
info:
  title: Customer Product and Service Directory
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    maintains the most important details of all the products and services that a
    customer has acquired from the bank.
channels:
  CustomerProductAndServiceDirectoryEntry/Created:
    address: CustomerProductAndServiceDirectoryEntry/Created
    messages:
      CustomerProductAndServiceDirectoryEntry-created.message:
        $ref: '#/components/messages/CustomerProductAndServiceDirectoryEntry'
    description: ''
  CustomerProductAndServiceDirectoryEntry/Updated:
    address: CustomerProductAndServiceDirectoryEntry/Updated
    messages:
      CustomerProductAndServiceDirectoryEntry-updated.message:
        $ref: '#/components/messages/CustomerProductAndServiceDirectoryEntry'
    description: ''
  Service/Created:
    address: Service/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Service'
    description: ''
  Service/Updated:
    address: Service/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Service'
    description: ''
  Product/Created:
    address: Product/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Product'
    description: ''
  Product/Updated:
    address: Product/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Product'
    description: ''
  CustomerProductsandServicesOutcome/Created:
    address: CustomerProductsandServicesOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerProductsandServicesOutcome'
    description: ''
  CustomerProductsandServicesOutcome/Updated:
    address: CustomerProductsandServicesOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerProductsandServicesOutcome'
    description: ''
  CustomerProductAndServiceDirectoryEntry/Notify:
    address: CustomerProductAndServiceDirectoryEntry/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/CustomerProductAndServiceDirectoryEntryNotify'
  Product/Notify:
    address: Product/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ProductNotify'
  Service/Notify:
    address: Service/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ServiceNotify'
operations:
  CustomerProductAndServiceDirectoryEntry-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerProductAndServiceDirectoryEntry~1Created'
    summary: CustomerProductAndServiceDirectoryEntry
    messages:
      - $ref: >-
          #/channels/CustomerProductAndServiceDirectoryEntry~1Created/messages/CustomerProductAndServiceDirectoryEntry-created.message
  CustomerProductAndServiceDirectoryEntry-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerProductAndServiceDirectoryEntry~1Updated'
    summary: CustomerProductAndServiceDirectoryEntry
    messages:
      - $ref: >-
          #/channels/CustomerProductAndServiceDirectoryEntry~1Updated/messages/CustomerProductAndServiceDirectoryEntry-updated.message
  Service/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Service~1Created'
    summary: Service
    messages:
      - $ref: '#/channels/Service~1Created/messages/publish.message'
  Service/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Service~1Updated'
    summary: Service
    messages:
      - $ref: '#/channels/Service~1Updated/messages/publish.message'
  Product/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Product~1Created'
    summary: Product
    messages:
      - $ref: '#/channels/Product~1Created/messages/publish.message'
  Product/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Product~1Updated'
    summary: Product
    messages:
      - $ref: '#/channels/Product~1Updated/messages/publish.message'
  CustomerProductsandServicesOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerProductsandServicesOutcome~1Created'
    summary: CustomerProductsandServicesOutcome
    messages:
      - $ref: >-
          #/channels/CustomerProductsandServicesOutcome~1Created/messages/publish.message
  CustomerProductsandServicesOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerProductsandServicesOutcome~1Updated'
    summary: CustomerProductsandServicesOutcome
    messages:
      - $ref: >-
          #/channels/CustomerProductsandServicesOutcome~1Updated/messages/publish.message
  CustomerProductAndServiceDirectoryEntry/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/CustomerProductAndServiceDirectoryEntry~1Notify'
    messages:
      - $ref: >-
          #/channels/CustomerProductAndServiceDirectoryEntry~1Notify/messages/subscribe.message
  Product/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/Product~1Notify'
    messages:
      - $ref: '#/channels/Product~1Notify/messages/subscribe.message'
  Service/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/Service~1Notify'
    messages:
      - $ref: '#/channels/Service~1Notify/messages/subscribe.message'
components:
  messages:
    CustomerProductAndServiceDirectoryEntry:
      name: CustomerProductAndServiceDirectoryEntry
      description: >-
        Capture and maintain reference information about some type of entitity
        within Customer Products and Services.
      payload:
        $ref: '#/components/schemas/CustomerProductAndServiceDirectoryEntry'
    Service:
      name: Service
      description: >-
        The In-force Service property properties that represent a discrete
        aspect of the In-force Service property
      payload:
        $ref: '#/components/schemas/Service'
    Product:
      name: Product
      description: >-
        The In-force Service property properties that represent a discrete
        aspect of the In-force Service property
      payload:
        $ref: '#/components/schemas/Product'
    CustomerProductsandServicesOutcome:
      name: CustomerProductsandServicesOutcome
      description: >-
        The In-force Service property properties that represent a discrete
        aspect of the In-force Service property
      payload:
        $ref: '#/components/schemas/CustomerProductsandServicesOutcome'
    CustomerProductAndServiceDirectoryEntryNotify:
      name: CustomerProductAndServiceDirectoryEntryNotify
      payload:
        $ref: '#/components/schemas/CustomerProductAndServiceDirectoryEntryNotify'
    ProductNotify:
      name: ProductNotify
      payload:
        $ref: '#/components/schemas/ProductNotify'
    ServiceNotify:
      name: ServiceNotify
      payload:
        $ref: '#/components/schemas/ServiceNotify'
  schemas:
    Service:
      type: object
      description: ''
      properties:
        ServiceInstanceReference:
          $ref: '#/components/schemas/Identifier'
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Party who plays a  specific role in the context of assigning a status. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the status was assigned. '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: 'Period of time during which the status is valid. '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Feature:
      type: object
      format: Feature
      description: "A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security ||\r\n|"
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Product:
      type: object
      description: ''
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/Identifier'
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        ProductName:
          $ref: '#/components/schemas/Name'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductFeature:
          $ref: '#/components/schemas/ProductFeature'
    Productidentification:
      type: object
      format: Productidentification
      description: "The identifier of product e.g. ISIN Code. ||\r\n|"
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: "Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn). ||\r\n|"
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    ProductFeature:
      type: object
      format: ProductFeature
      description: " ||\r\n|"
      properties:
        Productfeaturetypevalues:
          enum:
            - Bankingservice
            - Administrationservice
            - Accessservice
            - Pricefeature
          format: ProductFeature
        ProductFeatureSpecification:
          $ref: '#/components/schemas/Text'
    CustomerProductsandServicesOutcome:
      type: object
      description: ''
      properties:
        CustomerProductsandServicesEntry:
          $ref: '#/components/schemas/DirectoryEntry'
        CustomerProductsandServicesWorkProduct:
          $ref: '#/components/schemas/Workproduct'
    DirectoryEntry:
      type: object
      format: DirectoryEntry
      description: " ||\r\n|"
      properties:
        Directoryentrydatetypevalues:
          enum:
            - OpenDate
            - RefreshDate
          format: DirectoryEntry
        DirectoryEntryDate:
          $ref: '#/components/schemas/Date'
        DirectoryEntryStatus:
          $ref: '#/components/schemas/Status'
    Date:
      type: object
      format: Date
      description: ' '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Workproduct:
      type: object
      format: Workproduct
      description: " ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    CustomerProductAndServiceDirectoryEntry:
      type: object
      description: ''
      properties:
        CustomerProductAndServiceDirectoryEntryDescription:
          $ref: '#/components/schemas/Text'
        CustomerProductAndServiceDirectoryEntrySchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerProductAndServiceDirectoryEntryVersion:
          type: string
          format: Number
          description: >-
            The version of Customer Products And Services Directory Entry
            Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        CustomerProductAndServiceDirectoryEntryStatus:
          $ref: '#/components/schemas/Status'
        CustomerProductAndServiceDirectoryEntryUsageLog:
          $ref: '#/components/schemas/Log'
        CustomerProductAndServiceDirectoryEntryUpdateLog:
          $ref: '#/components/schemas/Log'
        CustomerProductAndServiceDirectoryEntryServiceConfiguration:
          $ref: '#/components/schemas/Text'
        CustomerProductAndServiceDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/Identifier'
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        ProductAgreementReference:
          $ref: '#/components/schemas/ProductAgreement'
        ServicerReference:
          $ref: '#/components/schemas/Involvedparty'
        ServiceAgreementReference:
          $ref: '#/components/schemas/ServiceAgreement'
    Schedule:
      type: object
      format: Schedule
      description: "The timetable to capture and maintain Customer Products And Services Directory Entry ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    Log:
      type: object
      format: Log
      description: "Reference to the log of (update) ativities/events of Customer Products And Services Directory Entry ||\r\n|"
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
        Log:
          type: string
          format: Class
          description: A record of events/entries.
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: " ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    ServiceAgreement:
      type: object
      format: ServiceAgreement
      description: " ||\r\n|"
      properties:
        Type:
          $ref: '#/components/schemas/Text'
        ServiceReference:
          $ref: '#/components/schemas/Service'
        AgreementReference:
          $ref: '#/components/schemas/Agreement'
    Agreement:
      type: object
      format: Agreement
      description: ' '
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Agreementstatus:
      type: object
      format: Agreementstatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/Status'
        Agreementstatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementstatus
    CustomerProductAndServiceDirectoryEntryNotify:
      type: object
      description: ''
      properties:
        CustomerProductAndServiceDirectoryEntryDescription:
          $ref: '#/components/schemas/Text'
        CustomerProductAndServiceDirectoryEntrySchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerProductAndServiceDirectoryEntryVersion:
          type: string
          format: Number
          description: >-
            The version of Customer Products And Services Directory Entry
            Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        CustomerProductAndServiceDirectoryEntryStatus:
          $ref: '#/components/schemas/Status'
        CustomerProductAndServiceDirectoryEntryUsageLog:
          $ref: '#/components/schemas/Log'
        CustomerProductAndServiceDirectoryEntryUpdateLog:
          $ref: '#/components/schemas/Log'
        CustomerProductAndServiceDirectoryEntryServiceConfiguration:
          $ref: '#/components/schemas/Text'
        CustomerProductAndServiceDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/Identifier'
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        ProductAgreementReference:
          $ref: '#/components/schemas/ProductAgreement'
        ServicerReference:
          $ref: '#/components/schemas/Involvedparty'
        ServiceAgreementReference:
          $ref: '#/components/schemas/ServiceAgreement'
    ProductNotify:
      type: object
      description: ''
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/Identifier'
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        ProductName:
          $ref: '#/components/schemas/Name'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductFeature:
          $ref: '#/components/schemas/ProductFeature'
    ServiceNotify:
      type: object
      description: ''
      properties:
        ServiceInstanceReference:
          $ref: '#/components/schemas/Identifier'
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
