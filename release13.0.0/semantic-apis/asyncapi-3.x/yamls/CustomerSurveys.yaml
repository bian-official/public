asyncapi: 3.0.0
info:
  title: Customer Surveys
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Define and execute and
    analyze customer surveys
channels:
  CustomerSurveyProcedure/Created:
    address: CustomerSurveyProcedure/Created
    messages:
      CustomerSurveyProcedure-created.message:
        $ref: '#/components/messages/CustomerSurveyProcedure'
    description: ''
  CustomerSurveyProcedure/Updated:
    address: CustomerSurveyProcedure/Updated
    messages:
      CustomerSurveyProcedure-updated.message:
        $ref: '#/components/messages/CustomerSurveyProcedure'
    description: ''
  Execution/Created:
    address: Execution/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Execution'
    description: ''
  Execution/Updated:
    address: Execution/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Execution'
    description: ''
  Definition/Created:
    address: Definition/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Definition'
    description: ''
  Definition/Updated:
    address: Definition/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Definition'
    description: ''
  ParticipantSelection/Created:
    address: ParticipantSelection/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ParticipantSelection'
    description: ''
  ParticipantSelection/Updated:
    address: ParticipantSelection/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ParticipantSelection'
    description: ''
  SurveyAnalysis/Created:
    address: SurveyAnalysis/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SurveyAnalysis'
    description: ''
  SurveyAnalysis/Updated:
    address: SurveyAnalysis/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SurveyAnalysis'
    description: ''
operations:
  CustomerSurveyProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerSurveyProcedure~1Created'
    summary: CustomerSurveyProcedure
    messages:
      - $ref: >-
          #/channels/CustomerSurveyProcedure~1Created/messages/CustomerSurveyProcedure-created.message
  CustomerSurveyProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerSurveyProcedure~1Updated'
    summary: CustomerSurveyProcedure
    messages:
      - $ref: >-
          #/channels/CustomerSurveyProcedure~1Updated/messages/CustomerSurveyProcedure-updated.message
  Execution/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Execution~1Created'
    summary: Execution
    messages:
      - $ref: '#/channels/Execution~1Created/messages/publish.message'
  Execution/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Execution~1Updated'
    summary: Execution
    messages:
      - $ref: '#/channels/Execution~1Updated/messages/publish.message'
  Definition/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Definition~1Created'
    summary: Definition
    messages:
      - $ref: '#/channels/Definition~1Created/messages/publish.message'
  Definition/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Definition~1Updated'
    summary: Definition
    messages:
      - $ref: '#/channels/Definition~1Updated/messages/publish.message'
  ParticipantSelection/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ParticipantSelection~1Created'
    summary: ParticipantSelection
    messages:
      - $ref: '#/channels/ParticipantSelection~1Created/messages/publish.message'
  ParticipantSelection/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ParticipantSelection~1Updated'
    summary: ParticipantSelection
    messages:
      - $ref: '#/channels/ParticipantSelection~1Updated/messages/publish.message'
  SurveyAnalysis/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SurveyAnalysis~1Created'
    summary: SurveyAnalysis
    messages:
      - $ref: '#/channels/SurveyAnalysis~1Created/messages/publish.message'
  SurveyAnalysis/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SurveyAnalysis~1Updated'
    summary: SurveyAnalysis
    messages:
      - $ref: '#/channels/SurveyAnalysis~1Updated/messages/publish.message'
components:
  messages:
    CustomerSurveyProcedure:
      name: CustomerSurveyProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Customer
        Surveys. 
      payload:
        $ref: '#/components/schemas/CustomerSurveyProcedure'
    Execution:
      name: Execution
      description: >-
        The main worsteps to be followed in th execution of Customer Survey
        Procedure like: Execution of the customer interaction, presenting the
        campaign details, recording the customer response
      payload:
        $ref: '#/components/schemas/Execution'
    Definition:
      name: Definition
      description: >-
        The main worsteps to be followed in th execution of Customer Survey
        Procedure like: Execution of the customer interaction, presenting the
        campaign details, recording the customer response
      payload:
        $ref: '#/components/schemas/Definition'
    ParticipantSelection:
      name: ParticipantSelection
      description: >-
        The main worsteps to be followed in th execution of Customer Survey
        Procedure like: Execution of the customer interaction, presenting the
        campaign details, recording the customer response
      payload:
        $ref: '#/components/schemas/ParticipantSelection'
    SurveyAnalysis:
      name: SurveyAnalysis
      description: >-
        The main worsteps to be followed in th execution of Customer Survey
        Procedure like: Execution of the customer interaction, presenting the
        campaign details, recording the customer response
      payload:
        $ref: '#/components/schemas/SurveyAnalysis'
  schemas:
    Execution:
      type: object
      description: ''
      properties:
        CustomerSurveyExecutionWorkTaskType:
          $ref: '#/components/schemas/Task'
        CustomerSurveyExecutionWorkTaskDescription:
          $ref: '#/components/schemas/Text'
        CustomerSurveyExecutionWorkTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        CustomerSurveyExecutionWorkTaskResult:
          $ref: '#/components/schemas/Text'
        CustomerSurveyExecutionWorkTaskDate-Time:
          $ref: '#/components/schemas/Date'
    Task:
      type: object
      format: Task
      description: "The type of work task (e.g. host focus group session, issue questionnaire) ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Workproduct:
      type: object
      format: Workproduct
      description: "File of consolidated notes, forms and documents for the work task ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "Reference to associated documents (e.g. required legal disclosures for participants) ||\r\n|"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    Date:
      type: object
      format: Date
      description: >-
        The date-time the customer survey execution ISODate|ISODate
        (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
        BM ()
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Definition:
      type: object
      description: ''
      properties:
        CustomerSurveyDesignWorkTaskType:
          $ref: '#/components/schemas/Task'
        CustomerSurveyDesignWorkTaskDescription:
          $ref: '#/components/schemas/Text'
        CustomerSurveyDesignWorkTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        CustomerSurveyDesignWorkTaskResult:
          $ref: '#/components/schemas/Text'
    ParticipantSelection:
      type: object
      description: ''
      properties:
        CustomerSurveySelectionCriteria:
          $ref: '#/components/schemas/RuleSet'
        CustomerSurveyParticipantReference:
          $ref: '#/components/schemas/Involvedparty'
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        Details the selection criteria used to identify candidate customer
        reviewers GovernanceRules|GovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: RuleSet
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    SurveyAnalysis:
      type: object
      description: ''
      properties:
        Surveyaspecttypevalues:
          enum:
            - Demographics
            - ProductOrServiceUsage
            - Satisfaction
            - Experience
            - ProductOrServiceQuality
            - BrandPerception
            - Price
            - Competitor
            - CommunicationPreferences
            - Accessibility
            - Loyalty
            - EnvironmentalAndSocialResponsibili
    CustomerSurveyProcedure:
      type: object
      description: ''
      properties:
        Customersurveytypevalues:
          enum:
            - Focusgroup
            - Questionnaire
            - CustomerSatisfactionSurvey
            - ProductOrServiceFeedbackSurvey
            - MarketResearchSurvey
            - CustomerEffortScore
        CustomerSurveyDescription:
          $ref: '#/components/schemas/Text'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerSurveyProcedureSet-up:
          $ref: '#/components/schemas/Arrangement'
        CustomerSurveyProcedureVersionNumber:
          type: string
          format: Number
          description: >-
            The customer survey version number used Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        CustomerSurveySchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerSurveyConsumablesInventory:
          $ref: '#/components/schemas/ItemInventory'
        CustomerSurveyConsumableType:
          $ref: '#/components/schemas/Item'
        CustomerSurveyConsumableHolding:
          $ref: '#/components/schemas/ItemInventory'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
        CustomerSurveyProcedureDate:
          $ref: '#/components/schemas/Date'
        CustomerSurveyProcedureResult:
          $ref: '#/components/schemas/Text'
        CustomerSurveyReference:
          $ref: '#/components/schemas/CustomerSurvey'
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Details of the deployment set-up/configuration of the customer survey
        Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    Schedule:
      type: object
      format: Schedule
      description: "The customer survey processing schedule, covering survey definition, reviewer selection, survey execution and subsequent analysis. Note for some integrated surveys this can be an on-going activity that attempts provides a constant stream of feedback relating to specific activities/services rather than a specific event ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    ItemInventory:
      type: object
      format: ItemInventory
      description: "The tracked inventory of the consumable item ||\r\n|"
      properties:
        ItemInventoryType:
          $ref: '#/components/schemas/Text'
        ItemInventory:
          type: string
          format: Class
          description: 'An inventory of tangible or intangible things. '
    Item:
      type: object
      format: Item
      description: "The type of consumable item associated with the customer survey (e.g. questionnaire, participation incentive gift) ||\r\n|"
      properties:
        ItemType:
          $ref: '#/components/schemas/Text'
        ItemDescription:
          $ref: '#/components/schemas/Text'
        ItemLocation:
          $ref: '#/components/schemas/Location'
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
    CustomerSurvey:
      type: object
      format: CustomerSurvey
      description: " ||\r\n|"
      properties:
        Customersurveytypevalues:
          enum:
            - Focusgroup
            - Questionnaire
            - CustomerSatisfactionSurvey
            - ProductOrServiceFeedbackSurvey
            - MarketResearchSurvey
            - CustomerEffortScore
          format: CustomerSurvey
        CustomerSurveyDescription:
          $ref: '#/components/schemas/Text'
        CustomerSurveyVersion:
          $ref: '#/components/schemas/Text'
        CustomerSurveyDateTime:
          $ref: '#/components/schemas/Datetime'
        Surveyaspecttypevalues:
          enum:
            - Demographics
            - ProductOrServiceUsage
            - Satisfaction
            - Experience
            - ProductOrServiceQuality
            - BrandPerception
            - Price
            - Competitor
            - CommunicationPreferences
            - Accessibility
            - Loyalty
            - EnvironmentalAndSocialResponsibili
          format: CustomerSurvey
        SelectionCriteria:
          $ref: '#/components/schemas/Ruleset'
        CustomerSurveyObjective:
          $ref: '#/components/schemas/Goal'
    Ruleset:
      type: object
      format: Ruleset
      description: ' '
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: Ruleset
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
