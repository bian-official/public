asyncapi: 3.0.0
info:
  title: Card Authorization
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain is
    responsible for the real time card authorization decisions for credit/charge
    cards.
channels:
  CreditCardAuthorizationAssessment/Created:
    address: CreditCardAuthorizationAssessment/Created
    messages:
      CreditCardAuthorizationAssessment-created.message:
        $ref: '#/components/messages/CreditCardAuthorizationAssessment'
    description: ''
  CreditCardAuthorizationAssessment/Updated:
    address: CreditCardAuthorizationAssessment/Updated
    messages:
      CreditCardAuthorizationAssessment-updated.message:
        $ref: '#/components/messages/CreditCardAuthorizationAssessment'
    description: ''
  Authorization/Created:
    address: Authorization/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Authorization'
    description: ''
  Authorization/Updated:
    address: Authorization/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Authorization'
    description: ''
  FraudCheck/Created:
    address: FraudCheck/Created
    messages:
      publish.message:
        $ref: '#/components/messages/FraudCheck'
    description: ''
  FraudCheck/Updated:
    address: FraudCheck/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/FraudCheck'
    description: ''
  CreditCheck/Created:
    address: CreditCheck/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CreditCheck'
    description: ''
  CreditCheck/Updated:
    address: CreditCheck/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CreditCheck'
    description: ''
  DeviceCheck/Created:
    address: DeviceCheck/Created
    messages:
      publish.message:
        $ref: '#/components/messages/DeviceCheck'
    description: ''
  DeviceCheck/Updated:
    address: DeviceCheck/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/DeviceCheck'
    description: ''
  Authentication/Created:
    address: Authentication/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Authentication'
    description: ''
  Authentication/Updated:
    address: Authentication/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Authentication'
    description: ''
  StandIn/Created:
    address: StandIn/Created
    messages:
      publish.message:
        $ref: '#/components/messages/StandIn'
    description: ''
  StandIn/Updated:
    address: StandIn/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/StandIn'
    description: ''
operations:
  CreditCardAuthorizationAssessment-created:
    action: receive
    channel:
      $ref: '#/channels/CreditCardAuthorizationAssessment~1Created'
    summary: CreditCardAuthorizationAssessment
    messages:
      - $ref: >-
          #/channels/CreditCardAuthorizationAssessment~1Created/messages/CreditCardAuthorizationAssessment-created.message
  CreditCardAuthorizationAssessment-updated:
    action: receive
    channel:
      $ref: '#/channels/CreditCardAuthorizationAssessment~1Updated'
    summary: CreditCardAuthorizationAssessment
    messages:
      - $ref: >-
          #/channels/CreditCardAuthorizationAssessment~1Updated/messages/CreditCardAuthorizationAssessment-updated.message
  Authorization/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Authorization~1Created'
    summary: Authorization
    messages:
      - $ref: '#/channels/Authorization~1Created/messages/publish.message'
  Authorization/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Authorization~1Updated'
    summary: Authorization
    messages:
      - $ref: '#/channels/Authorization~1Updated/messages/publish.message'
  FraudCheck/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/FraudCheck~1Created'
    summary: FraudCheck
    messages:
      - $ref: '#/channels/FraudCheck~1Created/messages/publish.message'
  FraudCheck/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/FraudCheck~1Updated'
    summary: FraudCheck
    messages:
      - $ref: '#/channels/FraudCheck~1Updated/messages/publish.message'
  CreditCheck/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CreditCheck~1Created'
    summary: CreditCheck
    messages:
      - $ref: '#/channels/CreditCheck~1Created/messages/publish.message'
  CreditCheck/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CreditCheck~1Updated'
    summary: CreditCheck
    messages:
      - $ref: '#/channels/CreditCheck~1Updated/messages/publish.message'
  DeviceCheck/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/DeviceCheck~1Created'
    summary: DeviceCheck
    messages:
      - $ref: '#/channels/DeviceCheck~1Created/messages/publish.message'
  DeviceCheck/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/DeviceCheck~1Updated'
    summary: DeviceCheck
    messages:
      - $ref: '#/channels/DeviceCheck~1Updated/messages/publish.message'
  Authentication/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Authentication~1Created'
    summary: Authentication
    messages:
      - $ref: '#/channels/Authentication~1Created/messages/publish.message'
  Authentication/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Authentication~1Updated'
    summary: Authentication
    messages:
      - $ref: '#/channels/Authentication~1Updated/messages/publish.message'
  StandIn/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/StandIn~1Created'
    summary: StandIn
    messages:
      - $ref: '#/channels/StandIn~1Created/messages/publish.message'
  StandIn/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/StandIn~1Updated'
    summary: StandIn
    messages:
      - $ref: '#/channels/StandIn~1Updated/messages/publish.message'
components:
  messages:
    CreditCardAuthorizationAssessment:
      name: CreditCardAuthorizationAssessment
      description: >-
        To test or assess an entity, possibly against some formal qualification
        or certification requirement within Card Authorization. 
      payload:
        $ref: '#/components/schemas/CreditCardAuthorizationAssessment'
    Authorization:
      name: Authorization
      description: >-
        The <BQ> test is one aspect that can be intergrated into the overall
        <CR>
      payload:
        $ref: '#/components/schemas/Authorization'
    FraudCheck:
      name: FraudCheck
      description: >-
        The <BQ> test is one aspect that can be intergrated into the overall
        <CR>
      payload:
        $ref: '#/components/schemas/FraudCheck'
    CreditCheck:
      name: CreditCheck
      description: >-
        The <BQ> test is one aspect that can be intergrated into the overall
        <CR>
      payload:
        $ref: '#/components/schemas/CreditCheck'
    DeviceCheck:
      name: DeviceCheck
      description: >-
        The <BQ> test is one aspect that can be intergrated into the overall
        <CR>
      payload:
        $ref: '#/components/schemas/DeviceCheck'
    Authentication:
      name: Authentication
      description: >-
        The <BQ> test is one aspect that can be intergrated into the overall
        <CR>
      payload:
        $ref: '#/components/schemas/Authentication'
    StandIn:
      name: StandIn
      description: >-
        The <BQ> test is one aspect that can be intergrated into the overall
        <CR>
      payload:
        $ref: '#/components/schemas/StandIn'
  schemas:
    Authorization:
      type: object
      format: Authorization
      description: "Reference to Authorization ||\r\n|"
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        VersionNumber:
          type: string
          format: Number
          description: >-
            The test version employed Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        CreditCardAuthorizationAssessmentReference:
          $ref: '#/components/schemas/Assessment'
        AuthorizationReference:
          $ref: '#/components/schemas/Authorization'
        Authorization:
          type: string
          format: Class
          description: >-
            An evaluation whether a party or system is allowed to do something.


            The consent given by a participant (or a third party acting on
            behalf of that participant) in order to transfer funds or
            securities. (ECB)


            Authorization is a mechanism by which a computer system determines
            whether to allow or deny specific action to a user. Authorization is
            often controlled by rather complex rules and algorithms, usually
            specified as part of an access control model. Authorization often
            follows (and required) authentication, however, authentication and
            authorization are two separate mechanisms. In rare cases,
            "authorization" is understood as a process of allowing access,
            granting permissions or giving approval. Such as "authorization" of
            a request to join a group. (ISO/IEC 24760-1:2019 IT Security and
            Privacy) 
        AuthorizationType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The required status/situation before the test can be applied ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: >-
        An identifier that allows to uniquely refer to an instance of a
        Document. 
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Authorization ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Schedule:
      type: object
      format: Schedule
      description: ' '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The <BQ> specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Assessment:
      type: object
      format: Assessment
      description: >-
        Reference to the Credit Card Authorization Assessment
        Assessment|Assessment
        (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
        BM ()
      properties:
        Assessmenttypevalues:
          enum:
            - AssetValuation
            - ProductMatching
            - Authorization
            - Authentication
            - QualityAssurance
            - Audit
            - ComplianceCheck
            - FundingCheck
            - SuitabilityCheck
            - PerformanceCheck
            - ImpactAssessment
            - RiskAssessment
            - Rating
            - UnderwritingAssessment
            - Qualification
            - Verification
            - KYCAssessment
            - PEPAssessment
            - AMLAssessment
          format: Assessment
        AssessmentMethod:
          $ref: '#/components/schemas/Text'
        AssessmentSchedule:
          $ref: '#/components/schemas/Schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/Text'
        AssessmentModel:
          $ref: '#/components/schemas/Model'
        AssessmentDateTime:
          $ref: '#/components/schemas/Datetime'
        AssessmentResult:
          $ref: '#/components/schemas/Text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/Text'
        AssessmentRequirement:
          $ref: '#/components/schemas/Requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/Date'
        AssessmentStatus:
          $ref: '#/components/schemas/Status'
    Model:
      type: object
      format: Model
      description: ' '
      properties:
        ModelType:
          $ref: '#/components/schemas/Text'
        ModelPurpose:
          $ref: '#/components/schemas/Text'
        ModelVersion:
          $ref: '#/components/schemas/Text'
        ModelName:
          $ref: '#/components/schemas/Name'
        ModelDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ModelStatus:
          $ref: '#/components/schemas/Status'
    Document:
      type: object
      format: Document
      description: 'Document that represents the result of an assessment(s). '
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Creditnoterelatedtofinancialadjust
            - Debitnoterelatedtofinancialadjustm
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Structuredcommunicationreference
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Tradeservicesutilitytransaction
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Document:
          type: string
          format: Class
          description: >-
            Something tangible that records something, such as a recording or a
            photograph, or a writing that can be used to furnish evidence or
            information (FIBO)


            Definition: A physical or digital representation of something
            meaningful to the audience.


            Comment: 

            1.Technical: Manuals, instructions, tutorials, procedures,
            specifications, etc., that accompany a piece of equipment or
            software, and provide guidance for its proper use and maintenance.

            2.Trading: Preparation of a set of commercial and financial
            documents that record or support a business transaction.
            International trade documentations include air waybill, bill of
            exchange, bill of lading, certificate of inspection, certificate of
            insurance, certificate of origin, commercial invoice, and consular
            invoice.



            Read more:
            http://www.businessdictionary.com/definition/documentation.html#ixzz3EQGRGC4W
             
    Requirement:
      type: object
      format: Requirement
      description: ' '
      properties:
        RequirementType:
          type: string
          format: String
          description: ''
    Date:
      type: object
      format: Date
      description: 'Date when the assessment expires. (ISO20022) '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    FraudCheck:
      type: object
      description: ''
      properties:
        FraudCheckResult:
          $ref: '#/components/schemas/Test'
    Test:
      type: object
      format: Test
      description: "Result of the fraud check ||\r\n|"
      properties:
        TestResult:
          $ref: '#/components/schemas/Text'
        TestGuidance:
          $ref: '#/components/schemas/Text'
        Testtypevalues:
          enum:
            - ProductEligibilityTest
            - NextBestProductTest
            - IssuedDeviceTest
            - CardHolderAuthenticationTest
            - CardFundsAvailableTest
            - CardTransactionFraudTest
            - CardStand-InAuthorizationTest
            - ExternalAccessRequestTest
            - SuitabilityTest
            - LegalComplianceTest
            - RegulatoryComplianceTest
            - SystemFunctionalTest
            - SystemProductionTest
            - SystemBusinessRiskTest
            - SystemOperationsTest
            - CreditPolicyComplianceTest
            - RuleSetAndDecisionTreeTest
            - ModelBasedTests
            - AssetAndLiabilityValuationTest
            - LiquidityAndCashFlowTest
            - RiskTest
            - SensitivityTest
          format: Test
        TestDescription:
          $ref: '#/components/schemas/Text'
    CreditCheck:
      type: object
      description: ''
      properties:
        CardAccountavailablebalancecheckresult:
          $ref: '#/components/schemas/Test'
    DeviceCheck:
      type: object
      description: ''
      properties:
        IssuedDeviceSecurityCode:
          $ref: '#/components/schemas/Text'
        IssuedDeviceCryptogram:
          $ref: '#/components/schemas/Text'
        IssuedDeviceCVV:
          $ref: '#/components/schemas/Text'
        IssuedDeviceBIN:
          $ref: '#/components/schemas/Text'
        IssuedDeviceCheckDigit:
          $ref: '#/components/schemas/Test'
        IssuedDeviceValidThrough:
          $ref: '#/components/schemas/Test'
        IssuedDeviceCheckResult:
          $ref: '#/components/schemas/Test'
    Authentication:
      type: object
      description: ''
      properties:
        CardTransactionProductInstanceReference:
          $ref: '#/components/schemas/CardPaymentAgreement'
        CardHolderAccountPassword:
          type: string
          format: Number
          description: >-
            The password may be held at the customer or account level
            Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        IssuedDevicePIN:
          $ref: '#/components/schemas/Device'
        AuthenticationSecretQuestionReference:
          $ref: '#/components/schemas/CardPaymentAuthentication'
        AuthenticationSecretQuestionTemplate:
          $ref: '#/components/schemas/Text'
        AuthenticationSecretQuestionValue:
          $ref: '#/components/schemas/Value'
        Authenticationresulttypevalues:
          enum:
            - Denial
            - Nonparticipation
            - Unabletoauthenticate
            - Merchantnotenroled
            - Withcryptogram
            - Withoutcryptogram
    CardPaymentAgreement:
      type: object
      format: CardPaymentAgreement
      description: >-
        The card account number/identification associated with the card
        transaction matched to Issuer's card account instance
        CardPayment|CardPayment
        (https://www.iso20022.org/standardsrepository/type/CardPayment)|Standard|ISO20022
        BM ()
      properties:
        CardPaymentInvolvement:
          $ref: '#/components/schemas/Involvedparty'
        CardAmount:
          $ref: '#/components/schemas/Amount'
        CardCurrency:
          $ref: '#/components/schemas/Currencycode'
        CardLimitTermAndCondition:
          $ref: '#/components/schemas/Condition'
        CardTaxTermAndCondition:
          $ref: '#/components/schemas/Condition'
    Amount:
      type: object
      format: Amount
      description: 'Amount of the payment card. '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: 'Currency of the payment card.  '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Device:
      type: object
      format: Device
      description: "The PIN may be held at device or customer level ||\r\n|"
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Deviceidentification'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
          format: Device
        DeviceProperty:
          $ref: '#/components/schemas/Text'
        DeviceElement:
          $ref: '#/components/schemas/Text'
        DeviceStatus:
          $ref: '#/components/schemas/Status'
        DeviceVersion:
          type: string
          format: Number
          description: ''
        DeviceDateTime:
          $ref: '#/components/schemas/Datetime'
        DeviceDescription:
          $ref: '#/components/schemas/Text'
        DeviceName:
          $ref: '#/components/schemas/Name'
        DeviceLanguage:
          $ref: '#/components/schemas/Text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/Text'
        DeviceLocation:
          $ref: '#/components/schemas/Location'
        DeviceManufacturer:
          $ref: '#/components/schemas/Text'
        DeviceCountry:
          $ref: '#/components/schemas/Country'
        DeviceAddress:
          $ref: '#/components/schemas/Address'
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Device
        Deviceoperatingsystemtypevalues:
          enum:
            - Android
            - Ios
            - Windows
            - Blackberry
            - Tizen
            - Othernational
            - Otherprivate
          format: Device
    Deviceidentification:
      type: object
      format: Deviceidentification
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Identifier'
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
          format: Deviceidentification
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: >-
        The address associated with the device like Internet Protocol address,
        email Address 
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Country:
      type: object
      format: Country
      description: 'Country of the location. '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    CardPaymentAuthentication:
      type: object
      format: CardPaymentAuthentication
      description: >-
        Use if customer details/questions used to verify identity
        Authentication|Authentication
        (https://www.iso20022.org/standardsrepository/type/Authentication)|Standard|ISO20022
        BM ()
      properties:
        CardHolder:
          $ref: '#/components/schemas/Involvedparty'
    StandIn:
      type: object
      description: ''
      properties:
        NegativeFileReference:
          type: string
          format: Object
          description: "Refers to the file where lost/stolen card details are maintained. This is a file accessed using external service access ||\r\n|"
        CardAccountStandInAuthorizationResult:
          $ref: '#/components/schemas/Authorization'
    CreditCardAuthorizationAssessment:
      type: object
      description: ''
      properties:
        NetworkReference:
          $ref: '#/components/schemas/CardNetwork'
        ParticipantAcquirerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        ParticipantIssuerBankReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionRecord:
          $ref: '#/components/schemas/CardPaymentTransaction'
        CardTransactionProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CardHolderReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionIssuedDeviceReference:
          $ref: '#/components/schemas/Device'
        CardTransactionNetworkReference:
          $ref: '#/components/schemas/CardNetwork'
        CardTransactionIssuingBankReference:
          $ref: '#/components/schemas/CardPaymentTransactionInvolvement'
        CardTransactionMerchantAcquiringBankReference:
          $ref: '#/components/schemas/CardPaymentTransactionInvolvement'
        CardTransactionType:
          $ref: '#/components/schemas/CardPaymentTransaction'
        CardTransactionCurrency:
          $ref: '#/components/schemas/Currencycode'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
        CardTransactionAmount:
          $ref: '#/components/schemas/Amount'
        CardTransactionMerchantReference:
          $ref: '#/components/schemas/CardPaymentTransactionInvolvement'
        CardTransactionLocationReference:
          $ref: '#/components/schemas/Location'
        CardTransactionProductandServiceReference:
          $ref: '#/components/schemas/BankingProduct'
        CardTransactionDateandTime:
          type: string
          format: ''
          description: Significant dates and times associated with the transaction |||
        CardTransactionFXConversionCharge:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionInterchargeFee:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionAuthorizationRecord:
          $ref: '#/components/schemas/CardPaymentAuthorization'
    CardNetwork:
      type: object
      format: CardNetwork
      description: "Reference to the network the card transaction is handled by as recorded with the transaction ||\r\n|"
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    CardPaymentTransaction:
      type: object
      format: CardPaymentTransaction
      description: >-
        The type of transaction (purchase, cash advance, etc.)
        CardPayment|CardPayment
        (https://www.iso20022.org/standardsrepository/type/CardPayment)|Standard|ISO20022
        BM ()
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        MerchantLocation:
          $ref: '#/components/schemas/Location'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: CardPaymentTransaction
        Transactionchanneltypevalues:
          enum:
            - Mailorder
            - Telephoneorder
            - Electroniccommerce
            - Televisionpayment
            - Officeorbranch
            - Homebanking
            - Financialadvisor
            - Mobilepayment
            - Securedelectroniccommerce
            - Mobilepos
          format: CardPaymentTransaction
        PointOfInteraction:
          $ref: '#/components/schemas/Pointofservice'
        CardTransactionDateTime:
          $ref: '#/components/schemas/Datetime'
        Transactionenvironmenttypevalues:
          enum:
            - Merchant
            - Private
            - Public
            - Branch
            - Other
          format: CardPaymentTransaction
        MerchantCountry:
          $ref: '#/components/schemas/Country'
        CardNetwork:
          $ref: '#/components/schemas/Cardnetwork'
        Amountqualifiertypevalues:
          enum:
            - Cashback
            - Gratuity
            - Fees
            - Rebates
            - Valueaddedtax
            - Actual
            - Replacement
            - Maximum
            - Default
            - Estimated
            - Original
            - Surcharge
            - Servicefee
            - Interchangefee
            - Discount
            - Atmcommissionfee
            - Authorisedamount
            - Cardremainingbalance
            - Maximumallowedamount
            - Minimumallowedamount
            - Requestedamount
            - Issuerfees
            - Issuercommission
            - Interchangefees
            - Processingfees
            - Currencyconversionfees
            - Internationalserviceassessmentfees
            - Commission
            - Donation
            - Tax
            - Incremental
            - Decremental
            - Reserved
            - Confirmedamount
            - Instructedamount
            - Atmaccessfee
            - Cardholderbillingfee
            - Clearingfee
            - Credittransactionfee
            - Cumulative
            - Debittransactionfee
            - Extra
            - Foreignexchangefee
            - Fundstransfer
            - Instantpaymentfee
            - Instanttransferfee
            - Issuercardholderfee
            - Limit
            - Othernational
            - Otherprivate
            - Reconciliationfee
            - Settlementfee
            - Transactionfee
            - Anticipated
            - Baggage
            - Chargedtocard
            - Clearingpriorityfee
            - Dental
            - Deposit
            - Fundstransferfee
            - Otherqualifiedmedical
            - Prescription
            - Proxy
            - Requestedcashback
            - Settlementpriorityfee
            - Totalhealthcare
            - Transit
            - Vision
            - Connect
            - Data
            - Exchangeticket
            - Exchangeticketfee
            - Fare
            - Foodbeverage
            - Insurance
            - Longdistance
            - Miscellaneous
            - Phone
            - Prepayment
            - Total
            - Usage
            - Predcc
            - Upgrade
            - Clubfee
            - Cargo
            - Dutyfree
            - Ticketdelivery
            - Petcarrier
            - Tourorder
            - Minimuminterchangefee
            - Maximuminterchangefee
            - Cashbackinterchangefee
          format: CardPaymentTransaction
        CardPaymentStatus:
          $ref: '#/components/schemas/Status'
        Cardtransactioncategorytypevalues:
          enum:
            - Cardtransactioncategorytypevalues
          format: CardPaymentTransaction
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Cardpaymenttransactionidentification'
        Cardpaymenttransactionservicetypevalues:
          enum:
            - Cardsfundtransfer
            - Originalcredit
            - Cardpayment
            - Cashback
            - Cashadvance
            - Cashdeposit
            - Deferredpayment
            - Reservation
            - Loading
            - Refund
            - Quasicash
            - Balance
            - Cardactivation
            - Cardverification
            - Pinchange
            - Validitycheck
            - Aggregation
            - DCC
            - Gratuity
            - Instalment
            - Loyalty
            - Noshow
            - Purchasecorporate
            - Recurringpayment
            - Solicitedavailablefunds
            - Unsolicitedavailablefunds
            - Voiceauthorisation
            - Initialreservation
            - Updatereservation
            - Paymentreservation
            - Additionalpayment
            - Firstrecurring
            - Followingrecurring
            - Persontobusiness
            - Persontoperson
            - Acceptorinstalment
            - Issuerinstalment
            - Unloading
            - Cardsfundtransferpush
            - Cardsfundtransferpull
            - Cashwithdrawal
            - Pinunblock
            - Chosenwithdrawal
            - Preauthorisedwithdrawal
            - Profilewithdrawal
            - Standardwithdrawal
            - Transfercardbillpayment
            - Transferfromcash
            - Transferfromcheque
            - Transferfundsdisbursementgeneral
            - Transfergovernmentdisbursement
            - Transfermerchantdisbursement
            - Transferpayrollpensiondisbursement
            - Nonrefundable
            - Instant
            - Creditadjustement
            - Debitadjustement
            - Createcertificate
            - Renewcerificate
            - Revokecertificate
            - Addwhitelist
            - Removewhitelist
            - Cardinitiatingdirectdebit
            - Guaranteeofpayment
          format: CardPaymentTransaction
        CardPaymentTransaction:
          type: string
          format: Class
          description: >-
            A payment transaction initiated by a payment card. 


            'Card-based payment transaction means a service based on a payment
            card scheme's infrastructure and business rules to make a payment
            transaction by means of any card, telecommunication, digital or IT
            device or software if this results in a debit or a credit card
            transaction. Card-based payment transactions exclude transactions
            based on other kinds of payment services. (PSD) 
    Pointofservice:
      type: object
      format: Pointofservice
      description: >-
        Describes the Point of Interaction through which the payment by card was
        initiated. (ISO20022) 
      properties:
        PointOfService:
          type: string
          format: Class
          description: Point at which a service is offered and/or fulfilled.
    Cardnetwork:
      type: object
      format: Cardnetwork
      description: 'Network used for handling the card payment transaction. '
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    Cardpaymenttransactionidentification:
      type: object
      format: Cardpaymenttransactionidentification
      description: >-
        Identification of the transaction assigned by the initiator of the
        request. For instance refers to POITransactionIdentification if used
        inside an authorisation request or to SaleTransactionIdentification if
        the message is a payment request initiated by a sale system. (ISO20022) 
      properties:
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        Cardpaymenttransactionidentificationtypevalues:
          enum:
            - Issuercitidentification
            - Merchantcitidentification
          format: Cardpaymenttransactionidentification
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "The account number associated with the card transaction ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    CardPaymentTransactionInvolvement:
      type: object
      format: CardPaymentTransactionInvolvement
      description: >-
        Refers to the merchant initiating settlement
        CardPaymentPartyRole|CardPaymentPartyRole
        (https://www.iso20022.org/standardsrepository/type/CardPaymentPartyRole)|Standard|ISO20022
        BM ()
      properties:
        Cardpaymentinvolvementtypevalues:
          enum:
            - Cardholder
            - Cardissuer
            - Cardacceptor
            - Cardacquirer
            - Merchant
            - Cardnetwork
          format: CardPaymentTransactionInvolvement
        PartyReference:
          $ref: '#/components/schemas/Party'
        TransactionReference:
          $ref: '#/components/schemas/Cardpaymenttransaction'
        CardPaymentTransactionInvolvement:
          type: string
          format: Class
          description: 'Party who plays a specific role in Card Payment Transaction '
    Cardpaymenttransaction:
      type: object
      format: Cardpaymenttransaction
      description: ' '
      properties:
        CardPaymentTransaction:
          type: string
          format: Class
          description: >-
            A payment transaction initiated by a payment card. 


            'Card-based payment transaction means a service based on a payment
            card scheme's infrastructure and business rules to make a payment
            transaction by means of any card, telecommunication, digital or IT
            device or software if this results in a debit or a credit card
            transaction. Card-based payment transactions exclude transactions
            based on other kinds of payment services. (PSD) 
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Details of the transaction (e.g. purchased service/product, purpose)
        Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    FeeArrangement:
      type: object
      format: FeeArrangement
      description: >-
        The applied intercharge fee Adjustment|Adjustment
        (https://www.iso20022.org/standardsrepository/type/Adjustment)|Standard|ISO20022
        BM ()
      properties:
        Feetypevalues:
          enum:
            - Accountingfee
            - Adrfee
            - Advisoryfee
            - Airwaybillfee
            - Backendload
            - Brokeragefee
            - Clearanceandhandlingatdestination
            - Clearanceandhandlingatorigin
            - Collectfreight
            - Commission
            - Contingencydeferredsalescharge
            - Correspondentbankcharge
            - Custodyfee
            - Dangerousgoodsfee
            - Dilutionlevy
            - Discount
            - Equalisation
            - Frontendload
            - Initial
            - Insurancepremium
            - Issuancecancellationfee
            - Issuancefee
            - Managementfee
            - Matchingfees
            - Miscellaneousfee
            - Other
            - Packaging
            - Partacquis
            - Penalty
            - Pickup
            - Postagecharge
            - Premium
            - Publicationfee
            - Regulatoryfee
            - Securitycharge
            - Serviceprovisionfee
            - Shippingcharge
            - Signatureservice
            - Specialconcessions
            - Speciallyagreedfrontendload
            - Storageatdestination
            - Storageatorigin
            - Switch
            - Transferfee
            - Transportcharges
            - Ucitscommission
            - ChequeRelatedFee
          format: FeeArrangement
        FeeAmount:
          $ref: '#/components/schemas/Amount'
        FeeRate:
          $ref: '#/components/schemas/Rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/Datetime'
        FeePlan:
          $ref: '#/components/schemas/Feeplan'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: FeeArrangement
        FeeReason:
          $ref: '#/components/schemas/Text'
        Adjustmentdirectiontypevalues:
          enum:
            - Added
            - Substracted
          format: FeeArrangement
        Chargebearertypevalues:
          enum:
            - Bornebydebtor
            - Bornebycreditor
            - Shared
            - Followingservicelevel
          format: FeeArrangement
        FeeArrangement:
          type: string
          format: Class
          description: >-
            An arrangement which specifies to charge fees when banking
            transactions did take place, accompanied by the modalities to
            calculate and charge the fees and the related terms and
            conditions.  
    Rate:
      type: object
      format: Rate
      description: >-
        Rate used to calculate the amount of the adjustment, allowance, charge
        or fee. (ISO20022) 
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
    Feeplan:
      type: object
      format: Feeplan
      description: An arranged FeeRatePlan
      properties:
        FeePlanName:
          $ref: '#/components/schemas/Name'
        Feeplantypevalues:
          enum:
            - StandardFeePlan
            - FinalFeePlan
          format: Feeplan
        FeePlan:
          $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      format: Plan
      description: ' '
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    CardPaymentAuthorization:
      type: object
      format: CardPaymentAuthorization
      description: >-
        Details the reference, amount, timestamp of the transaction
        authorization CardPaymentValidation|CardPaymentValidation
        (https://www.iso20022.org/standardsrepository/type/CardPaymentValidation)|Standard|ISO20022
        BM ()
      properties:
        Truefalseindicatorvalues:
          enum:
            - 1
            - 0
          format: CardPaymentAuthorization
        ValidityDate:
          $ref: '#/components/schemas/Date'
        Response:
          $ref: '#/components/schemas/Text'
        AuthorizationCode:
          $ref: '#/components/schemas/Value'
        Cardholderaddressverificationresulttypevalues:
          enum:
            - Addressmatch
            - Addressnotmatch
            - Addresstechnical
            - Addressnottechnical
            - Addressmissing
            - Addressnotused
            - Postalmatch
            - Postalnotmatch
            - Postaltechnical
            - Postalnottechnical
            - Postalmissing
            - Postalnotused
          format: CardPaymentAuthorization
        Cscresulttypevalues:
          enum:
            - Cscmatch
            - Cscnomatch
            - Csctechnical
            - Cscnottechnical
            - Cscmissing
            - Cscnotused
          format: CardPaymentAuthorization
        ElectronicCommerceAuthenticationResult:
          $ref: '#/components/schemas/Text'
        Failurereasontypevalues:
          enum:
            - Customercancel
            - Malfunction
            - Partial
            - Toolateresponse
            - Unabletocomplete
            - Unabletosend
            - Timeout
            - Carddeclined
            - Onlinedeclined
            - Offlinedeclined
            - Suspectedfraud
            - Securityerror
            - Cardcaptured
            - Carderror
            - Customerdecline
            - Forgottencard
            - Fullfilmenterror
            - Outofcustomerservice
            - Unabletocapture
            - Security
            - Hardware
            - Compromised
            - Expired
            - Invalidkcv
            - Keyloaderror
            - Cardretained
            - Customertimeout
          format: CardPaymentAuthorization
        AuthorizationEntity:
          $ref: '#/components/schemas/Involvedparty'
