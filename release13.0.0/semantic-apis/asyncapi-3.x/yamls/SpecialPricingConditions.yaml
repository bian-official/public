asyncapi: 3.0.0
info:
  title: Special Pricing Conditions
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Maintain a pricing list
    or conditions (with ranges and optional terms) categorized by various
    dimensions to impose exceptional product pricing conditions that override
    standard pricing terms (for special events/situations)
channels:
  SpecialPricingConditionsDirectoryEntry/Created:
    address: SpecialPricingConditionsDirectoryEntry/Created
    messages:
      SpecialPricingConditionsDirectoryEntry-created.message:
        $ref: '#/components/messages/SpecialPricingConditionsDirectoryEntry'
    description: ''
  SpecialPricingConditionsDirectoryEntry/Updated:
    address: SpecialPricingConditionsDirectoryEntry/Updated
    messages:
      SpecialPricingConditionsDirectoryEntry-updated.message:
        $ref: '#/components/messages/SpecialPricingConditionsDirectoryEntry'
    description: ''
  PricingTerms/Created:
    address: PricingTerms/Created
    messages:
      publish.message:
        $ref: '#/components/messages/PricingTerms'
    description: ''
  PricingTerms/Updated:
    address: PricingTerms/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/PricingTerms'
    description: ''
  SpecialPricingConditionsOutcome/Created:
    address: SpecialPricingConditionsOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SpecialPricingConditionsOutcome'
    description: ''
  SpecialPricingConditionsOutcome/Updated:
    address: SpecialPricingConditionsOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SpecialPricingConditionsOutcome'
    description: ''
operations:
  SpecialPricingConditionsDirectoryEntry-created:
    action: receive
    channel:
      $ref: '#/channels/SpecialPricingConditionsDirectoryEntry~1Created'
    summary: SpecialPricingConditionsDirectoryEntry
    messages:
      - $ref: >-
          #/channels/SpecialPricingConditionsDirectoryEntry~1Created/messages/SpecialPricingConditionsDirectoryEntry-created.message
  SpecialPricingConditionsDirectoryEntry-updated:
    action: receive
    channel:
      $ref: '#/channels/SpecialPricingConditionsDirectoryEntry~1Updated'
    summary: SpecialPricingConditionsDirectoryEntry
    messages:
      - $ref: >-
          #/channels/SpecialPricingConditionsDirectoryEntry~1Updated/messages/SpecialPricingConditionsDirectoryEntry-updated.message
  PricingTerms/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/PricingTerms~1Created'
    summary: PricingTerms
    messages:
      - $ref: '#/channels/PricingTerms~1Created/messages/publish.message'
  PricingTerms/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/PricingTerms~1Updated'
    summary: PricingTerms
    messages:
      - $ref: '#/channels/PricingTerms~1Updated/messages/publish.message'
  SpecialPricingConditionsOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SpecialPricingConditionsOutcome~1Created'
    summary: SpecialPricingConditionsOutcome
    messages:
      - $ref: >-
          #/channels/SpecialPricingConditionsOutcome~1Created/messages/publish.message
  SpecialPricingConditionsOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SpecialPricingConditionsOutcome~1Updated'
    summary: SpecialPricingConditionsOutcome
    messages:
      - $ref: >-
          #/channels/SpecialPricingConditionsOutcome~1Updated/messages/publish.message
components:
  messages:
    SpecialPricingConditionsDirectoryEntry:
      name: SpecialPricingConditionsDirectoryEntry
      description: >-
        Capture and maintain reference information about some type of entitity 
        within Special Pricing Conditions.
      payload:
        $ref: '#/components/schemas/SpecialPricingConditionsDirectoryEntry'
    PricingTerms:
      name: PricingTerms
      description: >-
        The Pricing Terms properties that represent a discrete aspect of the
        Pricing Terms
      payload:
        $ref: '#/components/schemas/PricingTerms'
    SpecialPricingConditionsOutcome:
      name: SpecialPricingConditionsOutcome
      description: >-
        The Pricing Terms properties that represent a discrete aspect of the
        Pricing Terms
      payload:
        $ref: '#/components/schemas/SpecialPricingConditionsOutcome'
  schemas:
    PricingTerms:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        VersionNumber:
          $ref: '#/components/schemas/Text'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        PricingTermsReference:
          $ref: '#/components/schemas/Identifier'
        PricingTermsType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The required status/situation before the property is valid/meaningful ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Pricing Terms ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: 'Refers to the lifecycle of a Condition '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Schedule:
      type: object
      format: Schedule
      description: "The schedule and timing for which the property value is valid ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The Pricing Terms specific  Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    SpecialPricingConditionsOutcome:
      type: object
      description: ''
      properties:
        SpecialPricingConditionsEntry:
          type: string
          format: Object
          description: ''
        SpecialPricingConditionsWorkProduct:
          $ref: '#/components/schemas/Workproduct'
    Workproduct:
      type: object
      format: Workproduct
      description: " ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    SpecialPricingConditionsDirectoryEntry:
      type: object
      description: ''
      properties:
        SpecialPricingConditionsDirectoryEntryDescription:
          $ref: '#/components/schemas/Text'
        SpecialPricingConditionsDirectoryEntrySchedule:
          $ref: '#/components/schemas/Schedule'
        SpecialPricingConditionsDirectoryEntryVersion:
          type: string
          format: Number
          description: >-
            The version of Special Pricing Conditions Directory Entry
            Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        SpecialPricingConditionsDirectoryEntryStatus:
          $ref: '#/components/schemas/Status'
        SpecialPricingConditionsDirectoryEntryUsageLog:
          $ref: '#/components/schemas/Log'
        SpecialPricingConditionsDirectoryEntryUpdateLog:
          $ref: '#/components/schemas/Log'
        SpecialPricingConditionsDirectoryEntryServiceConfiguration:
          $ref: '#/components/schemas/Arrangement'
    Log:
      type: object
      format: Log
      description: "Reference to the log of (update) ativities/events of Special Pricing Conditions Directory Entry ||\r\n|"
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
        Log:
          type: string
          format: Class
          description: A record of events/entries.
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        The configuration of Special Pricing Conditions Directory Entry
        Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
