asyncapi: 3.0.0
info:
  title: Correspondent Bank Relationship Management
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    manages correspondent bank relations, ensuring reciprocity and developing
    business where possible
channels:
  CorrepondentBankRelationshipManagementPlan/Created:
    address: CorrepondentBankRelationshipManagementPlan/Created
    messages:
      CorrepondentBankRelationshipManagementPlan-created.message:
        $ref: '#/components/messages/CorrepondentBankRelationshipManagementPlan'
    description: ''
  CorrepondentBankRelationshipManagementPlan/Updated:
    address: CorrepondentBankRelationshipManagementPlan/Updated
    messages:
      CorrepondentBankRelationshipManagementPlan-updated.message:
        $ref: '#/components/messages/CorrepondentBankRelationshipManagementPlan'
    description: ''
  IncidentTroubleshootingOversight/Created:
    address: IncidentTroubleshootingOversight/Created
    messages:
      publish.message:
        $ref: '#/components/messages/IncidentTroubleshootingOversight'
    description: ''
  IncidentTroubleshootingOversight/Updated:
    address: IncidentTroubleshootingOversight/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/IncidentTroubleshootingOversight'
    description: ''
  RelationshipReciprocityAssessment/Created:
    address: RelationshipReciprocityAssessment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/RelationshipReciprocityAssessment'
    description: ''
  RelationshipReciprocityAssessment/Updated:
    address: RelationshipReciprocityAssessment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/RelationshipReciprocityAssessment'
    description: ''
  RelationshipDevelopment/Created:
    address: RelationshipDevelopment/Created
    messages:
      publish.message:
        $ref: '#/components/messages/RelationshipDevelopment'
    description: ''
  RelationshipDevelopment/Updated:
    address: RelationshipDevelopment/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/RelationshipDevelopment'
    description: ''
  CorrespondentBankRelationshipManagementOutcome/Created:
    address: CorrespondentBankRelationshipManagementOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CorrespondentBankRelationshipManagementOutcome'
    description: ''
  CorrespondentBankRelationshipManagementOutcome/Updated:
    address: CorrespondentBankRelationshipManagementOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CorrespondentBankRelationshipManagementOutcome'
    description: ''
  CorrepondentBankRelationshipManagementPlan/Notify:
    address: CorrepondentBankRelationshipManagementPlan/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/CorrepondentBankRelationshipManagementPlanNotify'
  IncidentTroubleshootingOversight/Notify:
    address: IncidentTroubleshootingOversight/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/IncidentTroubleshootingOversightNotify'
  RelationshipDevelopment/Notify:
    address: RelationshipDevelopment/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/RelationshipDevelopmentNotify'
  RelationshipReciprocityAssessment/Notify:
    address: RelationshipReciprocityAssessment/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/RelationshipReciprocityAssessmentNotify'
operations:
  CorrepondentBankRelationshipManagementPlan-created:
    action: receive
    channel:
      $ref: '#/channels/CorrepondentBankRelationshipManagementPlan~1Created'
    summary: CorrepondentBankRelationshipManagementPlan
    messages:
      - $ref: >-
          #/channels/CorrepondentBankRelationshipManagementPlan~1Created/messages/CorrepondentBankRelationshipManagementPlan-created.message
  CorrepondentBankRelationshipManagementPlan-updated:
    action: receive
    channel:
      $ref: '#/channels/CorrepondentBankRelationshipManagementPlan~1Updated'
    summary: CorrepondentBankRelationshipManagementPlan
    messages:
      - $ref: >-
          #/channels/CorrepondentBankRelationshipManagementPlan~1Updated/messages/CorrepondentBankRelationshipManagementPlan-updated.message
  IncidentTroubleshootingOversight/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/IncidentTroubleshootingOversight~1Created'
    summary: IncidentTroubleshootingOversight
    messages:
      - $ref: >-
          #/channels/IncidentTroubleshootingOversight~1Created/messages/publish.message
  IncidentTroubleshootingOversight/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/IncidentTroubleshootingOversight~1Updated'
    summary: IncidentTroubleshootingOversight
    messages:
      - $ref: >-
          #/channels/IncidentTroubleshootingOversight~1Updated/messages/publish.message
  RelationshipReciprocityAssessment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/RelationshipReciprocityAssessment~1Created'
    summary: RelationshipReciprocityAssessment
    messages:
      - $ref: >-
          #/channels/RelationshipReciprocityAssessment~1Created/messages/publish.message
  RelationshipReciprocityAssessment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/RelationshipReciprocityAssessment~1Updated'
    summary: RelationshipReciprocityAssessment
    messages:
      - $ref: >-
          #/channels/RelationshipReciprocityAssessment~1Updated/messages/publish.message
  RelationshipDevelopment/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/RelationshipDevelopment~1Created'
    summary: RelationshipDevelopment
    messages:
      - $ref: '#/channels/RelationshipDevelopment~1Created/messages/publish.message'
  RelationshipDevelopment/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/RelationshipDevelopment~1Updated'
    summary: RelationshipDevelopment
    messages:
      - $ref: '#/channels/RelationshipDevelopment~1Updated/messages/publish.message'
  CorrespondentBankRelationshipManagementOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankRelationshipManagementOutcome~1Created'
    summary: CorrespondentBankRelationshipManagementOutcome
    messages:
      - $ref: >-
          #/channels/CorrespondentBankRelationshipManagementOutcome~1Created/messages/publish.message
  CorrespondentBankRelationshipManagementOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CorrespondentBankRelationshipManagementOutcome~1Updated'
    summary: CorrespondentBankRelationshipManagementOutcome
    messages:
      - $ref: >-
          #/channels/CorrespondentBankRelationshipManagementOutcome~1Updated/messages/publish.message
  CorrepondentBankRelationshipManagementPlan/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/CorrepondentBankRelationshipManagementPlan~1Notify'
    messages:
      - $ref: >-
          #/channels/CorrepondentBankRelationshipManagementPlan~1Notify/messages/subscribe.message
  IncidentTroubleshootingOversight/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/IncidentTroubleshootingOversight~1Notify'
    messages:
      - $ref: >-
          #/channels/IncidentTroubleshootingOversight~1Notify/messages/subscribe.message
  RelationshipDevelopment/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/RelationshipDevelopment~1Notify'
    messages:
      - $ref: '#/channels/RelationshipDevelopment~1Notify/messages/subscribe.message'
  RelationshipReciprocityAssessment/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/RelationshipReciprocityAssessment~1Notify'
    messages:
      - $ref: >-
          #/channels/RelationshipReciprocityAssessment~1Notify/messages/subscribe.message
components:
  messages:
    CorrepondentBankRelationshipManagementPlan:
      name: CorrepondentBankRelationshipManagementPlan
      description: >-
        Oversee the working of a business unit, assign work, manage against a
        plan and troubleshoot issues within Correspondent Bank Relationship
        Management.
      payload:
        $ref: '#/components/schemas/CorrepondentBankRelationshipManagementPlan'
    IncidentTroubleshootingOversight:
      name: IncidentTroubleshootingOversight
      description: >-
        The Incident Troubleshooting Oversight Duty is a specific role or
        responsibility that is one aspect of Incident Troubleshooting Oversight
        Duty
      payload:
        $ref: '#/components/schemas/IncidentTroubleshootingOversight'
    RelationshipReciprocityAssessment:
      name: RelationshipReciprocityAssessment
      description: >-
        The Incident Troubleshooting Oversight Duty is a specific role or
        responsibility that is one aspect of Incident Troubleshooting Oversight
        Duty
      payload:
        $ref: '#/components/schemas/RelationshipReciprocityAssessment'
    RelationshipDevelopment:
      name: RelationshipDevelopment
      description: >-
        The Incident Troubleshooting Oversight Duty is a specific role or
        responsibility that is one aspect of Incident Troubleshooting Oversight
        Duty
      payload:
        $ref: '#/components/schemas/RelationshipDevelopment'
    CorrespondentBankRelationshipManagementOutcome:
      name: CorrespondentBankRelationshipManagementOutcome
      description: >-
        The Incident Troubleshooting Oversight Duty is a specific role or
        responsibility that is one aspect of Incident Troubleshooting Oversight
        Duty
      payload:
        $ref: '#/components/schemas/CorrespondentBankRelationshipManagementOutcome'
    CorrepondentBankRelationshipManagementPlanNotify:
      name: CorrepondentBankRelationshipManagementPlanNotify
      payload:
        $ref: '#/components/schemas/CorrepondentBankRelationshipManagementPlanNotify'
    IncidentTroubleshootingOversightNotify:
      name: IncidentTroubleshootingOversightNotify
      payload:
        $ref: '#/components/schemas/IncidentTroubleshootingOversightNotify'
    RelationshipDevelopmentNotify:
      name: RelationshipDevelopmentNotify
      payload:
        $ref: '#/components/schemas/RelationshipDevelopmentNotify'
    RelationshipReciprocityAssessmentNotify:
      name: RelationshipReciprocityAssessmentNotify
      payload:
        $ref: '#/components/schemas/RelationshipReciprocityAssessmentNotify'
  schemas:
    IncidentTroubleshootingOversight:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        IncidentTroubleshootingOversightDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        IncidentTroubleshootingOversightDutyType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The completion status once the duty has been complied with (note the need to fulfill a duty may recur frequently) ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Incident Troubleshooting Oversight Duty ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Schedule:
      type: object
      format: Schedule
      description: "The timing and key actions/milestones involved in fulfilling the duty ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The Incident Troubleshooting Oversight Duty specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Plan:
      type: object
      format: Plan
      description: "Reference to Incident Troubleshooting Oversight Duty ||\r\n|"
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    PlannedAction:
      type: object
      format: PlannedAction
      description: "Reference to Incident Troubleshooting Oversight Duty ||\r\n|"
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    RelationshipReciprocityAssessment:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        RelationshipReciprocityAssessmentDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        RelationshipReciprocityAssessmentDutyType:
          $ref: '#/components/schemas/Text'
    RelationshipDevelopment:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        RelationshipDevelopmentDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        RelationshipDevelopmentDutyType:
          $ref: '#/components/schemas/Text'
    CorrespondentBankRelationshipManagementOutcome:
      type: object
      description: ''
      properties:
        CorrespondentBankRelationshipManagementPerformanceAnalysis:
          $ref: '#/components/schemas/Analysis'
        CorrespondentBankRelationshipManagementActivityAnalysis:
          $ref: '#/components/schemas/Analysis'
        CorrespondentBankRelationshipManagementCharter:
          $ref: '#/components/schemas/Plan'
        CorrespondentBankRelationshipManagementTask:
          $ref: '#/components/schemas/Task'
        CorrespondentBankRelationshipManagementProject:
          $ref: '#/components/schemas/Project'
    Analysis:
      type: object
      format: Analysis
      description: " ||\r\n|"
      properties:
        Analysistypevalues:
          enum:
            - PerformanceAnalysis
            - ActivityAnalysis
            - RevenueAnalysis
            - CostAnalysis
            - PredictiveAnalysis
            - BehavioralAnalysis
            - ProfitabilityAnalysis
            - CompetitiveAnalysis
            - CohortAnalysis
            - SegmentAnalysis
            - SWOTAnalysis
            - Benchmarking
            - PositioningAnalysis
            - ScenarioAnalysis
            - IntelligenceGathering
            - Profiling
          format: Analysis
        AnalysisResult:
          $ref: '#/components/schemas/Text'
        AnalysisPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/Datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/Text'
        AnalysisSchedule:
          $ref: '#/components/schemas/Schedule'
    Task:
      type: object
      format: Task
      description: " ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Project:
      type: object
      format: Project
      description: " ||\r\n|"
      properties:
        ProjectName:
          $ref: '#/components/schemas/Name'
        ProjectType:
          type: string
          format: String
          description: 'A classification of the project '
        ProjectDescription:
          $ref: '#/components/schemas/Text'
        ProjectSchedule:
          $ref: '#/components/schemas/Schedule'
        ProjectDateTime:
          $ref: '#/components/schemas/Projectdatetime'
    Projectdatetime:
      type: object
      format: Projectdatetime
      description: ' '
      properties:
        ProjectDate:
          $ref: '#/components/schemas/Datetime'
        ProjectDateType:
          $ref: '#/components/schemas/Projectdatetime'
        Projectdatetime:
          type: string
          format: DataType
          description: ''
    CorrepondentBankRelationshipManagementPlan:
      type: object
      description: ''
      properties:
        CorrepondentBankRelationshipManagementPlanType:
          $ref: '#/components/schemas/Plantype'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        CorrepondentBankRelationshipManagementPlanBudgetType:
          $ref: '#/components/schemas/Budgettype'
        CorrepondentBankRelationshipManagementPlanBudget:
          $ref: '#/components/schemas/Amount'
        CorrepondentBankRelationshipManagementPlanAssignment:
          $ref: '#/components/schemas/Assignment'
        CorrepondentBankRelationshipManagementPlanDuty:
          $ref: '#/components/schemas/Arrangement'
        CorrepondentBankRelationshipManagementPlanDescription:
          $ref: '#/components/schemas/Text'
        CorrepondentBankRelationshipManagementPlanBudgetBalance:
          $ref: '#/components/schemas/Accountbalance'
        CorrepondentBankRelationshipManagementPlanAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        CorrepondentBankRelationshipManagementPlanSubjectMatter:
          type: string
          format: Object
          description: "The subject matter of Correpondent Bank Relationship Management Plan ||\r\n|"
    Plantype:
      type: object
      format: Plantype
      description: "The type of Correpondent Bank Relationship Management Plan ||\r\n|"
      properties:
        PlanTypeName:
          $ref: '#/components/schemas/Name'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plantype
    Assignment:
      type: object
      format: Assignment
      description: "The assignment of a required activity to a responsibe party in Correpondent Bank Relationship Management Plan ||\r\n|"
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        SubjectMatter:
          type: string
          format: Object
          description: ''
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        The set of management responsibilities defined in Correpondent Bank
        Relationship Management Plan Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    Accountbalance:
      type: object
      format: Accountbalance
      description: >-
        Balance of budget which is arranged whitin Correpondent Bank
        Relationship Management Plan Balance|Balance
        (https://www.iso20022.org/standardsrepository/type/Balance)|Standard|ISO20022
        BM ()
      properties:
        BalanceAmount:
          $ref: '#/components/schemas/Amount'
        Balancetypevalues:
          enum:
            - OpeningBalance
            - ClosingBalance
            - CurrentBalance
            - AvailableBalance
            - LedgerBalance
            - ReserveBalance
            - FreeBalance
            - PrincipalBalance
            - ClosingAvailable
            - ClosingBooked
            - ForwardAvailable
            - Information
            - InterimAvailable
            - InterimBooked
            - OpeningAvailable
            - OpeningBooked
            - PreviouslyClosedBooked
            - Expected
          format: Accountbalance
        BalanceValueDate:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: Accountbalance
        Balancecounterpartytypevalues:
          enum:
            - Bilateral
            - Multilateral
          format: Accountbalance
        BalanceCalculationDate:
          $ref: '#/components/schemas/Datetime'
        Balancesubtypevalues:
          enum:
            - Adjustment
            - Basecurrency
            - Blocked
            - Blockedfunds
            - Daylightoverdraft
            - Eligibleassets
            - Firmcollateralization
            - Amountsthathavebeenusedtoserveasfi
            - Securitiesforecast
            - Netfunding
            - Intermediate
            - Localcurrency
            - Limitrelated
            - Reservedliquidity
            - Securitiespending
            - Payinpayout
            - Progressiveaverage
            - Reserve
            - Selfcollateralization
            - Amountsthathavebeenusedtoserveasse
            - Threshold
          format: Accountbalance
    CorrepondentBankRelationshipManagementPlanNotify:
      type: object
      description: ''
      properties:
        CorrepondentBankRelationshipManagementPlanType:
          $ref: '#/components/schemas/Plantype'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        CorrepondentBankRelationshipManagementPlanBudgetType:
          $ref: '#/components/schemas/Budgettype'
        CorrepondentBankRelationshipManagementPlanBudget:
          $ref: '#/components/schemas/Amount'
        CorrepondentBankRelationshipManagementPlanAssignment:
          $ref: '#/components/schemas/Assignment'
        CorrepondentBankRelationshipManagementPlanDuty:
          $ref: '#/components/schemas/Arrangement'
        CorrepondentBankRelationshipManagementPlanDescription:
          $ref: '#/components/schemas/Text'
        CorrepondentBankRelationshipManagementPlanBudgetBalance:
          $ref: '#/components/schemas/Accountbalance'
        CorrepondentBankRelationshipManagementPlanAssociatedParty:
          $ref: '#/components/schemas/Involvedparty'
        CorrepondentBankRelationshipManagementPlanSubjectMatter:
          type: string
          format: Object
          description: "The subject matter of Correpondent Bank Relationship Management Plan ||\r\n|"
    IncidentTroubleshootingOversightNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        IncidentTroubleshootingOversightDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        IncidentTroubleshootingOversightDutyType:
          $ref: '#/components/schemas/Text'
    RelationshipDevelopmentNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        RelationshipDevelopmentDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        RelationshipDevelopmentDutyType:
          $ref: '#/components/schemas/Text'
    RelationshipReciprocityAssessmentNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        CorrepondentBankRelationshipManagementPlanReference:
          $ref: '#/components/schemas/Plan'
        RelationshipReciprocityAssessmentDutyReference:
          $ref: '#/components/schemas/PlannedAction'
        RelationshipReciprocityAssessmentDutyType:
          $ref: '#/components/schemas/Text'
