asyncapi: 3.0.0
info:
  title: Position Keeping
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    maintains a financial transaction log to support production. Reconciled
    financial transactions are subsequently posted to the accounting systems
channels:
  FinancialPositionLog/Created:
    address: FinancialPositionLog/Created
    messages:
      FinancialPositionLog-created.message:
        $ref: '#/components/messages/FinancialPositionLog'
    description: ''
  FinancialPositionLog/Updated:
    address: FinancialPositionLog/Updated
    messages:
      FinancialPositionLog-updated.message:
        $ref: '#/components/messages/FinancialPositionLog'
    description: ''
  FinancialTransactionCapture/Created:
    address: FinancialTransactionCapture/Created
    messages:
      publish.message:
        $ref: '#/components/messages/FinancialTransactionCapture'
    description: ''
  FinancialTransactionCapture/Updated:
    address: FinancialTransactionCapture/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/FinancialTransactionCapture'
    description: ''
operations:
  FinancialPositionLog-created:
    action: receive
    channel:
      $ref: '#/channels/FinancialPositionLog~1Created'
    summary: FinancialPositionLog
    messages:
      - $ref: >-
          #/channels/FinancialPositionLog~1Created/messages/FinancialPositionLog-created.message
  FinancialPositionLog-updated:
    action: receive
    channel:
      $ref: '#/channels/FinancialPositionLog~1Updated'
    summary: FinancialPositionLog
    messages:
      - $ref: >-
          #/channels/FinancialPositionLog~1Updated/messages/FinancialPositionLog-updated.message
  FinancialTransactionCapture/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/FinancialTransactionCapture~1Created'
    summary: FinancialTransactionCapture
    messages:
      - $ref: >-
          #/channels/FinancialTransactionCapture~1Created/messages/publish.message
  FinancialTransactionCapture/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/FinancialTransactionCapture~1Updated'
    summary: FinancialTransactionCapture
    messages:
      - $ref: >-
          #/channels/FinancialTransactionCapture~1Updated/messages/publish.message
components:
  messages:
    FinancialPositionLog:
      name: FinancialPositionLog
      description: >-
        Maintain a log of transactions or activity, typically a financial
        account/journal or a log of activity to support behavioral analysis
        within Position Keeping. 
      payload:
        $ref: '#/components/schemas/FinancialPositionLog'
    FinancialTransactionCapture:
      name: FinancialTransactionCapture
      description: |-
        A collection of the events/transactions recorded by the log
        Examples:- Customer life event, Servicing event
      payload:
        $ref: '#/components/schemas/FinancialTransactionCapture'
  schemas:
    FinancialTransactionCapture:
      type: object
      description: ''
      properties:
        PostingDescription:
          $ref: '#/components/schemas/Text'
        PostingTransaction:
          $ref: '#/components/schemas/Transaction'
        PostingValueDate:
          $ref: '#/components/schemas/Date'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Transaction:
      type: object
      format: Transaction
      description: >-
        The logged financial transaction. Note the log can be structured with
        double entry representations (i.e. capture credit/debit pair)
        ObligationFulfilment|ObligationFulfilment
        (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022
        BM ()
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        TransactionDate:
          $ref: '#/components/schemas/Transactiondatetime'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transaction
        TransactionDescription:
          $ref: '#/components/schemas/Text'
        TransactionStatus:
          $ref: '#/components/schemas/Transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/Name'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Party who plays a  specific role in the context of assigning a status. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: 'The name of transaction. '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the status was assigned. '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: 'Period of time during which the status is valid. '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Transactiondatetime:
      type: object
      format: Transactiondatetime
      description: >-
        The Date that the transaction has occurred or is planned to occur.

        A characteristic of transaction which refers to the LifecycleDate of
        transaction (e.g., initiated date, executed date, fulfillment date).  
      properties:
        TransactionDate:
          $ref: '#/components/schemas/Datetime'
        Transactiondatetimetypevalues:
          enum:
            - ExecutedDate
            - FulfillmentDate
            - InitiatedDate
            - CancelledDate
            - ApprovedDate
            - ValueDate
            - BookingDate
          format: Transactiondatetime
    Transactionstatus:
      type: object
      format: Transactionstatus
      description: >-
        A characteristic of transaction which refers to the LifecycleStatus of
        transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/Status'
        Transactionstatustypevalues:
          enum:
            - Initiated
            - Executed
            - Cancelled
            - Confirmed
            - Suspended
            - Pending
            - Completed
            - Notified
            - Booked
            - Rejected
          format: Transactionstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Date:
      type: object
      format: Date
      description: >-
        The date of the transaction ISODate|ISODate
        (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
        BM ()
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    FinancialPositionLog:
      type: object
      description: ''
      properties:
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CounterpartyReference:
          $ref: '#/components/schemas/Involvedparty'
        BaseCurrency:
          $ref: '#/components/schemas/Currencycode'
        InterestApplicationRecord:
          $ref: '#/components/schemas/InterestArrangement'
        InterestTransaction:
          $ref: '#/components/schemas/InterestTransaction'
        TransactionDescription:
          $ref: '#/components/schemas/Text'
        Ratetypevalues:
          enum:
            - Fixed
            - Forfeit
            - Variable
            - Open
            - Unknown
            - Nilpayment
            - Additionaltax
            - Charges
            - Cashinlieuofsecurities
            - Gross
            - Cashincentive
            - Net
            - Sollication
            - Stampduty
            - Stockexchangetax
            - Withholdingtax
            - Transfertax
            - Transactiontax
            - Taxdeferred
            - Taxfeeamount
            - Withholdingofforeigntax
            - Withholdingoflocaltax
            - Imputed
            - Precompte
            - Onetiertax
            - Localtax
            - Scheduled
            - Unscheduled
            - Anyandall
        TransactionInterestCharge:
          $ref: '#/components/schemas/Amount'
        ManagedPositionLimits:
          $ref: '#/components/schemas/LimitArrangement'
        Limittypevalues:
          enum:
            - Multilateral
            - Bilateral
            - Netbilateral
            - Indirectbilateral
            - Global
            - Mandatorybilateral
            - Discretionarybilateral
            - Directdebit
            - Singlecustomerdirectdebit
            - Singlefinancialinstitutiondirectde
            - Totaldailycustomerdirectdebit
            - Totaldailyfinancialinstitutiondire
            - Autocollateralisation
            - Unsecuredcredit
            - Externalguarantee
        PositionLimitSettings:
          $ref: '#/components/schemas/LimitArrangement'
        PositionLimitValue:
          $ref: '#/components/schemas/Value'
        AmountBlock:
          $ref: '#/components/schemas/Amount'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
        Priorityvaluetypes:
          enum:
            - Urgent
            - High
            - Normal
            - Low
        Amount:
          $ref: '#/components/schemas/Amount'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
        Date:
          $ref: '#/components/schemas/DateTime'
        InitiationDate:
          $ref: '#/components/schemas/Date'
        Status:
          $ref: '#/components/schemas/Status'
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "The product/service for which this is a financial transaction log ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    Currencycode:
      type: object
      format: Currencycode
      description: 'Currency unit used to specify the limit amount. (ISO20022) '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    InterestArrangement:
      type: object
      format: InterestArrangement
      description: >-
        The record of applied interest if interest calculations are supported
        Interest|Interest
        (https://www.iso20022.org/standardsrepository/type/Interest)|Standard|ISO20022
        BM ()
      properties:
        Interesttypevalues:
          enum:
            - Fixed
            - Floatingratenote
            - Dualbasis
            - Index
            - Discounted
            - Zerocoupon
            - Exinterest
            - Cuminterest
          format: InterestArrangement
        InterestRate:
          $ref: '#/components/schemas/Rate'
        InterestDefinition:
          $ref: '#/components/schemas/Text'
        Interestratetypevalues:
          enum:
            - Fixed
            - Forfeit
            - Variable
            - Scheduled
            - Unscheduled
            - Discount
            - Fixedrateunderlyingexposureforlife
            - Fixedrateunderlyingexposurewithcom
            - Fixedwithfutureperiodicresets
            - Floatinglinkedtoindex
            - Floatingrateunderlyingexposureforl
            - Floatingrateunderlyingexposurewith
            - Modular
            - Obligorswapped
            - Other
            - Swicthoptionality
          format: InterestArrangement
        InterestPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        InterestRatePlan:
          $ref: '#/components/schemas/Rateplan'
        InterestSchedule:
          $ref: '#/components/schemas/Schedule'
    Rate:
      type: object
      format: Rate
      description: >-
        Specifies that the limit is a percentage of a related amount.
        (ISO20022) 
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
        Rate:
          type: string
          format: DataType
          description: >-
            A price generally expressed as a percentage for the use of capital
            unit for a certain period. (BIAN)


            A rate is a quantity, amount, frequency, or dimensionless factor,
            measured against an independent base unit, expressed as a quotient.
            (UN/CEFACT)

             
    Rateplan:
      type: object
      format: Rateplan
      description: 'An arranged InterestRatePlan '
      properties:
        RatePlanName:
          type: string
          format: String
          description: ''
        Rateplantypevalues:
          enum:
            - StandardRatePlan
            - AdjustmentRatePlan
            - FinalRatePlan
          format: Rateplan
        RatePlan:
          type: string
          format: String
          description: ''
    Schedule:
      type: object
      format: Schedule
      description: >-
        An interest schedule is an arranged/planned set of dates at which
        interest will be claimed.


        The set can be represented on a calendar, a formula, a table, etc. 
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    InterestTransaction:
      type: object
      format: InterestTransaction
      description: >-
        A record of applied interest Interest|Interest
        (https://www.iso20022.org/standardsrepository/type/Interest)|Standard|ISO20022
        BM ()
      properties:
        InterestTransactionAmount:
          $ref: '#/components/schemas/Amount'
        InterestTransactionDescription:
          $ref: '#/components/schemas/Text'
        Interesttransactiontypevalues:
          enum:
            - InterestAllocationTransaction
            - InterestPaymentTransaction
            - InterestAdjustmentTransaction
          format: InterestTransaction
        AppliedInterestRate:
          $ref: '#/components/schemas/Rate'
        Interesttypevalues:
          enum:
            - Fixed
            - Floatingratenote
            - Dualbasis
            - Index
            - Discounted
            - Zerocoupon
            - Exinterest
            - Cuminterest
          format: InterestTransaction
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: InterestTransaction
    Amount:
      type: object
      format: Amount
      description: >-
        The amount of the block CurrencyAndAmount|CurrencyAndAmount
        (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022 
        ()
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
        Amount:
          type: string
          format: DataType
          description: >-
            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. (UN/CEFACT)


            The decimal seperator is a dot.



            Number of monetary units specified in a currency, where the unit of
            currency is explicit and compliant with ISO 4217. The decimal
            separator is a dot. (ISO20022)

            Note: A zero amount is considered a positive amount.

            total number of digits: 18

            number of digits in fractional part: 5

            minInclusive: 0 
    LimitArrangement:
      type: object
      format: LimitArrangement
      description: >-
        The position definition, associated limit settings and rules Limit|Limit
        (https://www.iso20022.org/standardsrepository/type/Limit)|Standard|ISO20022
        (https://www.iso20022.org/)
      properties:
        Limittypevalues:
          enum:
            - Multilateral
            - Bilateral
            - Netbilateral
            - Indirectbilateral
            - Global
            - Mandatorybilateral
            - Discretionarybilateral
            - Directdebit
            - Singlecustomerdirectdebit
            - Singlefinancialinstitutiondirectde
            - Totaldailycustomerdirectdebit
            - Totaldailyfinancialinstitutiondire
            - Autocollateralisation
            - Unsecuredcredit
            - Externalguarantee
          format: LimitArrangement
        LimitCurrency:
          $ref: '#/components/schemas/Currencycode'
        LimitValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LimitAmount:
          $ref: '#/components/schemas/Amount'
        LimitStatus:
          $ref: '#/components/schemas/Limitstatus'
        LimitRate:
          $ref: '#/components/schemas/Rate'
        LimitFrequency:
          $ref: '#/components/schemas/Frequency'
        LimitIdentification:
          $ref: '#/components/schemas/Identifier'
        LimitStartDatetime:
          $ref: '#/components/schemas/Datetime'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: LimitArrangement
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: LimitArrangement
        LimitArrangement:
          type: string
          format: Class
          description: >-
            An arrangement to limit something

            e.g., the number of transaction per week, the amount of money
            allowed to withdraw per week/day and etc.  
    Limitstatus:
      type: object
      format: Limitstatus
      description: 'Current status of the limit. '
      properties:
        LimitStatus:
          $ref: '#/components/schemas/Status'
        Limitstatustypevalues:
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Requested
          format: Limitstatus
    Frequency:
      type: object
      format: Frequency
      description: >-
        Specifies the periodicity linked to a limit for example the periodicity
        can indicate that the limit can be reached daily or monthly. (ISO20022) 
      properties:
        Frequencytypevalues:
          enum:
            - Annual
            - Monthly
            - Quarterly
            - Semiannual
            - Weekly
            - Daily
            - Adhoc
            - Intraday
            - Overnight
            - Tendays
            - Fortnightly
            - Triggeredbymovement
            - Never
            - Rate
            - Oncreditevent
            - Upfront
            - Onexpiry
            - Hourly
          format: Frequency
        FrequencyName:
          $ref: '#/components/schemas/Name'
        FrequencyDefinition:
          $ref: '#/components/schemas/Text'
    DateTime:
      type: object
      format: DateTime
      description: "Value of the specific date type ||\r\n|"
      properties:
        TimeIndication:
          type: string
          format: String
          description: >-
            Expression of the point in time

            is expressed according to "TimeIndicationType" e.g. period, day,
            more detailed indication
        TimeIndicationType:
          type: string
          format: String
          description: ''
