asyncapi: 3.0.0
info:
  title: Customer Campaign Execution
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Execute a customer
    campaign (version) and track and respond to impact
channels:
  CustomerCampaignProcedure/Created:
    address: CustomerCampaignProcedure/Created
    messages:
      CustomerCampaignProcedure-created.message:
        $ref: '#/components/messages/CustomerCampaignProcedure'
    description: ''
  CustomerCampaignProcedure/Updated:
    address: CustomerCampaignProcedure/Updated
    messages:
      CustomerCampaignProcedure-updated.message:
        $ref: '#/components/messages/CustomerCampaignProcedure'
    description: ''
  CandidateSelection/Created:
    address: CandidateSelection/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CandidateSelection'
    description: ''
  CandidateSelection/Updated:
    address: CandidateSelection/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CandidateSelection'
    description: ''
  Execution/Created:
    address: Execution/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Execution'
    description: ''
  Execution/Updated:
    address: Execution/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Execution'
    description: ''
  AnalysisFeedback/Created:
    address: AnalysisFeedback/Created
    messages:
      publish.message:
        $ref: '#/components/messages/AnalysisFeedback'
    description: ''
  AnalysisFeedback/Updated:
    address: AnalysisFeedback/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/AnalysisFeedback'
    description: ''
operations:
  CustomerCampaignProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerCampaignProcedure~1Created'
    summary: CustomerCampaignProcedure
    messages:
      - $ref: >-
          #/channels/CustomerCampaignProcedure~1Created/messages/CustomerCampaignProcedure-created.message
  CustomerCampaignProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerCampaignProcedure~1Updated'
    summary: CustomerCampaignProcedure
    messages:
      - $ref: >-
          #/channels/CustomerCampaignProcedure~1Updated/messages/CustomerCampaignProcedure-updated.message
  CandidateSelection/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CandidateSelection~1Created'
    summary: CandidateSelection
    messages:
      - $ref: '#/channels/CandidateSelection~1Created/messages/publish.message'
  CandidateSelection/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CandidateSelection~1Updated'
    summary: CandidateSelection
    messages:
      - $ref: '#/channels/CandidateSelection~1Updated/messages/publish.message'
  Execution/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Execution~1Created'
    summary: Execution
    messages:
      - $ref: '#/channels/Execution~1Created/messages/publish.message'
  Execution/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Execution~1Updated'
    summary: Execution
    messages:
      - $ref: '#/channels/Execution~1Updated/messages/publish.message'
  AnalysisFeedback/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/AnalysisFeedback~1Created'
    summary: AnalysisFeedback
    messages:
      - $ref: '#/channels/AnalysisFeedback~1Created/messages/publish.message'
  AnalysisFeedback/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/AnalysisFeedback~1Updated'
    summary: AnalysisFeedback
    messages:
      - $ref: '#/channels/AnalysisFeedback~1Updated/messages/publish.message'
components:
  messages:
    CustomerCampaignProcedure:
      name: CustomerCampaignProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Customer
        Campaign Execution. 
      payload:
        $ref: '#/components/schemas/CustomerCampaignProcedure'
    CandidateSelection:
      name: CandidateSelection
      description: >-
        The main workteps to be followed in th execution of the Customer
        Campaign Procedure, like: The initial selection and confirmation of
        active customers that are to be included in the campaign
      payload:
        $ref: '#/components/schemas/CandidateSelection'
    Execution:
      name: Execution
      description: >-
        The main workteps to be followed in th execution of the Customer
        Campaign Procedure, like: The initial selection and confirmation of
        active customers that are to be included in the campaign
      payload:
        $ref: '#/components/schemas/Execution'
    AnalysisFeedback:
      name: AnalysisFeedback
      description: >-
        The main workteps to be followed in th execution of the Customer
        Campaign Procedure, like: The initial selection and confirmation of
        active customers that are to be included in the campaign
      payload:
        $ref: '#/components/schemas/AnalysisFeedback'
  schemas:
    CandidateSelection:
      type: object
      description: ''
      properties:
        CustomerCampaignSelectionCriteria:
          $ref: '#/components/schemas/RuleSet'
        CustomerCampaignCandidateEmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerCampaignCandidateReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerProductandServiceDirectoryEntryReference:
          $ref: '#/components/schemas/CustomerProductAndServiceDirectoryEntry'
        CustomerProductandServiceEligibilityProfileReference:
          $ref: '#/components/schemas/CustomerProductAndServiceProfile'
        CustomerRelationshipLifecyclePhaseReference:
          $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        Details the selection criteria used to identify candidate customers
        GovernanceRules|GovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: RuleSet
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: >-
        The period of time during which the phase was the current phase of the
        party relationship. 
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    CustomerProductAndServiceDirectoryEntry:
      type: object
      format: CustomerProductAndServiceDirectoryEntry
      description: " Reference to a directory of all the products and services that a customer (in campaign) has acquired from the bank. ||\r\n|"
      properties:
        CustomerProductAndServiceDirectoryEntryIdentification:
          $ref: '#/components/schemas/Identifier'
    CustomerProductAndServiceProfile:
      type: object
      format: CustomerProductAndServiceProfile
      description: "Reference to a list of products and services for which a customer (in Campaign) is eligible. ||\r\n|"
      properties:
        Customerproductserviceprofiletypevalues:
          enum:
            - Customerproductserviceeligibilityp
            - Customerproductserviceusageprofile
            - Customerproductservicecoverageprof
            - Customerproductservicesaleprofile
            - Customerproductserviceconsentprofi
          format: CustomerProductAndServiceProfile
        CustomerReference:
          $ref: '#/components/schemas/Customerrelationship'
        ProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        ServiceReference:
          $ref: '#/components/schemas/Service'
    Customerrelationship:
      type: object
      format: Customerrelationship
      description: ' '
      properties:
        CustomerRelationship:
          type: string
          format: Class
          description: >-
            A specific relationship between a specific Bank ( -  party acting as
            a supplier of banking services) and one or more other involved
            parties acting as (potential) consumers of banking services as
            agreed in one or more banking product or service offerings and/or
            agreements.  
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: ' '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    Service:
      type: object
      format: Service
      description: ' '
      properties:
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Service
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      format: Feature
      description: >-
        A characteristic of service which refers 1) mainly to the function or
        condition of service. 2) to non-functional features like quality and
        security 
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    PartyRelationshipLifecyclePhase:
      type: object
      format: PartyRelationshipLifecyclePhase
      description: "Reference to the lifecycle status of customer relationship (in Campaign) ||\r\n|"
      properties:
        Description:
          $ref: '#/components/schemas/Text'
        IsCurrentPhase:
          $ref: '#/components/schemas/Text'
        PhaseName:
          $ref: '#/components/schemas/Name'
        PhaseStatus:
          $ref: '#/components/schemas/Status'
        PhasePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    Execution:
      type: object
      description: ''
      properties:
        CustomerCampaignProcedureWorkTaskType:
          $ref: '#/components/schemas/Text'
        CustomerCampaignProcedureWorkTaskDescription:
          $ref: '#/components/schemas/Text'
        CustomerCampaignProcedureWorkTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        CustomerCampaignProcedureWorkTaskResult:
          $ref: '#/components/schemas/Text'
        CustomerCampaignProcedureWorkTaskDateandTime:
          $ref: '#/components/schemas/Datetime'
    Workproduct:
      type: object
      format: Workproduct
      description: "File of consolidated notes, forms and documents for the work task ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "Reference to associated documents ||\r\n|"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    AnalysisFeedback:
      type: object
      description: ''
      properties:
        CustomerCampaignProcedureAnalysisResult:
          $ref: '#/components/schemas/Analysis'
        CustomerCampaignProcedureAnalysisFeedbackResult:
          $ref: '#/components/schemas/Text'
    Analysis:
      type: object
      format: Analysis
      description: "The result of the analysis of the performance of the campaign for the current cycle ||\r\n|"
      properties:
        Analysistypevalues:
          enum:
            - PerformanceAnalysis
            - ActivityAnalysis
            - RevenueAnalysis
            - CostAnalysis
            - PredictiveAnalysis
            - BehavioralAnalysis
            - ProfitabilityAnalysis
            - CompetitiveAnalysis
            - CohortAnalysis
            - SegmentAnalysis
            - SWOTAnalysis
            - Benchmarking
            - PositioningAnalysis
            - ScenarioAnalysis
            - IntelligenceGathering
            - Profiling
          format: Analysis
        AnalysisResult:
          $ref: '#/components/schemas/Text'
        AnalysisPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AnalysisDateTime:
          $ref: '#/components/schemas/Datetime'
        AnalysisSpecification:
          $ref: '#/components/schemas/Text'
        AnalysisSchedule:
          $ref: '#/components/schemas/Schedule'
    Schedule:
      type: object
      format: Schedule
      description: 'The schedule and timing of the analysis performed using the algorithm '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    CustomerCampaignProcedure:
      type: object
      description: ''
      properties:
        Customercampaigntypevalues:
          enum:
            - ProductLaunchCampaign
            - BrandAwarenessCampaign
            - CustomerRetentionCampaign
            - ReferralCampaign
            - ReactivationCampaign
            - Cross-SellingAndUpsellingCampaign
        CustomerCampaignDescription:
          $ref: '#/components/schemas/Text'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerCampaignProcedureSet-up:
          $ref: '#/components/schemas/Arrangement'
        CustomerCampaignProcedureVersionNumber:
          $ref: '#/components/schemas/Text'
        CustomerCampaignSchedule:
          $ref: '#/components/schemas/Schedule'
        CustomerCampaignConsumablesInventory:
          $ref: '#/components/schemas/ItemInventory'
        CustomerCampaignConsumableType:
          $ref: '#/components/schemas/Text'
        Iteminventorytypevalues:
          enum:
            - Non-CashInventory
            - CashInventory
        CustomerCampaignDate:
          $ref: '#/components/schemas/Datetime'
        CustomerCampaignProcedureResult:
          $ref: '#/components/schemas/Text'
        LeadandOpportunityDescription:
          $ref: '#/components/schemas/Text'
        LeadandOpportunityReference:
          $ref: '#/components/schemas/SalesLead'
        CustomerPortfolioReference:
          $ref: '#/components/schemas/CustomerPortfolio'
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Details of the deployment set-up/configuration of the campaign for
        reference Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    ItemInventory:
      type: object
      format: ItemInventory
      description: "Inventory record of any consumables that are to be used in the execution of the campaign (e.g. brochures) ||\r\n|"
      properties:
        ItemInventoryType:
          $ref: '#/components/schemas/Text'
    SalesLead:
      type: object
      format: SalesLead
      description: "Reference to the lead/opportunity as handled by the Lead/Opportunity Management Service Domain ||\r\n|"
      properties:
        LeadOrigin:
          $ref: '#/components/schemas/Text'
        LeadDescription:
          $ref: '#/components/schemas/Text'
    CustomerPortfolio:
      type: object
      format: CustomerPortfolio
      description: "Reference to the collection or set of customers in a Campaign ||\r\n|"
      properties:
        CustomerPortfolio:
          type: string
          format: Class
          description: >-
            A customer portfolio refers to the collection or set of customers
            that a business serves or interacts with.


            A customer portfolio is the collection of customers that a business
            manages.


            A customer portfolio is a segmented list of the various groups of
            customer.  
