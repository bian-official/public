asyncapi: 3.0.0
info:
  title: Customer Event History
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    captures, classifies and stores relationship, servicing and product
    fulfillment related customer events. In addition to servicing and product
    transaction details, the log can capture life/relationship events that are
    revealed during customer exchanges
channels:
  CustomerEventLog/Created:
    address: CustomerEventLog/Created
    messages:
      CustomerEventLog-created.message:
        $ref: '#/components/messages/CustomerEventLog'
    description: ''
  CustomerEventLog/Updated:
    address: CustomerEventLog/Updated
    messages:
      CustomerEventLog-updated.message:
        $ref: '#/components/messages/CustomerEventLog'
    description: ''
  Life/Created:
    address: Life/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Life'
    description: ''
  Life/Updated:
    address: Life/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Life'
    description: ''
  Servicing/Created:
    address: Servicing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Servicing/Updated:
    address: Servicing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Relationship/Created:
    address: Relationship/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Relationship'
    description: ''
  Relationship/Updated:
    address: Relationship/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Relationship'
    description: ''
  ProductProcessing/Created:
    address: ProductProcessing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductProcessing'
    description: ''
  ProductProcessing/Updated:
    address: ProductProcessing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductProcessing'
    description: ''
  Sales/Created:
    address: Sales/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Sales'
    description: ''
  Sales/Updated:
    address: Sales/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Sales'
    description: ''
  Fraud/Created:
    address: Fraud/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Fraud'
    description: ''
  Fraud/Updated:
    address: Fraud/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Fraud'
    description: ''
operations:
  CustomerEventLog-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerEventLog~1Created'
    summary: CustomerEventLog
    messages:
      - $ref: >-
          #/channels/CustomerEventLog~1Created/messages/CustomerEventLog-created.message
  CustomerEventLog-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerEventLog~1Updated'
    summary: CustomerEventLog
    messages:
      - $ref: >-
          #/channels/CustomerEventLog~1Updated/messages/CustomerEventLog-updated.message
  Life/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Life~1Created'
    summary: Life
    messages:
      - $ref: '#/channels/Life~1Created/messages/publish.message'
  Life/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Life~1Updated'
    summary: Life
    messages:
      - $ref: '#/channels/Life~1Updated/messages/publish.message'
  Servicing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Created'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Created/messages/publish.message'
  Servicing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Updated'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Updated/messages/publish.message'
  Relationship/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Relationship~1Created'
    summary: Relationship
    messages:
      - $ref: '#/channels/Relationship~1Created/messages/publish.message'
  Relationship/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Relationship~1Updated'
    summary: Relationship
    messages:
      - $ref: '#/channels/Relationship~1Updated/messages/publish.message'
  ProductProcessing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductProcessing~1Created'
    summary: ProductProcessing
    messages:
      - $ref: '#/channels/ProductProcessing~1Created/messages/publish.message'
  ProductProcessing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductProcessing~1Updated'
    summary: ProductProcessing
    messages:
      - $ref: '#/channels/ProductProcessing~1Updated/messages/publish.message'
  Sales/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Sales~1Created'
    summary: Sales
    messages:
      - $ref: '#/channels/Sales~1Created/messages/publish.message'
  Sales/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Sales~1Updated'
    summary: Sales
    messages:
      - $ref: '#/channels/Sales~1Updated/messages/publish.message'
  Fraud/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Fraud~1Created'
    summary: Fraud
    messages:
      - $ref: '#/channels/Fraud~1Created/messages/publish.message'
  Fraud/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Fraud~1Updated'
    summary: Fraud
    messages:
      - $ref: '#/channels/Fraud~1Updated/messages/publish.message'
components:
  messages:
    CustomerEventLog:
      name: CustomerEventLog
      description: >-
        Maintain a log of transactions or activity, typically a financial
        account/journal or a log of activity to support behavioral analysis
        within Customer Event History. 
      payload:
        $ref: '#/components/schemas/CustomerEventLog'
    Life:
      name: Life
      description: >
        A collection of the events/transactions recorded by the log.


        The Life is one of the specific types of events that is recorded in the
        Service Domain
      payload:
        $ref: '#/components/schemas/Life'
    Servicing:
      name: Servicing
      description: >
        A collection of the events/transactions recorded by the log.


        The Life is one of the specific types of events that is recorded in the
        Service Domain
      payload:
        $ref: '#/components/schemas/Servicing'
    Relationship:
      name: Relationship
      description: >
        A collection of the events/transactions recorded by the log.


        The Life is one of the specific types of events that is recorded in the
        Service Domain
      payload:
        $ref: '#/components/schemas/Relationship'
    ProductProcessing:
      name: ProductProcessing
      description: >
        A collection of the events/transactions recorded by the log.


        The Life is one of the specific types of events that is recorded in the
        Service Domain
      payload:
        $ref: '#/components/schemas/ProductProcessing'
    Sales:
      name: Sales
      description: >
        A collection of the events/transactions recorded by the log.


        The Life is one of the specific types of events that is recorded in the
        Service Domain
      payload:
        $ref: '#/components/schemas/Sales'
    Fraud:
      name: Fraud
      description: >
        A collection of the events/transactions recorded by the log.


        The Life is one of the specific types of events that is recorded in the
        Service Domain
      payload:
        $ref: '#/components/schemas/Fraud'
  schemas:
    Life:
      type: object
      description: ''
      properties:
        CustomerLifeEventType:
          $ref: '#/components/schemas/Text'
        CustomerContactRecordReference:
          $ref: '#/components/schemas/CustomerContact'
        EmployeeUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerLifeEventRecord:
          $ref: '#/components/schemas/Event'
        DateandTime:
          $ref: '#/components/schemas/Datetime'
        LocationReference:
          $ref: '#/components/schemas/Location'
    Text:
      type: object
      format: Text
      description: 'Local time zone. '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    CustomerContact:
      type: object
      format: CustomerContact
      description: "Reference to a contact event log ||\r\n|"
      properties:
        ContactType:
          $ref: '#/components/schemas/Text'
        ContactDateTime:
          $ref: '#/components/schemas/Datetime'
        ContactLocation:
          $ref: '#/components/schemas/Location'
        ContactSchedule:
          $ref: '#/components/schemas/Schedule'
        ContactResult:
          $ref: '#/components/schemas/Text'
        ContactPurpose:
          $ref: '#/components/schemas/Text'
        ContactDevice:
          $ref: '#/components/schemas/Device'
        ContactIndicator:
          $ref: '#/components/schemas/Text'
        ContactContent:
          $ref: '#/components/schemas/Text'
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Status:
      type: object
      format: Status
      description: >-
        The tracked status (e.g. under construction or repair, inhabited,
        vacant). 
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: 'Name (label) of the location. (ISO20022) '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: >-
        The estimated (book) value of the property at the location rental and
        purchase as appropriate. 
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Schedule:
      type: object
      format: Schedule
      description: 'The schedule of past and planned customer contacts '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    Device:
      type: object
      format: Device
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Deviceidentification'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
          format: Device
        DeviceProperty:
          $ref: '#/components/schemas/Text'
        DeviceElement:
          $ref: '#/components/schemas/Text'
        DeviceStatus:
          $ref: '#/components/schemas/Status'
        DeviceVersion:
          type: string
          format: Number
          description: ''
        DeviceDateTime:
          $ref: '#/components/schemas/Datetime'
        DeviceDescription:
          $ref: '#/components/schemas/Text'
        DeviceName:
          $ref: '#/components/schemas/Name'
        DeviceLanguage:
          $ref: '#/components/schemas/Text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/Text'
        DeviceLocation:
          $ref: '#/components/schemas/Location'
        DeviceManufacturer:
          $ref: '#/components/schemas/Text'
        DeviceCountry:
          $ref: '#/components/schemas/Country'
        DeviceAddress:
          $ref: '#/components/schemas/Address'
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Device
        Deviceoperatingsystemtypevalues:
          enum:
            - Android
            - Ios
            - Windows
            - Blackberry
            - Tizen
            - Othernational
            - Otherprivate
          format: Device
    Deviceidentification:
      type: object
      format: Deviceidentification
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Identifier'
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
          format: Deviceidentification
    Country:
      type: object
      format: Country
      description: 'Country of the location. '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    Event:
      type: object
      format: Event
      description: "The details of the event (in a suitable format) ||\r\n|"
      properties:
        EventType:
          $ref: '#/components/schemas/Text'
        EventDateTime:
          $ref: '#/components/schemas/Datetime'
        EventDescription:
          $ref: '#/components/schemas/Text'
        EventSource:
          type: string
          format: Object
          description: ''
        EventLocation:
          $ref: '#/components/schemas/Location'
        EventAction:
          $ref: '#/components/schemas/Action'
        EventStatus:
          $ref: '#/components/schemas/Status'
        EventValue:
          $ref: '#/components/schemas/Value'
        EventValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        EventIdentification:
          $ref: '#/components/schemas/Identifier'
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Servicing:
      type: object
      description: ''
      properties:
        CustomerServicingEventType:
          $ref: '#/components/schemas/Text'
        CustomerContactRecordReference:
          $ref: '#/components/schemas/CustomerContact'
        AccessedProductandService:
          $ref: '#/components/schemas/BankingProduct'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
        ContactPurpose:
          $ref: '#/components/schemas/Text'
        ContactResult:
          $ref: '#/components/schemas/Text'
        EmployeeUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerServicingEventRecord:
          $ref: '#/components/schemas/Event'
        DateandTime:
          $ref: '#/components/schemas/Datetime'
        LocationReference:
          $ref: '#/components/schemas/Location'
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Reference to the types or instances of products/services being serviced
        if provided Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    Relationship:
      type: object
      description: ''
      properties:
        CustomerRelationshipEventType:
          $ref: '#/components/schemas/Text'
        EmployeeUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerRelationshipEventRecord:
          $ref: '#/components/schemas/Event'
        CustomerRelationshipEventAction:
          $ref: '#/components/schemas/Action'
        DateandTime:
          $ref: '#/components/schemas/Datetime'
        LocationReference:
          $ref: '#/components/schemas/Location'
    ProductProcessing:
      type: object
      description: ''
      properties:
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        ProductEventType:
          $ref: '#/components/schemas/Text'
        ProductEventDescription:
          $ref: '#/components/schemas/Text'
        ProductEventResult:
          $ref: '#/components/schemas/Text'
        EmployeeUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerProductandServiceEventRecord:
          $ref: '#/components/schemas/Event'
        DateandTime:
          $ref: '#/components/schemas/Datetime'
        LocationReference:
          $ref: '#/components/schemas/Location'
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Reference to the specific product instance being processed ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
    Sales:
      type: object
      description: ''
      properties:
        CustomerSalesEventType:
          $ref: '#/components/schemas/Text'
        EmployeeUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
        LeadandOpportunityReference:
          $ref: '#/components/schemas/SalesLead'
        CustomerSalesEventRecord:
          $ref: '#/components/schemas/Event'
        CommissionAgreementReference:
          $ref: '#/components/schemas/Agreement'
        DateandTime:
          $ref: '#/components/schemas/Datetime'
        LocationReference:
          $ref: '#/components/schemas/Location'
    SalesLead:
      type: object
      format: SalesLead
      description: "Reference to the recorded lead/opportunity if sale progresses ||\r\n|"
      properties:
        LeadOrigin:
          $ref: '#/components/schemas/Text'
        LeadDescription:
          $ref: '#/components/schemas/Text'
    Agreement:
      type: object
      format: Agreement
      description: >-
        Reference to any commission agreement if appropriate Agreement_x000D_

        |Agreement
        (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
        BM ()
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Date:
      type: object
      format: Date
      description: 'Date on which the agreement was signed by all parties. (ISO20022) '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Agreementstatus:
      type: object
      format: Agreementstatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/Status'
        Agreementstatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementstatus
    Fraud:
      type: object
      description: ''
      properties:
        CustomerFraudCaseEventType:
          $ref: '#/components/schemas/Text'
        CustomerContactRecordReference:
          $ref: '#/components/schemas/CustomerContact'
        AccessedProductandService:
          $ref: '#/components/schemas/BankingProduct'
        EmployeeUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        FraudCaseReference:
          $ref: '#/components/schemas/Case'
        DateandTime:
          $ref: '#/components/schemas/Datetime'
        LocationReference:
          $ref: '#/components/schemas/Location'
    Case:
      type: object
      format: Case
      description: >-
        Reference to the fraud case processing the analysis and response
        InvestigationCase |InvestigationCase 
        (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
        BM ()
      properties:
        CaseCreationDateTime:
          $ref: '#/components/schemas/Datetime'
        Casetypevalues:
          enum:
            - Card
            - Loan
            - Fraud
            - Payment
            - Market
            - Security
            - Other
          format: Case
        CaseLocation:
          $ref: '#/components/schemas/Location'
        Casestatustypevalues:
          enum:
            - Closed
            - Assigned
            - UnderInvestigation
            - Unknown
            - Overdue
          format: Case
        CaseDocument:
          $ref: '#/components/schemas/Document'
        CaseDateTime:
          $ref: '#/components/schemas/Datetime'
    Document:
      type: object
      format: Document
      description: ' '
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Creditnoterelatedtofinancialadjust
            - Debitnoterelatedtofinancialadjustm
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Structuredcommunicationreference
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Tradeservicesutilitytransaction
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    CustomerEventLog:
      type: object
      description: ''
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerEventReference:
          $ref: '#/components/schemas/Event'
        CustomerEventLogReference:
          $ref: '#/components/schemas/Log'
        Customereventtypevalues:
          enum:
            - CustomerRelationshipEvent
            - CustomerSaleEvent
            - CustomerProductEvent
            - CustomerFraudEvent
            - CustomerLifeEvent
    Log:
      type: object
      format: Log
      description: " ||\r\n|"
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
