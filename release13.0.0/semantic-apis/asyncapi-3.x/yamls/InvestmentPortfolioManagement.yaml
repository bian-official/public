asyncapi: 3.0.0
info:
  title: Investment Portfolio Management
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Manage an investment
    portfolio, initiating trading to leverage market opportunities, remaining
    within portfolio trading policies
channels:
  ManagedInvestmentPortfolioFacility/Created:
    address: ManagedInvestmentPortfolioFacility/Created
    messages:
      ManagedInvestmentPortfolioFacility-created.message:
        $ref: '#/components/messages/ManagedInvestmentPortfolioFacility'
    description: ''
  ManagedInvestmentPortfolioFacility/Updated:
    address: ManagedInvestmentPortfolioFacility/Updated
    messages:
      ManagedInvestmentPortfolioFacility-updated.message:
        $ref: '#/components/messages/ManagedInvestmentPortfolioFacility'
    description: ''
  MarketOpportunities/Created:
    address: MarketOpportunities/Created
    messages:
      publish.message:
        $ref: '#/components/messages/MarketOpportunities'
    description: ''
  MarketOpportunities/Updated:
    address: MarketOpportunities/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/MarketOpportunities'
    description: ''
  TradeInitiation/Created:
    address: TradeInitiation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TradeInitiation'
    description: ''
  TradeInitiation/Updated:
    address: TradeInitiation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TradeInitiation'
    description: ''
  Track/Created:
    address: Track/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Track'
    description: ''
  Track/Updated:
    address: Track/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Track'
    description: ''
operations:
  ManagedInvestmentPortfolioFacility-created:
    action: receive
    channel:
      $ref: '#/channels/ManagedInvestmentPortfolioFacility~1Created'
    summary: ManagedInvestmentPortfolioFacility
    messages:
      - $ref: >-
          #/channels/ManagedInvestmentPortfolioFacility~1Created/messages/ManagedInvestmentPortfolioFacility-created.message
  ManagedInvestmentPortfolioFacility-updated:
    action: receive
    channel:
      $ref: '#/channels/ManagedInvestmentPortfolioFacility~1Updated'
    summary: ManagedInvestmentPortfolioFacility
    messages:
      - $ref: >-
          #/channels/ManagedInvestmentPortfolioFacility~1Updated/messages/ManagedInvestmentPortfolioFacility-updated.message
  MarketOpportunities/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/MarketOpportunities~1Created'
    summary: MarketOpportunities
    messages:
      - $ref: '#/channels/MarketOpportunities~1Created/messages/publish.message'
  MarketOpportunities/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/MarketOpportunities~1Updated'
    summary: MarketOpportunities
    messages:
      - $ref: '#/channels/MarketOpportunities~1Updated/messages/publish.message'
  TradeInitiation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TradeInitiation~1Created'
    summary: TradeInitiation
    messages:
      - $ref: '#/channels/TradeInitiation~1Created/messages/publish.message'
  TradeInitiation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TradeInitiation~1Updated'
    summary: TradeInitiation
    messages:
      - $ref: '#/channels/TradeInitiation~1Updated/messages/publish.message'
  Track/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Track~1Created'
    summary: Track
    messages:
      - $ref: '#/channels/Track~1Created/messages/publish.message'
  Track/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Track~1Updated'
    summary: Track
    messages:
      - $ref: '#/channels/Track~1Updated/messages/publish.message'
components:
  messages:
    ManagedInvestmentPortfolioFacility:
      name: ManagedInvestmentPortfolioFacility
      description: >-
        Fulfill any scheduled and ad-hoc obligations under a service
        arrangement, most typically for a financial product or facility within
        Investment Portfolio Management. 
      payload:
        $ref: '#/components/schemas/ManagedInvestmentPortfolioFacility'
    MarketOpportunities:
      name: MarketOpportunities
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/MarketOpportunities'
    TradeInitiation:
      name: TradeInitiation
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/TradeInitiation'
    Track:
      name: Track
      description: The product features/services available with a financical facility
      payload:
        $ref: '#/components/schemas/Track'
  schemas:
    MarketOpportunities:
      type: object
      description: ''
      properties:
        MarketOpportunityDescription:
          $ref: '#/components/schemas/Text'
        SecuritiesComparison:
          type: string
          format: Object
          description: "Evaluation of the comparative performance of identified security and that in the investment portfolio that would be replaced/adjusted ||\r\n|"
    Text:
      type: object
      format: Text
      description: "Description of the detected market opportunity (e.g. projected movement of an eligible security that is not currently held) ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    TradeInitiation:
      type: object
      description: ''
      properties:
        InvestmentPortfolioTradeRequest:
          $ref: '#/components/schemas/Instruction'
        Securitytypevalues:
          enum:
            - Equity
            - Warrant
            - Entitlement
        InvestmentPortfolioTradeSecurityTradeDescription:
          $ref: '#/components/schemas/Text'
    Instruction:
      type: object
      format: Instruction
      description: "The trading request record used to initiate and track the trade ||\r\n|"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondatetime:
      type: object
      format: Instructiondatetime
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Datetime'
        Instructiondatetimetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondatetime
    Datetime:
      type: object
      format: Datetime
      description: 'Key dates associated with the log (e.g. start time). '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Instructionstatus:
      type: object
      format: Instructionstatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionstatustypevalues:
          enum:
            - Pendingprocessing
            - Acknowledgedaccepted
            - Rejected
            - Accepted
            - Completed
            - Notreceived
            - Cancelled
            - Beingcancelled
            - Receivedbyissuerorregistrar
            - Pending
            - Standinginstruction
            - Queued
            - Cancelledbysubcustodian
            - Forwarded
          format: Instructionstatus
        InstructionStatus:
          $ref: '#/components/schemas/Status'
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    Track:
      type: object
      description: ''
      properties:
        InvestmentPortfolioSecuritySensitivity:
          type: string
          format: Object
          description: "The sensitivity viewpoint for a held security position ||\r\n|"
        ProjectedValuation:
          type: string
          format: Object
          description: "The expected value movement ||\r\n|"
        ProjectedPortfolioImpact:
          type: string
          format: Object
          description: "An impact assessment of the projected movement on the investment portfolio includes possible policy limit breaches ||\r\n|"
    ManagedInvestmentPortfolioFacility:
      type: object
      description: ''
      properties:
        InvestmentPortfolioTradingPolicies:
          $ref: '#/components/schemas/RuleSet'
        Policytypevalues:
          enum:
            - SecurityPolicy
            - AdministrativePolicy
            - SocialPolicy
            - RegulatoryPolicy
        InvestmentPortfolioPolicyDescription:
          $ref: '#/components/schemas/Text'
        InvestmentPortfolioPolicyLimitsandConstraints:
          type: string
          format: Object
          description: "Specific trading constraints (e.g. stocks or sectors that are out of bounds and acceptable risk levels) ||\r\n|"
        InvestmentPortfolioInstanceReference:
          $ref: '#/components/schemas/Identifier'
        InvestmentPortfolioHoldings:
          $ref: '#/components/schemas/AssetHolding'
        Securitytypevalues:
          enum:
            - Equity
            - Warrant
            - Entitlement
        InvestmentPortfolioSecurityHolding:
          $ref: '#/components/schemas/AssetHolding'
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        Interpretation of the investment portfolio policies as they impact
        securities selection and investment decisioning
        GovernanceRules|GovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: RuleSet
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    AssetHolding:
      type: object
      format: AssetHolding
      description: "Record of past and projected and current holding for the security ||\r\n|"
      properties:
        AssetHolding:
          type: string
          format: Class
          description: 'Specifies in terms of value and quantity the assets. (ISO20022) '
