asyncapi: 3.0.0
info:
  title: Correspondence
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    orchestrates the production of pre-formatted correspondence and batches of
    correspondence (e.g. mail shots).
channels:
  CorrespondenceOperatingSession/Created:
    address: CorrespondenceOperatingSession/Created
    messages:
      CorrespondenceOperatingSession-created.message:
        $ref: '#/components/messages/CorrespondenceOperatingSession'
    description: ''
  CorrespondenceOperatingSession/Updated:
    address: CorrespondenceOperatingSession/Updated
    messages:
      CorrespondenceOperatingSession-updated.message:
        $ref: '#/components/messages/CorrespondenceOperatingSession'
    description: ''
  Inbound/Created:
    address: Inbound/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Inbound'
    description: ''
  Inbound/Updated:
    address: Inbound/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Inbound'
    description: ''
  Outbound/Created:
    address: Outbound/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Outbound'
    description: ''
  Outbound/Updated:
    address: Outbound/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Outbound'
    description: ''
  OutboundWithResponse/Created:
    address: OutboundWithResponse/Created
    messages:
      publish.message:
        $ref: '#/components/messages/OutboundWithResponse'
    description: ''
  OutboundWithResponse/Updated:
    address: OutboundWithResponse/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/OutboundWithResponse'
    description: ''
  BlockMailing/Created:
    address: BlockMailing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/BlockMailing'
    description: ''
  BlockMailing/Updated:
    address: BlockMailing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/BlockMailing'
    description: ''
operations:
  CorrespondenceOperatingSession-created:
    action: receive
    channel:
      $ref: '#/channels/CorrespondenceOperatingSession~1Created'
    summary: CorrespondenceOperatingSession
    messages:
      - $ref: >-
          #/channels/CorrespondenceOperatingSession~1Created/messages/CorrespondenceOperatingSession-created.message
  CorrespondenceOperatingSession-updated:
    action: receive
    channel:
      $ref: '#/channels/CorrespondenceOperatingSession~1Updated'
    summary: CorrespondenceOperatingSession
    messages:
      - $ref: >-
          #/channels/CorrespondenceOperatingSession~1Updated/messages/CorrespondenceOperatingSession-updated.message
  Inbound/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Inbound~1Created'
    summary: Inbound
    messages:
      - $ref: '#/channels/Inbound~1Created/messages/publish.message'
  Inbound/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Inbound~1Updated'
    summary: Inbound
    messages:
      - $ref: '#/channels/Inbound~1Updated/messages/publish.message'
  Outbound/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Outbound~1Created'
    summary: Outbound
    messages:
      - $ref: '#/channels/Outbound~1Created/messages/publish.message'
  Outbound/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Outbound~1Updated'
    summary: Outbound
    messages:
      - $ref: '#/channels/Outbound~1Updated/messages/publish.message'
  OutboundWithResponse/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/OutboundWithResponse~1Created'
    summary: OutboundWithResponse
    messages:
      - $ref: '#/channels/OutboundWithResponse~1Created/messages/publish.message'
  OutboundWithResponse/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/OutboundWithResponse~1Updated'
    summary: OutboundWithResponse
    messages:
      - $ref: '#/channels/OutboundWithResponse~1Updated/messages/publish.message'
  BlockMailing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/BlockMailing~1Created'
    summary: BlockMailing
    messages:
      - $ref: '#/channels/BlockMailing~1Created/messages/publish.message'
  BlockMailing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/BlockMailing~1Updated'
    summary: BlockMailing
    messages:
      - $ref: '#/channels/BlockMailing~1Updated/messages/publish.message'
components:
  messages:
    CorrespondenceOperatingSession:
      name: CorrespondenceOperatingSession
      description: >-
        Operate equipment and/or a largely automated facility within
        Correspondence. 
      payload:
        $ref: '#/components/schemas/CorrespondenceOperatingSession'
    Inbound:
      name: Inbound
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/Inbound'
    Outbound:
      name: Outbound
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/Outbound'
    OutboundWithResponse:
      name: OutboundWithResponse
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/OutboundWithResponse'
    BlockMailing:
      name: BlockMailing
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/BlockMailing'
  schemas:
    Inbound:
      type: object
      description: ''
      properties:
        InboundCorrespondenceInstanceReference:
          $ref: '#/components/schemas/Identifier'
        InboundCorrespondenceRecord:
          $ref: '#/components/schemas/Correspondence'
        Correspondencetypevalues:
          enum:
            - UnsolicitedMessage
            - Complaint
        InboundCorrespondenceContent:
          $ref: '#/components/schemas/Text'
        InboundCorrespondenceAddressee:
          type: string
          format: Object
          description: "The identified source of inbound message (extracted from the content) ||\r\n|"
        InboundCorrespondenceCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        InboundCorrespondenceEmployeeReference:
          $ref: '#/components/schemas/Employee'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
        Date:
          $ref: '#/components/schemas/Datetime'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: >-
        The value of the date and time ISODateTime|ISODateTime
        (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
        BM ()
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Correspondence:
      type: object
      format: Correspondence
      description: >-
        The inbound correspondence message Presentation|Presentation
        (https://www.iso20022.org/standardsrepository/type/Presentation)|Standard|ISO20022
        BM ()
      properties:
        Correspondencetypevalues:
          enum:
            - UnsolicitedMessage
            - Complaint
          format: Correspondence
        CorrespondenceAddress:
          $ref: '#/components/schemas/Address'
        CorrespondenceDateTime:
          $ref: '#/components/schemas/Datetime'
        CorrespondenceContent:
          $ref: '#/components/schemas/Text'
        CorrespondenceTemplate:
          $ref: '#/components/schemas/Text'
        Correspondencecommunicationmethodtypevalues:
          enum:
            - Fax
            - Email
            - Proprietary
            - Online
            - Phone
            - Postalservice
            - File
          format: Correspondence
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Correspondence
        Correspondencemediumtypevalues:
          enum:
            - Paper
            - Electronic
            - Paperelectronic
            - Biometric
          format: Correspondence
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
        Address:
          type: string
          format: Class
          description: >-
            A specific designation or description of a location, typically used
            for specifying the location or destination of something or someone 
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Status:
      type: object
      format: Status
      description: >-
        The tracked status (e.g. under construction or repair, inhabited,
        vacant). 
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Employee:
      type: object
      format: Employee
      description: "Identified internal addressee (from reference details extracted from the content where possible) ||\r\n|"
      properties:
        Employee:
          type: string
          format: Class
          description: 'Party who is employed by an employer.  '
    Outbound:
      type: object
      description: ''
      properties:
        CorrespondenceSourceReference:
          type: string
          format: Object
          description: "Internal source reference to the correspondence item passed for delivery (can be used to match responses) ||\r\n|"
        CorrespondenceRecord:
          $ref: '#/components/schemas/Correspondence'
        Correspondencetypevalues:
          enum:
            - UnsolicitedMessage
            - Complaint
        CorrespondenceTemplateReference:
          type: string
          format: Object
          description: "Reference to a template used to assemble standard format correspondence (can be supplied with the correspondence or maintained within the Correspondence service domain as appropriate) ||\r\n|"
        CorrespondenceTemplateRecord:
          type: string
          format: Object
          description: "The template definition used in correspondence assembly ||\r\n|"
        CorrespondenceContent:
          $ref: '#/components/schemas/Text'
        CorrespondenceMediaorChannel:
          $ref: '#/components/schemas/Channel'
        CorrespondenceAddressee:
          $ref: '#/components/schemas/Address'
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        ChannelAccessPreferenceReference:
          $ref: '#/components/schemas/CommunicationChannel'
        ChannelAccessPreferenceProfile:
          $ref: '#/components/schemas/Text'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
        ChannelAccessChannelorDeviceTypePreference:
          $ref: '#/components/schemas/Text'
        ProductandServiceType:
          $ref: '#/components/schemas/Text'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/BusinessUnit'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
        Date:
          $ref: '#/components/schemas/Datetime'
    Channel:
      type: object
      format: Channel
      description: "Identifies the preferred media and channel for delivery of the message ||\r\n|"
      properties:
        Channeltypevalues:
          enum:
            - CommunicationChannel
            - AuthenticationChannel
          format: Channel
    CommunicationChannel:
      type: object
      format: CommunicationChannel
      description: "??? ||\r\n|"
      properties:
        CommunicationChannel:
          type: string
          format: Class
          description: >-
            A pathway established via a communication medium. A contact point by
            which the bank interacts with parties.
    BusinessUnit:
      type: object
      format: BusinessUnit
      description: "The sending entity within the bank (can be used for responses) ||\r\n|"
      properties:
        BusinessFunction:
          type: string
          format: String
          description: ''
        Goal:
          type: string
          format: String
          description: ''
    OutboundWithResponse:
      type: object
      description: ''
      properties:
        ResponseDueDate:
          $ref: '#/components/schemas/Datetime'
        ResponseCorrespondenceReference:
          $ref: '#/components/schemas/Correspondence'
        ResponseCorrespondenceRecord:
          $ref: '#/components/schemas/Correspondence'
    BlockMailing:
      type: object
      description: ''
      properties:
        BlockmailingRecord:
          type: string
          format: Object
          description: "Used to track receipt and return of the individual messages making up the block mail ||\r\n|"
    CorrespondenceOperatingSession:
      type: object
      description: ''
      properties:
        CorrespondenceServiceSessionStatistics:
          type: string
          format: Object
          description: "Service activity statistics that are maintained during the session ||\r\n|"
        Reporttypevalues:
          enum:
            - FinancialReport
            - BusinessReport
            - ManagementReport
            - Statement
            - MaintenanceReport
            - RegulatoryReport
            - TaxReport
            - AnalysisReport
        CorrespondenceServiceSessionReport:
          $ref: '#/components/schemas/Report'
        CorrespondenceServiceSessionDate:
          $ref: '#/components/schemas/Datetime'
    Report:
      type: object
      format: Report
      description: "The session activity report ||\r\n|"
      properties:
        Reporttypevalues:
          enum:
            - FinancialReport
            - BusinessReport
            - ManagementReport
            - Statement
            - MaintenanceReport
            - RegulatoryReport
            - TaxReport
            - AnalysisReport
          format: Report
        ReportValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ReportVersion:
          type: string
          format: Number
          description: ''
        ReportDateTime:
          $ref: '#/components/schemas/Datetime'
        ReportFormat:
          $ref: '#/components/schemas/Text'
