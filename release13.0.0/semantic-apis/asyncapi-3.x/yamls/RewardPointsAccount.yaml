asyncapi: 3.0.0
info:
  title: Reward Points Account
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Administer the booking
    and remittance of rewards points
channels:
  RewardPointsLog/Created:
    address: RewardPointsLog/Created
    messages:
      RewardPointsLog-created.message:
        $ref: '#/components/messages/RewardPointsLog'
    description: ''
  RewardPointsLog/Updated:
    address: RewardPointsLog/Updated
    messages:
      RewardPointsLog-updated.message:
        $ref: '#/components/messages/RewardPointsLog'
    description: ''
  Capture/Created:
    address: Capture/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Capture'
    description: ''
  Capture/Updated:
    address: Capture/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Capture'
    description: ''
  Expiration/Created:
    address: Expiration/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Expiration'
    description: ''
  Expiration/Updated:
    address: Expiration/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Expiration'
    description: ''
  RewardPointsAccountOutcome/Created:
    address: RewardPointsAccountOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/RewardPointsAccountOutcome'
    description: ''
  RewardPointsAccountOutcome/Updated:
    address: RewardPointsAccountOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/RewardPointsAccountOutcome'
    description: ''
operations:
  RewardPointsLog-created:
    action: receive
    channel:
      $ref: '#/channels/RewardPointsLog~1Created'
    summary: RewardPointsLog
    messages:
      - $ref: >-
          #/channels/RewardPointsLog~1Created/messages/RewardPointsLog-created.message
  RewardPointsLog-updated:
    action: receive
    channel:
      $ref: '#/channels/RewardPointsLog~1Updated'
    summary: RewardPointsLog
    messages:
      - $ref: >-
          #/channels/RewardPointsLog~1Updated/messages/RewardPointsLog-updated.message
  Capture/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Capture~1Created'
    summary: Capture
    messages:
      - $ref: '#/channels/Capture~1Created/messages/publish.message'
  Capture/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Capture~1Updated'
    summary: Capture
    messages:
      - $ref: '#/channels/Capture~1Updated/messages/publish.message'
  Expiration/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Expiration~1Created'
    summary: Expiration
    messages:
      - $ref: '#/channels/Expiration~1Created/messages/publish.message'
  Expiration/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Expiration~1Updated'
    summary: Expiration
    messages:
      - $ref: '#/channels/Expiration~1Updated/messages/publish.message'
  RewardPointsAccountOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/RewardPointsAccountOutcome~1Created'
    summary: RewardPointsAccountOutcome
    messages:
      - $ref: >-
          #/channels/RewardPointsAccountOutcome~1Created/messages/publish.message
  RewardPointsAccountOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/RewardPointsAccountOutcome~1Updated'
    summary: RewardPointsAccountOutcome
    messages:
      - $ref: >-
          #/channels/RewardPointsAccountOutcome~1Updated/messages/publish.message
components:
  messages:
    RewardPointsLog:
      name: RewardPointsLog
      description: >-
        Maintain a log of transactions or activity, typically a financial
        account/journal or a log of activity to support behavioral analysis 
        within Reward Points Account. 

        Examples:- Maintain a financial journal of transactions processed for a
        product or service and maintain a log of customer events and activity
        for subsequent analysis.
      payload:
        $ref: '#/components/schemas/RewardPointsLog'
    Capture:
      name: Capture
      description: >-
        The Capture is one of the specific types of events that is recorded in
        the Capture
      payload:
        $ref: '#/components/schemas/Capture'
    Expiration:
      name: Expiration
      description: >-
        The Capture is one of the specific types of events that is recorded in
        the Capture
      payload:
        $ref: '#/components/schemas/Expiration'
    RewardPointsAccountOutcome:
      name: RewardPointsAccountOutcome
      description: >-
        The Capture is one of the specific types of events that is recorded in
        the Capture
      payload:
        $ref: '#/components/schemas/RewardPointsAccountOutcome'
  schemas:
    Capture:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        RewardPointsLogReference:
          $ref: '#/components/schemas/Log'
        CaptureReference:
          $ref: '#/components/schemas/Event'
        CaptureType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The completion status once the event has been captured ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: 'Name (label) of the location. (ISO20022) '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Capture ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Schedule:
      type: object
      format: Schedule
      description: "The timing and key actions/milestones involved in capturing the event ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The Capture specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Log:
      type: object
      format: Log
      description: "Reference to Capture ||\r\n|"
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    Event:
      type: object
      format: Event
      description: "Reference to Capture ||\r\n|"
      properties:
        EventType:
          $ref: '#/components/schemas/Text'
        EventDateTime:
          $ref: '#/components/schemas/Datetime'
        EventDescription:
          $ref: '#/components/schemas/Text'
        EventSource:
          type: string
          format: Object
          description: ''
        EventLocation:
          $ref: '#/components/schemas/Location'
        EventAction:
          $ref: '#/components/schemas/Action'
        EventStatus:
          $ref: '#/components/schemas/Status'
        EventValue:
          $ref: '#/components/schemas/Value'
        EventValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        EventIdentification:
          $ref: '#/components/schemas/Identifier'
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Expiration:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        RewardPointsLogReference:
          $ref: '#/components/schemas/Log'
        ExpirationReference:
          $ref: '#/components/schemas/Event'
        ExpirationType:
          $ref: '#/components/schemas/Text'
    RewardPointsAccountOutcome:
      type: object
      description: ''
      properties:
        RewardPointsAccountIncident:
          type: string
          format: Object
          description: ''
        RewardPointsAccountLog:
          $ref: '#/components/schemas/Log'
    RewardPointsLog:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        RewardPointsLogSelectedOption:
          $ref: '#/components/schemas/Feature'
        RewardPointsLogType:
          $ref: '#/components/schemas/Text'
        RewardPointsLogSchedule:
          $ref: '#/components/schemas/Schedule'
        RewardPointsLogUsageLog:
          $ref: '#/components/schemas/Log'
        RewardPointsLogUpdateLog:
          $ref: '#/components/schemas/Text'
        RewardPointsLogReference:
          $ref: '#/components/schemas/Log'
        RewardPointsLogBusinessUnitReference:
          $ref: '#/components/schemas/BusinessUnit'
        RewardPointsLogCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        RewardPointsLogServiceConfiguration:
          $ref: '#/components/schemas/Arrangement'
        RewardPointsLogPosition:
          $ref: '#/components/schemas/Position'
        Positiontypevalues:
          enum:
            - Balance/Cashflow
            - CreditPosition
            - CollateralPosition
            - SecurityPosition
        RewardPointsLogPositionLimitTime:
          $ref: '#/components/schemas/Datetime'
    Feature:
      type: object
      format: Feature
      description: "A selected optional business service as subject matter of Reward Points Log ||\r\n|"
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    BusinessUnit:
      type: object
      format: BusinessUnit
      description: "Reference to the business unit which is involved in Reward Points Log ||\r\n|"
      properties:
        BusinessFunction:
          type: string
          format: String
          description: ''
        Goal:
          type: string
          format: String
          description: ''
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        The configuration of Reward Points Log Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    Position:
      type: object
      format: Position
      description: >-
        The position of Reward Points Log Position |Position 
        (https://www.iso20022.org/standardsrepository/type/Position)|Standard|ISO20022
        BM ()
      properties:
        PositionValue:
          $ref: '#/components/schemas/Value'
        PositionQuantity:
          type: string
          format: Number
          description: ''
        PositionDate:
          $ref: '#/components/schemas/Datetime'
        PositionAmount:
          $ref: '#/components/schemas/Amount'
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
