asyncapi: 3.0.0
info:
  title: Order Allocation
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    allocates partially fulfilled market trades
channels:
  SecuritiesAllocationProcedure/Created:
    address: SecuritiesAllocationProcedure/Created
    messages:
      SecuritiesAllocationProcedure-created.message:
        $ref: '#/components/messages/SecuritiesAllocationProcedure'
    description: ''
  SecuritiesAllocationProcedure/Updated:
    address: SecuritiesAllocationProcedure/Updated
    messages:
      SecuritiesAllocationProcedure-updated.message:
        $ref: '#/components/messages/SecuritiesAllocationProcedure'
    description: ''
  Update(PartiallyCompleted)MarketOrder/Created:
    address: Update(PartiallyCompleted)MarketOrder/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Update(PartiallyCompleted)MarketOrder'
    description: ''
  Update(PartiallyCompleted)MarketOrder/Updated:
    address: Update(PartiallyCompleted)MarketOrder/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Update(PartiallyCompleted)MarketOrder'
    description: ''
  ApplyOrderAllocationRules/Created:
    address: ApplyOrderAllocationRules/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ApplyOrderAllocationRules'
    description: ''
  ApplyOrderAllocationRules/Updated:
    address: ApplyOrderAllocationRules/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ApplyOrderAllocationRules'
    description: ''
  OrderAllocationOutcome/Created:
    address: OrderAllocationOutcome/Created
    messages:
      publish.message:
        $ref: '#/components/messages/OrderAllocationOutcome'
    description: ''
  OrderAllocationOutcome/Updated:
    address: OrderAllocationOutcome/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/OrderAllocationOutcome'
    description: ''
  SecuritiesAllocationProcedure/Notify:
    address: SecuritiesAllocationProcedure/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/SecuritiesAllocationProcedureNotify'
  ApplyOrderAllocationRules/Notify:
    address: ApplyOrderAllocationRules/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/ApplyOrderAllocationRulesNotify'
  Update(PartiallyCompleted)MarketOrder/Notify:
    address: Update(PartiallyCompleted)MarketOrder/Notify
    messages:
      subscribe.message:
        $ref: '#/components/messages/Update(PartiallyCompleted)MarketOrderNotify'
operations:
  SecuritiesAllocationProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/SecuritiesAllocationProcedure~1Created'
    summary: SecuritiesAllocationProcedure
    messages:
      - $ref: >-
          #/channels/SecuritiesAllocationProcedure~1Created/messages/SecuritiesAllocationProcedure-created.message
  SecuritiesAllocationProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/SecuritiesAllocationProcedure~1Updated'
    summary: SecuritiesAllocationProcedure
    messages:
      - $ref: >-
          #/channels/SecuritiesAllocationProcedure~1Updated/messages/SecuritiesAllocationProcedure-updated.message
  Update(PartiallyCompleted)MarketOrder/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Update(PartiallyCompleted)MarketOrder~1Created'
    summary: Update(PartiallyCompleted)MarketOrder
    messages:
      - $ref: >-
          #/channels/Update(PartiallyCompleted)MarketOrder~1Created/messages/publish.message
  Update(PartiallyCompleted)MarketOrder/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Update(PartiallyCompleted)MarketOrder~1Updated'
    summary: Update(PartiallyCompleted)MarketOrder
    messages:
      - $ref: >-
          #/channels/Update(PartiallyCompleted)MarketOrder~1Updated/messages/publish.message
  ApplyOrderAllocationRules/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ApplyOrderAllocationRules~1Created'
    summary: ApplyOrderAllocationRules
    messages:
      - $ref: '#/channels/ApplyOrderAllocationRules~1Created/messages/publish.message'
  ApplyOrderAllocationRules/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ApplyOrderAllocationRules~1Updated'
    summary: ApplyOrderAllocationRules
    messages:
      - $ref: '#/channels/ApplyOrderAllocationRules~1Updated/messages/publish.message'
  OrderAllocationOutcome/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/OrderAllocationOutcome~1Created'
    summary: OrderAllocationOutcome
    messages:
      - $ref: '#/channels/OrderAllocationOutcome~1Created/messages/publish.message'
  OrderAllocationOutcome/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/OrderAllocationOutcome~1Updated'
    summary: OrderAllocationOutcome
    messages:
      - $ref: '#/channels/OrderAllocationOutcome~1Updated/messages/publish.message'
  SecuritiesAllocationProcedure/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/SecuritiesAllocationProcedure~1Notify'
    messages:
      - $ref: >-
          #/channels/SecuritiesAllocationProcedure~1Notify/messages/subscribe.message
  ApplyOrderAllocationRules/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/ApplyOrderAllocationRules~1Notify'
    messages:
      - $ref: >-
          #/channels/ApplyOrderAllocationRules~1Notify/messages/subscribe.message
  Update(PartiallyCompleted)MarketOrder/Notify.subscribe:
    action: send
    channel:
      $ref: '#/channels/Update(PartiallyCompleted)MarketOrder~1Notify'
    messages:
      - $ref: >-
          #/channels/Update(PartiallyCompleted)MarketOrder~1Notify/messages/subscribe.message
components:
  messages:
    SecuritiesAllocationProcedure:
      name: SecuritiesAllocationProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Order
        Allocation. 
      payload:
        $ref: '#/components/schemas/SecuritiesAllocationProcedure'
    Update(PartiallyCompleted)MarketOrder:
      name: Update(PartiallyCompleted)MarketOrder
      description: >-
        A course of action for doing Update (Partially Completed) Market Order
        Workstep in the context of executing the Update (Partially Completed)
        Market Order Workstep
      payload:
        $ref: '#/components/schemas/Update(PartiallyCompleted)MarketOrder'
    ApplyOrderAllocationRules:
      name: ApplyOrderAllocationRules
      description: >-
        A course of action for doing Update (Partially Completed) Market Order
        Workstep in the context of executing the Update (Partially Completed)
        Market Order Workstep
      payload:
        $ref: '#/components/schemas/ApplyOrderAllocationRules'
    OrderAllocationOutcome:
      name: OrderAllocationOutcome
      description: >-
        A course of action for doing Update (Partially Completed) Market Order
        Workstep in the context of executing the Update (Partially Completed)
        Market Order Workstep
      payload:
        $ref: '#/components/schemas/OrderAllocationOutcome'
    SecuritiesAllocationProcedureNotify:
      name: SecuritiesAllocationProcedureNotify
      payload:
        $ref: '#/components/schemas/SecuritiesAllocationProcedureNotify'
    ApplyOrderAllocationRulesNotify:
      name: ApplyOrderAllocationRulesNotify
      payload:
        $ref: '#/components/schemas/ApplyOrderAllocationRulesNotify'
    Update(PartiallyCompleted)MarketOrderNotify:
      name: Update(PartiallyCompleted)MarketOrderNotify
      payload:
        $ref: '#/components/schemas/Update(PartiallyCompleted)MarketOrderNotify'
  schemas:
    Update(PartiallyCompleted)MarketOrder:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        SecuritiesAllocationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        Update(PartiallyCompleted)MarketOrderWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        Update(PartiallyCompleted)MarketOrderWorkstepType:
          $ref: '#/components/schemas/Text'
    Condition:
      type: object
      format: Condition
      description: "The completion status and reference to subsequent actions that may be triggered on completion of the workstep ||\r\n|"
      properties:
        ConditionIdentification:
          $ref: '#/components/schemas/Identifier'
        ConditionName:
          $ref: '#/components/schemas/Name'
        ConditionValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        ConditionDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ConditionStatus:
          $ref: '#/components/schemas/Status'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "The type of Update (Partially Completed) Market Order Workstep ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Schedule:
      type: object
      format: Schedule
      description: 'Timetable to process something (most refers to the Asset Type) '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    BusinessService:
      type: object
      format: BusinessService
      description: "The Update (Partially Completed) Market Order Workstep specific Business Service ||\r\n|"
      properties:
        Businessservicetypevalues:
          enum:
            - Businessservicetypevalues
          format: BusinessService
    Procedure:
      type: object
      format: Procedure
      description: "Reference to Update (Partially Completed) Market Order Workstep ||\r\n|"
      properties:
        Proceduretypevalues:
          enum:
            - Proceduretypevalues
          format: Procedure
        ProcedureDateTime:
          $ref: '#/components/schemas/Datetime'
        ProcedureRequest:
          $ref: '#/components/schemas/Instruction'
        ProcedureSchedule:
          $ref: '#/components/schemas/Schedule'
        ProcedureStatus:
          $ref: '#/components/schemas/Status'
    Instruction:
      type: object
      format: Instruction
      description: 'Request to process something (most refers to Asset Type) '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondatetime:
      type: object
      format: Instructiondatetime
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Datetime'
        Instructiondatetimetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondatetime
    Instructionstatus:
      type: object
      format: Instructionstatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionstatustypevalues:
          enum:
            - Pendingprocessing
            - Acknowledgedaccepted
            - Rejected
            - Accepted
            - Completed
            - Notreceived
            - Cancelled
            - Beingcancelled
            - Receivedbyissuerorregistrar
            - Pending
            - Standinginstruction
            - Queued
            - Cancelledbysubcustodian
            - Forwarded
          format: Instructionstatus
        InstructionStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    Workstep:
      type: object
      format: Workstep
      description: "Reference to Update (Partially Completed) Market Order Workstep ||\r\n|"
      properties:
        WorkstepResult:
          $ref: '#/components/schemas/Text'
        Worksteptypevalues:
          enum:
            - Worksteptypevalues
          format: Workstep
        WorkstepDescription:
          $ref: '#/components/schemas/Text'
        WorkstepDateTime:
          $ref: '#/components/schemas/Datetime'
        WorkstepStatus:
          $ref: '#/components/schemas/Status'
        WorkstepWorkproduct:
          $ref: '#/components/schemas/Workproduct'
    Workproduct:
      type: object
      format: Workproduct
      description: ' '
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    ApplyOrderAllocationRules:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        SecuritiesAllocationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        ApplyOrderAllocationRulesWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        ApplyOrderAllocationRulesWorkstepType:
          $ref: '#/components/schemas/Text'
    OrderAllocationOutcome:
      type: object
      description: ''
      properties:
        OrderAllocationWorkProduct:
          $ref: '#/components/schemas/Workproduct'
        OrderAllocationProcedure:
          $ref: '#/components/schemas/Procedure'
    SecuritiesAllocationProcedure:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        SecuritiesAllocationProcedureSelectedOption:
          $ref: '#/components/schemas/Feature'
        SecuritiesAllocationProcedureRequest:
          $ref: '#/components/schemas/Instruction'
        SecuritiesAllocationProcedureSchedule:
          $ref: '#/components/schemas/Schedule'
        SecuritiesAllocationProcedureStatus:
          $ref: '#/components/schemas/Status'
        SecuritiesAllocationProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/FinancialFacility'
        SecuritiesAllocationProcedureEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureType:
          $ref: '#/components/schemas/Proceduretype'
        SecuritiesAllocationProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/Schedule'
        SecuritiesAllocationProcedureServiceType:
          $ref: '#/components/schemas/Servicetype'
        SecuritiesAllocationProcedureProductandServiceType:
          $ref: '#/components/schemas/Bankingproducttype'
        SecuritiesAllocationProcedureProductandServiceInstance:
          $ref: '#/components/schemas/BankingProduct'
        SecuritiesAllocationProcedureTransactionType:
          $ref: '#/components/schemas/Transactiontype'
        SecuritiesAllocationProcedureTransaction:
          $ref: '#/components/schemas/Transaction'
        SecuritiesAllocationProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/Arrangement'
        SecuritiesAllocationProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/Agreement'
        SecuritiesAllocationProcedureReference:
          $ref: '#/components/schemas/Procedure'
    Feature:
      type: object
      format: Feature
      description: "A selected optional business service as subject matter of Securities Allocation Procedure ||\r\n|"
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    FinancialFacility:
      type: object
      format: FinancialFacility
      description: "Reference to the Financial Facility related to Securities Allocation Procedure ||\r\n|"
      properties:
        FinancialFacility:
          type: string
          format: Class
          description: >-
            A production or operational capacity to perform a business function
            for delivering a banking product or service


            A functional classification of banking product that provides ongoing
            capacity to deliver financial services (e.g. loan service, payment
            service)


             
    Proceduretype:
      type: object
      format: Proceduretype
      description: "A Classification value that distinguishes between the type of process undertaken within Securities Allocation Procedure ||\r\n|"
      properties:
        ProcedureTypeName:
          $ref: '#/components/schemas/Name'
        Proceduretypevalues:
          enum:
            - Proceduretypevalues
          format: Proceduretype
    Servicetype:
      type: object
      format: Servicetype
      description: "A Classification value that distinguishes between the type of services in Securities Allocation Procedure ||\r\n|"
      properties:
        ServiceTypeName:
          $ref: '#/components/schemas/Name'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Servicetype
    Bankingproducttype:
      type: object
      format: Bankingproducttype
      description: "A Classification value that distinguishes between the type of products/services related to Securities Allocation Procedure ||\r\n|"
      properties:
        ProductTypeDefinition:
          type: string
          format: String
          description: ''
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproducttype
        ProductClassificationIssuingAuthority:
          type: string
          format: String
          description: ''
    BankingProduct:
      type: object
      format: BankingProduct
      description: >-
        Reference to the product or service that is related to Securities
        Allocation Procedure Product_x000D_

        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    Transactiontype:
      type: object
      format: Transactiontype
      description: "A Classification value that distinguishes between the type of transactions in Securities Allocation Procedure ||\r\n|"
      properties:
        TransactionTypeName:
          $ref: '#/components/schemas/Name'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transactiontype
    Transaction:
      type: object
      format: Transaction
      description: >-
        Reference to the transaction that is related to Securities Allocation
        Procedure ObligationFulfilment|ObligationFulfilment
        (https://www.iso20022.org/standardsrepository/type/ObligationFulfilment)|Standard|ISO20022
        BM ()
      properties:
        TransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        TransactionDate:
          $ref: '#/components/schemas/Transactiondatetime'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
          format: Transaction
        TransactionDescription:
          $ref: '#/components/schemas/Text'
        TransactionStatus:
          $ref: '#/components/schemas/Transactionstatus'
        TransactionName:
          $ref: '#/components/schemas/Name'
    Transactiondatetime:
      type: object
      format: Transactiondatetime
      description: >-
        The Date that the transaction has occurred or is planned to occur.

        A characteristic of transaction which refers to the LifecycleDate of
        transaction (e.g., initiated date, executed date, fulfillment date).  
      properties:
        TransactionDate:
          $ref: '#/components/schemas/Datetime'
        Transactiondatetimetypevalues:
          enum:
            - ExecutedDate
            - FulfillmentDate
            - InitiatedDate
            - CancelledDate
            - ApprovedDate
            - ValueDate
            - BookingDate
          format: Transactiondatetime
    Transactionstatus:
      type: object
      format: Transactionstatus
      description: >-
        A characteristic of transaction which refers to the LifecycleStatus of
        transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  
      properties:
        TransactionStatus:
          $ref: '#/components/schemas/Status'
        Transactionstatustypevalues:
          enum:
            - Initiated
            - Executed
            - Cancelled
            - Confirmed
            - Suspended
            - Pending
            - Completed
            - Notified
            - Booked
            - Rejected
          format: Transactionstatus
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        Reference to the Financial Transaction Arrangement that is related to
        Securities Allocation Procedure Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    Agreement:
      type: object
      format: Agreement
      description: >-
        Reference to the Customer Agreement that is related to Securities
        Allocation Procedure Agreement_x000D_

        |Agreement
        (https://www.iso20022.org/standardsrepository/type/Agreement)|Standard|ISO20022
        BM ()
      properties:
        AgreementSignedDate:
          $ref: '#/components/schemas/Date'
        Agreementtypevalues:
          enum:
            - CustomerAgreement
            - SupplierAgreement
            - BrokerAgreement
            - SalesAgreement
            - PurchaseAgreement
            - MaintenanceAgreement
            - ProductAgreement
            - ProductSalesAgreement
            - ResourceAgreement
          format: Agreement
        AgreementValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        AgreementVersion:
          $ref: '#/components/schemas/Text'
        AgreementStatus:
          $ref: '#/components/schemas/Agreementstatus'
        AgreementSubjectMatter:
          $ref: '#/components/schemas/Text'
        AgreementIdentification:
          $ref: '#/components/schemas/Identifier'
        AgreementDate:
          $ref: '#/components/schemas/Datetime'
        AgreementDescription:
          $ref: '#/components/schemas/Text'
    Date:
      type: object
      format: Date
      description: 'Date on which the agreement was signed by all parties. (ISO20022) '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Agreementstatus:
      type: object
      format: Agreementstatus
      description: >-
        A characteristic of agreement which refers to the LifecycleStatus of
        agreement (e.g., potential, offered, confirmed, completed, signed,
        terminated). 
      properties:
        AgreementStatus:
          $ref: '#/components/schemas/Status'
        Agreementstatustypevalues:
          enum:
            - Offered
            - Confirmed
            - Completed
            - Signed
            - Terminated
            - Rejected
          format: Agreementstatus
    SecuritiesAllocationProcedureNotify:
      type: object
      description: ''
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        SecuritiesAllocationProcedureSelectedOption:
          $ref: '#/components/schemas/Feature'
        SecuritiesAllocationProcedureRequest:
          $ref: '#/components/schemas/Instruction'
        SecuritiesAllocationProcedureSchedule:
          $ref: '#/components/schemas/Schedule'
        SecuritiesAllocationProcedureStatus:
          $ref: '#/components/schemas/Status'
        SecuritiesAllocationProcedureAssociatedPartyReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureServiceProviderReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureFinancialFacilityReference:
          $ref: '#/components/schemas/FinancialFacility'
        SecuritiesAllocationProcedureEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureCustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        SecuritiesAllocationProcedureType:
          $ref: '#/components/schemas/Proceduretype'
        SecuritiesAllocationProcedureServiceProviderSchedule:
          $ref: '#/components/schemas/Schedule'
        SecuritiesAllocationProcedureServiceType:
          $ref: '#/components/schemas/Servicetype'
        SecuritiesAllocationProcedureProductandServiceType:
          $ref: '#/components/schemas/Bankingproducttype'
        SecuritiesAllocationProcedureProductandServiceInstance:
          $ref: '#/components/schemas/BankingProduct'
        SecuritiesAllocationProcedureTransactionType:
          $ref: '#/components/schemas/Transactiontype'
        SecuritiesAllocationProcedureTransaction:
          $ref: '#/components/schemas/Transaction'
        SecuritiesAllocationProcedureFinancialTransactionArrangement:
          $ref: '#/components/schemas/Arrangement'
        SecuritiesAllocationProcedureCustomerAgreementReference:
          $ref: '#/components/schemas/Agreement'
        SecuritiesAllocationProcedureReference:
          $ref: '#/components/schemas/Procedure'
    ApplyOrderAllocationRulesNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitorEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        SecuritiesAllocationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        ApplyOrderAllocationRulesWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        ApplyOrderAllocationRulesWorkstepType:
          $ref: '#/components/schemas/Text'
    Update(PartiallyCompleted)MarketOrderNotify:
      type: object
      description: ''
      properties:
        Preconditions:
          $ref: '#/components/schemas/Condition'
        BusinessUnitEmployeeReference:
          $ref: '#/components/schemas/Involvedparty'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        BusinessService:
          $ref: '#/components/schemas/BusinessService'
        Postconditions:
          $ref: '#/components/schemas/Condition'
        SecuritiesAllocationProcedureReference:
          $ref: '#/components/schemas/Procedure'
        Update(PartiallyCompleted)MarketOrderWorkstepReference:
          $ref: '#/components/schemas/Workstep'
        Update(PartiallyCompleted)MarketOrderWorkstepType:
          $ref: '#/components/schemas/Text'
