asyncapi: 3.0.0
info:
  title: Party Lifecycle Management
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    tracks the state of a party relationship with the bank from the initial
    checks made during the establishment of a new party connection and
    subsequently maintained as necessary over the duration of the relationship.
    The checks and the maintenance requirements will vary by party type and
    jurisdiction. The checks cover bank specific and legal and regulatory
    considerations and may be updated based on a standard schedule or by request
    in specific circumstances.
channels:
  PartyRelationshipAdministrativePlan/Created:
    address: PartyRelationshipAdministrativePlan/Created
    messages:
      PartyRelationshipAdministrativePlan-created.message:
        $ref: '#/components/messages/PartyRelationshipAdministrativePlan'
    description: ''
  PartyRelationshipAdministrativePlan/Updated:
    address: PartyRelationshipAdministrativePlan/Updated
    messages:
      PartyRelationshipAdministrativePlan-updated.message:
        $ref: '#/components/messages/PartyRelationshipAdministrativePlan'
    description: ''
  IdentityProofing/Created:
    address: IdentityProofing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/IdentityProofing'
    description: ''
  IdentityProofing/Updated:
    address: IdentityProofing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/IdentityProofing'
    description: ''
  Precedents/Created:
    address: Precedents/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Precedents'
    description: ''
  Precedents/Updated:
    address: Precedents/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Precedents'
    description: ''
  Documentation/Created:
    address: Documentation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Documentation'
    description: ''
  Documentation/Updated:
    address: Documentation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Documentation'
    description: ''
  Qualification/Created:
    address: Qualification/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Qualification'
    description: ''
  Qualification/Updated:
    address: Qualification/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Qualification'
    description: ''
operations:
  PartyRelationshipAdministrativePlan-created:
    action: receive
    channel:
      $ref: '#/channels/PartyRelationshipAdministrativePlan~1Created'
    summary: PartyRelationshipAdministrativePlan
    messages:
      - $ref: >-
          #/channels/PartyRelationshipAdministrativePlan~1Created/messages/PartyRelationshipAdministrativePlan-created.message
  PartyRelationshipAdministrativePlan-updated:
    action: receive
    channel:
      $ref: '#/channels/PartyRelationshipAdministrativePlan~1Updated'
    summary: PartyRelationshipAdministrativePlan
    messages:
      - $ref: >-
          #/channels/PartyRelationshipAdministrativePlan~1Updated/messages/PartyRelationshipAdministrativePlan-updated.message
  IdentityProofing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/IdentityProofing~1Created'
    summary: IdentityProofing
    messages:
      - $ref: '#/channels/IdentityProofing~1Created/messages/publish.message'
  IdentityProofing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/IdentityProofing~1Updated'
    summary: IdentityProofing
    messages:
      - $ref: '#/channels/IdentityProofing~1Updated/messages/publish.message'
  Precedents/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Precedents~1Created'
    summary: Precedents
    messages:
      - $ref: '#/channels/Precedents~1Created/messages/publish.message'
  Precedents/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Precedents~1Updated'
    summary: Precedents
    messages:
      - $ref: '#/channels/Precedents~1Updated/messages/publish.message'
  Documentation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Documentation~1Created'
    summary: Documentation
    messages:
      - $ref: '#/channels/Documentation~1Created/messages/publish.message'
  Documentation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Documentation~1Updated'
    summary: Documentation
    messages:
      - $ref: '#/channels/Documentation~1Updated/messages/publish.message'
  Qualification/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Qualification~1Created'
    summary: Qualification
    messages:
      - $ref: '#/channels/Qualification~1Created/messages/publish.message'
  Qualification/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Qualification~1Updated'
    summary: Qualification
    messages:
      - $ref: '#/channels/Qualification~1Updated/messages/publish.message'
components:
  messages:
    PartyRelationshipAdministrativePlan:
      name: PartyRelationshipAdministrativePlan
      description: ''
      payload:
        $ref: '#/components/schemas/PartyRelationshipAdministrativePlan'
    IdentityProofing:
      name: IdentityProofing
      description: >
        A course of action for doing Identity Proofing in the context of
        executing the Service Domain


        A course of action conducted for confirming that an individual's claimed
        identity is accurate and valid.
      payload:
        $ref: '#/components/schemas/IdentityProofing'
    Precedents:
      name: Precedents
      description: >
        A course of action for doing Identity Proofing in the context of
        executing the Service Domain


        A course of action conducted for confirming that an individual's claimed
        identity is accurate and valid.
      payload:
        $ref: '#/components/schemas/Precedents'
    Documentation:
      name: Documentation
      description: >
        A course of action for doing Identity Proofing in the context of
        executing the Service Domain


        A course of action conducted for confirming that an individual's claimed
        identity is accurate and valid.
      payload:
        $ref: '#/components/schemas/Documentation'
    Qualification:
      name: Qualification
      description: >
        A course of action for doing Identity Proofing in the context of
        executing the Service Domain


        A course of action conducted for confirming that an individual's claimed
        identity is accurate and valid.
      payload:
        $ref: '#/components/schemas/Qualification'
  schemas:
    IdentityProofing:
      type: object
      description: ''
      properties:
        Verificationtypevalues:
          enum:
            - IdentityVerification/Proofing
            - DocumentVerification
        PublicDirectoryReference:
          $ref: '#/components/schemas/Directory'
        SpecialistAgencyServiceReference:
          $ref: '#/components/schemas/Service'
        IdentityProofingTaskRecord:
          $ref: '#/components/schemas/Task'
        IdentityProofingTaskDescription:
          $ref: '#/components/schemas/Text'
        SpecialistAgencyServiceRequestResult:
          $ref: '#/components/schemas/Instruction'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        IdentityProofingTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        IdentityProofingTaskResult:
          $ref: '#/components/schemas/Verification'
        IdentityProofingReference:
          $ref: '#/components/schemas/Identifier'
    Directory:
      type: object
      format: Directory
      description: "Reference to an external verification source (e.g. for registered address/location verification) ||\r\n|"
      properties:
        DirectoryVersion:
          type: string
          format: Number
          description: ''
        DirectoryConfiguration:
          type: string
          format: String
          description: ''
        DirectoryValidPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        DirectoryStatus:
          $ref: '#/components/schemas/Status'
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Service:
      type: object
      format: Service
      description: "Reference to an external verification service (e.g. to perform background verification checks) ||\r\n|"
      properties:
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Service
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      format: Feature
      description: >-
        A characteristic of service which refers 1) mainly to the function or
        condition of service. 2) to non-functional features like quality and
        security 
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Task:
      type: object
      format: Task
      description: "The record of a specific verification task ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    Instruction:
      type: object
      format: Instruction
      description: "Result from the verification service request ||\r\n|"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondatetime:
      type: object
      format: Instructiondatetime
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Datetime'
        Instructiondatetimetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondatetime
    Instructionstatus:
      type: object
      format: Instructionstatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionstatustypevalues:
          enum:
            - Pendingprocessing
            - Acknowledgedaccepted
            - Rejected
            - Accepted
            - Completed
            - Notreceived
            - Cancelled
            - Beingcancelled
            - Receivedbyissuerorregistrar
            - Pending
            - Standinginstruction
            - Queued
            - Cancelledbysubcustodian
            - Forwarded
          format: Instructionstatus
        InstructionStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "Reference to documents used for verification ||\r\n|"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    Workproduct:
      type: object
      format: Workproduct
      description: "Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    Verification:
      type: object
      format: Verification
      description: "The outcome of the verification routine ||\r\n|"
      properties:
        Verificationtypevalues:
          enum:
            - IdentityVerification/Proofing
            - DocumentVerification
          format: Verification
        Verificationentitytypevalues:
          enum:
            - Acquirer
            - Agent
            - Issuer
            - Acceptor
            - Othernational
            - Otherprivate
            - Terminal
            - Cardapplication
            - Acceptancedevice
          format: Verification
        Verificationresulttypevalues:
          enum:
            - Technicalerror
            - Successful
            - Partialmatch
            - Notperformed
            - Missing
            - Failed
            - Furtheraction
            - Othernational
            - Otherprivate
            - Notsupported
          format: Verification
        VerificationDateTime:
          $ref: '#/components/schemas/Datetime'
        VerificationReason:
          $ref: '#/components/schemas/Text'
        VerificationValidityEndDate:
          $ref: '#/components/schemas/Date'
        VerificationValidityEndTime:
          $ref: '#/components/schemas/Time'
    Date:
      type: object
      format: Date
      description: >-
        Contains end date of the verification that has been performed.
        (ISO20022) 
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    Time:
      type: object
      format: Time
      description: 'Contains end time of the verification that has been performed.  '
      properties:
        Time:
          type: string
          format: DataType
          description: >-
            Time is a time of day to various common resolutions hour, minute,
            second and fractions thereof. (UN/CEFACT)


            A particular point in the progression of time in a calendar day
            expressed in either UTC time format (hh:mm:ss.sssZ), local time with
            UTC offset format (hh:mm:ss.sss+/-hh:mm), or local time format
            (hh:mm:ss.sss). These representations are defined in "XML Schema
            Part 2: Datatypes Second Edition W3C Recommendation 28 October 2004"
            which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Precedents:
      type: object
      description: ''
      properties:
        PrecedentType:
          $ref: '#/components/schemas/Text'
        CustomerPrecedentReference:
          $ref: '#/components/schemas/PartyPrecedent'
        CustomerPrecedentValue:
          $ref: '#/components/schemas/Value'
        CustomerPrecedentValueDate:
          $ref: '#/components/schemas/Date'
    PartyPrecedent:
      type: object
      format: PartyPrecedent
      description: "Reference to the tracked value ||\r\n|"
      properties:
        PrecedentType:
          $ref: '#/components/schemas/Text'
        PrecedentValue:
          $ref: '#/components/schemas/Value'
        PrecedentValueDate:
          $ref: '#/components/schemas/Datetime'
    Documentation:
      type: object
      description: ''
      properties:
        PartyLife-cycleRequiredDocumentation:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        PartyLife-cycleDocumentSchedule:
          $ref: '#/components/schemas/Schedule'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
    Schedule:
      type: object
      format: Schedule
      description: "Describes and records timing required and actual for obtaining and evaluating documents ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    Qualification:
      type: object
      description: ''
      properties:
        Assessmenttypevalues:
          enum:
            - AssetValuation
            - ProductMatching
            - Authorization
            - Authentication
            - QualityAssurance
            - Audit
            - ComplianceCheck
            - FundingCheck
            - SuitabilityCheck
            - PerformanceCheck
            - ImpactAssessment
            - RiskAssessment
            - Rating
            - UnderwritingAssessment
            - Qualification
            - Verification
            - KYCAssessment
            - PEPAssessment
            - AMLAssessment
        PublicDirectoryReference:
          $ref: '#/components/schemas/Directory'
        SpecialistAgencyServiceReference:
          $ref: '#/components/schemas/Service'
        QualificationTaskRecord:
          $ref: '#/components/schemas/Task'
        QualificationTaskDescription:
          $ref: '#/components/schemas/Text'
        SpecialistAgencyRegulatorServiceRequestResult:
          $ref: '#/components/schemas/Instruction'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        QualificationTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        QualificationTaskResult:
          $ref: '#/components/schemas/Assessment'
    Assessment:
      type: object
      format: Assessment
      description: >-
        The outcome of the qualification workstep Assessment|Assessment
        (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
        BM ()
      properties:
        Assessmenttypevalues:
          enum:
            - AssetValuation
            - ProductMatching
            - Authorization
            - Authentication
            - QualityAssurance
            - Audit
            - ComplianceCheck
            - FundingCheck
            - SuitabilityCheck
            - PerformanceCheck
            - ImpactAssessment
            - RiskAssessment
            - Rating
            - UnderwritingAssessment
            - Qualification
            - Verification
            - KYCAssessment
            - PEPAssessment
            - AMLAssessment
          format: Assessment
        AssessmentMethod:
          $ref: '#/components/schemas/Text'
        AssessmentSchedule:
          $ref: '#/components/schemas/Schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/Text'
        AssessmentModel:
          $ref: '#/components/schemas/Model'
        AssessmentDateTime:
          $ref: '#/components/schemas/Datetime'
        AssessmentResult:
          $ref: '#/components/schemas/Text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/Text'
        AssessmentRequirement:
          $ref: '#/components/schemas/Requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/Date'
        AssessmentStatus:
          $ref: '#/components/schemas/Status'
    Model:
      type: object
      format: Model
      description: ' '
      properties:
        ModelType:
          $ref: '#/components/schemas/Text'
        ModelPurpose:
          $ref: '#/components/schemas/Text'
        ModelVersion:
          $ref: '#/components/schemas/Text'
        ModelName:
          $ref: '#/components/schemas/Name'
        ModelDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ModelStatus:
          $ref: '#/components/schemas/Status'
    Document:
      type: object
      format: Document
      description: 'Document that represents the result of an assessment(s). '
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Creditnoterelatedtofinancialadjust
            - Debitnoterelatedtofinancialadjustm
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Structuredcommunicationreference
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Tradeservicesutilitytransaction
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Document:
          type: string
          format: Class
          description: >-
            Something tangible that records something, such as a recording or a
            photograph, or a writing that can be used to furnish evidence or
            information (FIBO)


            Definition: A physical or digital representation of something
            meaningful to the audience.


            Comment: 

            1.Technical: Manuals, instructions, tutorials, procedures,
            specifications, etc., that accompany a piece of equipment or
            software, and provide guidance for its proper use and maintenance.

            2.Trading: Preparation of a set of commercial and financial
            documents that record or support a business transaction.
            International trade documentations include air waybill, bill of
            exchange, bill of lading, certificate of inspection, certificate of
            insurance, certificate of origin, commercial invoice, and consular
            invoice.



            Read more:
            http://www.businessdictionary.com/definition/documentation.html#ixzz3EQGRGC4W
             
    Requirement:
      type: object
      format: Requirement
      description: ' '
      properties:
        RequirementType:
          type: string
          format: String
          description: ''
    PartyRelationshipAdministrativePlan:
      type: object
      description: ''
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        PartyReference:
          $ref: '#/components/schemas/Party'
        Party_Partyrelationshiptypevalues:
          enum:
            - PartyIsParentOfParty
            - PartyIsSubsidiaryOfParty
            - PartyIsCertifiedByParty
            - PartyIsMarriedToParty
            - PartyActsOnBehalfOfParty
            - PartyIsContactPointForParty
            - PartyIsTrustedByParty
            - PartyIsThePowerOfAttorneyForParty
            - PartyReceivesBenefitsFromAParty
        PartyLife-cycleMaintenanceSchedule:
          $ref: '#/components/schemas/Schedule'
        PartyLife-cycleMaintenanceTask:
          $ref: '#/components/schemas/Task'
        PartyLife-cycleMaintenanceTaskType:
          $ref: '#/components/schemas/Text'
        PartyLife-cycleMaintenanceWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        PartyLife-cycleMaintenanceTaskResult:
          $ref: '#/components/schemas/Text'
        CustomerPrecedentProfileUpdateLog:
          $ref: '#/components/schemas/Log'
        PartyRelationshipLifecycleStatus:
          $ref: '#/components/schemas/Status'
        PartyRelationshipLifecyclePhase:
          $ref: '#/components/schemas/PartyRelationshipLifecyclePhase'
    PartyRelationshipLifecyclePhase:
      type: object
      format: PartyRelationshipLifecyclePhase
      description: "Phase that characterizes the course of existence of a party relationship in a specific context.\n ||\r\n|"
      properties:
        Description:
          $ref: '#/components/schemas/Text'
        IsCurrentPhase:
          $ref: '#/components/schemas/Text'
        PhaseName:
          $ref: '#/components/schemas/Name'
        PhaseStatus:
          $ref: '#/components/schemas/Status'
        PhasePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
