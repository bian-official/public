asyncapi: 3.0.0
info:
  title: Product Directory
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    maintains a comprehensive directory of the bank's products and services. It
    can be referenced to obtain product details used to support activities
    including product selection, sales and marketing, on-boarding, servicing and
    product fulfillment.
channels:
  ProductDirectoryEntry/Created:
    address: ProductDirectoryEntry/Created
    messages:
      ProductDirectoryEntry-created.message:
        $ref: '#/components/messages/ProductDirectoryEntry'
    description: ''
  ProductDirectoryEntry/Updated:
    address: ProductDirectoryEntry/Updated
    messages:
      ProductDirectoryEntry-updated.message:
        $ref: '#/components/messages/ProductDirectoryEntry'
    description: ''
  SalesandMarketing/Created:
    address: SalesandMarketing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SalesandMarketing'
    description: ''
  SalesandMarketing/Updated:
    address: SalesandMarketing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SalesandMarketing'
    description: ''
  Operations/Created:
    address: Operations/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Operations'
    description: ''
  Operations/Updated:
    address: Operations/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Operations'
    description: ''
  Servicing/Created:
    address: Servicing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Servicing/Updated:
    address: Servicing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Production/Created:
    address: Production/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Production'
    description: ''
  Production/Updated:
    address: Production/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Production'
    description: ''
operations:
  ProductDirectoryEntry-created:
    action: receive
    channel:
      $ref: '#/channels/ProductDirectoryEntry~1Created'
    summary: ProductDirectoryEntry
    messages:
      - $ref: >-
          #/channels/ProductDirectoryEntry~1Created/messages/ProductDirectoryEntry-created.message
  ProductDirectoryEntry-updated:
    action: receive
    channel:
      $ref: '#/channels/ProductDirectoryEntry~1Updated'
    summary: ProductDirectoryEntry
    messages:
      - $ref: >-
          #/channels/ProductDirectoryEntry~1Updated/messages/ProductDirectoryEntry-updated.message
  SalesandMarketing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SalesandMarketing~1Created'
    summary: SalesandMarketing
    messages:
      - $ref: '#/channels/SalesandMarketing~1Created/messages/publish.message'
  SalesandMarketing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SalesandMarketing~1Updated'
    summary: SalesandMarketing
    messages:
      - $ref: '#/channels/SalesandMarketing~1Updated/messages/publish.message'
  Operations/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Operations~1Created'
    summary: Operations
    messages:
      - $ref: '#/channels/Operations~1Created/messages/publish.message'
  Operations/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Operations~1Updated'
    summary: Operations
    messages:
      - $ref: '#/channels/Operations~1Updated/messages/publish.message'
  Servicing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Created'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Created/messages/publish.message'
  Servicing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Updated'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Updated/messages/publish.message'
  Production/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Production~1Created'
    summary: Production
    messages:
      - $ref: '#/channels/Production~1Created/messages/publish.message'
  Production/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Production~1Updated'
    summary: Production
    messages:
      - $ref: '#/channels/Production~1Updated/messages/publish.message'
components:
  messages:
    ProductDirectoryEntry:
      name: ProductDirectoryEntry
      description: >-
        Capture and maintain reference information about some type of entitity
        within Product Directory.
      payload:
        $ref: '#/components/schemas/ProductDirectoryEntry'
    SalesandMarketing:
      name: SalesandMarketing
      description: |-
        An assertion or statement with regard to a concept, a characteristic.
        Examples:- Product pricing rules, Customer reference details
        A descriptor can be atomic or composed. Prospect Management
      payload:
        $ref: '#/components/schemas/SalesandMarketing'
    Operations:
      name: Operations
      description: |-
        An assertion or statement with regard to a concept, a characteristic.
        Examples:- Product pricing rules, Customer reference details
        A descriptor can be atomic or composed. Prospect Management
      payload:
        $ref: '#/components/schemas/Operations'
    Servicing:
      name: Servicing
      description: |-
        An assertion or statement with regard to a concept, a characteristic.
        Examples:- Product pricing rules, Customer reference details
        A descriptor can be atomic or composed. Prospect Management
      payload:
        $ref: '#/components/schemas/Servicing'
    Production:
      name: Production
      description: |-
        An assertion or statement with regard to a concept, a characteristic.
        Examples:- Product pricing rules, Customer reference details
        A descriptor can be atomic or composed. Prospect Management
      payload:
        $ref: '#/components/schemas/Production'
  schemas:
    SalesandMarketing:
      type: object
      description: ''
      properties:
        ProductandServiceSalesMaterial:
          $ref: '#/components/schemas/Text'
        ProductandServicesFeaturesAndOptions:
          $ref: '#/components/schemas/ProductFeature'
        ProductandServicePricingTable:
          $ref: '#/components/schemas/ProductFeatureModality'
        ProductandServiceFeesPenaltiesTable:
          $ref: '#/components/schemas/ProductFeatureModality'
        ProductSuitabilityGuide:
          $ref: '#/components/schemas/RuleSet'
        ProductandServiceEligibilityType:
          $ref: '#/components/schemas/CustomerProductEligibilityProfileClass'
        ProductandServiceEligibilityDescription:
          $ref: '#/components/schemas/Text'
        ProductandServiceOfferProcessingRequirements:
          $ref: '#/components/schemas/ProductRequirement'
    Text:
      type: object
      format: Text
      description: "Description/explanation of eligibility requirements, can include required disclosures ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    ProductFeature:
      type: object
      format: ProductFeature
      description: "Descriptions of product features and product options for review ||\r\n|"
      properties:
        Productfeaturetypevalues:
          enum:
            - Bankingservice
            - Administrationservice
            - Accessservice
            - Pricefeature
          format: ProductFeature
        ProductFeatureSpecification:
          $ref: '#/components/schemas/Text'
    ProductFeatureModality:
      type: object
      format: ProductFeatureModality
      description: "Applicable fees/penalties (can be reviewed through simulation) ||\r\n|"
      properties:
        Modalitytypevalues:
          enum:
            - AllocationModality
            - CalculationModality
            - DerivationModality
            - PaymentModality
            - ProcessingModality
            - ApplicationModality
            - DeliveryModality
          format: ProductFeatureModality
    RuleSet:
      type: object
      format: RuleSet
      description: >-
        Defines suitability requirements set by the bank
        GovernanceRules|GovernanceRules
        (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022
        BM ()
      properties:
        RuleSetDefinition:
          $ref: '#/components/schemas/Text'
        RuleSetInterpretation:
          $ref: '#/components/schemas/Text'
        Rulesettypevalues:
          enum:
            - Policy
            - Regulation
            - Law
            - Guideline
            - Criterion
            - Standard
          format: RuleSet
        RuleSetName:
          $ref: '#/components/schemas/Name'
        RuleSetIdentification:
          $ref: '#/components/schemas/Identifier'
        RuleSetLifecycleStatus:
          $ref: '#/components/schemas/Status'
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Party who plays a  specific role in the context of assigning a status. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Datetime:
      type: object
      format: Datetime
      description: 'Date and time at which the status was assigned. '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: 'Period of time during which the status is valid. '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    CustomerProductEligibilityProfileClass:
      type: object
      format: CustomerProductEligibilityProfileClass
      description: "Applicable legal or regulatory requirements governing eligibility ||\r\n|"
      properties:
        CustomerProductEligibilityProfileClass:
          type: string
          format: Class
          description: >-
            A value of Customer Product Profile Type whereby customer product
            eligibility will be defined. 
    ProductRequirement:
      type: object
      format: ProductRequirement
      description: "Details the tasks required to complete a customer offer ||\r\n|"
      properties:
        Requirementtypevalues:
          enum:
            - FunctionalRequirement
            - TechnicalRequirement
            - OperationalRequirement
            - LegalRequirement
            - TestingRequirement
            - SalesAndMarketingRequirement
            - ServicingRequirement
            - ProductionRequirement
            - SuitabilityRequirement
            - EligibilityRequirement
            - ProcessingRequirement
          format: ProductRequirement
        ProductRequirementSpecification:
          type: string
          format: String
          description: ''
    Operations:
      type: object
      description: ''
      properties:
        ProductandServiceOperatingSchedule:
          $ref: '#/components/schemas/Schedule'
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
        ProductandServiceConfigurationParameterDescription:
          $ref: '#/components/schemas/Text'
        ProductandServiceConfigurationParameterSetting:
          $ref: '#/components/schemas/Arrangement'
    Schedule:
      type: object
      format: Schedule
      description: "The intended schedule of operational tasks and product service availability ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        The default parameter setting and possible value range
        Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
    Servicing:
      type: object
      description: ''
      properties:
        ProductandServiceFeature:
          $ref: '#/components/schemas/ProductFeature'
        ProductandServiceFeatureGuideline:
          $ref: '#/components/schemas/RuleSet'
        ProductandServiceFeatureProblemDiagnosis:
          $ref: '#/components/schemas/Case'
        ProductandServiceFeatureProblemResolution:
          $ref: '#/components/schemas/CaseResolution'
    Case:
      type: object
      format: Case
      description: >-
        Diagnosis guide for addressing reported issues with a product or service
        feature InvestigationCase |InvestigationCase 
        (https://www.iso20022.org/standardsrepository/type/InvestigationCase)|Standard|ISO20022
        BM ()
      properties:
        CaseCreationDateTime:
          $ref: '#/components/schemas/Datetime'
        Casetypevalues:
          enum:
            - Card
            - Loan
            - Fraud
            - Payment
            - Market
            - Security
            - Other
          format: Case
        CaseLocation:
          $ref: '#/components/schemas/Location'
        Casestatustypevalues:
          enum:
            - Closed
            - Assigned
            - UnderInvestigation
            - Unknown
            - Overdue
          format: Case
        CaseDocument:
          $ref: '#/components/schemas/Document'
        CaseDateTime:
          $ref: '#/components/schemas/Datetime'
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
    Document:
      type: object
      format: Document
      description: ' '
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Creditnoterelatedtofinancialadjust
            - Debitnoterelatedtofinancialadjustm
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Structuredcommunicationreference
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Tradeservicesutilitytransaction
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    CaseResolution:
      type: object
      format: CaseResolution
      description: >-
        Resolution guide for resolving reported issue with a product or service
        feature InvestigationResolution|InvestigationResolution
        (https://www.iso20022.org/standardsrepository/type/InvestigationResolution)|Standard|ISO20022
        BM ()
      properties:
        ResolutionSchedule:
          $ref: '#/components/schemas/Schedule'
        ResolutionType:
          $ref: '#/components/schemas/Text'
        Description:
          $ref: '#/components/schemas/Text'
    Production:
      type: object
      description: ''
      properties:
        ProductandServiceLocationAvailability:
          $ref: '#/components/schemas/Location'
        ProductandServiceTimeAvailability:
          $ref: '#/components/schemas/DateTime'
        ProductandServiceAccessAvailability:
          $ref: '#/components/schemas/ServiceAccessArrangement'
    DateTime:
      type: object
      format: DateTime
      description: "The schedule for when the product or service can be accessed ||\r\n|"
      properties:
        TimeIndication:
          type: string
          format: String
          description: >-
            Expression of the point in time

            is expressed according to "TimeIndicationType" e.g. period, day,
            more detailed indication
        TimeIndicationType:
          type: string
          format: String
          description: ''
    ServiceAccessArrangement:
      type: object
      format: ServiceAccessArrangement
      description: "The access channels and devices that are supported by the product or service ||\r\n|"
      properties:
        ServiceAccessArrangement:
          type: string
          format: Class
          description: >-
            An arrangement that allows or restricts the access to a service or
            product through an access point  
    ProductDirectoryEntry:
      type: object
      format: ProductDirectoryEntry
      description: "Any configuration settings for the directory entry (e.g. generally available, provisional) ||\r\n|"
      properties:
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductDirectoryEntryConfiguration:
          $ref: '#/components/schemas/ProductDirectoryEntry'
        ProductRefrence:
          $ref: '#/components/schemas/BankingProduct'
    BankingProduct:
      type: object
      format: BankingProduct
      description: >2-
         Product_x000D_
        |Product
        (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
        BM ()
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: BankingProduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
