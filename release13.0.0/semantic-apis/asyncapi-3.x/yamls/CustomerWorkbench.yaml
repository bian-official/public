asyncapi: 3.0.0
info:
  title: Customer Workbench
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    represents customer side devices. Most commonly providing a customer access
    portal to the banks products and services through any suitable channel and
    device
channels:
  CustomerWorkbenchOperatingSession/Created:
    address: CustomerWorkbenchOperatingSession/Created
    messages:
      CustomerWorkbenchOperatingSession-created.message:
        $ref: '#/components/messages/CustomerWorkbenchOperatingSession'
    description: ''
  CustomerWorkbenchOperatingSession/Updated:
    address: CustomerWorkbenchOperatingSession/Updated
    messages:
      CustomerWorkbenchOperatingSession-updated.message:
        $ref: '#/components/messages/CustomerWorkbenchOperatingSession'
    description: ''
  ProductandServiceAccess/Created:
    address: ProductandServiceAccess/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductandServiceAccess'
    description: ''
  ProductandServiceAccess/Updated:
    address: ProductandServiceAccess/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductandServiceAccess'
    description: ''
  Contact/Created:
    address: Contact/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Contact'
    description: ''
  Contact/Updated:
    address: Contact/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Contact'
    description: ''
  SWUpdate/Created:
    address: SWUpdate/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SWUpdate'
    description: ''
  SWUpdate/Updated:
    address: SWUpdate/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SWUpdate'
    description: ''
  Browsing/Created:
    address: Browsing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Browsing'
    description: ''
  Browsing/Updated:
    address: Browsing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Browsing'
    description: ''
  Broadcast/Created:
    address: Broadcast/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Broadcast'
    description: ''
  Broadcast/Updated:
    address: Broadcast/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Broadcast'
    description: ''
operations:
  CustomerWorkbenchOperatingSession-created:
    action: receive
    channel:
      $ref: '#/channels/CustomerWorkbenchOperatingSession~1Created'
    summary: CustomerWorkbenchOperatingSession
    messages:
      - $ref: >-
          #/channels/CustomerWorkbenchOperatingSession~1Created/messages/CustomerWorkbenchOperatingSession-created.message
  CustomerWorkbenchOperatingSession-updated:
    action: receive
    channel:
      $ref: '#/channels/CustomerWorkbenchOperatingSession~1Updated'
    summary: CustomerWorkbenchOperatingSession
    messages:
      - $ref: >-
          #/channels/CustomerWorkbenchOperatingSession~1Updated/messages/CustomerWorkbenchOperatingSession-updated.message
  ProductandServiceAccess/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductandServiceAccess~1Created'
    summary: ProductandServiceAccess
    messages:
      - $ref: '#/channels/ProductandServiceAccess~1Created/messages/publish.message'
  ProductandServiceAccess/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductandServiceAccess~1Updated'
    summary: ProductandServiceAccess
    messages:
      - $ref: '#/channels/ProductandServiceAccess~1Updated/messages/publish.message'
  Contact/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Contact~1Created'
    summary: Contact
    messages:
      - $ref: '#/channels/Contact~1Created/messages/publish.message'
  Contact/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Contact~1Updated'
    summary: Contact
    messages:
      - $ref: '#/channels/Contact~1Updated/messages/publish.message'
  SWUpdate/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SWUpdate~1Created'
    summary: SWUpdate
    messages:
      - $ref: '#/channels/SWUpdate~1Created/messages/publish.message'
  SWUpdate/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SWUpdate~1Updated'
    summary: SWUpdate
    messages:
      - $ref: '#/channels/SWUpdate~1Updated/messages/publish.message'
  Browsing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Browsing~1Created'
    summary: Browsing
    messages:
      - $ref: '#/channels/Browsing~1Created/messages/publish.message'
  Browsing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Browsing~1Updated'
    summary: Browsing
    messages:
      - $ref: '#/channels/Browsing~1Updated/messages/publish.message'
  Broadcast/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Broadcast~1Created'
    summary: Broadcast
    messages:
      - $ref: '#/channels/Broadcast~1Created/messages/publish.message'
  Broadcast/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Broadcast~1Updated'
    summary: Broadcast
    messages:
      - $ref: '#/channels/Broadcast~1Updated/messages/publish.message'
components:
  messages:
    CustomerWorkbenchOperatingSession:
      name: CustomerWorkbenchOperatingSession
      description: >-
        Operate equipment and/or a largely automated facility within Customer
        Workbench. 
      payload:
        $ref: '#/components/schemas/CustomerWorkbenchOperatingSession'
    ProductandServiceAccess:
      name: ProductandServiceAccess
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/ProductandServiceAccess'
    Contact:
      name: Contact
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/Contact'
    SWUpdate:
      name: SWUpdate
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/SWUpdate'
    Browsing:
      name: Browsing
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/Browsing'
    Broadcast:
      name: Broadcast
      description: >-
        The collection of operational serivces/functions offered by the
        operational facility


        Examples:- messages, capture, routines
      payload:
        $ref: '#/components/schemas/Broadcast'
  schemas:
    ProductandServiceAccess:
      type: object
      description: ''
      properties:
        CustomerDetailsPreferences:
          $ref: '#/components/schemas/Text'
        ProductandServiceMenu:
          type: string
          format: Object
          description: "Locally maintained structured dialogue to access bank services as appropriate ||\r\n|"
        ProductandServiceMenuAccessLog:
          $ref: '#/components/schemas/Log'
        AccessStartEndTime:
          $ref: '#/components/schemas/Datetime'
        CustomerResidentFiles:
          type: string
          format: Object
          description: "Local copies of requested information, application forms etc. ||\r\n|"
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Log:
      type: object
      format: Log
      description: "Locally record of product/service screen access ||\r\n|"
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Datetime:
      type: object
      format: Datetime
      description: >-
        Logged time and duration spent on product/service screens
        ISODateTime|ISODateTime
        (https://www.iso20022.org/standardsrepository/type/ISODateTime)|Standard|ISO20022
        BM ()
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Contact:
      type: object
      description: ''
      properties:
        ContactStartEndTime:
          $ref: '#/components/schemas/Datetime'
        ContactActivityLog:
          $ref: '#/components/schemas/Log'
    SWUpdate:
      type: object
      description: ''
      properties:
        SWUpdateApplication:
          $ref: '#/components/schemas/Text'
        SWUpdateVersion:
          $ref: '#/components/schemas/Text'
        SWUpdateImage:
          $ref: '#/components/schemas/Text'
        Date:
          $ref: '#/components/schemas/Datetime'
    Browsing:
      type: object
      description: ''
      properties:
        CustomerURL:
          type: string
          format: Object
          description: "The device URL can be used to detect known and repeat customer access ||\r\n|"
        BankWebsiteURL:
          type: string
          format: Object
          description: "The access URL to the public web based bank information ||\r\n|"
    Broadcast:
      type: object
      description: ''
      properties:
        CustomerWorkbenchBroadcastRecord:
          type: string
          format: Object
          description: "Text of the broadcast message ||\r\n|"
        CustomerWorkbenchBroadcastRecordDateandTime:
          $ref: '#/components/schemas/Datetime'
    CustomerWorkbenchOperatingSession:
      type: object
      description: ''
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
        CustomerWorkbenchDeviceRegistration:
          type: string
          format: Object
          description: "Reference to device properties used to identify the device  (e.g. URL, ANI, serial number) ||\r\n|"
        CustomerWorkbenchDeviceManufacturer:
          type: string
          format: Object
          description: "The make of the device if known ||\r\n|"
        CustomerWorkbenchDeviceOperatingSystemVersionNumber:
          type: string
          format: Number
          description: >-
            The operating system type and version (use to match downloaded
            software) Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        CustomerWorkbenchDeviceAccessPermissions:
          $ref: '#/components/schemas/Arrangement'
        InstalledBankApplicationType:
          $ref: '#/components/schemas/Text'
        InstalledBankApplicationVersionNumber:
          type: string
          format: Number
          description: >-
            The version number(s) of device resident bank software Number|Number
            (https://www.iso20022.org/standardsrepository/type/Number)|Standard|ISO20022
            BM ()
        LastUpdateDateandTime:
          $ref: '#/components/schemas/Text'
    Arrangement:
      type: object
      format: Arrangement
      description: >-
        The bank's access permissions (e.g. local storage access, administrator
        permissions, system download permission) Obligation|Obligation
        (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022
        BM ()
      properties:
        ArrangementAction:
          $ref: '#/components/schemas/Action'
        ArrangementStartDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementEndDate:
          $ref: '#/components/schemas/Datetime'
        ArrangementStatus:
          $ref: '#/components/schemas/Arrangementstatus'
        ArrangementSubjectMatter:
          $ref: '#/components/schemas/Subject'
        Arrangementtypevalues:
          enum:
            - SweepArrangement
            - WithdrawalArrangement
            - DepositArrangement
            - InterestArrangement
            - FeeArrangement
            - LienArrangement
            - InformationArrangement
            - PaymentArrangement
            - EntitlementArrangement
            - PeriodArrangement
            - CollateralArrangement
            - LimitArrangement
            - AccessArrangement
            - CardPaymentArrangement
            - StandingOrderArrangement
            - OverdraftArrangement
            - RepaymentArrangement
            - StatementArrangement
            - CreditTransferArrangement
            - ProductAndServiceArrangement
            - FactoringArrangement
            - RolloverArrangement
            - RestructuringArrangement
            - InsuranceArrangement
            - CollectionArrangement
            - UnderwritingArrangement
            - TerminationArrangement
            - MaturityArrangement
          format: Arrangement
    Action:
      type: object
      format: Action
      description: ' '
      properties:
        Actiontypevalues:
          enum:
            - Initiate
            - Execute
            - Create
            - Transfer
            - Pay
            - Deliver
            - Apply
            - Calculate
          format: Action
    Arrangementstatus:
      type: object
      format: Arrangementstatus
      description: >-
        A characteristic of arrangement which refers to the LifecycleStatus of
        arrangement (e.g., requested, proposed, offered, accepted, cancelled,
        terminated, fulfilled, etc.) 
      properties:
        ArrangementStatus:
          $ref: '#/components/schemas/Status'
        Arrangementstatustypevalues:
          enum:
            - Requested
            - Proposed
            - Offered
            - Accepted
            - Cancelled
            - Fulfilled
            - Terminated
          format: Arrangementstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Subject:
      type: object
      format: Subject
      description: ' '
      properties:
        Subject:
          type: string
          format: Class
          description: >-
            A thing that is discussed or dealt whit in agreement/arrangement
            about doing or not doing (as action) something. 
