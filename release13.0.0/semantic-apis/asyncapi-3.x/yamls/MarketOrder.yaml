asyncapi: 3.0.0
info:
  title: Market Order
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Market Order records an
    instruction from a customer or his or her representative to buy or sell
    securities. It follows the order during its lifetime and reports back to the
    requestor on the execution.
channels:
  MarketOrderTransaction/Created:
    address: MarketOrderTransaction/Created
    messages:
      MarketOrderTransaction-created.message:
        $ref: '#/components/messages/MarketOrderTransaction'
    description: ''
  MarketOrderTransaction/Updated:
    address: MarketOrderTransaction/Updated
    messages:
      MarketOrderTransaction-updated.message:
        $ref: '#/components/messages/MarketOrderTransaction'
    description: ''
  CustomerProcessing/Created:
    address: CustomerProcessing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerProcessing'
    description: ''
  CustomerProcessing/Updated:
    address: CustomerProcessing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerProcessing'
    description: ''
  TradeInitiation/Created:
    address: TradeInitiation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/TradeInitiation'
    description: ''
  TradeInitiation/Updated:
    address: TradeInitiation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/TradeInitiation'
    description: ''
  FundingCheck/Created:
    address: FundingCheck/Created
    messages:
      publish.message:
        $ref: '#/components/messages/FundingCheck'
    description: ''
  FundingCheck/Updated:
    address: FundingCheck/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/FundingCheck'
    description: ''
  Compliance/Created:
    address: Compliance/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Compliance'
    description: ''
  Compliance/Updated:
    address: Compliance/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Compliance'
    description: ''
operations:
  MarketOrderTransaction-created:
    action: receive
    channel:
      $ref: '#/channels/MarketOrderTransaction~1Created'
    summary: MarketOrderTransaction
    messages:
      - $ref: >-
          #/channels/MarketOrderTransaction~1Created/messages/MarketOrderTransaction-created.message
  MarketOrderTransaction-updated:
    action: receive
    channel:
      $ref: '#/channels/MarketOrderTransaction~1Updated'
    summary: MarketOrderTransaction
    messages:
      - $ref: >-
          #/channels/MarketOrderTransaction~1Updated/messages/MarketOrderTransaction-updated.message
  CustomerProcessing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerProcessing~1Created'
    summary: CustomerProcessing
    messages:
      - $ref: '#/channels/CustomerProcessing~1Created/messages/publish.message'
  CustomerProcessing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerProcessing~1Updated'
    summary: CustomerProcessing
    messages:
      - $ref: '#/channels/CustomerProcessing~1Updated/messages/publish.message'
  TradeInitiation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/TradeInitiation~1Created'
    summary: TradeInitiation
    messages:
      - $ref: '#/channels/TradeInitiation~1Created/messages/publish.message'
  TradeInitiation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/TradeInitiation~1Updated'
    summary: TradeInitiation
    messages:
      - $ref: '#/channels/TradeInitiation~1Updated/messages/publish.message'
  FundingCheck/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/FundingCheck~1Created'
    summary: FundingCheck
    messages:
      - $ref: '#/channels/FundingCheck~1Created/messages/publish.message'
  FundingCheck/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/FundingCheck~1Updated'
    summary: FundingCheck
    messages:
      - $ref: '#/channels/FundingCheck~1Updated/messages/publish.message'
  Compliance/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Compliance~1Created'
    summary: Compliance
    messages:
      - $ref: '#/channels/Compliance~1Created/messages/publish.message'
  Compliance/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Compliance~1Updated'
    summary: Compliance
    messages:
      - $ref: '#/channels/Compliance~1Updated/messages/publish.message'
components:
  messages:
    MarketOrderTransaction:
      name: MarketOrderTransaction
      description: >-
        Execute a well-bounded financial transaction/task, typically involving
        largely automated/structured fulfillment processing within Market
        Order. 
      payload:
        $ref: '#/components/schemas/MarketOrderTransaction'
    CustomerProcessing:
      name: CustomerProcessing
      description: The sub-tasks involved in the execution of the financial transaction
      payload:
        $ref: '#/components/schemas/CustomerProcessing'
    TradeInitiation:
      name: TradeInitiation
      description: The sub-tasks involved in the execution of the financial transaction
      payload:
        $ref: '#/components/schemas/TradeInitiation'
    FundingCheck:
      name: FundingCheck
      description: The sub-tasks involved in the execution of the financial transaction
      payload:
        $ref: '#/components/schemas/FundingCheck'
    Compliance:
      name: Compliance
      description: The sub-tasks involved in the execution of the financial transaction
      payload:
        $ref: '#/components/schemas/Compliance'
  schemas:
    CustomerProcessing:
      type: object
      description: ''
      properties:
        MarketOrderCustomerProcessingCheckResult:
          $ref: '#/components/schemas/Assessment'
    Assessment:
      type: object
      format: Assessment
      description: >-
        Details of any customer specific processing requirements applied to the
        market order Assessment|Assessment
        (https://www.iso20022.org/standardsrepository/type/Assessment)|Standard|ISO20022
        BM ()
      properties:
        Assessmenttypevalues:
          enum:
            - AssetValuation
            - ProductMatching
            - Authorization
            - Authentication
            - QualityAssurance
            - Audit
            - ComplianceCheck
            - FundingCheck
            - SuitabilityCheck
            - PerformanceCheck
            - ImpactAssessment
            - RiskAssessment
            - Rating
            - UnderwritingAssessment
            - Qualification
            - Verification
            - KYCAssessment
            - PEPAssessment
            - AMLAssessment
          format: Assessment
        AssessmentMethod:
          $ref: '#/components/schemas/Text'
        AssessmentSchedule:
          $ref: '#/components/schemas/Schedule'
        AssessmentDescription:
          $ref: '#/components/schemas/Text'
        AssessmentModel:
          $ref: '#/components/schemas/Model'
        AssessmentDateTime:
          $ref: '#/components/schemas/Datetime'
        AssessmentResult:
          $ref: '#/components/schemas/Text'
        AssessmentSupportingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRepresentingDocument:
          $ref: '#/components/schemas/Document'
        AssessmentRequiredAdjustment:
          $ref: '#/components/schemas/Text'
        AssessmentRequirement:
          $ref: '#/components/schemas/Requirement'
        AssessmentExpiryDate:
          $ref: '#/components/schemas/Date'
        AssessmentStatus:
          $ref: '#/components/schemas/Status'
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Schedule:
      type: object
      format: Schedule
      description: ' '
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
    Model:
      type: object
      format: Model
      description: ' '
      properties:
        ModelType:
          $ref: '#/components/schemas/Text'
        ModelPurpose:
          $ref: '#/components/schemas/Text'
        ModelVersion:
          $ref: '#/components/schemas/Text'
        ModelName:
          $ref: '#/components/schemas/Name'
        ModelDateAndTime:
          $ref: '#/components/schemas/Datetime'
        ModelStatus:
          $ref: '#/components/schemas/Status'
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: >-
        An identifier that allows to uniquely refer to an instance of a
        Document. 
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Document:
      type: object
      format: Document
      description: 'Document that represents the result of an assessment(s). '
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Creditnoterelatedtofinancialadjust
            - Debitnoterelatedtofinancialadjustm
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Structuredcommunicationreference
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Tradeservicesutilitytransaction
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Document:
          type: string
          format: Class
          description: >-
            Something tangible that records something, such as a recording or a
            photograph, or a writing that can be used to furnish evidence or
            information (FIBO)


            Definition: A physical or digital representation of something
            meaningful to the audience.


            Comment: 

            1.Technical: Manuals, instructions, tutorials, procedures,
            specifications, etc., that accompany a piece of equipment or
            software, and provide guidance for its proper use and maintenance.

            2.Trading: Preparation of a set of commercial and financial
            documents that record or support a business transaction.
            International trade documentations include air waybill, bill of
            exchange, bill of lading, certificate of inspection, certificate of
            insurance, certificate of origin, commercial invoice, and consular
            invoice.



            Read more:
            http://www.businessdictionary.com/definition/documentation.html#ixzz3EQGRGC4W
             
    Requirement:
      type: object
      format: Requirement
      description: ' '
      properties:
        RequirementType:
          type: string
          format: String
          description: ''
    Date:
      type: object
      format: Date
      description: 'Date when the assessment expires. (ISO20022) '
      properties:
        DateContent:
          $ref: '#/components/schemas/Text'
    TradeInitiation:
      type: object
      description: ''
      properties:
        MarketTradeTransactionInstanceReference:
          $ref: '#/components/schemas/Identifier'
        MarketTradeTransactionInstanceStatus:
          $ref: '#/components/schemas/Status'
        MarketTradeInitiationTaskResult:
          $ref: '#/components/schemas/Task'
    Task:
      type: object
      format: Task
      description: "Details of the market trade initiation task ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    FundingCheck:
      type: object
      format: FundingCheck
      description: "The outcome of the funds available check ||\r\n|"
      properties:
        MarketOrderTransactionFundingCheckResult:
          $ref: '#/components/schemas/FundingCheck'
        FundingCheck:
          type: string
          format: Class
          description: 'An assessment to check the fund is available '
    Compliance:
      type: object
      description: ''
      properties:
        Compliancechecktypevalues:
          enum:
            - RegulatoryComplianceCheck
            - LegalComplianceCheck
            - GuidelineComplianceCheck
        MarketOrderTransactionComplianceCheckResult:
          $ref: '#/components/schemas/ComplianceCheck'
        MarketOrderTransactionComplianceTaskResult:
          $ref: '#/components/schemas/Task'
    ComplianceCheck:
      type: object
      format: ComplianceCheck
      description: "The outcome of the compliance check ||\r\n|"
      properties:
        ComplianceCheckType:
          type: string
          format: String
          description: ''
    MarketOrderTransaction:
      type: object
      format: MarketOrderTransaction
      description: "The details of the market order transaction ||\r\n|"
      properties:
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: MarketOrderTransaction
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        EmployeeorBusinessUnitReference:
          $ref: '#/components/schemas/Involvedparty'
        InvestmentPortfolioInstanceReference:
          $ref: '#/components/schemas/Identifier'
        CustomerMarketOrderProcessingInstruction:
          $ref: '#/components/schemas/Instruction'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        CorrespondenceInstanceReference:
          $ref: '#/components/schemas/Identifier'
        MarketOrderTransaction:
          $ref: '#/components/schemas/MarketOrderTransaction'
        InvestmentAccountArrangementInstanceReference:
          $ref: '#/components/schemas/Identifier'
        CurrentAccountArrangementInstanceReference:
          $ref: '#/components/schemas/Identifier'
        MarketOrderType:
          $ref: '#/components/schemas/Text'
        Securitytypevalues:
          enum:
            - Equity
            - Warrant
            - Entitlement
          format: MarketOrderTransaction
        Amount:
          $ref: '#/components/schemas/Amount'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: MarketOrderTransaction
        Date:
          $ref: '#/components/schemas/Datetime'
    Instruction:
      type: object
      format: Instruction
      description: "Any customer specific processing preferences or requirements ||\r\n|"
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Instructiondatetime'
        InstructionStatus:
          $ref: '#/components/schemas/Instructionstatus'
        InstructionIdentifier:
          $ref: '#/components/schemas/Instructionidentification'
        Instructiontypevalues:
          enum:
            - PaymentInstruction
            - DeliveryOrder
            - InformationRequest
            - ExchangeInstruction
            - AllocationInstruction
            - MaintenanceInstruction
          format: Instruction
        InstructionResult:
          $ref: '#/components/schemas/Text'
        InstructionDescription:
          $ref: '#/components/schemas/Text'
        InstructionLog:
          $ref: '#/components/schemas/Log'
        InstructionPurpose:
          $ref: '#/components/schemas/Text'
    Instructiondatetime:
      type: object
      format: Instructiondatetime
      description: ' '
      properties:
        InstructionDate:
          $ref: '#/components/schemas/Datetime'
        Instructiondatetimetypevalues:
          enum:
            - DueDate
            - ExecutionDate
            - FulfillmentDate
          format: Instructiondatetime
    Instructionstatus:
      type: object
      format: Instructionstatus
      description: >-
        A characteristic of instruction which refers to the LifecycleStatus of
        instruction (e.g., requested, executed, fulfilled, etc.);  
      properties:
        Instructionstatustypevalues:
          enum:
            - Pendingprocessing
            - Acknowledgedaccepted
            - Rejected
            - Accepted
            - Completed
            - Notreceived
            - Cancelled
            - Beingcancelled
            - Receivedbyissuerorregistrar
            - Pending
            - Standinginstruction
            - Queued
            - Cancelledbysubcustodian
            - Forwarded
          format: Instructionstatus
        InstructionStatus:
          $ref: '#/components/schemas/Status'
    Instructionidentification:
      type: object
      format: Instructionidentification
      description: >-
        An identifier that allows to uniquely refer to an instance of an
        Instruction.
         
      properties:
        InstructionIdentification:
          $ref: '#/components/schemas/Identifier'
        Instructionidentificationtypevalues:
          enum:
            - OrderNumber
            - InstructionNumber
          format: Instructionidentification
    Log:
      type: object
      format: Log
      description: ' '
      properties:
        LogType:
          $ref: '#/components/schemas/Text'
        LogPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        LogDate:
          $ref: '#/components/schemas/Datetime'
        LogIdentification:
          $ref: '#/components/schemas/Identifier'
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "The document reference for the order confirmation notice ||\r\n|"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    Amount:
      type: object
      format: Amount
      description: >-
        The volume of shares to be bought or sold
        CurrencyAndAmount|CurrencyAndAmount
        (https://www.iso20022.org/standardsrepository/type/CurrencyAndAmount)|Standard|ISO20022 
        ()
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
