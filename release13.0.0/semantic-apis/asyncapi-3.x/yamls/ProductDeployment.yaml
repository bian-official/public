asyncapi: 3.0.0
info:
  title: Product Deployment
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | Plan and administer the
    production deployment new and updated products and services
channels:
  ProductandServiceDeploymentDevelopment/Created:
    address: ProductandServiceDeploymentDevelopment/Created
    messages:
      ProductandServiceDeploymentDevelopment-created.message:
        $ref: '#/components/messages/ProductandServiceDeploymentDevelopment'
    description: ''
  ProductandServiceDeploymentDevelopment/Updated:
    address: ProductandServiceDeploymentDevelopment/Updated
    messages:
      ProductandServiceDeploymentDevelopment-updated.message:
        $ref: '#/components/messages/ProductandServiceDeploymentDevelopment'
    description: ''
  HROperations/Created:
    address: HROperations/Created
    messages:
      publish.message:
        $ref: '#/components/messages/HROperations'
    description: ''
  HROperations/Updated:
    address: HROperations/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/HROperations'
    description: ''
  SalesandMarketing/Created:
    address: SalesandMarketing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/SalesandMarketing'
    description: ''
  SalesandMarketing/Updated:
    address: SalesandMarketing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/SalesandMarketing'
    description: ''
  ProductionSupport/Created:
    address: ProductionSupport/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ProductionSupport'
    description: ''
  ProductionSupport/Updated:
    address: ProductionSupport/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ProductionSupport'
    description: ''
  Systems/Created:
    address: Systems/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Systems'
    description: ''
  Systems/Updated:
    address: Systems/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Systems'
    description: ''
  Servicing/Created:
    address: Servicing/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Servicing/Updated:
    address: Servicing/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Servicing'
    description: ''
  Production/Created:
    address: Production/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Production'
    description: ''
  Production/Updated:
    address: Production/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Production'
    description: ''
  ITOperations/Created:
    address: ITOperations/Created
    messages:
      publish.message:
        $ref: '#/components/messages/ITOperations'
    description: ''
  ITOperations/Updated:
    address: ITOperations/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/ITOperations'
    description: ''
operations:
  ProductandServiceDeploymentDevelopment-created:
    action: receive
    channel:
      $ref: '#/channels/ProductandServiceDeploymentDevelopment~1Created'
    summary: ProductandServiceDeploymentDevelopment
    messages:
      - $ref: >-
          #/channels/ProductandServiceDeploymentDevelopment~1Created/messages/ProductandServiceDeploymentDevelopment-created.message
  ProductandServiceDeploymentDevelopment-updated:
    action: receive
    channel:
      $ref: '#/channels/ProductandServiceDeploymentDevelopment~1Updated'
    summary: ProductandServiceDeploymentDevelopment
    messages:
      - $ref: >-
          #/channels/ProductandServiceDeploymentDevelopment~1Updated/messages/ProductandServiceDeploymentDevelopment-updated.message
  HROperations/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/HROperations~1Created'
    summary: HROperations
    messages:
      - $ref: '#/channels/HROperations~1Created/messages/publish.message'
  HROperations/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/HROperations~1Updated'
    summary: HROperations
    messages:
      - $ref: '#/channels/HROperations~1Updated/messages/publish.message'
  SalesandMarketing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/SalesandMarketing~1Created'
    summary: SalesandMarketing
    messages:
      - $ref: '#/channels/SalesandMarketing~1Created/messages/publish.message'
  SalesandMarketing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/SalesandMarketing~1Updated'
    summary: SalesandMarketing
    messages:
      - $ref: '#/channels/SalesandMarketing~1Updated/messages/publish.message'
  ProductionSupport/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductionSupport~1Created'
    summary: ProductionSupport
    messages:
      - $ref: '#/channels/ProductionSupport~1Created/messages/publish.message'
  ProductionSupport/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ProductionSupport~1Updated'
    summary: ProductionSupport
    messages:
      - $ref: '#/channels/ProductionSupport~1Updated/messages/publish.message'
  Systems/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Systems~1Created'
    summary: Systems
    messages:
      - $ref: '#/channels/Systems~1Created/messages/publish.message'
  Systems/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Systems~1Updated'
    summary: Systems
    messages:
      - $ref: '#/channels/Systems~1Updated/messages/publish.message'
  Servicing/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Created'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Created/messages/publish.message'
  Servicing/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Servicing~1Updated'
    summary: Servicing
    messages:
      - $ref: '#/channels/Servicing~1Updated/messages/publish.message'
  Production/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Production~1Created'
    summary: Production
    messages:
      - $ref: '#/channels/Production~1Created/messages/publish.message'
  Production/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Production~1Updated'
    summary: Production
    messages:
      - $ref: '#/channels/Production~1Updated/messages/publish.message'
  ITOperations/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/ITOperations~1Created'
    summary: ITOperations
    messages:
      - $ref: '#/channels/ITOperations~1Created/messages/publish.message'
  ITOperations/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/ITOperations~1Updated'
    summary: ITOperations
    messages:
      - $ref: '#/channels/ITOperations~1Updated/messages/publish.message'
components:
  messages:
    ProductandServiceDeploymentDevelopment:
      name: ProductandServiceDeploymentDevelopment
      description: >-
        To build or enhance something, typically an IT production systems 
        within Product Deployment. Includes development, Assessment and
        deployment activities.

        Example: Build, enhance, test and deploy a major enhancement to a
        production product processing system.
      payload:
        $ref: '#/components/schemas/ProductandServiceDeploymentDevelopment'
    HROperations:
      name: HROperations
      description: >-
        A collection of one or more deliverables that may be further defined in
        terms of an approach to be followed to create them


        Examples:- Functional module specification
      payload:
        $ref: '#/components/schemas/HROperations'
    SalesandMarketing:
      name: SalesandMarketing
      description: >-
        A collection of one or more deliverables that may be further defined in
        terms of an approach to be followed to create them


        Examples:- Functional module specification
      payload:
        $ref: '#/components/schemas/SalesandMarketing'
    ProductionSupport:
      name: ProductionSupport
      description: >-
        A collection of one or more deliverables that may be further defined in
        terms of an approach to be followed to create them


        Examples:- Functional module specification
      payload:
        $ref: '#/components/schemas/ProductionSupport'
    Systems:
      name: Systems
      description: >-
        A collection of one or more deliverables that may be further defined in
        terms of an approach to be followed to create them


        Examples:- Functional module specification
      payload:
        $ref: '#/components/schemas/Systems'
    Servicing:
      name: Servicing
      description: >-
        A collection of one or more deliverables that may be further defined in
        terms of an approach to be followed to create them


        Examples:- Functional module specification
      payload:
        $ref: '#/components/schemas/Servicing'
    Production:
      name: Production
      description: >-
        A collection of one or more deliverables that may be further defined in
        terms of an approach to be followed to create them


        Examples:- Functional module specification
      payload:
        $ref: '#/components/schemas/Production'
    ITOperations:
      name: ITOperations
      description: >-
        A collection of one or more deliverables that may be further defined in
        terms of an approach to be followed to create them


        Examples:- Functional module specification
      payload:
        $ref: '#/components/schemas/ITOperations'
  schemas:
    HROperations:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentHROperationsRequirements:
          $ref: '#/components/schemas/Requirement'
        ProductandServiceDeploymentHROperationsRequirementsWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ProductandServiceDeploymentHROperationsRequirementsTaskSpecification:
          $ref: '#/components/schemas/Text'
    Requirement:
      type: object
      format: Requirement
      description: "The consolidated aspects of the staffing operations deployment tasks ||\r\n|"
      properties:
        RequirementType:
          type: string
          format: String
          description: ''
    Workproduct:
      type: object
      format: Workproduct
      description: "File of consolidated deployment planning and deliverable specifications for the task ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: "Details the tasks and deliverables needed to handle the staffing operations needs of the deployment ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "Reference to associated documents ||\r\n|"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    SalesandMarketing:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentSalesandMarketingRequirements:
          $ref: '#/components/schemas/Requirement'
        ProductandServiceDeploymentSalesandMarketingRequirementsWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ProductandServiceDeploymentSalesandMarketingRequirementsTaskSpecification:
          $ref: '#/components/schemas/Text'
    ProductionSupport:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentProductionSupportRequirements:
          $ref: '#/components/schemas/Requirement'
        ProductandServiceDeploymentProductionSupportRequirementsWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ProductandServiceDeploymentProductionSupportRequirementsTaskSpecification:
          $ref: '#/components/schemas/Text'
    Systems:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentSystemsRequirements:
          $ref: '#/components/schemas/Requirement'
        ProductandServiceDeploymentSystemsRequirementsWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ProductandServiceDeploymentSystemsRequirementsTaskSpecification:
          $ref: '#/components/schemas/Text'
    Servicing:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentServicingRequirements:
          $ref: '#/components/schemas/Requirement'
        ProductandServiceDeploymentServicingRequirementsWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ProductandServiceDeploymentServicingRequirementsTaskSpecification:
          $ref: '#/components/schemas/Text'
    Production:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentProductionRequirements:
          $ref: '#/components/schemas/Requirement'
        ProductandServiceDeploymentProductionRequirementsWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ProductandServiceDeploymentProductionRequirementsTaskSpecification:
          $ref: '#/components/schemas/Text'
    ITOperations:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentITOperationsRequirements:
          $ref: '#/components/schemas/Requirement'
        ProductandServiceDeploymentITOperationsRequirementsWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ProductandServiceDeploymentITOperationsRequirementsTaskSpecification:
          $ref: '#/components/schemas/Text'
    ProductandServiceDeploymentDevelopment:
      type: object
      description: ''
      properties:
        ProductandServiceDeploymentProjectName:
          $ref: '#/components/schemas/Name'
        ProductandServiceDeploymentProjectType:
          $ref: '#/components/schemas/Text'
        ProductandServiceDeploymentProjectDescription:
          $ref: '#/components/schemas/Text'
        ProductandServiceDeploymentImplementationPlan:
          $ref: '#/components/schemas/Plan'
        ProductandServiceDeploymentBudget:
          $ref: '#/components/schemas/BudgetArrangement'
        ProductandServiceDeploymentOrganization:
          $ref: '#/components/schemas/Organisation'
        ProductandServiceDeploymentSchedule:
          $ref: '#/components/schemas/Schedule'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
        Date:
          $ref: '#/components/schemas/Datetime'
    Plan:
      type: object
      format: Plan
      description: "The derived deployment execution plan, covering tasks from the completion and acceptance of the deployment plan through to completion of the deployment including post deployment analysis tasks if required. Consolidates the different aspects of the plan. (Captures both planned and actual results) ||\r\n|"
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Amount:
      type: object
      format: Amount
      description: ' '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    BudgetArrangement:
      type: object
      format: BudgetArrangement
      description: "The financial considerations for the deployment (includes planning and execution) ||\r\n|"
      properties:
        BudgetArrangement:
          type: string
          format: Class
          description: >-
            An arrangement which is specifying an estimate of costs, revenues,
            and resources over a specified period, reflecting a reading of
            future financial conditions and goals. (adapted from Business
            Dictionary)


            Read more: http://www.businessdictionary.com/definition/budget.html



            A budget is an estimation of revenue and expenses over a specified
            future period of time and is utilized by governments, businesses,
            and individuals.

            A budget is basically a financial plan for a defined period,
            normally a year that is known to greatly enhance the success of any
            financial undertaking. (Investopedia)


            https://www.investopedia.com/terms/b/budget.asp 
    Organisation:
      type: object
      format: Organisation
      description: "The organizational aspects of the deployment effort (includes planning and execution) Organisation\__x000D_\n|Organisation\_ (https://www.iso20022.org/standardsrepository/type/Organisation)|Standard|ISO20022 BM ()"
      properties:
        OrganisationStructureHierarchy:
          $ref: '#/components/schemas/Text'
        OrganisationIdentification:
          $ref: '#/components/schemas/Organisationidentification'
        OrganisationSector:
          $ref: '#/components/schemas/Text'
        LegalEntityIndicator:
          type: string
          format: String
          description: ''
        OrganisationDate:
          $ref: '#/components/schemas/Organisationdatetime'
        Organisationtypevalues:
          enum:
            - LegalEntity
            - Authority
            - OrganisationUnit
            - FinancialInstitution
            - Charity
            - GovernmentBody
          format: Organisation
        OrganisationName:
          $ref: '#/components/schemas/Organisationname'
        Organisationlegalstructuretypevalues:
          enum:
            - Corporation
            - Individual
            - Supranational
            - Sovereign
            - Municipal
            - Province
            - State
            - County
            - Partnership
            - Financialinstitution
            - National
          format: Organisation
    Organisationidentification:
      type: object
      format: Organisationidentification
      description: ' '
      properties:
        Organisationidentificationtypevalues:
          enum:
            - LEI
            - ELF
            - MIC
            - BICFI
            - Bankpartyidentification
            - Centralbankidentificationnumber
            - Clearingidentificationnumber
            - Certificateofincorporationnumber
            - Countryidentificationcode
            - Customernumber
            - Datauniversalnumberingsystem
            - Employeridentificationnumber
            - Gs1glnidentifier
            - SIREN
            - SIRET
            - Taxidentificationnumber
            - EANGLN
          format: Organisationidentification
        OrganisationIdentification:
          $ref: '#/components/schemas/Identifier'
    Organisationdatetime:
      type: object
      format: Organisationdatetime
      description: ' '
      properties:
        OrganisatioDate:
          $ref: '#/components/schemas/Datetime'
        Organisationdatetimetypevalues:
          enum:
            - RegistrationDate
            - EstablishmentDate
            - EntityExpirationDate
          format: Organisationdatetime
    Organisationname:
      type: object
      format: Organisationname
      description: ' '
      properties:
        Name:
          $ref: '#/components/schemas/Name'
        Organisationnametypevalues:
          enum:
            - ShortName
            - TradingName
            - LegalName
          format: Organisationname
    Schedule:
      type: object
      format: Schedule
      description: "The deployment schedule of events, planned and actual (includes planning and execution tasks) ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
