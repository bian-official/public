asyncapi: 3.0.0
info:
  title: Card Case
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    handles the processing of a customer card case, typically a disputed charge
channels:
  CardCaseProcedure/Created:
    address: CardCaseProcedure/Created
    messages:
      CardCaseProcedure-created.message:
        $ref: '#/components/messages/CardCaseProcedure'
    description: ''
  CardCaseProcedure/Updated:
    address: CardCaseProcedure/Updated
    messages:
      CardCaseProcedure-updated.message:
        $ref: '#/components/messages/CardCaseProcedure'
    description: ''
  Consolidation/Created:
    address: Consolidation/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Consolidation'
    description: ''
  Consolidation/Updated:
    address: Consolidation/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Consolidation'
    description: ''
  Resolution/Created:
    address: Resolution/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Resolution'
    description: ''
  Resolution/Updated:
    address: Resolution/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Resolution'
    description: ''
  Chargeback/Created:
    address: Chargeback/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Chargeback'
    description: ''
  Chargeback/Updated:
    address: Chargeback/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Chargeback'
    description: ''
  Arbitration/Created:
    address: Arbitration/Created
    messages:
      publish.message:
        $ref: '#/components/messages/Arbitration'
    description: ''
  Arbitration/Updated:
    address: Arbitration/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/Arbitration'
    description: ''
operations:
  CardCaseProcedure-created:
    action: receive
    channel:
      $ref: '#/channels/CardCaseProcedure~1Created'
    summary: CardCaseProcedure
    messages:
      - $ref: >-
          #/channels/CardCaseProcedure~1Created/messages/CardCaseProcedure-created.message
  CardCaseProcedure-updated:
    action: receive
    channel:
      $ref: '#/channels/CardCaseProcedure~1Updated'
    summary: CardCaseProcedure
    messages:
      - $ref: >-
          #/channels/CardCaseProcedure~1Updated/messages/CardCaseProcedure-updated.message
  Consolidation/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Consolidation~1Created'
    summary: Consolidation
    messages:
      - $ref: '#/channels/Consolidation~1Created/messages/publish.message'
  Consolidation/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Consolidation~1Updated'
    summary: Consolidation
    messages:
      - $ref: '#/channels/Consolidation~1Updated/messages/publish.message'
  Resolution/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Resolution~1Created'
    summary: Resolution
    messages:
      - $ref: '#/channels/Resolution~1Created/messages/publish.message'
  Resolution/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Resolution~1Updated'
    summary: Resolution
    messages:
      - $ref: '#/channels/Resolution~1Updated/messages/publish.message'
  Chargeback/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Chargeback~1Created'
    summary: Chargeback
    messages:
      - $ref: '#/channels/Chargeback~1Created/messages/publish.message'
  Chargeback/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Chargeback~1Updated'
    summary: Chargeback
    messages:
      - $ref: '#/channels/Chargeback~1Updated/messages/publish.message'
  Arbitration/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/Arbitration~1Created'
    summary: Arbitration
    messages:
      - $ref: '#/channels/Arbitration~1Created/messages/publish.message'
  Arbitration/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/Arbitration~1Updated'
    summary: Arbitration
    messages:
      - $ref: '#/channels/Arbitration~1Updated/messages/publish.message'
components:
  messages:
    CardCaseProcedure:
      name: CardCaseProcedure
      description: >-
        Complete work tasks following a defined procedure in support of general
        office activities and product and service delivery within Card Case. 
      payload:
        $ref: '#/components/schemas/CardCaseProcedure'
    Consolidation:
      name: Consolidation
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Consolidation'
    Resolution:
      name: Resolution
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Resolution'
    Chargeback:
      name: Chargeback
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Chargeback'
    Arbitration:
      name: Arbitration
      description: |-
        The main worsteps to be followed in th eexecution of the procedure
        Examples:- Invoice generation
      payload:
        $ref: '#/components/schemas/Arbitration'
  schemas:
    Consolidation:
      type: object
      description: ''
      properties:
        ConsolidationCardTransactionRecordReference:
          $ref: '#/components/schemas/CardPaymentTransaction'
        ConsolidationTaskRecord:
          $ref: '#/components/schemas/Task'
        ConsolidationInstruction:
          $ref: '#/components/schemas/CardPaymentInstruction'
        CorrespondenceReference:
          $ref: '#/components/schemas/Document'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ConsolidationTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        ConsolidationTaskResult:
          $ref: '#/components/schemas/Text'
    CardPaymentTransaction:
      type: object
      format: CardPaymentTransaction
      description: >-
        Reference to the card transaction for the consolidation
        CardPayment|CardPayment
        (https://www.iso20022.org/standardsrepository/type/CardPayment)|Standard|ISO20022
        BM ()
      properties:
        Amount:
          $ref: '#/components/schemas/Amount'
        MerchantLocation:
          $ref: '#/components/schemas/Location'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: CardPaymentTransaction
        Transactionchanneltypevalues:
          enum:
            - Mailorder
            - Telephoneorder
            - Electroniccommerce
            - Televisionpayment
            - Officeorbranch
            - Homebanking
            - Financialadvisor
            - Mobilepayment
            - Securedelectroniccommerce
            - Mobilepos
          format: CardPaymentTransaction
        PointOfInteraction:
          $ref: '#/components/schemas/Pointofservice'
        CardTransactionDateTime:
          $ref: '#/components/schemas/Datetime'
        Transactionenvironmenttypevalues:
          enum:
            - Merchant
            - Private
            - Public
            - Branch
            - Other
          format: CardPaymentTransaction
        MerchantCountry:
          $ref: '#/components/schemas/Country'
        CardNetwork:
          $ref: '#/components/schemas/Cardnetwork'
        Amountqualifiertypevalues:
          enum:
            - Cashback
            - Gratuity
            - Fees
            - Rebates
            - Valueaddedtax
            - Actual
            - Replacement
            - Maximum
            - Default
            - Estimated
            - Original
            - Surcharge
            - Servicefee
            - Interchangefee
            - Discount
            - Atmcommissionfee
            - Authorisedamount
            - Cardremainingbalance
            - Maximumallowedamount
            - Minimumallowedamount
            - Requestedamount
            - Issuerfees
            - Issuercommission
            - Interchangefees
            - Processingfees
            - Currencyconversionfees
            - Internationalserviceassessmentfees
            - Commission
            - Donation
            - Tax
            - Incremental
            - Decremental
            - Reserved
            - Confirmedamount
            - Instructedamount
            - Atmaccessfee
            - Cardholderbillingfee
            - Clearingfee
            - Credittransactionfee
            - Cumulative
            - Debittransactionfee
            - Extra
            - Foreignexchangefee
            - Fundstransfer
            - Instantpaymentfee
            - Instanttransferfee
            - Issuercardholderfee
            - Limit
            - Othernational
            - Otherprivate
            - Reconciliationfee
            - Settlementfee
            - Transactionfee
            - Anticipated
            - Baggage
            - Chargedtocard
            - Clearingpriorityfee
            - Dental
            - Deposit
            - Fundstransferfee
            - Otherqualifiedmedical
            - Prescription
            - Proxy
            - Requestedcashback
            - Settlementpriorityfee
            - Totalhealthcare
            - Transit
            - Vision
            - Connect
            - Data
            - Exchangeticket
            - Exchangeticketfee
            - Fare
            - Foodbeverage
            - Insurance
            - Longdistance
            - Miscellaneous
            - Phone
            - Prepayment
            - Total
            - Usage
            - Predcc
            - Upgrade
            - Clubfee
            - Cargo
            - Dutyfree
            - Ticketdelivery
            - Petcarrier
            - Tourorder
            - Minimuminterchangefee
            - Maximuminterchangefee
            - Cashbackinterchangefee
          format: CardPaymentTransaction
        CardPaymentStatus:
          $ref: '#/components/schemas/Status'
        Cardtransactioncategorytypevalues:
          enum:
            - Cardtransactioncategorytypevalues
          format: CardPaymentTransaction
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Cardpaymenttransactionidentification'
        Cardpaymenttransactionservicetypevalues:
          enum:
            - Cardsfundtransfer
            - Originalcredit
            - Cardpayment
            - Cashback
            - Cashadvance
            - Cashdeposit
            - Deferredpayment
            - Reservation
            - Loading
            - Refund
            - Quasicash
            - Balance
            - Cardactivation
            - Cardverification
            - Pinchange
            - Validitycheck
            - Aggregation
            - DCC
            - Gratuity
            - Instalment
            - Loyalty
            - Noshow
            - Purchasecorporate
            - Recurringpayment
            - Solicitedavailablefunds
            - Unsolicitedavailablefunds
            - Voiceauthorisation
            - Initialreservation
            - Updatereservation
            - Paymentreservation
            - Additionalpayment
            - Firstrecurring
            - Followingrecurring
            - Persontobusiness
            - Persontoperson
            - Acceptorinstalment
            - Issuerinstalment
            - Unloading
            - Cardsfundtransferpush
            - Cardsfundtransferpull
            - Cashwithdrawal
            - Pinunblock
            - Chosenwithdrawal
            - Preauthorisedwithdrawal
            - Profilewithdrawal
            - Standardwithdrawal
            - Transfercardbillpayment
            - Transferfromcash
            - Transferfromcheque
            - Transferfundsdisbursementgeneral
            - Transfergovernmentdisbursement
            - Transfermerchantdisbursement
            - Transferpayrollpensiondisbursement
            - Nonrefundable
            - Instant
            - Creditadjustement
            - Debitadjustement
            - Createcertificate
            - Renewcerificate
            - Revokecertificate
            - Addwhitelist
            - Removewhitelist
            - Cardinitiatingdirectdebit
            - Guaranteeofpayment
          format: CardPaymentTransaction
    Amount:
      type: object
      format: Amount
      description: 'Amount of card payment '
      properties:
        AmountValue:
          $ref: '#/components/schemas/Value'
        AmountCurrency:
          $ref: '#/components/schemas/Currencycode'
        DecimalPointPosition:
          $ref: '#/components/schemas/Text'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
          format: Amount
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Currencycode:
      type: object
      format: Currencycode
      description: ' '
      properties:
        Currencycode:
          type: string
          format: DataType
          description: >-
            A code identifying a currency according to ISO-4217.

            A currency is a system of money in general use in a particular
            country.


            Code allocated to a currency, by a maintenance agency, under an
            international identification scheme as described in the latest
            edition of the international standard ISO 4217 "Codes for the
            representation of currencies and funds". Valid currency codes are
            registered with the ISO 4217 Maintenance Agency, and consist of
            three contiguous letters. (ISO20022)

             
    Text:
      type: object
      format: Text
      description: "The outcome of the consolidation workstep ||\r\n|"
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Location:
      type: object
      format: Location
      description: ' '
      properties:
        LocationDescription:
          $ref: '#/components/schemas/Text'
        LocationDateTime:
          $ref: '#/components/schemas/Datetime'
        LocationStatus:
          $ref: '#/components/schemas/Status'
        Geographicalareatypevalues:
          enum:
            - Continent
            - Country
            - State
            - District
            - Province
            - Town
            - City
            - Region
          format: Location
        LocationZoningType:
          $ref: '#/components/schemas/Text'
        LocationNeighborhoodType:
          $ref: '#/components/schemas/Text'
        LocationConstructionType:
          $ref: '#/components/schemas/Text'
        LocationOccupancyType:
          $ref: '#/components/schemas/Text'
        LocationValue:
          $ref: '#/components/schemas/Value'
        LocationCapacity:
          $ref: '#/components/schemas/Text'
        LocationIdentification:
          $ref: '#/components/schemas/Identifier'
        LocationAddress:
          $ref: '#/components/schemas/Address'
        Location:
          type: string
          format: Class
          description: >-
            The definition of an addressable space/position both in real and
            virtual environments with associated uses and entitlements 
        LocationName:
          $ref: '#/components/schemas/Name'
        LocationTimeZone:
          $ref: '#/components/schemas/Text'
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Status:
      type: object
      format: Status
      description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022 '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: ' '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Entity that assigns and manages the identification. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Address:
      type: object
      format: Address
      description: ' '
      properties:
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Address
        LocationReference:
          $ref: '#/components/schemas/Location'
    Pointofservice:
      type: object
      format: Pointofservice
      description: >-
        Describes the Point of Interaction through which the payment by card was
        initiated. (ISO20022) 
      properties:
        PointOfService:
          type: string
          format: Class
          description: Point at which a service is offered and/or fulfilled.
    Country:
      type: object
      format: Country
      description: 'Country of the merchant where the transaction took place. (ISO20022) '
      properties:
        NationalRegulatoryAuthority:
          $ref: '#/components/schemas/Involvedparty'
    Cardnetwork:
      type: object
      format: Cardnetwork
      description: 'Network used for handling the card payment transaction. '
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    Cardpaymenttransactionidentification:
      type: object
      format: Cardpaymenttransactionidentification
      description: >-
        Identification of the transaction assigned by the initiator of the
        request. For instance refers to POITransactionIdentification if used
        inside an authorisation request or to SaleTransactionIdentification if
        the message is a payment request initiated by a sale system. (ISO20022) 
      properties:
        CardPaymentTransactionIdentification:
          $ref: '#/components/schemas/Identifier'
        Cardpaymenttransactionidentificationtypevalues:
          enum:
            - Issuercitidentification
            - Merchantcitidentification
          format: Cardpaymenttransactionidentification
    Task:
      type: object
      format: Task
      description: "The record of a specific verification task ||\r\n|"
      properties:
        Task:
          type: string
          format: DataType
          description: ''
    CardPaymentInstruction:
      type: object
      format: CardPaymentInstruction
      description: >-
        The instruction message to the merchant to provide card transaction
        related paperwork, includes issued device details, transaction
        identification information and the retrieval reason
        CardPayment|CardPayment
        (https://www.iso20022.org/standardsrepository/type/CardPayment)|Standard|ISO20022
        BM ()
      properties:
        CardPaymentInstruction:
          type: string
          format: Class
          description: 'A PaymentInstruction initiated by PaymentCard '
    Document:
      type: object
      format: Document
      description: "Reference to the document request messages sent to the merchant Document\__x000D_\n|Document (https://www.iso20022.org/standardsrepository/type/Document)|Standard|ISO20022 BM ()"
      properties:
        DocumentIdentification:
          $ref: '#/components/schemas/Identifier'
        DocumentVersion:
          type: string
          format: Number
          description: ''
        Financialdocumenttypevalues:
          enum:
            - Meteredserviceinvoice
            - Creditnoterelatedtofinancialadjust
            - Debitnoterelatedtofinancialadjustm
            - Commercialinvoice
            - Creditnote
            - Debitnote
            - Hireinvoice
            - Selfbilledinvoice
            - Remittanceadvicemessage
            - Relatedpaymentinstruction
            - Commercialcontract
            - Foreignexchangedealreference
            - Statementofaccount
            - Dispatchadvice
            - Purchaseorder
            - Structuredcommunicationreference
            - Billoflading
            - Voucher
            - Accountreceivableopenitem
            - Tradeservicesutilitytransaction
            - Cashierreceipt
            - Customerreceipt
            - Journal
            - Salereceipt
          format: Document
        DocumentStatus:
          $ref: '#/components/schemas/Status'
        DocumentDateTime:
          $ref: '#/components/schemas/Datetime'
        DocumentName:
          $ref: '#/components/schemas/Name'
        Documentdatetimetypevalues:
          enum:
            - CreationDate
            - CapturingDate
            - VersionDate
            - ValueDate
            - IssueDate
          format: Document
        DocumentPurpose:
          $ref: '#/components/schemas/Text'
        DocumentFormat:
          $ref: '#/components/schemas/Text'
        DocumentSubject:
          $ref: '#/components/schemas/Text'
        DocumentDescription:
          $ref: '#/components/schemas/Text'
        DocumentValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "Reference to documents obtained ||\r\n|"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    Workproduct:
      type: object
      format: Workproduct
      description: "Work documentation, forms and schedules produced and referenced during the analysis ||\r\n|"
      properties:
        Workproducttypevalues:
          enum:
            - Document
            - WorkingPaper
            - ActivityLog
            - Form
            - File
            - MeetingSchedule
            - MeetingMinute
          format: Workproduct
        WorkProductIdentifoication:
          $ref: '#/components/schemas/Identifier'
    Resolution:
      type: object
      description: ''
      properties:
        ResolutionCardTransactionRecordReference:
          $ref: '#/components/schemas/CardPaymentTransaction'
        ResolutionTaskRecord:
          $ref: '#/components/schemas/Task'
        CorrespondenceInstanceReference:
          $ref: '#/components/schemas/Correspondence'
        CorrespondenceContent:
          $ref: '#/components/schemas/Correspondence'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        DocumentContent:
          $ref: '#/components/schemas/Document'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/BusinessUnit'
        PaymentOrderReference:
          $ref: '#/components/schemas/CardPaymentCaseResolution'
        ResolutionTaskWorkProducts:
          $ref: '#/components/schemas/Workproduct'
        ResolutionTaskResult:
          $ref: '#/components/schemas/Text'
    Correspondence:
      type: object
      format: Correspondence
      description: >-
        Correspondence content messages sent to and received from involved
        parties Presentation|Presentation
        (https://www.iso20022.org/standardsrepository/type/Presentation)|Standard|ISO20022
        BM ()
      properties:
        Correspondencetypevalues:
          enum:
            - UnsolicitedMessage
            - Complaint
          format: Correspondence
        CorrespondenceAddress:
          $ref: '#/components/schemas/Address'
        CorrespondenceDateTime:
          $ref: '#/components/schemas/Datetime'
        CorrespondenceContent:
          $ref: '#/components/schemas/Text'
        CorrespondenceTemplate:
          $ref: '#/components/schemas/Text'
        Correspondencecommunicationmethodtypevalues:
          enum:
            - Fax
            - Email
            - Proprietary
            - Online
            - Phone
            - Postalservice
            - File
          format: Correspondence
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Correspondence
        Correspondencemediumtypevalues:
          enum:
            - Paper
            - Electronic
            - Paperelectronic
            - Biometric
          format: Correspondence
    BusinessUnit:
      type: object
      format: BusinessUnit
      description: "Business unit responsible for the card case resolution actions ||\r\n|"
      properties:
        BusinessFunction:
          type: string
          format: String
          description: ''
        Goal:
          type: string
          format: String
          description: ''
    CardPaymentCaseResolution:
      type: object
      format: CardPaymentCaseResolution
      description: >-
        Reference to the resolution payment order when financial adjustments are
        required to resolve the card case
        PaymentInvestigationCaseResolution|PaymentInvestigationCaseResolution
        (https://www.iso20022.org/standardsrepository/type/PaymentInvestigationCaseResolution)|Standard|ISO20022
        BM ()
      properties:
        CardPaymentCaseResolution:
          type: string
          format: Class
          description: 'Dispute resolution for a card case.  '
    Chargeback:
      type: object
      description: ''
      properties:
        ChargebackCardTransactionRecordReference:
          $ref: '#/components/schemas/CardPaymentTransaction'
        ChargebackInstruction:
          $ref: '#/components/schemas/ChargebackInstruction'
    ChargebackInstruction:
      type: object
      format: ChargebackInstruction
      description: "The instruction to book chargeback for the transaction could be partial chargeback ||\r\n|"
      properties:
        ChargebackInstruction:
          type: string
          format: Class
          description: 'An instruction to book chargeback for the transaction.  '
    Arbitration:
      type: object
      description: ''
      properties:
        ArbitrationCardTransactionRecordReference:
          $ref: '#/components/schemas/CardPaymentTransaction'
        NetworkParticipantNetworkServiceRequestReference:
          $ref: '#/components/schemas/CardNetworkParticpantService'
        NetworkParticipantNetworkServiceRequestRecord:
          $ref: '#/components/schemas/CardNetworkParticpantService'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
        NetworkParticipantServiceDateandTime:
          $ref: '#/components/schemas/DateTime'
        NetworkParticipantServiceResult:
          $ref: '#/components/schemas/Text'
    CardNetworkParticpantService:
      type: object
      format: CardNetworkParticpantService
      description: "The record for the network service delivery, includes charges, service activity log and results etc. ||\r\n|"
      properties:
        NetworkParticipantServiceType:
          type: string
          format: String
          description: >-
            The type of Network Participant Service  (e.g. merchant alert,
            chargeback arbitration, chargeback reduction) 
        NetworkParticipantServiceCharge:
          type: string
          format: String
          description: >-
            Details of service charge levied against the Network Participant
            Facility. 
        NetworkParticipantServiceDate/Time:
          type: string
          format: String
          description: >-
            Key dates and times associated with the provision of the service
            (e.g. initiation of service fulfillment) 
    DateTime:
      type: object
      format: DateTime
      description: "The time the service was requested ||\r\n|"
      properties:
        TimeIndication:
          type: string
          format: String
          description: >-
            Expression of the point in time

            is expressed according to "TimeIndicationType" e.g. period, day,
            more detailed indication
        TimeIndicationType:
          type: string
          format: String
          description: ''
    CardCaseProcedure:
      type: object
      description: ''
      properties:
        Cardcasetypevalues:
          enum:
            - DisputedCharges
            - MerchantFraud
        ProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        CustomerContactRecordReference:
          $ref: '#/components/schemas/CustomerContact'
        CaseLocation:
          $ref: '#/components/schemas/Location'
        Date:
          $ref: '#/components/schemas/DateTime'
        EmployeeBusinessUnitReference:
          $ref: '#/components/schemas/BusinessUnit'
        CardTransactionReference:
          $ref: '#/components/schemas/CardPaymentTransaction'
        CardTransactionRecord:
          $ref: '#/components/schemas/CardPaymentTransaction'
        CardTransactionProductInstanceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CardHolderReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionIssuedDeviceReference:
          $ref: '#/components/schemas/IssuedDevice'
        CardTransactionNetworkReference:
          $ref: '#/components/schemas/CardNetwork'
        CardTransactionIssuingBankReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionMerchantAcquiringBankReference:
          $ref: '#/components/schemas/Involvedparty'
        Transactiontypevalues:
          enum:
            - FinancialTransaction
            - BusinessTransaction
            - BankingTransaction
            - AccountingTransaction
            - BookingTransaction
            - AllocationTransaction
            - DeliveryTransaction
            - ProductionTransaction
        CardTransactionCurrency:
          $ref: '#/components/schemas/Currencycode'
        Amounttypevalues:
          enum:
            - Principal
            - Actual
            - Estimated
            - Maximum
            - Default
            - Replacement
            - Incremental
            - Decremental
            - Reserved
            - Available
            - Used
            - DuePayable
            - Minimum
            - Open
            - Unknown
            - Fixed
        CardTransactionAmount:
          $ref: '#/components/schemas/Amount'
        CardTransactionMerchantReference:
          $ref: '#/components/schemas/Involvedparty'
        CardTransactionLocationReference:
          $ref: '#/components/schemas/Location'
        CardTransactionProductandServiceReference:
          $ref: '#/components/schemas/ProductAgreement'
        CardTransactionDateandTime:
          $ref: '#/components/schemas/DateTime'
        CardTransactionFXConversionCharge:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionInterchargeFee:
          $ref: '#/components/schemas/FeeArrangement'
        CardTransactionAuthorizationRecord:
          $ref: '#/components/schemas/Authorization'
        CardCaseResolutionSchedule:
          $ref: '#/components/schemas/Schedule'
    ProductAgreement:
      type: object
      format: ProductAgreement
      description: "Details of the transaction (e.g. purchased service/product, purpose) ||\r\n|"
      properties:
        Productagreementtypevalues:
          enum:
            - CurrentAccountAgreement
            - SavingsAccountAgreement
            - BrokeredProductAgreement
            - ConsumerLoanAgreement
            - MortgageLoanAgreement
            - DirectDebitServiceAgreement
            - TermDepositAgreement
          format: ProductAgreement
        ProductAgreement:
          type: string
          format: Class
          description: >-
            An agreement with the subject matter of the product between Customer
            and Provider. 

            An agreement between a Financial Service Provider and its customer
            for a sold product. 
             
    CustomerContact:
      type: object
      format: CustomerContact
      description: "Reference to the complete contact record assembled during the contact where the card case was raised if appropriate ||\r\n|"
      properties:
        ContactType:
          $ref: '#/components/schemas/Text'
        ContactDateTime:
          $ref: '#/components/schemas/Datetime'
        ContactLocation:
          $ref: '#/components/schemas/Location'
        ContactSchedule:
          $ref: '#/components/schemas/Schedule'
        ContactResult:
          $ref: '#/components/schemas/Text'
        ContactPurpose:
          $ref: '#/components/schemas/Text'
        ContactDevice:
          $ref: '#/components/schemas/Device'
        ContactIndicator:
          $ref: '#/components/schemas/Text'
        ContactContent:
          $ref: '#/components/schemas/Text'
    Schedule:
      type: object
      format: Schedule
      description: "The card case processing schedule including key tasks and dates for resolution (target and actual dates/times ) ||\r\n|"
      properties:
        ScheduleType:
          $ref: '#/components/schemas/Text'
        Schedule:
          type: string
          format: DataType
          description: >-
            Defined sequence of planned tasks/actions or a timetable of
            available services


            A schedule is a time based series of something 
    Device:
      type: object
      format: Device
      description: 'Reference to the device that is issued '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Deviceidentification'
        Devicetypevalues:
          enum:
            - Securecardreader
            - Nonsecurecardreader
            - Mobile
            - Tablet
            - Personalcomputer
            - Othernational
            - Otherprivate
            - Wearable
            - Vehicle
            - Embedded
            - Keyfob
            - Jewellery
            - Sticker
            - Gamingdevice
            - Watch
            - Unknown
            - BiometricDevice
          format: Device
        DeviceProperty:
          $ref: '#/components/schemas/Text'
        DeviceElement:
          $ref: '#/components/schemas/Text'
        DeviceStatus:
          $ref: '#/components/schemas/Status'
        DeviceVersion:
          type: string
          format: Number
          description: ''
        DeviceDateTime:
          $ref: '#/components/schemas/Datetime'
        DeviceDescription:
          $ref: '#/components/schemas/Text'
        DeviceName:
          $ref: '#/components/schemas/Name'
        DeviceLanguage:
          $ref: '#/components/schemas/Text'
        DevicePhoneNumber:
          $ref: '#/components/schemas/Text'
        DeviceLocation:
          $ref: '#/components/schemas/Location'
        DeviceManufacturer:
          $ref: '#/components/schemas/Text'
        DeviceCountry:
          $ref: '#/components/schemas/Country'
        DeviceAddress:
          $ref: '#/components/schemas/Address'
        Addresstypevalues:
          enum:
            - PostalAddress
            - GeolocationAddress
            - LatitudeAddress
            - LongitudeAddress
            - ElectronicAddress
          format: Device
        Deviceoperatingsystemtypevalues:
          enum:
            - Android
            - Ios
            - Windows
            - Blackberry
            - Tizen
            - Othernational
            - Otherprivate
          format: Device
        Device:
          type: string
          format: Class
          description: >-
            An item created to serve a particular need, such as a credit card, a
            smart phone, an electronic signature, an electronic key, etc.


            A device is a physical resource (material and non human resources)
            to serve a particular need. 

             
    Deviceidentification:
      type: object
      format: Deviceidentification
      description: ' '
      properties:
        DeviceIdentification:
          $ref: '#/components/schemas/Identifier'
        Deviceidentificationtypevalues:
          enum:
            - IMEI
            - Serialnumber
            - Secureelementidentification
            - Othernational
            - Otherprivate
          format: Deviceidentification
    IssuedDevice:
      type: object
      format: IssuedDevice
      description: "Reference to the issued device submitted to authorize the transaction (e.g. card number) ||\r\n|"
      properties:
        Issueddevicestatustypevalues:
          enum:
            - Issued
            - IssuedButNotActivated
            - Activated
            - Suspended
            - Retrieved
          format: IssuedDevice
        IssuedDevicePartyReference:
          $ref: '#/components/schemas/Party'
        IssuedDeviceConfiguration:
          $ref: '#/components/schemas/Text'
        IssuedDeviceReference:
          $ref: '#/components/schemas/Device'
        IssuedDeviceValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        IssuedDeviceDeliveryMethod:
          $ref: '#/components/schemas/Text'
        DeviceIssueDate:
          $ref: '#/components/schemas/Datetime'
        IssuedDeviceCollectLocation:
          $ref: '#/components/schemas/Branch'
        IssuedDeviceProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        Devicecustomizationtypevalues:
          enum:
            - CardDesign
          format: IssuedDevice
    Branch:
      type: object
      format: Branch
      description: 'The name of the branch where the party will collect the device '
      properties:
        BranchIdentification:
          $ref: '#/components/schemas/Identifier'
        BranchLegalEntityIdentification:
          $ref: '#/components/schemas/Identifier'
        BranchAddress:
          $ref: '#/components/schemas/Address'
        BranchName:
          $ref: '#/components/schemas/Name'
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: 'The product or service to which the Issued Device will be attached '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    CardNetwork:
      type: object
      format: CardNetwork
      description: "Reference to the network the card transaction is handled by as recorded with the transaction ||\r\n|"
      properties:
        CardNetwork:
          type: string
          format: Class
          description: >-
            Network for handling the card based transaction (e.g. Visa, MC,
            AMEX, Diners, etc.)


            A card network are networks of issuing and acquiring banks through
            which payment cards of some certain brand are processed. two types
            of card networks can be pointed out, namely, credit card
            associations (Visa, MasterCard, Discover, Amex, etc.) and PINless
            debit card networks (NYCE, PULSE, Maestro, Interlink, Cirrus, etc.).


            Card networks are financial services companies that enables,
            processes and settles payments between card issuing banks and
            merchant banks worldwide. Examples are Visa, MasterCard, Discover,
            RuPay etc.


            A card network is a system of connecting merchants and card
            issuers.  A middle person that collects funds from card issuer and
            pays it to the merchant.  Visa and MasterCard are examples of card
            networks. 
    FeeArrangement:
      type: object
      format: FeeArrangement
      description: >-
        The applied intercharge fee Adjustment|Adjustment
        (https://www.iso20022.org/standardsrepository/type/Adjustment)|Standard|ISO20022
        BM ()
      properties:
        Feetypevalues:
          enum:
            - Accountingfee
            - Adrfee
            - Advisoryfee
            - Airwaybillfee
            - Backendload
            - Brokeragefee
            - Clearanceandhandlingatdestination
            - Clearanceandhandlingatorigin
            - Collectfreight
            - Commission
            - Contingencydeferredsalescharge
            - Correspondentbankcharge
            - Custodyfee
            - Dangerousgoodsfee
            - Dilutionlevy
            - Discount
            - Equalisation
            - Frontendload
            - Initial
            - Insurancepremium
            - Issuancecancellationfee
            - Issuancefee
            - Managementfee
            - Matchingfees
            - Miscellaneousfee
            - Other
            - Packaging
            - Partacquis
            - Penalty
            - Pickup
            - Postagecharge
            - Premium
            - Publicationfee
            - Regulatoryfee
            - Securitycharge
            - Serviceprovisionfee
            - Shippingcharge
            - Signatureservice
            - Specialconcessions
            - Speciallyagreedfrontendload
            - Storageatdestination
            - Storageatorigin
            - Switch
            - Transferfee
            - Transportcharges
            - Ucitscommission
            - ChequeRelatedFee
          format: FeeArrangement
        FeeAmount:
          $ref: '#/components/schemas/Amount'
        FeeRate:
          $ref: '#/components/schemas/Rate'
        FeeEffectivePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        FeeDueDate:
          $ref: '#/components/schemas/Datetime'
        FeePlan:
          $ref: '#/components/schemas/Feeplan'
        Debitcreditindicatortvalues:
          enum:
            - Debit
            - Credit
          format: FeeArrangement
        FeeReason:
          $ref: '#/components/schemas/Text'
        Adjustmentdirectiontypevalues:
          enum:
            - Added
            - Substracted
          format: FeeArrangement
        Chargebearertypevalues:
          enum:
            - Bornebydebtor
            - Bornebycreditor
            - Shared
            - Followingservicelevel
          format: FeeArrangement
        FeeArrangement:
          type: string
          format: Class
          description: >-
            An arrangement which specifies to charge fees when banking
            transactions did take place, accompanied by the modalities to
            calculate and charge the fees and the related terms and
            conditions.  
    Rate:
      type: object
      format: Rate
      description: >-
        Rate used to calculate the amount of the adjustment, allowance, charge
        or fee. (ISO20022) 
      properties:
        RateValue:
          $ref: '#/components/schemas/Value'
        RateUnit:
          $ref: '#/components/schemas/Text'
        RatePeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        RateCapitalUnit:
          $ref: '#/components/schemas/Text'
    Feeplan:
      type: object
      format: Feeplan
      description: An arranged FeeRatePlan
      properties:
        FeePlanName:
          $ref: '#/components/schemas/Name'
        Feeplantypevalues:
          enum:
            - StandardFeePlan
            - FinalFeePlan
          format: Feeplan
        FeePlan:
          $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      format: Plan
      description: ' '
      properties:
        PlanGoal:
          $ref: '#/components/schemas/Goal'
        PlanBudget:
          $ref: '#/components/schemas/Budgetarrangement'
        PlannedAction:
          $ref: '#/components/schemas/Plannedaction'
        Plantypevalues:
          enum:
            - AdministrativePlan
            - ManagementPlan
            - StratgyPlan
            - FinancialPlan
            - DevelopmentPlan
          format: Plan
        PlanValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        PlanDescription:
          $ref: '#/components/schemas/Text'
    Goal:
      type: object
      format: Goal
      description: ' '
      properties:
        Goaltypevalues:
          enum:
            - Short-TermGoal
            - Long-TermGoal
            - BusinessGoal
            - PerformanceGoal
            - FinancialGoal
            - OutcomeGoal
            - SMARTGoal
          format: Goal
        GoalDefinition:
          $ref: '#/components/schemas/Text'
        GoalName:
          $ref: '#/components/schemas/Name'
        GoalDateAndTime:
          $ref: '#/components/schemas/Goaldatetime'
        GoalStatus:
          $ref: '#/components/schemas/Goalstatus'
    Goaldatetime:
      type: object
      format: Goaldatetime
      description: >-
        The key dates and times of Goal like Setting Data, Planning Date, Start
        Date, Review Date, Completion Date. 
      properties:
        GoalDateAndTime:
          $ref: '#/components/schemas/Datetime'
        Goaldatetimetypevalues:
          enum:
            - SettingDate
            - PlanningDate
            - StartDate
            - ReviewDate
            - CompletionDate
          format: Goaldatetime
    Goalstatus:
      type: object
      format: Goalstatus
      description: >-
        The lifecycle status of Goal like Goal Setting, Planning, Execution,
        Monitoring and Evaluation, Completion or Achievement, Maintenance or
        Sustainment, Closure or Renewal 
      properties:
        GoalStatus:
          $ref: '#/components/schemas/Status'
        Goalstatustypevalues:
          enum:
            - Setting
            - Planning
            - Execution
            - MonitoringAndEvaluation
            - CompletionOrAchievement
            - MaintenanceOrSustainment
            - ClosureOrRenewal
          format: Goalstatus
    Budgetarrangement:
      type: object
      format: Budgetarrangement
      description: >-
        An arrangement which is specifying an estimate of costs, revenues, and
        resources over a specified period, reflecting a reading of future
        financial conditions and goals. (adapted from Business Dictionary) 
      properties:
        BudgetType:
          $ref: '#/components/schemas/Budgettype'
        BudgetAmount:
          $ref: '#/components/schemas/Amount'
    Budgettype:
      type: object
      format: Budgettype
      description: 'A Classification value that specifies the type of Budget '
      properties:
        BudgetTypeName:
          $ref: '#/components/schemas/Name'
        Budgettypevalues:
          enum:
            - OperatingBudget
            - FinancialBudget
            - ResourceBudget
          format: Budgettype
    Plannedaction:
      type: object
      format: Plannedaction
      description: 'An action that is arranged in a plan for doing or achieving something  '
      properties:
        PlannedAction:
          type: string
          format: Class
          description: >-
            An action that is arranged in a plan for doing or achieving
            something  
    Authorization:
      type: object
      format: Authorization
      description: "Details the reference, amount, timestamp of the transaction authorization ||\r\n|"
      properties:
        Authorization:
          type: string
          format: Class
          description: >-
            An evaluation whether a party or system is allowed to do something.


            The consent given by a participant (or a third party acting on
            behalf of that participant) in order to transfer funds or
            securities. (ECB)


            Authorization is a mechanism by which a computer system determines
            whether to allow or deny specific action to a user. Authorization is
            often controlled by rather complex rules and algorithms, usually
            specified as part of an access control model. Authorization often
            follows (and required) authentication, however, authentication and
            authorization are two separate mechanisms. In rare cases,
            "authorization" is understood as a process of allowing access,
            granting permissions or giving approval. Such as "authorization" of
            a request to join a group. (ISO/IEC 24760-1:2019 IT Security and
            Privacy) 
