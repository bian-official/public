asyncapi: 3.0.0
info:
  title: Servicing Mandate
  version: 13.0.0
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This service domain
    maintains the allowed customer servicing arrangements for a service provider
    covering general access to the bank's products and services and optionally
    customer specific arrangements
channels:
  ServicingMandateAgreement/Created:
    address: ServicingMandateAgreement/Created
    messages:
      ServicingMandateAgreement-created.message:
        $ref: '#/components/messages/ServicingMandateAgreement'
    description: ''
  ServicingMandateAgreement/Updated:
    address: ServicingMandateAgreement/Updated
    messages:
      ServicingMandateAgreement-updated.message:
        $ref: '#/components/messages/ServicingMandateAgreement'
    description: ''
  CustomerMandate/Created:
    address: CustomerMandate/Created
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerMandate'
    description: ''
  CustomerMandate/Updated:
    address: CustomerMandate/Updated
    messages:
      publish.message:
        $ref: '#/components/messages/CustomerMandate'
    description: ''
operations:
  ServicingMandateAgreement-created:
    action: receive
    channel:
      $ref: '#/channels/ServicingMandateAgreement~1Created'
    summary: ServicingMandateAgreement
    messages:
      - $ref: >-
          #/channels/ServicingMandateAgreement~1Created/messages/ServicingMandateAgreement-created.message
  ServicingMandateAgreement-updated:
    action: receive
    channel:
      $ref: '#/channels/ServicingMandateAgreement~1Updated'
    summary: ServicingMandateAgreement
    messages:
      - $ref: >-
          #/channels/ServicingMandateAgreement~1Updated/messages/ServicingMandateAgreement-updated.message
  CustomerMandate/Created.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerMandate~1Created'
    summary: CustomerMandate
    messages:
      - $ref: '#/channels/CustomerMandate~1Created/messages/publish.message'
  CustomerMandate/Updated.publish:
    action: receive
    channel:
      $ref: '#/channels/CustomerMandate~1Updated'
    summary: CustomerMandate
    messages:
      - $ref: '#/channels/CustomerMandate~1Updated/messages/publish.message'
components:
  messages:
    ServicingMandateAgreement:
      name: ServicingMandateAgreement
      description: >+
        Maintain the terms and conditions that apply to a commercial
        relationship within Servicing Mandate.


      payload:
        $ref: '#/components/schemas/ServicingMandateAgreement'
    CustomerMandate:
      name: CustomerMandate
      description: >-
        Reference to the terms in force for a specific customer for this service
        provider
      payload:
        $ref: '#/components/schemas/CustomerMandate'
  schemas:
    CustomerMandate:
      type: object
      description: ''
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        ServicingMandateAgreementCustomerProductandServiceProfile:
          $ref: '#/components/schemas/CustomerProductAndServiceProfile'
        ProductandServiceType:
          $ref: '#/components/schemas/Productfeaturetype'
        ServicingMandateAgreementCustomerProductandServiceTypeAccess:
          $ref: '#/components/schemas/ServicingMandateArrangement'
        ServicingMandateAgreementCustomerProductandServiceTypeUsage:
          $ref: '#/components/schemas/ServicingMandateArrangement'
    Involvedparty:
      type: object
      format: Involvedparty
      description: 'Party who plays a  specific role in the context of assigning a status. '
      properties:
        PartyReference:
          $ref: '#/components/schemas/Party'
        Involvedparty:
          type: string
          format: DataType
          description: 'Party who plays a specific role  '
        PartyInvolvement:
          $ref: '#/components/schemas/Partyrole'
    Party:
      type: object
      format: Party
      description: ' '
      properties:
        PartyName:
          $ref: '#/components/schemas/Name'
        Partytypevalues:
          enum:
            - Person
            - Organisation
          format: Party
        PartyDateTime:
          $ref: '#/components/schemas/Datetime'
        PartyIdentification:
          $ref: '#/components/schemas/Partyidentification'
        Partylegalstructuretypevalues:
          enum:
            - Individual
            - CommunityInterestCompany
            - CharitableIncorporatedOrganisation
            - Co-Operative
            - Charity
            - GeneralPartnership
            - LimitedLiabilityPartnership
            - ScottishLimitedPartnership
            - LimitedPartnership
            - PrivateLimitedCompany
            - PublicLimitedCompany
            - Sole(SoleTrader)
          format: Party
    Name:
      type: object
      format: Name
      description: ' '
      properties:
        Name:
          type: string
          format: DataType
          description: >-
            A name is a word or phrase that constitutes the distinctive
            designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
      type: object
      format: Datetime
      description: ' '
      properties:
        DateTimeContent:
          $ref: '#/components/schemas/Text'
        TimeZoneCode:
          $ref: '#/components/schemas/Text'
        DaylightSavingIndicator:
          $ref: '#/components/schemas/Text'
        Datetimetypevalues:
          enum:
            - MaturityDate
            - InitiatedDate
            - RequestedDate
            - ExecutedDate
            - OpenDate
            - CloseDate
            - ExpiryDate
            - EffectiveDate
            - CreatingDate
            - ActivationDate
            - DeactivationDate
            - BlockingDate
            - SendingDate
            - ValidFromDate
            - ValidToDate
            - ReceivingDate
            - SigningDate
            - DueDate
            - ValueDate
            - FulfillmentDate
          format: Datetime
        Datetime:
          type: string
          format: DataType
          description: >-
            A date time identifies a date and time of day to various common
            resolutions: year, month, week, day, hour, minute, second, and
            fraction of second. (UN/CEFACT)


            A particular point in the progression of time defined by a mandatory
            date and a mandatory time component, expressed in either UTC time
            format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
            (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
            (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML
            Schema Part 2: Datatypes Second Edition W3C Recommendation 28
            October 2004" which is aligned with ISO 8601. (ISO20022)

            Note on the time format:

            1) beginning / end of calendar day

            00:00:00  -  the beginning of a calendar day

            24:00:00  -  the end of a calendar day

            2) fractions of second in time format

            Decimal fractions of seconds may be included. In this case, the
            involved parties shall agree on the maximum number of digits that
            are allowed. 
    Text:
      type: object
      format: Text
      description: ' '
      properties:
        Text:
          type: string
          format: DataType
          description: >-
            Text is a character string such as a finite set of characters
            generally in the form of words of a language. (UN/CEFACT) 
    Partyidentification:
      type: object
      format: Partyidentification
      description: ' '
      properties:
        Partyidentificationtypevalues:
          enum:
            - Taxidentificationnumber
            - Nationalregistrationnumber
            - Registrationauthorityidentificatio
            - LEI(LegalEntityIdentifier)
            - Alienregistrationnumber
            - Passportnumber
            - Taxexemptidentificationnumber
            - Corporateidentification
            - Driverlicensenumber
            - Foreigninvestmentidentitynumber
            - Socialsecuritynumber
            - Identitycardnumber
            - Concat
            - Nationalregistrationidentification
          format: Partyidentification
        PartyIdentification:
          $ref: '#/components/schemas/Identifier'
    Identifier:
      type: object
      format: Identifier
      description: ' '
      properties:
        IdentifierValue:
          $ref: '#/components/schemas/Value'
        IdentifierIssuingAuthority:
          $ref: '#/components/schemas/Involvedparty'
        IdentifierStartDate:
          $ref: '#/components/schemas/Datetime'
        IdentifierEndDate:
          $ref: '#/components/schemas/Datetime'
        Identifier:
          type: string
          format: DataType
          description: >-
            An identifier is a character string used to uniquely identify one
            instance of an object within an identification scheme that is
            managed by an agency. (UN/CEFAT) 
    Value:
      type: object
      format: Value
      description: ' '
      properties:
        Value:
          type: string
          format: DataType
          description: >-
            Data or set of data 


            A value is the concept of worth in general that is assigned or is
            determined by measurement, assessment or calculation. (UN/CEFACT) 
    Partyrole:
      type: object
      format: Partyrole
      description: ' '
      properties:
        PartyRoleType:
          $ref: '#/components/schemas/Text'
        PartyRoleName:
          $ref: '#/components/schemas/Name'
        PartyRoleValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        Partyinvolvementtypevalues:
          enum:
            - Agreementinvolvement
            - Partyinvolvement
            - Arrangementinvolvement
            - Designspecificationinvolvement
            - Relationshipinvolvement
            - Locationinvolvement
            - Bankguaranteeinvolvement
          format: Partyrole
    Datetimeperiod:
      type: object
      format: Datetimeperiod
      description: 'Period of time during which the status is valid. '
      properties:
        FromDateTime:
          $ref: '#/components/schemas/Datetime'
        ToDateTime:
          $ref: '#/components/schemas/Datetime'
        Datetimeperiod:
          type: string
          format: DataType
          description: >-
            Time span defined by a start date and time, and an end date and
            time. (ISO20022) 
    CustomerProductAndServiceProfile:
      type: object
      format: CustomerProductAndServiceProfile
      description: "Details the specific customer access allowed under the mandate ||\r\n|"
      properties:
        Customerproductserviceprofiletypevalues:
          enum:
            - Customerproductserviceeligibilityp
            - Customerproductserviceusageprofile
            - Customerproductservicecoverageprof
            - Customerproductservicesaleprofile
            - Customerproductserviceconsentprofi
          format: CustomerProductAndServiceProfile
        CustomerReference:
          $ref: '#/components/schemas/Customerrelationship'
        ProductReference:
          $ref: '#/components/schemas/Bankingproduct'
        ServiceReference:
          $ref: '#/components/schemas/Service'
    Customerrelationship:
      type: object
      format: Customerrelationship
      description: ' '
      properties:
        CustomerRelationship:
          type: string
          format: Class
          description: >-
            A specific relationship between a specific Bank ( -  party acting as
            a supplier of banking services) and one or more other involved
            parties acting as (potential) consumers of banking services as
            agreed in one or more banking product or service offerings and/or
            agreements.  
    Bankingproduct:
      type: object
      format: Bankingproduct
      description: ' '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Productidentification'
        Bankingproducttypevalues:
          enum:
            - LoanProduct
            - CurrentAccountProduct
            - SavingAccountProduct
            - BrokeredProduct
            - TermDepositProduct
          format: Bankingproduct
        ProductLifecycleStatus:
          $ref: '#/components/schemas/Productstatus'
        ProductPriority:
          $ref: '#/components/schemas/Text'
        ProductDescription:
          $ref: '#/components/schemas/Text'
        ProductVersion:
          $ref: '#/components/schemas/Text'
        ProductName:
          $ref: '#/components/schemas/Name'
    Productidentification:
      type: object
      format: Productidentification
      description: 'The identifier of product e.g. ISIN Code. '
      properties:
        ProductIdentification:
          $ref: '#/components/schemas/Identifier'
        Productidentificationtypevalues:
          enum:
            - ISINCode
            - PackageCode
            - Buyersitemnumber
            - Commercialdescriptioncodename
            - EAN
            - Harmonizedtariffcodename
            - Manufacturersitemnumber
            - Modelnumber
            - Partnumber
            - Quotacategory
            - Stylenumber
            - Suppliersitemnumber
            - Universalproductcode
          format: Productidentification
    Productstatus:
      type: object
      format: Productstatus
      description: >-
        Refers to the lifecycle of a product (e.g., initiated, announced,
        active, obsolete, withdrawn). 
      properties:
        ProductStatus:
          $ref: '#/components/schemas/Status'
        Productstatustypevalues:
          enum:
            - Initiated
            - Announced
            - Sold
            - Obsolete
            - Active
          format: Productstatus
    Status:
      type: object
      format: Status
      description: ' '
      properties:
        StatusReason:
          $ref: '#/components/schemas/Text'
        StatusDateTime:
          $ref: '#/components/schemas/Datetime'
        StatusValidityPeriod:
          $ref: '#/components/schemas/Datetimeperiod'
        StatusInvolvedParty:
          $ref: '#/components/schemas/Involvedparty'
        Status:
          type: string
          format: DataType
          description: >-
            A characteristic that describe the object by referring to a state
            transition in its lifecycle. 
    Service:
      type: object
      format: Service
      description: ' '
      properties:
        ServiceName:
          $ref: '#/components/schemas/Name'
        ServiceDescription:
          $ref: '#/components/schemas/Text'
        Servicetypevalues:
          enum:
            - ITService
            - AdministrativeService
            - SystemService
            - FinancialService
            - InformationService
            - BusinessService
          format: Service
        ServiceIdentification:
          $ref: '#/components/schemas/Identifier'
        ServiceLifecycleStatus:
          $ref: '#/components/schemas/Status'
        ServiceFeature:
          $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      format: Feature
      description: >-
        A characteristic of service which refers 1) mainly to the function or
        condition of service. 2) to non-functional features like quality and
        security 
      properties:
        Featuretypevalues:
          enum:
            - FeeFeature
            - InterestFeature
            - WithdrawalFeature
            - DepositFeature
            - SweepFeature
            - LienFeature
            - PaymentFeature
            - RepaymentFeature
            - LimitFeature
            - OverdraftFeature
            - StatementFeature
            - CurrencyExchangeFeature
            - PriceFeature
          format: Feature
        FeatureIdentification:
          $ref: '#/components/schemas/Identifier'
        FeatureName:
          $ref: '#/components/schemas/Name'
        FeatureLifecycleStatus:
          $ref: '#/components/schemas/Status'
        FeatureDescription:
          $ref: '#/components/schemas/Text'
    Productfeaturetype:
      type: object
      format: Productfeaturetype
      description: "A type of product or service covered by the mandate ||\r\n|"
      properties:
        Productfeaturetypevalues:
          enum:
            - Bankingservice
            - Administrationservice
            - Accessservice
            - Pricefeature
          format: Productfeaturetype
    ServicingMandateArrangement:
      type: object
      format: ServicingMandateArrangement
      description: "Records the usage of products/service under the mandate for control purposes ||\r\n|"
      properties:
        Obaccountaccesspermissiontypevalues:
          enum:
            - Readaccountsbasic
            - Readaccountsdetail
            - Readbalances
            - Readbeneficiariesbasic
            - Readbeneficiariesdetail
            - Readdirectdebits
            - Readoffers
            - Readpan
            - Readparty
            - Readpartypsu
            - Readproducts
            - Readscheduledpaymentsbasic
            - Readscheduledpaymentsdetail
            - Readstandingordersbasic
            - Readstandingordersdetail
            - Readstatementsbasic
            - Readstatementsdetail
            - Readtransactionsbasic
            - Readtransactionscredits
            - Readtransactionsdebits
            - Readtransactionsdetail
          format: ServicingMandateArrangement
        AccessPermissionExpirationDate:
          $ref: '#/components/schemas/Datetime'
        Consentstatustypevalues:
          enum:
            - Authorised
            - AwaitingAuthorization
            - Rejected
            - Revoked
          format: ServicingMandateArrangement
    ServicingMandateAgreement:
      type: object
      description: ''
      properties:
        CustomerReference:
          $ref: '#/components/schemas/Involvedparty'
        Servicingmandatetypevalues:
          enum:
            - Servicingmandatetypevalues
        ServicingMandateAgreementJurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        ServicingMandateAgreementValidFromToDate:
          $ref: '#/components/schemas/Datetimeperiod'
        ServicingMandateAgreementResponsibleParties:
          $ref: '#/components/schemas/ServicingMandateInvolvement'
        DocumentDirectoryEntryInstanceReference:
          $ref: '#/components/schemas/DocumentDirectoryEntry'
        ServicingMandateAgreementProductandServiceProfileReference:
          $ref: '#/components/schemas/CustomerProductAndServiceProfile'
        ServicingMandateAgreementProductandServiceProfile:
          $ref: '#/components/schemas/CustomerProductAndServiceProfile'
        ProductandServiceType:
          $ref: '#/components/schemas/Productfeaturetype'
        ServicingMandateAgreementProductandServiceTypeEligibility:
          $ref: '#/components/schemas/ServicingMandateArrangement'
        ServicingMandateAgreementReference:
          $ref: '#/components/schemas/ServicingMandate'
    Jurisdiction:
      type: object
      format: Jurisdiction
      description: >-
        The defines any limitation on the geographic coverage/scope of the
        mandate Jurisdiction|Jurisdiction
        (https://www.iso20022.org/standardsrepository/type/Jurisdiction)|Standard|ISO20022
        BM ()
      properties:
        Jurisdiction:
          type: string
          format: Class
          description: 'Jurisdiction that will be assigned in case of legal dispute. '
    ServicingMandateInvolvement:
      type: object
      format: ServicingMandateInvolvement
      description: "Reference to any involved authorities and interested parties ||\r\n|"
      properties:
        Servicingmandateinvolvementtypevalues:
          enum:
            - PartyWhoGivesThePermissionToParty
            - PartyWhoTakesThePermissionFromPart
            - PartyWhoAuthorisesThePermissionOfP
          format: ServicingMandateInvolvement
        PartyReference:
          $ref: '#/components/schemas/Party'
        ServicingMandateReference:
          $ref: '#/components/schemas/Servicingmandate'
    Servicingmandate:
      type: object
      format: Servicingmandate
      description: ' '
      properties:
        ServicingMandate:
          type: string
          format: Class
          description: >-
            An agreement between the customer and a service provider to
            authorise the service provider to access Products and Services on
            behalf of the customer.  
    DocumentDirectoryEntry:
      type: object
      format: DocumentDirectoryEntry
      description: "Reference to any supporting documents ||\r\n|"
      properties:
        DocumentDirectoryEntryIdentification:
          type: string
          format: String
          description: >-
            Identification allowing the retrieval of a document from a Document
            Directory 
    ServicingMandate:
      type: object
      format: ServicingMandate
      description: "Reference to the Servicing Mandate. ||\r\n|"
      properties:
        ServicingMandate:
          type: string
          format: Class
          description: >-
            An agreement between the customer and a service provider to
            authorise the service provider to access Products and Services on
            behalf of the customer.  
